{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MangroveOrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "fillOrKill",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "Tick",
          "name": "tick",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fillVolume",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "restingOrder",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "MangroveOrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "NewOwnedOffer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "SetExpiry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "expiring",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "offerIds",
          "type": "uint256[]"
        }
      ],
      "name": "offerOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "offerOwners_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "deprovision",
          "type": "bool"
        }
      ],
      "name": "retractOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "freeWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        }
      ],
      "name": "setExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "fillOrKill",
              "type": "bool"
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "fillVolume",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "restingOrder",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "expiryDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IOrderLogic.TakerOrder",
          "name": "tko",
          "type": "tuple"
        }
      ],
      "name": "take",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "takerGot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGave",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "offerWriteData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct IOrderLogic.TakerOrderResult",
          "name": "res",
          "type": "tuple"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "Tick",
          "name": "tick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "updateOffer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620051ff380380620051ff8339810160408190526200003491620004da565b826040516200004390620004b3565b604051809103906000f08015801562000060573d6000803e3d6000fd5b508282813380620000b85760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905562ffffff811681146200012e5760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f6761737265714f766572666c6f770000000000000000006044820152606401620000af565b6001600160a01b03821660a081905260808290526040519081527f23274a2ea157bc8b802cd1ca98faaaf1e5ed5472079061e406176ba38449d6879060200160405180910390a150506001600160a01b038216620001db5760405162461bcd60e51b815260206004820152602360248201527f466f72776172646572206c6f67696373206d7573742068617665206120726f756044820152623a32b960e91b6064820152608401620000af565b620001e682620002f0565b50506001546001600160a01b031690506040516381bac14f60e01b81523060048201526001600160a01b0391909116906381bac14f90602401600060405180830381600087803b1580156200023a57600080fd5b505af11580156200024f573d6000803e3d6000fd5b5050505062000263620003a160201b60201c565b604051633825b60160e11b81526001600160a01b038481166004830152919091169063704b6c0290602401600060405180830381600087803b158015620002a957600080fd5b505af1158015620002be573d6000803e3d6000fd5b50505050816001600160a01b0316336001600160a01b031614620002e757620002e782620003b0565b50505062000522565b6000546001600160a01b031633146200034c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000af565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e5455906020015b60405180910390a150565b6001546001600160a01b031690565b6000546001600160a01b031633146200040c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c696400000000000000006044820152606401620000af565b6001600160a01b038116620004645760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401620000af565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a19060200162000396565b610f94806200426b83390190565b6001600160a01b0381168114620004d757600080fd5b50565b600080600060608486031215620004f057600080fd5b8351620004fd81620004c1565b60208501519093506200051081620004c1565b80925050604084015190509250925092565b60805160a051613c97620005d46000396000818161036e0152818161070e01528181610b9201528181610e4c01528181610f1d015281816110b701528181611143015281816114610152818161196f01528181611d6101528181611dfe01528181611fb3015281816120f80152818161228d01528181612346015281816124a5015281816127af0152818161294501526131560152600081816103a20152818161133801526113660152613c976000f3fe6080604052600436106101445760003560e01c80637144df24116100b6578063c7e1bb441161006f578063c7e1bb4414610404578063ceba736014610424578063cfcd267914610451578063e1f21c6714610466578063f851a44014610496578063f887ea40146104b457600080fd5b80637144df241461031c578063820db1f71461033c57806399fa5e2d1461035c5780639eb7d4fe14610390578063a24f2b2d146103c4578063c0d78655146103e457600080fd5b8063400ee57111610108578063400ee571146102745780635293840d14610287578063535f55ca146102a75780635570db1d146102c75780636e7a5cb8146102dc578063704b6c02146102fc57600080fd5b806303eb17e2146101505780630479ab9314610172578063126490ee146101bd5780632380fafd1461021c5780633a9dfae21461023c57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b366004613306565b6104d2565b005b34801561017e57600080fd5b506101aa61018d366004613348565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101d06101cb36600461337d565b610521565b6040516101b49190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b34801561022857600080fd5b506101aa61023736600461337d565b610b8e565b34801561024857600080fd5b5061025c610257366004613348565b610ca0565b6040516001600160a01b0390911681526020016101b4565b6101706102823660046134b2565b610d0f565b34801561029357600080fd5b506101706102a2366004613306565b610dcb565b3480156102b357600080fd5b506101706102c23660046134ec565b610e3f565b3480156102d357600080fd5b5061025c600081565b3480156102e857600080fd5b506101aa6102f7366004613536565b610f0a565b34801561030857600080fd5b50610170610317366004613577565b610f9a565b34801561032857600080fd5b50610170610337366004613594565b61106f565b34801561034857600080fd5b506101aa6103573660046135c4565b61129a565b34801561036857600080fd5b5061025c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039c57600080fd5b506101aa7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d057600080fd5b506101aa6103df3660046135f2565b611394565b3480156103f057600080fd5b506101706103ff366004613577565b6113e7565b34801561041057600080fd5b5061017061041f36600461361d565b61145f565b34801561043057600080fd5b5061044461043f366004613660565b61153b565b6040516101b491906136ac565b34801561045d57600080fd5b506101aa6115f1565b34801561047257600080fd5b506104866104813660046136f9565b611603565b60405190151581526020016101b4565b3480156104a257600080fd5b506000546001600160a01b031661025c565b3480156104c057600080fd5b506001546001600160a01b031661025c565b60005b8181101561051c5761050c8383838181106104f2576104f261373a565b90506020020160208101906105079190613577565b61168f565b61051581613766565b90506104d5565b505050565b61055d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b610100820135158061057457508161010001354211155b6105b85760405162461bcd60e51b815260206004820152601060248201526f1b59dd93dc99195c8bd95e1c1a5c995960821b60448201526064015b60405180910390fd5b60006105ca60e0840160c0850161377f565b6105d8578260a001356105ea565b6105ea608084013560a0850135611713565b905060006106006001546001600160a01b031690565b6001600160a01b031663333dbb0d61061e6040870160208801613577565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101859052600160648201526084016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c919061379c565b90508181146106ed5760405162461bcd60e51b815260206004820152601760248201527f6d67764f726465722f7472616e73666572496e4661696c00000000000000000060448201526064016105af565b6107046106ff368690038601866137b5565b611748565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d6a522ce85608081013560a082013561074e60e0840160c0850161377f565b6040518563ffffffff1660e01b815260040161076d9493929190613840565b6080604051808303816000875af115801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190613899565b606087015260408601526020850152835260006107cd85856117d5565b90506107df608086016060870161377f565b15806107e85750805b806107ff57506107ff610100860160e0870161377f565b6108425760405162461bcd60e51b81526020600482015260146024820152731b59dd93dc99195c8bdc185c9d1a585b119a5b1b60621b60448201526064016105af565b8351156109235783516001546001600160a01b03166326e8eda26108696020890189613577565b875160405160e084901b6001600160e01b03191681526001600160a01b03909216600483015233602483015260448201526064016020604051808303816000875af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e0919061379c565b146109235760405162461bcd60e51b81526020600482015260136024820152721b59dd93dc99195c8bdc1d5cda11985a5b1959606a1b60448201526064016105af565b600084602001518461093591906138cf565b90508015610a2857806109506001546001600160a01b031690565b6001600160a01b03166326e8eda261096e60408a0160208b01613577565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af11580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e5919061379c565b14610a285760405162461bcd60e51b81526020600482015260136024820152721b59dd93dc99195c8bdc1d5cda11985a5b1959606a1b60448201526064016105af565b6000856040015134610a3a91906138e2565b9050610a4d610100880160e0890161377f565b8015610a57575082155b15610ac557610ac287610abb610a72368390038301836138f5565b6040805160608082018352600080835260208084018290529284015282519081018352838201516001600160a01b03908116825284511691810191909152918101519082015290565b888461181e565b90505b8015610b5b57604051600090339083908381818185875af1925050503d8060008114610b0d576040519150601f19603f3d011682016040523d82523d6000602084013e610b12565b606091505b5050905080610b595760405162461bcd60e51b81526020600482015260136024820152721b59dd93dc99195c8bdc99599d5b9911985a5b606a1b60448201526064016105af565b505b6040517fe5581490ac6db4ceba3be5a2a4af71b3a09f180284199da3ff36d62711bb1b6d90600090a15050505050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610bd95760405162461bcd60e51b81526004016105af90613911565b610be283611b1e565b9150610bf28360c0013584611bb4565b15610c3f5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f7075744661696c6564000000000000000060448201526064016105af565b610c4d8360a0013584611c90565b15610c9a5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c6564000000000000000060448201526064016105af565b50919050565b60008281526002602090815260408083208484529091529020546001600160a01b031680610d095760405162461bcd60e51b81526020600482015260166024820152752337b93bb0b93232b917bab735b737bbb727b33332b960511b60448201526064016105af565b92915050565b60608420600081815260026020908152604080832085845290915290205482906001600160a01b03163314610d565760405162461bcd60e51b81526004016105af90613911565b6040805161014081018252600060e0820181905261010082018190526101208201819052606082018190526080820181905260c08201523460a082015287815260208101879052908101859052610dab6115f1565b6060820152600060c0820152610dc18185611d1b565b5050505050505050565b6000546001600160a01b03163314610df55760405162461bcd60e51b81526004016105af90613911565b60005b8181101561051c57610e2f838383818110610e1557610e1561373a565b9050602002016020810190610e2a9190613577565b6120dc565b610e3881613766565b9050610df8565b8282336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eb25760008281526002602090815260408083208484529091529020546001600160a01b03163314610eb25760405162461bcd60e51b81526004016105af90613911565b60008581526003602090815260408083208784528252918290208590559051848152859187917f0c72c6233a690301ad287cb9d2547d931bea06b00eb5f73bf6a369610d909822910160405180910390a35050505050565b6060832060009083336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f835760008281526002602090815260408083208484529091529020546001600160a01b03163314610f835760405162461bcd60e51b81526004016105af90613911565b610f8e86868661222e565b92505b50509392505050565b6000546001600160a01b03163314610fc45760405162461bcd60e51b81526004016105af90613911565b6001600160a01b03811661101a5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016105af565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b031633146110995760405162461bcd60e51b81526004016105af90613911565b600019820361112d576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112a919061379c565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b89190613948565b6111fc5760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b60448201526064016105af565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611249576040519150601f19603f3d011682016040523d82523d6000602084013e61124e565b606091505b505090508061051c5760405162461bcd60e51b81526020600482015260186024820152771b59dd93d999995c8bddd95a551c985b9cd9995c91985a5b60421b60448201526064016105af565b6000806112af6001546001600160a01b031690565b90506001600160a01b038116156113645760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa15801561130e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611332919061379c565b61135c907f00000000000000000000000000000000000000000000000000000000000000006138e2565b915050610d09565b7f0000000000000000000000000000000000000000000000000000000000000000915050610d09565b5092915050565b60006113a083836124a0565b9050600260006113b1856060902090565b8152602080820192909252604090810160009081209481529390915290912054600160a01b90046001600160601b031601919050565b6000546001600160a01b031633146114115760405162461bcd60e51b81526004016105af90613911565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590602001611064565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146114a85760405162461bcd60e51b81526004016105af90613911565b81602001356f6d67762f74726164655375636365737360801b036114d7576114d1838335612561565b50505050565b60608301356114f56114ee368690038601866138f5565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a361051c83612621565b60608167ffffffffffffffff8111156115565761155661339a565b60405190808252806020026020018201604052801561157f578160200160208202803683370190505b50905060005b828110156115e9576115af858585848181106115a3576115a361373a565b90506020020135610ca0565b8282815181106115c1576115c161373a565b6001600160a01b03909216602092830291909101909101526115e281613766565b9050611585565b509392505050565b60006115fe60008061129a565b905090565b600080546001600160a01b0316331461162e5760405162461bcd60e51b81526004016105af90613911565b61163984848461277d565b6116855760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c656400000000000000000060448201526064016105af565b5060019392505050565b61169881612792565b60006116ac6001546001600160a01b031690565b604051631403b99b60e31b81526001600160a01b0384811660048301523360248301529192509082169063a01dccd89060440160006040518083038186803b1580156116f757600080fd5b505afa15801561170b573d6000803e3d6000fd5b505050505050565b600080600061172185612880565b9150915061173f848302826001811b600019018216151591901c0190565b95945050505050565b80516060902033907fc4e60059977c6a198b374650f86f380c8bf5b3f4aead390a5823d463616a3b8783602001518460400151856060015186608001518760a001518860e001516040516117ca96959493929190951515865260208601949094526040850192909252151560608401521515608083015260a082015260c00190565b60405180910390a350565b60006117e760e0840160c0850161377f565b1561180b576060820151825160a085013591611802916138e2565b10159050610d09565b8260a00135826020015110159050610d09565b60008061182e6080870135613965565b9050600061184260e0880160c0890161377f565b1561187c576060850151855160009161185a916138e2565b6118689060a08a01356138cf565b905061187483826128f2565b915050611892565b602085015161188f9060a08901356138cf565b90505b60006040518060e001604052808881526020018481526020018381526020016118b96115f1565b8152602001600081526020018681526020016001151581525090508761012001356000036118fa576118eb8133612903565b60a08801526080870152611a88565b61012088013533600260006119108b6060902090565b8152602080820192909252604090810160009081208582529092529020546001600160a01b0316146119545760405162461bcd60e51b81526004016105af90613911565b604051630129e86d60e21b81526119f8906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304a7a1b4906119a6908c9086906004016139a8565b602060405180830381865afa1580156119c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e7919061379c565b602c1c60016001607f1b0316151590565b15611a455760405162461bcd60e51b815260206004820152601b60248201527f6d67764f726465722f6f66666572416c7265616479416374697665000000000060448201526064016105af565b6000611a518383611d1b565b60a0890181905290506c24266666a37422a3e6e7a2e6a7609a1b8101611a7d5760808801829052611a85565b600060808901525b50505b8560800151600003611af057611aa46080890160608a0161377f565b15611ae85760405162461bcd60e51b81526020600482015260146024820152731b59dd93dc99195c8bdc185c9d1a585b119a5b1b60621b60448201526064016105af565b849350611b13565b61010088013515611b135760608720611b139087608001518a6101000135610e3f565b505050949350505050565b600080600381611b366114ee368790038701876138f5565b81526020019081526020016000206000846060013581526020019081526020016000205490508060001480611b6b5750804211155b611baa5760405162461bcd60e51b815260206004820152601060248201526f1b59dd93dc99195c8bd95e1c1a5c995960821b60448201526064016105af565b60005b9392505050565b600080611bd6611bcc6114ee368690038601866138f5565b8460600135610ca0565b90506000611bec6001546001600160a01b031690565b6001600160a01b03166326e8eda2611c0a6040870160208801613577565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604481018890526064015b6020604051808303816000875af1158015611c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c84919061379c565b905061173f81866138cf565b600080611ca8611bcc6114ee368690038601866138f5565b90506000611cbe6001546001600160a01b031690565b6001600160a01b031663333dbb0d611cd96020870187613577565b6040516001600160e01b031960e084901b1681526001600160a01b03918216600482015290851660248201526044810188905260016064820152608401611c41565b6000611d486040518060800160405280600081526020016000815260200160008152602001600081525090565b835160405163293ad90960e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691635275b21291611d9591906004016139c3565b6040805180830381865afa158015611db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd591906139d1565b60408084019190915260208301919091528451905163e982fb8d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163e982fb8d91611e34919087906004016139a8565b602060405180830381865afa158015611e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e75919061379c565b6060820181905260009060481c62ffffff16905060008560a001511180611ea0575080856060015114155b80611ec35750611eb38260400151612a4b565b611ec08360600151612a61565b14155b15611f6c576000611ed78360600151612a61565b60608401519083019060251c6303ffffff16620f424002029050611f128660600151828860a0015101611f0d8660400151612a4b565b612a71565b845260808701525081518551606090206000908152600260209081526040808320888452909152902080546001600160601b03600160a01b8083048216909401169092026001600160a01b03909216919091179055611f80565b606082015160251c6303ffffff1660808601525b602082015160441c6303ffffff1685608001511015611fb15760405162461bcd60e51b81526004016105af906139f5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88660a001518760000151886020015189604001518a606001518b608001518b6040518863ffffffff1660e01b815260040161202096959493929190613a2c565b6000604051808303818588803b15801561203957600080fd5b505af19350505050801561204b575060015b6120ba57612057613a63565b806308c379a0036120ae575061206b613a7f565b8061207657506120b0565b8560c00151819061209a5760405162461bcd60e51b81526004016105af9190613b2d565b506120a481613b60565b9350505050610d09565b505b3d6000803e3d6000fd5b6c1bd999995c8bdd5c19185d1959609a1b92505050610d09565b505092915050565b60006120f06001546001600160a01b031690565b905061211f827f000000000000000000000000000000000000000000000000000000000000000060001961277d565b61216b5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c00000060448201526064016105af565b6001600160a01b0381161561222a57612187828260001961277d565b6121d35760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c00000000000060448201526064016105af565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b15801561221657600080fd5b505af115801561170b573d6000803e3d6000fd5b5050565b60008060026000612240876060902090565b8152602001908152602001600020600085815260200190815260200160002090508261226d576000612280565b8054600160a01b90046001600160601b03165b6001600160601b031691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e7a5cb88686866040518463ffffffff1660e01b81526004016122db93929190613b84565b6020604051808303816000875af11580156122fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231e919061379c565b61232890836138e2565b915081156115e957604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015612397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bb9190613948565b6124005760405162461bcd60e51b8152602060048201526016602482015275119bdc9dd85c99195c8bddda5d1a191c985dd1985a5b60521b60448201526064016105af565b80546001600160a01b03168082556040516000919084908381818185875af1925050503d806000811461244f576040519150601f19603f3d011682016040523d82523d6000602084013e612454565b606091505b5050905080610f915760405162461bcd60e51b81526020600482015260186024820152771b59dd93d999995c8bddd95a551c985b9cd9995c91985a5b60421b60448201526064016105af565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b81526004016124f19291906139a8565b602060405180830381865afa15801561250e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612532919061379c565b9050604881901c62ffffff1661254782612a61565b01602582901c6303ffffff1602620f424002949350505050565b600080600061256f85612b18565b91509150816000148061258957506125878183612b4d565b155b156125a7576b1bd999995c8bd99a5b1b195960a21b92505050610d09565b6040805160e0810190915261261490806125c6368990038901896138f5565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff1681526000602082015260016040909101526060870135611d1b565b92506120d4858585612b76565b60006002816126386114ee368690038601866138f5565b815260208101919091526040016000908120915060e083013560481c62ffffff169050600061266a8460e00135612a61565b61267490836138e2565b61268e6303ffffff60e087013560251c16620f4240613ba8565b6126989190613ba8565b905060006126b76303ffffff61010087013560441c16620f4240613ba8565b905060006126c9866101200135612a4b565b6126d56107d0866138e2565b6126df91906138e2565b90506000825a6126ef90846138cf565b6126f99190613ba8565b90506000848210156127145761270f82866138cf565b612717565b60005b606089013560009081526020899052604090208054919250829160149061274f908490600160a01b90046001600160601b0316613bbf565b92506101000a8154816001600160601b0302191690836001600160601b031602179055505050505050505050565b600061278a848484612c2b565b949350505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015612802573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612826919061379c565b1161287d5760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b60648201526084016105af565b50565b60008061288c83612cf5565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e1982850101908113156128da5793841c936128e4565b8060000385901b94505b81607f039350505050915091565b600080600061172185600003612880565b6000806000806129128661314e565b60a0880151885160208a01516040808c015160608d01519151637cac815560e11b81529698509496506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169563f95902aa9561297e94939290918a90600401613bdf565b60206040518083038185885af1935050505080156129b9575060408051601f3d908101601f191682019092526129b69181019061379c565b60015b612a1a576129c5613a63565b806308c379a0036120ae57506129d9613a7f565b806129e457506120b0565b8660c001518190612a085760405162461bcd60e51b81526004016105af9190613b2d565b50612a1281613b60565b935050612a42565b865160609020612a2c90828885613234565b93506c1bd999995c8bd8dc99585d1959609a1b92505b50509250929050565b6000602182901c6101ff165b6103e80292915050565b6000603f82901c6101ff16612a57565b600080620f42408386010280851015612a9c5760405162461bcd60e51b81526004016105af906139f5565b806303ffffff028510612af15760405162461bcd60e51b815260206004820152601a60248201527f466f727761726465722f70726f766973696f6e546f6f4869676800000000000060448201526064016105af565b808581612b0057612b00613c0f565b0496939095018602620f424002909303935090915050565b600080612b3960a084013560016001607f1b036080860135602c1c166138cf565b9150608083013560401b60eb1d9050915091565b6000806000612b5b85612880565b909250905080612b6b8584613ba8565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b811480612ba257506c1bd999995c8bdd5c19185d1959609a1b81145b80612bcc5750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b15612bd657505050565b6060830135612bed6114ee368690038601866138f5565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392839291881691612c899190613c25565b6000604051808303816000865af19150503d8060008114612cc6576040519150601f19603f3d011682016040523d82523d6000602084013e612ccb565b606091505b5091509150818015610f8e575080511580610f8e575080806020019051810190610f8e9190613948565b6000806000808412612d075783612d10565b612d1084613965565b9050620d89e8811115612d655760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e647300000000000000000060448201526064016105af565b60006001821615612d88576ffff97272373d413259a46990580e21399350612d90565b600160801b93505b6002821615612dba576080612db5856ffff2e50f5f656932ef12357cf3c7fdcb613ba8565b901c93505b6004821615612de4576080612ddf856fffe5caca7e10e4e61c3624eaa0941ccf613ba8565b901c93505b6008821615612e0e576080612e09856fffcb9843d60f6159c9db58835c926643613ba8565b901c93505b6010821615612e38576080612e33856fff973b41fa98c081472e6896dfb254bf613ba8565b901c93505b6020821615612e62576080612e5d856fff2ea16466c96a3843ec78b326b52860613ba8565b901c93505b6040821615612e8c576080612e87856ffe5dee046a99a2a811c461f1969c3052613ba8565b901c93505b6080821615612eb6576080612eb1856ffcbe86c7900a88aedcffc83b479aa3a3613ba8565b901c93505b610100821615612ee1576080612edc856ff987a7253ac413176f2b074cf7815e53613ba8565b901c93505b610200821615612f0c576080612f07856ff3392b0822b70005940c7a398e4b70f2613ba8565b901c93505b610400821615612f37576080612f32856fe7159475a2c29b7443b29c7fa6e889d8613ba8565b901c93505b610800821615612f62576080612f5d856fd097f3bdfd2022b8845ad8f792aa5825613ba8565b901c93505b611000821615612f8d576080612f88856fa9f746462d870fdf8a65dc1f90e061e4613ba8565b901c93505b612000821615612fc5576080612fb3856fe1b0d342ada5437121767bec575e65ed613ba8565b901c9350612fc2600182613c41565b90505b614000821615612ffd576080612feb856fc6f84d7e5f423f66048c541550bf3e96613ba8565b901c9350612ffa600282613c41565b90505b618000821615613035576080613023856f9aa508b5b7a84e1c677de54f3e99bc8f613ba8565b901c9350613032600482613c41565b90505b6201000082161561306e57608061305c856fbad5f1bdb70232cd33865244bdcc089c613ba8565b901c935061306b600982613c41565b90505b620200008216156130a7576080613095856f885b9613d7e87aa498106fb7fa5edd37613ba8565b901c93506130a4601282613c41565b90505b620400008216156130e05760806130ce856f9142e0723efb884889d1f447715afacd613ba8565b901c93506130dd602582613c41565b90505b62080000821615613119576080613107856fa4d9a773d61316918f140bd96e8e6814613ba8565b901c9350613116604b82613c41565b90505b600085131561313a5760018485600003040193508061313790613965565b90505b613145816080613c41565b92505050915091565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635275b21286600001516040518263ffffffff1660e01b81526004016131a491906139c3565b6040805180830381865afa1580156131c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e491906139d1565b915091506131fe85606001518660a00151611f0d84612a4b565b9094509250604482901c6303ffffff1684101561322d5760405162461bcd60e51b81526004016105af906139f5565b5050915091565b6040805180820182526001600160a01b038085168083526001600160601b03808616602080860191825260008b8152600282528781208b825290915286812095519151909216600160a01b0293169290921790925591519091859187917fbcee40f594b2f79b90531f446b9f530e5e45cd6c586f31ae8a16c3aff208656091a450505050565b60008083601f8401126132cc57600080fd5b50813567ffffffffffffffff8111156132e457600080fd5b6020830191508360208260051b85010111156132ff57600080fd5b9250929050565b6000806020838503121561331957600080fd5b823567ffffffffffffffff81111561333057600080fd5b61333c858286016132ba565b90969095509350505050565b6000806040838503121561335b57600080fd5b50508035926020909101359150565b60006101408284031215610c9a57600080fd5b6000610140828403121561339057600080fd5b611bad838361336a565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156133e457634e487b7160e01b600052604160045260246000fd5b6040525050565b604051610100810167ffffffffffffffff8111828210171561341d57634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b038116811461287d57600080fd5b60006060828403121561344a57600080fd5b6040516060810181811067ffffffffffffffff8211171561347b57634e487b7160e01b600052604160045260246000fd5b604052905080823561348c81613423565b8152602083013561349c81613423565b6020820152604092830135920191909152919050565b60008060008060c085870312156134c857600080fd5b6134d28686613438565b966060860135965060808601359560a00135945092505050565b60008060006060848603121561350157600080fd5b505081359360208301359350604090920135919050565b801515811461287d57600080fd5b803561353181613518565b919050565b600080600060a0848603121561354b57600080fd5b6135558585613438565b925060608401359150608084013561356c81613518565b809150509250925092565b60006020828403121561358957600080fd5b8135611bad81613423565b600080604083850312156135a757600080fd5b8235915060208301356135b981613423565b809150509250929050565b600080604083850312156135d757600080fd5b82356135e281613423565b915060208301356135b981613423565b6000806080838503121561360557600080fd5b61360f8484613438565b946060939093013593505050565b60008082840361018081121561363257600080fd5b61363c858561336a565b9250604061013f198201121561365157600080fd5b50610140830190509250929050565b60008060006040848603121561367557600080fd5b83359250602084013567ffffffffffffffff81111561369357600080fd5b61369f868287016132ba565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156136ed5783516001600160a01b0316835292840192918401916001016136c8565b50909695505050505050565b60008060006060848603121561370e57600080fd5b833561371981613423565b9250602084013561372981613423565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161377857613778613750565b5060010190565b60006020828403121561379157600080fd5b8135611bad81613518565b6000602082840312156137ae57600080fd5b5051919050565b600061014082840312156137c857600080fd5b6137d06133eb565b6137da8484613438565b81526137e860608401613526565b60208201526080830135604082015260a0830135606082015261380d60c08401613526565b608082015261381e60e08401613526565b60a082015261010083013560c08201526101209092013560e083015250919050565b60c08101853561384f81613423565b6001600160a01b03908116835260208701359061386b82613423565b1660208301526040958601359582019590955260608101939093526080830191909152151560a09091015290565b600080600080608085870312156138af57600080fd5b505082516020840151604085015160609095015191969095509092509050565b81810381811115610d0957610d09613750565b80820180821115610d0957610d09613750565b60006060828403121561390757600080fd5b611bad8383613438565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b60006020828403121561395a57600080fd5b8151611bad81613518565b6000600160ff1b820161397a5761397a613750565b5060000390565b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b608081016139b68285613981565b8260608301529392505050565b60608101610d098284613981565b600080604083850312156139e457600080fd5b505080516020909101519092909150565b60208082526019908201527f6d67762f696e73756666696369656e7450726f766973696f6e00000000000000604082015260600190565b6101008101613a3b8289613981565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600060033d1115613a7c5760046000803e5060005160e01c5b90565b600060443d1015613a8d5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715613abd57505050505090565b8285019150815181811115613ad55750505050505090565b843d8701016020828501011115613aef5750505050505090565b613afe602082860101876133b0565b509095945050505050565b60005b83811015613b24578181015183820152602001613b0c565b50506000910152565b6020815260008251806020840152613b4c816040850160208701613b09565b601f01601f19169190910160400192915050565b80516020808301519190811015610c9a5760001960209190910360031b1b16919050565b60a08101613b928286613981565b8360608301528215156080830152949350505050565b8082028115828204841417610d0957610d09613750565b6001600160601b0381811683821601908082111561138d5761138d613750565b60e08101613bed8288613981565b8560608301528460808301528360a08301528260c08301529695505050505050565b634e487b7160e01b600052601260045260246000fd5b60008251613c37818460208701613b09565b9190910192915050565b80820182811260008312801582168215821617156120d4576120d461375056fea2646970667358221220daedb367835eb92698b2eb1b6328d0a513ffdee31badaaa482b8d209116afb9564736f6c6343000814003360a060405234801561001057600080fd5b506201117033806100675760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e0000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055608052608051610ee86100ac6000396000818161017801526102c40152610ee86000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806381bac14f1161008c578063cf5e7bd311610066578063cf5e7bd3146101db578063f850a81c146101ee578063f851a44014610201578063fe380db51461021c57600080fd5b806381bac14f146101ad578063a01dccd8146101c0578063b6b25742146101d357600080fd5b80632f37b624116100c85780632f37b6241461013d578063333dbb0d146101605780633871cb3f14610173578063704b6c021461019a57600080fd5b80631c5a9d9c146100ef57806326e8eda2146101045780632876fb4e1461012a575b600080fd5b6101026100fd366004610c5b565b61022f565b005b610117610112366004610c78565b610274565b6040519081526020015b60405180910390f35b610117610138366004610cb9565b6102c0565b61015061014b366004610c5b565b6102e8565b6040519015158152602001610121565b61011761016e366004610d00565b610306565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6101026101a8366004610c5b565b61035c565b6101026101bb366004610c5b565b610430565b6101026101ce366004610cb9565b6104a9565b6101026105d4565b6101026101e9366004610c5b565b610604565b6101026101fc366004610d53565b610637565b6000546040516001600160a01b039091168152602001610121565b61011761022a366004610cb9565b61078c565b6000546001600160a01b031633148061024c575061024c336102e8565b6102715760405162461bcd60e51b815260040161026890610dd9565b60405180910390fd5b50565b600061027f336102e8565b61029b5760405162461bcd60e51b815260040161026890610dd9565b816000036102ab575060006102b9565b6102b68484846107fa565b90505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006102b9565b6001600160a01b031660009081526001602052604090205460ff1690565b6000610311336102e8565b61032d5760405162461bcd60e51b815260040161026890610dd9565b818015610338575082155b1561034557506000610354565b61035185858585610822565b90505b949350505050565b6000546001600160a01b031633146103865760405162461bcd60e51b815260040161026890610dd9565b6001600160a01b0381166103dc5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610268565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a19060200160405180910390a150565b6000546001600160a01b0316331461045a5760405162461bcd60e51b815260040161026890610dd9565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fecac69b9e48a248381b74f2e1cf855cc6afc2f410751325703374c70351035bc9190a250565b6104b2336102e8565b6104fe5760405162461bcd60e51b815260206004820152601f60248201527f526f757465722f63616c6c657249734e6f74426f756e64546f526f75746572006044820152606401610268565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190610e10565b116105c65760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b6064820152608401610268565b6105d082826108bc565b5050565b6105dd336102e8565b6105f95760405162461bcd60e51b815260040161026890610dd9565b6106023361097d565b565b6000546001600160a01b0316331461062e5760405162461bcd60e51b815260040161026890610dd9565b6102718161097d565b610640336102e8565b61065c5760405162461bcd60e51b815260040161026890610dd9565b60005b8281101561078657600084848381811061067b5761067b610e29565b90506020020160208101906106909190610c5b565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190610e10565b90508015610775578061073486868581811061071857610718610e29565b905060200201602081019061072d9190610c5b565b85846107fa565b146107755760405162461bcd60e51b81526020600482015260116024820152701c9bdd5d195c8bdc1d5cda11985a5b1959607a1b6044820152606401610268565b5061077f81610e3f565b905061065f565b50505050565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610e10565b600080610809853386866109c6565b905080610817576000610819565b825b95945050505050565b600081610898576040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610e10565b61089a565b825b92506108a8858533866109c6565b156108b4575081610354565b506000610354565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190610e10565b116105d05760405162461bcd60e51b815260206004820152601f60248201527f53696d706c65526f757465722f4e6f74417070726f76656442794f776e6572006044820152606401610268565b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30a4a29afb6d28e62264c8b7cd43fe3a5edce91f4b9c8591b23a99b3838686b59190a250565b6000816000036109d857506001610354565b826001600160a01b0316846001600160a01b031603610a67576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190610e10565b10159050610354565b306001600160a01b03851603610a8957610a82858484610a95565b9050610354565b61035185858585610b69565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392839291881691610af39190610e66565b6000604051808303816000865af19150503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b5091509150818015610b5f575080511580610b5f575080806020019051810190610b5f9190610e95565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691610bcf9190610e66565b6000604051808303816000865af19150503d8060008114610c0c576040519150601f19603f3d011682016040523d82523d6000602084013e610c11565b606091505b5091509150818015610c3b575080511580610c3b575080806020019051810190610c3b9190610e95565b979650505050505050565b6001600160a01b038116811461027157600080fd5b600060208284031215610c6d57600080fd5b81356102b981610c46565b600080600060608486031215610c8d57600080fd5b8335610c9881610c46565b92506020840135610ca881610c46565b929592945050506040919091013590565b60008060408385031215610ccc57600080fd5b8235610cd781610c46565b91506020830135610ce781610c46565b809150509250929050565b801515811461027157600080fd5b60008060008060808587031215610d1657600080fd5b8435610d2181610c46565b93506020850135610d3181610c46565b9250604085013591506060850135610d4881610cf2565b939692955090935050565b600080600060408486031215610d6857600080fd5b833567ffffffffffffffff80821115610d8057600080fd5b818601915086601f830112610d9457600080fd5b813581811115610da357600080fd5b8760208260051b8501011115610db857600080fd5b60209283019550935050840135610dce81610c46565b809150509250925092565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215610e2257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610e5f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610e875760208186018101518583015201610e6d565b506000920191825250919050565b600060208284031215610ea757600080fd5b81516102b981610cf256fea2646970667358221220488559b74d71829856bcef9dfe67dd11cd479cfea710cbfa15ab298e063ada0f64736f6c63430008140033",
    "sourceMap": "1372:13987:100:-:0;;;2174:544;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2242:3;2247:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2267:6:100;2771:3:105;2267:6:100;2955:10:99;;977:57:123;;;;-1:-1:-1;;;977:57:123;;855:2:131;977:57:123;;;837:21:131;894:2;874:18;;;867:30;933:26;913:18;;;906:54;977:18;;:57:123;;;;;;;;;1040:6;:15;;-1:-1:-1;;;;;;1040:15:123;-1:-1:-1;;;;;1040:15:123;;;;;;;;;;2981:24:99::1;::::0;::::1;::::0;::::1;2973:60;;;::::0;-1:-1:-1;;;2973:60:99;;1208:2:131;2973:60:99::1;::::0;::::1;1190:21:131::0;1247:2;1227:18;;;1220:30;1286:25;1266:18;;;1259:53;1329:18;;2973:60:99::1;1006:347:131::0;2973:60:99::1;-1:-1:-1::0;;;;;3039:9:99;::::1;;::::0;;;3054:24:::1;::::0;;;3089:8:::1;::::0;1531:51:131;;;3089:8:99::1;::::0;-1:-1:-1;1504:18:131;3089:8:99::1;;;;;;;-1:-1:-1::0;;;;;;;2798:19:105;::::1;2790:67;;;::::0;-1:-1:-1;;;2790:67:105;;1795:2:131;2790:67:105::1;::::0;::::1;1777:21:131::0;1834:2;1814:18;;;1807:30;1873:34;1853:18;;;1846:62;-1:-1:-1;;;1924:18:131;;;1917:33;1967:19;;2790:67:105::1;1593:399:131::0;2790:67:105::1;2863:17;2873:6:::0;2863:9:::1;:17::i;:::-;-1:-1:-1::0;;3213:8:99;;-1:-1:-1;;;;;3213:8:99;;-1:-1:-1;2400:28:100::1;::::0;-1:-1:-1;;;2400:28:100;;2422:4:::1;2400:28;::::0;::::1;1531:51:131::0;-1:-1:-1;;;;;2400:13:100;;;::::1;::::0;::::1;::::0;1504:18:131;;2400:28:100::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2434:8;:6;;;:8;;:::i;:::-;:27;::::0;-1:-1:-1;;;2434:27:100;;-1:-1:-1;;;;;1549:32:131;;;2434:27:100::1;::::0;::::1;1531:51:131::0;2434:17:100;;;::::1;::::0;::::1;::::0;1504:18:131;;2434:27:100::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2671:8;-1:-1:-1::0;;;;;2657:22:100::1;:10;-1:-1:-1::0;;;;;2657:22:100::1;;2653:61;;2689:18;2698:8:::0;2689::::1;:18::i;:::-;2174:544:::0;;;1372:13987;;7512:127:99;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;2407:2:131;1171:57:123;;;2389:21:131;2446:2;2426:18;;;2419:30;2485:26;2465:18;;;2458:54;2529:18;;1171:57:123;2205:348:131;1171:57:123;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;1531:51:131;;;7616:18:99::1;::::0;1519:2:131;1504:18;7616::99::1;;;;;;;;7512:127:::0;:::o;3136:90::-;3213:8;;-1:-1:-1;;;;;3213:8:99;;3136:90::o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;2407:2:131;1171:57:123;;;2389:21:131;2446:2;2426:18;;;2419:30;2485:26;2465:18;;;2458:54;2529:18;;1171:57:123;2205:348:131;1171:57:123;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;855:2:131;2278:57:123::1;::::0;::::1;837:21:131::0;894:2;874:18;;;867:30;933:26;913:18;;;906:54;977:18;;2278:57:123::1;653:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;1531:51:131;;;2367:16:123::1;::::0;1519:2:131;1504:18;2367:16:123::1;1358:230:131::0;1372:13987:100;;;;;;;;:::o;14:142:131:-;-1:-1:-1;;;;;100:31:131;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:487::-;268:6;276;284;337:2;325:9;316:7;312:23;308:32;305:52;;;353:1;350;343:12;305:52;385:9;379:16;404:42;440:5;404:42;:::i;:::-;515:2;500:18;;494:25;465:5;;-1:-1:-1;528:44:131;494:25;528:44;:::i;:::-;591:7;581:17;;;638:2;627:9;623:18;617:25;607:35;;161:487;;;;;:::o;2558:227::-;1372:13987:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101445760003560e01c80637144df24116100b6578063c7e1bb441161006f578063c7e1bb4414610404578063ceba736014610424578063cfcd267914610451578063e1f21c6714610466578063f851a44014610496578063f887ea40146104b457600080fd5b80637144df241461031c578063820db1f71461033c57806399fa5e2d1461035c5780639eb7d4fe14610390578063a24f2b2d146103c4578063c0d78655146103e457600080fd5b8063400ee57111610108578063400ee571146102745780635293840d14610287578063535f55ca146102a75780635570db1d146102c75780636e7a5cb8146102dc578063704b6c02146102fc57600080fd5b806303eb17e2146101505780630479ab9314610172578063126490ee146101bd5780632380fafd1461021c5780633a9dfae21461023c57600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b366004613306565b6104d2565b005b34801561017e57600080fd5b506101aa61018d366004613348565b600360209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6101d06101cb36600461337d565b610521565b6040516101b49190600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b34801561022857600080fd5b506101aa61023736600461337d565b610b8e565b34801561024857600080fd5b5061025c610257366004613348565b610ca0565b6040516001600160a01b0390911681526020016101b4565b6101706102823660046134b2565b610d0f565b34801561029357600080fd5b506101706102a2366004613306565b610dcb565b3480156102b357600080fd5b506101706102c23660046134ec565b610e3f565b3480156102d357600080fd5b5061025c600081565b3480156102e857600080fd5b506101aa6102f7366004613536565b610f0a565b34801561030857600080fd5b50610170610317366004613577565b610f9a565b34801561032857600080fd5b50610170610337366004613594565b61106f565b34801561034857600080fd5b506101aa6103573660046135c4565b61129a565b34801561036857600080fd5b5061025c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561039c57600080fd5b506101aa7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d057600080fd5b506101aa6103df3660046135f2565b611394565b3480156103f057600080fd5b506101706103ff366004613577565b6113e7565b34801561041057600080fd5b5061017061041f36600461361d565b61145f565b34801561043057600080fd5b5061044461043f366004613660565b61153b565b6040516101b491906136ac565b34801561045d57600080fd5b506101aa6115f1565b34801561047257600080fd5b506104866104813660046136f9565b611603565b60405190151581526020016101b4565b3480156104a257600080fd5b506000546001600160a01b031661025c565b3480156104c057600080fd5b506001546001600160a01b031661025c565b60005b8181101561051c5761050c8383838181106104f2576104f261373a565b90506020020160208101906105079190613577565b61168f565b61051581613766565b90506104d5565b505050565b61055d6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600080191681525090565b610100820135158061057457508161010001354211155b6105b85760405162461bcd60e51b815260206004820152601060248201526f1b59dd93dc99195c8bd95e1c1a5c995960821b60448201526064015b60405180910390fd5b60006105ca60e0840160c0850161377f565b6105d8578260a001356105ea565b6105ea608084013560a0850135611713565b905060006106006001546001600160a01b031690565b6001600160a01b031663333dbb0d61061e6040870160208801613577565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015233602482015260448101859052600160648201526084016020604051808303816000875af1158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069c919061379c565b90508181146106ed5760405162461bcd60e51b815260206004820152601760248201527f6d67764f726465722f7472616e73666572496e4661696c00000000000000000060448201526064016105af565b6107046106ff368690038601866137b5565b611748565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d6a522ce85608081013560a082013561074e60e0840160c0850161377f565b6040518563ffffffff1660e01b815260040161076d9493929190613840565b6080604051808303816000875af115801561078c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b09190613899565b606087015260408601526020850152835260006107cd85856117d5565b90506107df608086016060870161377f565b15806107e85750805b806107ff57506107ff610100860160e0870161377f565b6108425760405162461bcd60e51b81526020600482015260146024820152731b59dd93dc99195c8bdc185c9d1a585b119a5b1b60621b60448201526064016105af565b8351156109235783516001546001600160a01b03166326e8eda26108696020890189613577565b875160405160e084901b6001600160e01b03191681526001600160a01b03909216600483015233602483015260448201526064016020604051808303816000875af11580156108bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e0919061379c565b146109235760405162461bcd60e51b81526020600482015260136024820152721b59dd93dc99195c8bdc1d5cda11985a5b1959606a1b60448201526064016105af565b600084602001518461093591906138cf565b90508015610a2857806109506001546001600160a01b031690565b6001600160a01b03166326e8eda261096e60408a0160208b01613577565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152336024820152604481018590526064016020604051808303816000875af11580156109c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e5919061379c565b14610a285760405162461bcd60e51b81526020600482015260136024820152721b59dd93dc99195c8bdc1d5cda11985a5b1959606a1b60448201526064016105af565b6000856040015134610a3a91906138e2565b9050610a4d610100880160e0890161377f565b8015610a57575082155b15610ac557610ac287610abb610a72368390038301836138f5565b6040805160608082018352600080835260208084018290529284015282519081018352838201516001600160a01b03908116825284511691810191909152918101519082015290565b888461181e565b90505b8015610b5b57604051600090339083908381818185875af1925050503d8060008114610b0d576040519150601f19603f3d011682016040523d82523d6000602084013e610b12565b606091505b5050905080610b595760405162461bcd60e51b81526020600482015260136024820152721b59dd93dc99195c8bdc99599d5b9911985a5b606a1b60448201526064016105af565b505b6040517fe5581490ac6db4ceba3be5a2a4af71b3a09f180284199da3ff36d62711bb1b6d90600090a15050505050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610bd95760405162461bcd60e51b81526004016105af90613911565b610be283611b1e565b9150610bf28360c0013584611bb4565b15610c3f5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f7075744661696c6564000000000000000060448201526064016105af565b610c4d8360a0013584611c90565b15610c9a5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c6564000000000000000060448201526064016105af565b50919050565b60008281526002602090815260408083208484529091529020546001600160a01b031680610d095760405162461bcd60e51b81526020600482015260166024820152752337b93bb0b93232b917bab735b737bbb727b33332b960511b60448201526064016105af565b92915050565b60608420600081815260026020908152604080832085845290915290205482906001600160a01b03163314610d565760405162461bcd60e51b81526004016105af90613911565b6040805161014081018252600060e0820181905261010082018190526101208201819052606082018190526080820181905260c08201523460a082015287815260208101879052908101859052610dab6115f1565b6060820152600060c0820152610dc18185611d1b565b5050505050505050565b6000546001600160a01b03163314610df55760405162461bcd60e51b81526004016105af90613911565b60005b8181101561051c57610e2f838383818110610e1557610e1561373a565b9050602002016020810190610e2a9190613577565b6120dc565b610e3881613766565b9050610df8565b8282336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610eb25760008281526002602090815260408083208484529091529020546001600160a01b03163314610eb25760405162461bcd60e51b81526004016105af90613911565b60008581526003602090815260408083208784528252918290208590559051848152859187917f0c72c6233a690301ad287cb9d2547d931bea06b00eb5f73bf6a369610d909822910160405180910390a35050505050565b6060832060009083336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610f835760008281526002602090815260408083208484529091529020546001600160a01b03163314610f835760405162461bcd60e51b81526004016105af90613911565b610f8e86868661222e565b92505b50509392505050565b6000546001600160a01b03163314610fc45760405162461bcd60e51b81526004016105af90613911565b6001600160a01b03811661101a5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016105af565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b031633146110995760405162461bcd60e51b81526004016105af90613911565b600019820361112d576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061112a919061379c565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b89190613948565b6111fc5760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b60448201526064016105af565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611249576040519150601f19603f3d011682016040523d82523d6000602084013e61124e565b606091505b505090508061051c5760405162461bcd60e51b81526020600482015260186024820152771b59dd93d999995c8bddd95a551c985b9cd9995c91985a5b60421b60448201526064016105af565b6000806112af6001546001600160a01b031690565b90506001600160a01b038116156113645760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa15801561130e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611332919061379c565b61135c907f00000000000000000000000000000000000000000000000000000000000000006138e2565b915050610d09565b7f0000000000000000000000000000000000000000000000000000000000000000915050610d09565b5092915050565b60006113a083836124a0565b9050600260006113b1856060902090565b8152602080820192909252604090810160009081209481529390915290912054600160a01b90046001600160601b031601919050565b6000546001600160a01b031633146114115760405162461bcd60e51b81526004016105af90613911565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590602001611064565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146114a85760405162461bcd60e51b81526004016105af90613911565b81602001356f6d67762f74726164655375636365737360801b036114d7576114d1838335612561565b50505050565b60608301356114f56114ee368690038601866138f5565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a361051c83612621565b60608167ffffffffffffffff8111156115565761155661339a565b60405190808252806020026020018201604052801561157f578160200160208202803683370190505b50905060005b828110156115e9576115af858585848181106115a3576115a361373a565b90506020020135610ca0565b8282815181106115c1576115c161373a565b6001600160a01b03909216602092830291909101909101526115e281613766565b9050611585565b509392505050565b60006115fe60008061129a565b905090565b600080546001600160a01b0316331461162e5760405162461bcd60e51b81526004016105af90613911565b61163984848461277d565b6116855760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c656400000000000000000060448201526064016105af565b5060019392505050565b61169881612792565b60006116ac6001546001600160a01b031690565b604051631403b99b60e31b81526001600160a01b0384811660048301523360248301529192509082169063a01dccd89060440160006040518083038186803b1580156116f757600080fd5b505afa15801561170b573d6000803e3d6000fd5b505050505050565b600080600061172185612880565b9150915061173f848302826001811b600019018216151591901c0190565b95945050505050565b80516060902033907fc4e60059977c6a198b374650f86f380c8bf5b3f4aead390a5823d463616a3b8783602001518460400151856060015186608001518760a001518860e001516040516117ca96959493929190951515865260208601949094526040850192909252151560608401521515608083015260a082015260c00190565b60405180910390a350565b60006117e760e0840160c0850161377f565b1561180b576060820151825160a085013591611802916138e2565b10159050610d09565b8260a00135826020015110159050610d09565b60008061182e6080870135613965565b9050600061184260e0880160c0890161377f565b1561187c576060850151855160009161185a916138e2565b6118689060a08a01356138cf565b905061187483826128f2565b915050611892565b602085015161188f9060a08901356138cf565b90505b60006040518060e001604052808881526020018481526020018381526020016118b96115f1565b8152602001600081526020018681526020016001151581525090508761012001356000036118fa576118eb8133612903565b60a08801526080870152611a88565b61012088013533600260006119108b6060902090565b8152602080820192909252604090810160009081208582529092529020546001600160a01b0316146119545760405162461bcd60e51b81526004016105af90613911565b604051630129e86d60e21b81526119f8906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304a7a1b4906119a6908c9086906004016139a8565b602060405180830381865afa1580156119c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e7919061379c565b602c1c60016001607f1b0316151590565b15611a455760405162461bcd60e51b815260206004820152601b60248201527f6d67764f726465722f6f66666572416c7265616479416374697665000000000060448201526064016105af565b6000611a518383611d1b565b60a0890181905290506c24266666a37422a3e6e7a2e6a7609a1b8101611a7d5760808801829052611a85565b600060808901525b50505b8560800151600003611af057611aa46080890160608a0161377f565b15611ae85760405162461bcd60e51b81526020600482015260146024820152731b59dd93dc99195c8bdc185c9d1a585b119a5b1b60621b60448201526064016105af565b849350611b13565b61010088013515611b135760608720611b139087608001518a6101000135610e3f565b505050949350505050565b600080600381611b366114ee368790038701876138f5565b81526020019081526020016000206000846060013581526020019081526020016000205490508060001480611b6b5750804211155b611baa5760405162461bcd60e51b815260206004820152601060248201526f1b59dd93dc99195c8bd95e1c1a5c995960821b60448201526064016105af565b60005b9392505050565b600080611bd6611bcc6114ee368690038601866138f5565b8460600135610ca0565b90506000611bec6001546001600160a01b031690565b6001600160a01b03166326e8eda2611c0a6040870160208801613577565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529085166024820152604481018890526064015b6020604051808303816000875af1158015611c60573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c84919061379c565b905061173f81866138cf565b600080611ca8611bcc6114ee368690038601866138f5565b90506000611cbe6001546001600160a01b031690565b6001600160a01b031663333dbb0d611cd96020870187613577565b6040516001600160e01b031960e084901b1681526001600160a01b03918216600482015290851660248201526044810188905260016064820152608401611c41565b6000611d486040518060800160405280600081526020016000815260200160008152602001600081525090565b835160405163293ad90960e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691635275b21291611d9591906004016139c3565b6040805180830381865afa158015611db1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd591906139d1565b60408084019190915260208301919091528451905163e982fb8d60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169163e982fb8d91611e34919087906004016139a8565b602060405180830381865afa158015611e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e75919061379c565b6060820181905260009060481c62ffffff16905060008560a001511180611ea0575080856060015114155b80611ec35750611eb38260400151612a4b565b611ec08360600151612a61565b14155b15611f6c576000611ed78360600151612a61565b60608401519083019060251c6303ffffff16620f424002029050611f128660600151828860a0015101611f0d8660400151612a4b565b612a71565b845260808701525081518551606090206000908152600260209081526040808320888452909152902080546001600160601b03600160a01b8083048216909401169092026001600160a01b03909216919091179055611f80565b606082015160251c6303ffffff1660808601525b602082015160441c6303ffffff1685608001511015611fb15760405162461bcd60e51b81526004016105af906139f5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88660a001518760000151886020015189604001518a606001518b608001518b6040518863ffffffff1660e01b815260040161202096959493929190613a2c565b6000604051808303818588803b15801561203957600080fd5b505af19350505050801561204b575060015b6120ba57612057613a63565b806308c379a0036120ae575061206b613a7f565b8061207657506120b0565b8560c00151819061209a5760405162461bcd60e51b81526004016105af9190613b2d565b506120a481613b60565b9350505050610d09565b505b3d6000803e3d6000fd5b6c1bd999995c8bdd5c19185d1959609a1b92505050610d09565b505092915050565b60006120f06001546001600160a01b031690565b905061211f827f000000000000000000000000000000000000000000000000000000000000000060001961277d565b61216b5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c00000060448201526064016105af565b6001600160a01b0381161561222a57612187828260001961277d565b6121d35760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c00000000000060448201526064016105af565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b15801561221657600080fd5b505af115801561170b573d6000803e3d6000fd5b5050565b60008060026000612240876060902090565b8152602001908152602001600020600085815260200190815260200160002090508261226d576000612280565b8054600160a01b90046001600160601b03165b6001600160601b031691507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636e7a5cb88686866040518463ffffffff1660e01b81526004016122db93929190613b84565b6020604051808303816000875af11580156122fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231e919061379c565b61232890836138e2565b915081156115e957604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015612397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123bb9190613948565b6124005760405162461bcd60e51b8152602060048201526016602482015275119bdc9dd85c99195c8bddda5d1a191c985dd1985a5b60521b60448201526064016105af565b80546001600160a01b03168082556040516000919084908381818185875af1925050503d806000811461244f576040519150601f19603f3d011682016040523d82523d6000602084013e612454565b606091505b5050905080610f915760405162461bcd60e51b81526020600482015260186024820152771b59dd93d999995c8bddd95a551c985b9cd9995c91985a5b60421b60448201526064016105af565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b81526004016124f19291906139a8565b602060405180830381865afa15801561250e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612532919061379c565b9050604881901c62ffffff1661254782612a61565b01602582901c6303ffffff1602620f424002949350505050565b600080600061256f85612b18565b91509150816000148061258957506125878183612b4d565b155b156125a7576b1bd999995c8bd99a5b1b195960a21b92505050610d09565b6040805160e0810190915261261490806125c6368990038901896138f5565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff1681526000602082015260016040909101526060870135611d1b565b92506120d4858585612b76565b60006002816126386114ee368690038601866138f5565b815260208101919091526040016000908120915060e083013560481c62ffffff169050600061266a8460e00135612a61565b61267490836138e2565b61268e6303ffffff60e087013560251c16620f4240613ba8565b6126989190613ba8565b905060006126b76303ffffff61010087013560441c16620f4240613ba8565b905060006126c9866101200135612a4b565b6126d56107d0866138e2565b6126df91906138e2565b90506000825a6126ef90846138cf565b6126f99190613ba8565b90506000848210156127145761270f82866138cf565b612717565b60005b606089013560009081526020899052604090208054919250829160149061274f908490600160a01b90046001600160601b0316613bbf565b92506101000a8154816001600160601b0302191690836001600160601b031602179055505050505050505050565b600061278a848484612c2b565b949350505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015612802573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612826919061379c565b1161287d5760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b60648201526084016105af565b50565b60008061288c83612cf5565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e1982850101908113156128da5793841c936128e4565b8060000385901b94505b81607f039350505050915091565b600080600061172185600003612880565b6000806000806129128661314e565b60a0880151885160208a01516040808c015160608d01519151637cac815560e11b81529698509496506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169563f95902aa9561297e94939290918a90600401613bdf565b60206040518083038185885af1935050505080156129b9575060408051601f3d908101601f191682019092526129b69181019061379c565b60015b612a1a576129c5613a63565b806308c379a0036120ae57506129d9613a7f565b806129e457506120b0565b8660c001518190612a085760405162461bcd60e51b81526004016105af9190613b2d565b50612a1281613b60565b935050612a42565b865160609020612a2c90828885613234565b93506c1bd999995c8bd8dc99585d1959609a1b92505b50509250929050565b6000602182901c6101ff165b6103e80292915050565b6000603f82901c6101ff16612a57565b600080620f42408386010280851015612a9c5760405162461bcd60e51b81526004016105af906139f5565b806303ffffff028510612af15760405162461bcd60e51b815260206004820152601a60248201527f466f727761726465722f70726f766973696f6e546f6f4869676800000000000060448201526064016105af565b808581612b0057612b00613c0f565b0496939095018602620f424002909303935090915050565b600080612b3960a084013560016001607f1b036080860135602c1c166138cf565b9150608083013560401b60eb1d9050915091565b6000806000612b5b85612880565b909250905080612b6b8584613ba8565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b811480612ba257506c1bd999995c8bdd5c19185d1959609a1b81145b80612bcc5750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b15612bd657505050565b6060830135612bed6114ee368690038601866138f5565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392839291881691612c899190613c25565b6000604051808303816000865af19150503d8060008114612cc6576040519150601f19603f3d011682016040523d82523d6000602084013e612ccb565b606091505b5091509150818015610f8e575080511580610f8e575080806020019051810190610f8e9190613948565b6000806000808412612d075783612d10565b612d1084613965565b9050620d89e8811115612d655760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e647300000000000000000060448201526064016105af565b60006001821615612d88576ffff97272373d413259a46990580e21399350612d90565b600160801b93505b6002821615612dba576080612db5856ffff2e50f5f656932ef12357cf3c7fdcb613ba8565b901c93505b6004821615612de4576080612ddf856fffe5caca7e10e4e61c3624eaa0941ccf613ba8565b901c93505b6008821615612e0e576080612e09856fffcb9843d60f6159c9db58835c926643613ba8565b901c93505b6010821615612e38576080612e33856fff973b41fa98c081472e6896dfb254bf613ba8565b901c93505b6020821615612e62576080612e5d856fff2ea16466c96a3843ec78b326b52860613ba8565b901c93505b6040821615612e8c576080612e87856ffe5dee046a99a2a811c461f1969c3052613ba8565b901c93505b6080821615612eb6576080612eb1856ffcbe86c7900a88aedcffc83b479aa3a3613ba8565b901c93505b610100821615612ee1576080612edc856ff987a7253ac413176f2b074cf7815e53613ba8565b901c93505b610200821615612f0c576080612f07856ff3392b0822b70005940c7a398e4b70f2613ba8565b901c93505b610400821615612f37576080612f32856fe7159475a2c29b7443b29c7fa6e889d8613ba8565b901c93505b610800821615612f62576080612f5d856fd097f3bdfd2022b8845ad8f792aa5825613ba8565b901c93505b611000821615612f8d576080612f88856fa9f746462d870fdf8a65dc1f90e061e4613ba8565b901c93505b612000821615612fc5576080612fb3856fe1b0d342ada5437121767bec575e65ed613ba8565b901c9350612fc2600182613c41565b90505b614000821615612ffd576080612feb856fc6f84d7e5f423f66048c541550bf3e96613ba8565b901c9350612ffa600282613c41565b90505b618000821615613035576080613023856f9aa508b5b7a84e1c677de54f3e99bc8f613ba8565b901c9350613032600482613c41565b90505b6201000082161561306e57608061305c856fbad5f1bdb70232cd33865244bdcc089c613ba8565b901c935061306b600982613c41565b90505b620200008216156130a7576080613095856f885b9613d7e87aa498106fb7fa5edd37613ba8565b901c93506130a4601282613c41565b90505b620400008216156130e05760806130ce856f9142e0723efb884889d1f447715afacd613ba8565b901c93506130dd602582613c41565b90505b62080000821615613119576080613107856fa4d9a773d61316918f140bd96e8e6814613ba8565b901c9350613116604b82613c41565b90505b600085131561313a5760018485600003040193508061313790613965565b90505b613145816080613c41565b92505050915091565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635275b21286600001516040518263ffffffff1660e01b81526004016131a491906139c3565b6040805180830381865afa1580156131c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131e491906139d1565b915091506131fe85606001518660a00151611f0d84612a4b565b9094509250604482901c6303ffffff1684101561322d5760405162461bcd60e51b81526004016105af906139f5565b5050915091565b6040805180820182526001600160a01b038085168083526001600160601b03808616602080860191825260008b8152600282528781208b825290915286812095519151909216600160a01b0293169290921790925591519091859187917fbcee40f594b2f79b90531f446b9f530e5e45cd6c586f31ae8a16c3aff208656091a450505050565b60008083601f8401126132cc57600080fd5b50813567ffffffffffffffff8111156132e457600080fd5b6020830191508360208260051b85010111156132ff57600080fd5b9250929050565b6000806020838503121561331957600080fd5b823567ffffffffffffffff81111561333057600080fd5b61333c858286016132ba565b90969095509350505050565b6000806040838503121561335b57600080fd5b50508035926020909101359150565b60006101408284031215610c9a57600080fd5b6000610140828403121561339057600080fd5b611bad838361336a565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156133e457634e487b7160e01b600052604160045260246000fd5b6040525050565b604051610100810167ffffffffffffffff8111828210171561341d57634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b038116811461287d57600080fd5b60006060828403121561344a57600080fd5b6040516060810181811067ffffffffffffffff8211171561347b57634e487b7160e01b600052604160045260246000fd5b604052905080823561348c81613423565b8152602083013561349c81613423565b6020820152604092830135920191909152919050565b60008060008060c085870312156134c857600080fd5b6134d28686613438565b966060860135965060808601359560a00135945092505050565b60008060006060848603121561350157600080fd5b505081359360208301359350604090920135919050565b801515811461287d57600080fd5b803561353181613518565b919050565b600080600060a0848603121561354b57600080fd5b6135558585613438565b925060608401359150608084013561356c81613518565b809150509250925092565b60006020828403121561358957600080fd5b8135611bad81613423565b600080604083850312156135a757600080fd5b8235915060208301356135b981613423565b809150509250929050565b600080604083850312156135d757600080fd5b82356135e281613423565b915060208301356135b981613423565b6000806080838503121561360557600080fd5b61360f8484613438565b946060939093013593505050565b60008082840361018081121561363257600080fd5b61363c858561336a565b9250604061013f198201121561365157600080fd5b50610140830190509250929050565b60008060006040848603121561367557600080fd5b83359250602084013567ffffffffffffffff81111561369357600080fd5b61369f868287016132ba565b9497909650939450505050565b6020808252825182820181905260009190848201906040850190845b818110156136ed5783516001600160a01b0316835292840192918401916001016136c8565b50909695505050505050565b60008060006060848603121561370e57600080fd5b833561371981613423565b9250602084013561372981613423565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161377857613778613750565b5060010190565b60006020828403121561379157600080fd5b8135611bad81613518565b6000602082840312156137ae57600080fd5b5051919050565b600061014082840312156137c857600080fd5b6137d06133eb565b6137da8484613438565b81526137e860608401613526565b60208201526080830135604082015260a0830135606082015261380d60c08401613526565b608082015261381e60e08401613526565b60a082015261010083013560c08201526101209092013560e083015250919050565b60c08101853561384f81613423565b6001600160a01b03908116835260208701359061386b82613423565b1660208301526040958601359582019590955260608101939093526080830191909152151560a09091015290565b600080600080608085870312156138af57600080fd5b505082516020840151604085015160609095015191969095509092509050565b81810381811115610d0957610d09613750565b80820180821115610d0957610d09613750565b60006060828403121561390757600080fd5b611bad8383613438565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b60006020828403121561395a57600080fd5b8151611bad81613518565b6000600160ff1b820161397a5761397a613750565b5060000390565b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b608081016139b68285613981565b8260608301529392505050565b60608101610d098284613981565b600080604083850312156139e457600080fd5b505080516020909101519092909150565b60208082526019908201527f6d67762f696e73756666696369656e7450726f766973696f6e00000000000000604082015260600190565b6101008101613a3b8289613981565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600060033d1115613a7c5760046000803e5060005160e01c5b90565b600060443d1015613a8d5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715613abd57505050505090565b8285019150815181811115613ad55750505050505090565b843d8701016020828501011115613aef5750505050505090565b613afe602082860101876133b0565b509095945050505050565b60005b83811015613b24578181015183820152602001613b0c565b50506000910152565b6020815260008251806020840152613b4c816040850160208701613b09565b601f01601f19169190910160400192915050565b80516020808301519190811015610c9a5760001960209190910360031b1b16919050565b60a08101613b928286613981565b8360608301528215156080830152949350505050565b8082028115828204841417610d0957610d09613750565b6001600160601b0381811683821601908082111561138d5761138d613750565b60e08101613bed8288613981565b8560608301528460808301528360a08301528260c08301529695505050505050565b634e487b7160e01b600052601260045260246000fd5b60008251613c37818460208701613b09565b9190910192915050565b80820182811260008312801582168215821617156120d4576120d461375056fea2646970667358221220daedb367835eb92698b2eb1b6328d0a513ffdee31badaaa482b8d209116afb9564736f6c63430008140033",
    "sourceMap": "1372:13987:100:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8197:158:99;;;;;;;;;;-1:-1:-1;8197:158:99;;;;;:::i;:::-;;:::i;:::-;;1707:82:100;;;;;;;;;;-1:-1:-1;1707:82:100;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:25:131;;;1244:2;1229:18;1707:82:100;;;;;;;;6067:5603;;;;;;:::i;:::-;;:::i;:::-;;;;;;1869:4:131;1911:3;1900:9;1896:19;1888:27;;1948:6;1942:13;1931:9;1924:32;2012:4;2004:6;2000:17;1994:24;1987:4;1976:9;1972:20;1965:54;2075:4;2067:6;2063:17;2057:24;2050:4;2039:9;2035:20;2028:54;2138:4;2130:6;2126:17;2120:24;2113:4;2102:9;2098:20;2091:54;2201:4;2193:6;2189:17;2183:24;2176:4;2165:9;2161:20;2154:54;2264:4;2256:6;2252:17;2246:24;2239:4;2228:9;2224:20;2217:54;1707:570;;;;;4721:649:99;;;;;;;;;;-1:-1:-1;4721:649:99;;;;;:::i;:::-;;:::i;5404:209:105:-;;;;;;;;;;-1:-1:-1;5404:209:105;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2880:32:131;;;2862:51;;2850:2;2835:18;5404:209:105;2716:203:131;3328:556:100;;;;;;:::i;:::-;;:::i;7921:161:99:-;;;;;;;;;;-1:-1:-1;7921:161:99;;;;;:::i;:::-;;:::i;2836:193:100:-;;;;;;;;;;-1:-1:-1;2836:193:100;;;;;:::i;:::-;;:::i;1543:69:99:-;;;;;;;;;;;;1609:1;1543:69;;4549:212:100;;;;;;;;;;-1:-1:-1;4549:212:100;;;;;:::i;:::-;;:::i;2221:167:123:-;;;;;;;;;;-1:-1:-1;2221:167:123;;;;;:::i;:::-;;:::i;9908:470:99:-;;;;;;;;;;-1:-1:-1;9908:470:99;;;;;:::i;:::-;;:::i;3405:277::-;;;;;;;;;;-1:-1:-1;3405:277:99;;;;;:::i;:::-;;:::i;1473:30::-;;;;;;;;;;;;;;;1330:37;;;;;;;;;;;;;;;12273:240:105;;;;;;;;;;-1:-1:-1;12273:240:105;;;;;:::i;:::-;;:::i;7512:127:99:-;;;;;;;;;;-1:-1:-1;7512:127:99;;;;;:::i;:::-;;:::i;6005:568::-;;;;;;;;;;-1:-1:-1;6005:568:99;;;;;:::i;:::-;;:::i;2917:313:105:-;;;;;;;;;;-1:-1:-1;2917:313:105;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3260:111:99:-;;;;;;;;;;;;;:::i;7673:214::-;;;;;;;;;;-1:-1:-1;7673:214:99;;;;;:::i;:::-;;:::i;:::-;;;10407:14:131;;10400:22;10382:41;;10370:2;10355:18;7673:214:99;10242:187:131;1989:79:123;;;;;;;;;;-1:-1:-1;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;1989:79;;3136:90:99;;;;;;;;;;-1:-1:-1;3213:8:99;;-1:-1:-1;;;;;3213:8:99;3136:90;;8197:158;8276:6;8271:80;8288:17;;;8271:80;;;8320:24;8334:6;;8341:1;8334:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8320:13;:24::i;:::-;8307:3;;;:::i;:::-;;;8271:80;;;;8197:158;;:::o;6067:5603:100:-;6132:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6132:27:100;6216:14;;;;:19;;:56;;;6258:3;:14;;;6239:15;:33;;6216:56;6208:85;;;;-1:-1:-1;;;6208:85:100;;11305:2:131;6208:85:100;;;11287:21:131;11344:2;11324:18;;;11317:30;-1:-1:-1;;;11363:18:131;;;11356:46;11419:18;;6208:85:100;;;;;;;;;7029:15;7047:13;;;;;;;;:::i;:::-;:79;;7112:3;:14;;;7047:79;;;7063:46;:8;;;;7094:14;;;;7063:30;:46::i;:::-;7029:97;;7132:11;7146:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;7146:8:100;-1:-1:-1;;;;;7146:13:100;;7167:21;;;;;;;;:::i;:::-;7146:74;;-1:-1:-1;;;;;;7146:74:100;;;;;;;-1:-1:-1;;;;;11988:15:131;;;7146:74:100;;;11970:34:131;7191:10:100;12020:18:131;;;12013:43;12072:18;;;12065:34;;;7215:4:100;12115:18:131;;;12108:50;11904:19;;7146:74:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7132:88;;7244:10;7234:6;:20;7226:56;;;;-1:-1:-1;;;7226:56:100;;12560:2:131;7226:56:100;;;12542:21:131;12599:2;12579:18;;;12572:30;12638:25;12618:18;;;12611:53;12681:18;;7226:56:100;12358:347:131;7226:56:100;7430:17;;;;;;;;7443:3;7430:17;:::i;:::-;:12;:17::i;:::-;-1:-1:-1;;;;;7513:3:100;:21;;7543:3;7563:8;;;;7585:14;;;;7612:13;;;;;;;;:::i;:::-;7513:114;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7496:7;;;7454:173;7484:10;;;7454:173;7469:13;;;7454:173;;;7455:12;7838:27;7856:3;7455;7838:17;:27::i;:::-;7820:45;-1:-1:-1;8116:14:100;;;;;;;;:::i;:::-;8115:15;:29;;;;8134:10;8115:29;:49;;;-1:-1:-1;8148:16:100;;;;;;;;:::i;:::-;8107:82;;;;-1:-1:-1;;;8107:82:100;;14901:2:131;8107:82:100;;;14883:21:131;14940:2;14920:18;;;14913:30;-1:-1:-1;;;14959:18:131;;;14952:50;15019:18;;8107:82:100;14699:344:131;8107:82:100;8299:12;;:16;8295:172;;8417:12;;3213:8:99;;-1:-1:-1;;;;;3213:8:99;8342:13:100;8363:22;;;;;;:::i;:::-;8400:12;;8342:71;;;;;;-1:-1:-1;;;;;;8342:71:100;;;-1:-1:-1;;;;;15319:15:131;;;8342:71:100;;;15301:34:131;8388:10:100;15351:18:131;;;15344:43;15403:18;;;15396:34;15236:18;;8342:71:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:87;8325:135;;;;-1:-1:-1;;;8325:135:100;;15643:2:131;8325:135:100;;;15625:21:131;15682:2;15662:18;;;15655:30;-1:-1:-1;;;15701:18:131;;;15694:49;15760:18;;8325:135:100;15441:343:131;8325:135:100;8472:16;8504:3;:13;;;8491:10;:26;;;;:::i;:::-;8472:45;-1:-1:-1;8527:15:100;;8523:168;;8642:11;8569:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;8569:8:100;-1:-1:-1;;;;;8569:13:100;;8590:21;;;;;;;;:::i;:::-;8569:69;;-1:-1:-1;;;;;;8569:69:100;;;;;;;-1:-1:-1;;;;;15319:15:131;;;8569:69:100;;;15301:34:131;8614:10:100;15351:18:131;;;15344:43;15403:18;;;15396:34;;;15236:18;;8569:69:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:84;8552:132;;;;-1:-1:-1;;;8552:132:100;;15643:2:131;8552:132:100;;;15625:21:131;15682:2;15662:18;;;15655:30;-1:-1:-1;;;15701:18:131;;;15694:49;15760:18;;8552:132:100;15441:343:131;8552:132:100;9373:9;9397:3;:10;;;9385:9;:22;;;;:::i;:::-;9373:34;-1:-1:-1;9446:16:100;;;;;;;;:::i;:::-;:51;;;;;9487:10;9486:11;9446:51;9414:1224;;;9876:78;9899:3;9911:19;:17;;;;;;;9899:3;9911:17;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1727:63:47;;;;;;;1733:17;;;;-1:-1:-1;;;;;1727:63:47;;;;;1752:18;;1727:63;;;;;;;;1772:17;;;;1727:63;;;;;1640:155;9911:19:100;9937:3;9948:4;9876:16;:78::i;:::-;9869:85;;9414:1224;10648:8;;10644:674;;11231:32;;11213:13;;11231:10;;11254:4;;11213:13;11231:32;11213:13;11231:32;11254:4;11231:10;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11212:51;;;11279:8;11271:40;;;;-1:-1:-1;;;11271:40:100;;16693:2:131;11271:40:100;;;16675:21:131;16732:2;16712:18;;;16705:30;-1:-1:-1;;;16751:18:131;;;16744:49;16810:18;;11271:40:100;16491:343:131;11271:40:100;10658:660;10644:674;11626:23;;;;;;;11655:10;;;;;6067:5603;;;:::o;4721:649:99:-;4846:11;4827:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;4982:19:99::1;4995:5;4982:12;:19::i;:::-;4976:25;;5115:32;5123:5;:16;;;5141:5;5115:7;:32::i;:::-;:37:::0;5107:74:::1;;;::::0;-1:-1:-1;;;5107:74:99;;17394:2:131;5107:74:99::1;::::0;::::1;17376:21:131::0;17433:2;17413:18;;;17406:30;17472:26;17452:18;;;17445:54;17516:18;;5107:74:99::1;17192:348:131::0;5107:74:99::1;5299:32;5307:5;:16;;;5325:5;5299:7;:32::i;:::-;:37:::0;5291:74:::1;;;::::0;-1:-1:-1;;;5291:74:99;;17747:2:131;5291:74:99::1;::::0;::::1;17729:21:131::0;17786:2;17766:18;;;17759:30;17825:26;17805:18;;;17798:54;17869:18;;5291:74:99::1;17545:348:131::0;5291:74:99::1;4721:649:::0;;;;:::o;5404:209:105:-;5484:13;5513:20;;;:9;:20;;;;;;;;:29;;;;;;;;:35;-1:-1:-1;;;;;5513:35:105;;5554:54;;;;-1:-1:-1;;;5554:54:105;;18100:2:131;5554:54:105;;;18082:21:131;18139:2;18119:18;;;18112:30;-1:-1:-1;;;18158:18:131;;;18151:52;18220:18;;5554:54:105;17898:346:131;5554:54:105;5404:209;;;;:::o;3328:556:100:-;1552:2:47;1535:20;;1924::105;;;;:9;:20;;;;;;;;:29;;;;;;;;:35;3459:7:100;;-1:-1:-1;;;;;1924:35:105;1963:10;1924:49;1916:86;;;;-1:-1:-1;;;1916:86:105;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3611:9:100::1;-1:-1:-1::0;;;3599:21:100;3688:18;;;-1:-1:-1;;;3712:16:100;;;-1:-1:-1;;;3734:18:100;;;3772:13:::1;:11;:13::i;:::-;3758:11;::::0;::::1;:27:::0;3807:5:::1;3791:13;::::0;::::1;:21:::0;3852:27:::1;3758:4:::0;3871:7;3852:12:::1;:27::i;:::-;;3470:414;3328:556:::0;;;;;;:::o;7921:161:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;8004:6:99::1;7999:79;8016:17:::0;;::::1;7999:79;;;8048:23;8061:6;;8068:1;8061:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8048:12;:23::i;:::-;8035:3;::::0;::::1;:::i;:::-;;;7999:79;;2836:193:100::0;2917:9;2928:7;2184:10:105;-1:-1:-1;;;;;2206:3:105;2184:26;;2180:133;;2228:20;;;;:9;:20;;;;;;;;:29;;;;;;;;:35;-1:-1:-1;;;;;2228:35:105;2267:10;2228:49;2220:86;;;;-1:-1:-1;;;2220:86:105;;;;;;;:::i;:::-;2943:19:100::1;::::0;;;:8:::1;:19;::::0;;;;;;;:28;;;;;;;;;:35;;;2989;;1256:25:131;;;2943:28:100;;:19;;2989:35:::1;::::0;1229:18:131;2989:35:100::1;;;;;;;2836:193:::0;;;;;:::o;4549:212::-;1552:2:47;1535:20;;4685:12:100;;4663:7;2184:10:105;-1:-1:-1;;;;;2206:3:105;2184:26;;2180:133;;2228:20;;;;:9;:20;;;;;;;;:29;;;;;;;;:35;-1:-1:-1;;;;;2228:35:105;2267:10;2228:49;2220:86;;;;-1:-1:-1;;;2220:86:105;;;;;;;:::i;:::-;4714:42:100::1;4728:5;4735:7;4744:11;4714:13;:42::i;:::-;4707:49;;2318:1:105;4549:212:100::0;;;;;;;:::o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;18451:2:131;2278:57:123::1;::::0;::::1;18433:21:131::0;18490:2;18470:18;;;18463:30;18529:26;18509:18;;;18502:54;18573:18;;2278:57:123::1;18249:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;2862:51:131;;;2367:16:123::1;::::0;2850:2:131;2835:18;2367:16:123::1;;;;;;;;2221:167:::0;:::o;9908:470:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;10004:6:99::1;:24:::0;10000:82:::1;;10047:28;::::0;-1:-1:-1;;;10047:28:99;;10069:4:::1;10047:28;::::0;::::1;2862:51:131::0;10047:3:99::1;-1:-1:-1::0;;;;;10047:13:99::1;::::0;::::1;::::0;2835:18:131;;10047:28:99::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10038:37;;10000:82;10174:20;::::0;-1:-1:-1;;;10174:20:99;;::::1;::::0;::::1;1256:25:131::0;;;10174:3:99::1;-1:-1:-1::0;;;;;10174:12:99::1;::::0;::::1;::::0;1229:18:131;;10174:20:99::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10166:54;;;::::0;-1:-1:-1;;;10166:54:99;;19054:2:131;10166:54:99::1;::::0;::::1;19036:21:131::0;19093:2;19073:18;;;19066:30;-1:-1:-1;;;19112:18:131;;;19105:51;19173:18;;10166:54:99::1;18852:345:131::0;10166:54:99::1;10227:13;10245:8;-1:-1:-1::0;;;;;10245:13:99::1;10266:6;10245:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10226:51;;;10336:8;10328:45;;;::::0;-1:-1:-1;;;10328:45:99;;19404:2:131;10328:45:99::1;::::0;::::1;19386:21:131::0;19443:2;19423:18;;;19416:30;-1:-1:-1;;;19462:18:131;;;19455:54;19526:18;;10328:45:99::1;19202:348:131::0;3405:277:99;3480:4;3492:22;3517:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;3517:8;3492:33;-1:-1:-1;;;;;;3535:20:99;;;3531:147;;3590:38;;-1:-1:-1;;;3590:38:99;;-1:-1:-1;;;;;19798:15:131;;;3590:38:99;;;19780:34:131;19850:15;;;19830:18;;;19823:43;3590:20:99;;;;;19715:18:131;;3590:38:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3572:56;;:15;:56;:::i;:::-;3565:63;;;;;3531:147;3656:15;3649:22;;;;;3531:147;3486:196;3405:277;;;;:::o;12273:240:105:-;12360:14;12394:28;12407:5;12414:7;12394:12;:28::i;:::-;12382:40;;12459:9;:23;12469:12;:5;1552:2:47;1535:20;;;1419:146;12469:12:105;12459:23;;;;;;;;;;;;;;-1:-1:-1;12459:23:105;;;:32;;;;;;;;;;:43;-1:-1:-1;;;12459:43:105;;-1:-1:-1;;;;;12459:43:105;12446:56;;;-1:-1:-1;12273:240:105:o;7512:127:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;2862:51:131;;;7616:18:99::1;::::0;2850:2:131;2835:18;7616::99::1;2716:203:131::0;6005:568:99;6148:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;6166:6:99::1;:14;;;-1:-1:-1::0;;;6166:36:99;6162:407:::1;;6212:44;6232:5:::0;6239:16;::::1;6212:19;:44::i;:::-;;8271:80:::0;8197:158;;:::o;6162:407::-:1;6369:13;::::0;::::1;;6349:18;:16;;::::0;;::::1;::::0;::::1;6369:5:::0;6349:16:::1;:::i;:::-;1552:2:47::0;1535:20;;;1419:146;6349:18:99::1;6337:80;::::0;;6384:16;::::1;20051:25:131::0;;6402:14:99::1;::::0;;::::1;;20092:18:131::0;;;20085:34;6337:80:99::1;::::0;20024:18:131;6337:80:99::1;;;;;;;6528:34;6556:5;6528:27;:34::i;2917:313:105:-:0;3029:29;3097:8;3083:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3083:30:105;;3068:45;;3124:6;3119:107;3136:19;;;3119:107;;;3188:31;3196:9;3207:8;;3216:1;3207:11;;;;;;;:::i;:::-;;;;;;;3188:7;:31::i;:::-;3170:12;3183:1;3170:15;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3170:49:105;;;:15;;;;;;;;;;;:49;3157:3;;;:::i;:::-;;;3119:107;;;;2917:313;;;;;:::o;3260:111:99:-;3304:4;3323:43;3350:1;3363;3323:11;:43::i;:::-;3316:50;;3260:111;:::o;7673:214::-;7769:4;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7789:48:99::1;7814:5;7821:7;7830:6;7789:24;:48::i;:::-;7781:84;;;::::0;-1:-1:-1;;;7781:84:99;;20332:2:131;7781:84:99::1;::::0;::::1;20314:21:131::0;20371:2;20351:18;;;20344:30;20410:25;20390:18;;;20383:53;20453:18;;7781:84:99::1;20130:347:131::0;7781:84:99::1;-1:-1:-1::0;7878:4:99::1;7673:214:::0;;;;;:::o;18496:186:105:-;18570:26;18590:5;18570:19;:26::i;:::-;18602:22;18627:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;18627:8:105;18641:36;;-1:-1:-1;;;18641:36:105;;-1:-1:-1;;;;;19798:15:131;;;18641:36:105;;;19780:34:131;18666:10:105;19830:18:131;;;19823:43;18602:33:105;;-1:-1:-1;18641:17:105;;;;;;19715:18:131;;18641:36:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18564:118;18496:186;:::o;2339:210:12:-;2422:4;2453:8;2463;2475:19;2489:4;2475:13;:19::i;:::-;2452:42;;;;2509:29;2522:11;2518:3;:15;2534:3;16295:1;16286:8;;-1:-1:-1;;16282:15:12;16276:22;;16273:28;;16324:4;;;16323:12;;15797:549;2509:29;2502:36;2339:210;-1:-1:-1;;;;;2339:210:12:o;11843:344:100:-;11946:9;;1552:2:47;1535:20;;11977:10:100;;11908:274;12007:3;:14;;;12035:3;:8;;;12063:3;:14;;;12096:3;:13;;;12131:3;:16;;;12164:3;:11;;;11908:274;;;;;;;;;;20800:14:131;;20793:22;20775:41;;20847:2;20832:18;;20825:34;;;;20890:2;20875:18;;20868:34;;;;20945:14;20938:22;20933:2;20918:18;;20911:50;21005:14;20998:22;20992:3;20977:19;;20970:51;21052:3;21037:19;;21030:35;20762:3;20747:19;;20482:589;11908:274:100;;;;;;;;11843:344;:::o;5423:611::-;5527:4;5643:13;;;;;;;;:::i;:::-;5639:391;;;5829:7;;;;5814:12;;5840:14;;;;;5814:22;;;:::i;:::-;:40;;5807:47;;;;5639:391;6009:3;:14;;;5992:3;:13;;;:31;;5985:38;;;;13023:2334;13160:11;;13211:22;13224:8;;;;13211:22;:::i;:::-;13181:53;-1:-1:-1;13240:18:100;13268:13;;;;;;;;:::i;:::-;13264:437;;;13409:7;;;;13394:12;;13355:18;;13394:22;;;:::i;:::-;13376:41;;:14;;;;:41;:::i;:::-;13355:62;-1:-1:-1;13523:49:100;:12;13355:62;13523:34;:49::i;:::-;13507:65;;13283:296;13264:437;;;13681:13;;;;13664:30;;:14;;;;:30;:::i;:::-;13648:46;;13264:437;13706:21;13730:257;;;;;;;;13755:5;13730:257;;;;13774:12;13730:257;;;;13801:13;13730:257;;;;13830:13;:11;:13::i;:::-;13730:257;;;;13898:1;13730:257;;;;13924:4;13730:257;;;;13946:4;13730:257;;;;;13706:281;;13997:3;:11;;;14012:1;13997:16;13993:544;;14059:27;14069:4;14075:10;14059:9;:27::i;:::-;14037:18;;;14023:63;14024:11;;;14023:63;13993:544;;;14122:11;;;;14191:10;14149:9;14107:12;14159;:5;1552:2:47;1535:20;;;1419:146;14159:12:100;14149:23;;;;;;;;;;;;;;-1:-1:-1;14149:23:100;;;:32;;;;;;;;:38;-1:-1:-1;;;;;14149:38:100;:52;14141:89;;;;-1:-1:-1;;;14141:89:100;;;;;;;:::i;:::-;14247:26;;-1:-1:-1;;;14247:26:100;;:35;;-1:-1:-1;;;;;14247:3:100;:10;;;;:26;;14258:5;;14265:7;;14247:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5058:66:56;;-1:-1:-1;;;;;5058:66:56;815:13:11;808:21;;666:173;14247:35:100;14246:36;14238:76;;;;-1:-1:-1;;;14238:76:100;;22217:2:131;14238:76:100;;;22199:21:131;22256:2;22236:18;;;22229:30;22295:29;22275:18;;;22268:57;22342:18;;14238:76:100;22015:351:131;14238:76:100;14322:18;14343:27;14356:4;14362:7;14343:12;:27::i;:::-;14378:18;;;:31;;;14322:48;-1:-1:-1;;;;14421:28:100;;14417:114;;14461:11;;;:21;;;14417:114;;;14521:1;14507:11;;;:15;14417:114;14099:438;;13993:544;14546:3;:11;;;14561:1;14546:16;14542:811;;14956:14;;;;;;;;:::i;:::-;14955:15;14947:48;;;;-1:-1:-1;;;14947:48:100;;14901:2:131;14947:48:100;;;14883:21:131;14940:2;14920:18;;;14913:30;-1:-1:-1;;;14959:18:131;;;14952:50;15019:18;;14947:48:100;14699:344:131;14947:48:100;15083:4;15074:13;;14542:811;;;15256:14;;;;:18;15252:95;;1552:2:47;1535:20;;15286:52:100;;15310:3;:11;;;15323:3;:14;;;15286:9;:52::i;:::-;13175:2182;;;13023:2334;;;;;;:::o;4893:273::-;4985:7;;5011:8;4985:7;5020:18;:16;;;;;;;:5;:16;:::i;:18::-;5011:28;;;;;;;;;;;:43;5040:5;:13;;;5011:43;;;;;;;;;;;;5000:54;;5068:3;5075:1;5068:8;:34;;;;5099:3;5080:15;:22;;5068:34;5060:63;;;;-1:-1:-1;;;5060:63:100;;11305:2:131;5060:63:100;;;11287:21:131;11344:2;11324:18;;;11317:30;-1:-1:-1;;;11363:18:131;;;11356:46;11419:18;;5060:63:100;11103:340:131;5060:63:100;12674:12:99;5136:25:100;5129:32;4893:273;-1:-1:-1;;;4893:273:100:o;15361:284:105:-;15461:4;;15489:42;15497:18;:16;;;;;;;:5;:16;:::i;:18::-;15517:5;:13;;;15489:7;:42::i;:::-;15473:58;;15537:11;15551:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;15551:8:105;-1:-1:-1;;;;;15551:13:105;;15572:23;;;;;;;;:::i;:::-;15551:61;;-1:-1:-1;;;;;;15551:61:105;;;;;;;-1:-1:-1;;;;;15319:15:131;;;15551:61:105;;;15301:34:131;15371:15;;;15351:18;;;15344:43;15403:18;;;15396:34;;;15236:18;;15551:61:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15537:75;-1:-1:-1;15625:15:105;15537:75;15625:6;:15;:::i;15735:609::-;15835:4;;15863:42;15871:18;:16;;;;;;;:5;:16;:::i;15863:42::-;15847:58;;16178:11;16192:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;16192:8:105;-1:-1:-1;;;;;16192:13:105;;16213:24;;;;:5;:24;:::i;:::-;16192:68;;-1:-1:-1;;;;;;16192:68:105;;;;;;;-1:-1:-1;;;;;11988:15:131;;;16192:68:105;;;11970:34:131;12040:15;;;12020:18;;;12013:43;12072:18;;;12065:34;;;16255:4:105;12115:18:131;;;12108:50;11904:19;;16192:68:105;11694:470:131;10098:2142:105;10184:7;10217:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10217:27:105;10291:10;;10280:22;;-1:-1:-1;;;10280:22:105;;-1:-1:-1;;;;;10280:3:105;:10;;;;:22;;10291:10;10280:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10266:10;;;;10252:50;;;;10253:11;;;10252:50;;;;10346:10;;10329:37;;-1:-1:-1;;;10329:37:105;;-1:-1:-1;;;;;10329:3:105;:16;;;;:37;;10346:10;10358:7;;10329:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10310:16;;;:56;;;10375:15;;5160:74:57;;;;10375:43:105;;10499:1;10487:4;:9;;;:13;:80;;;;10557:10;10542:4;:11;;;:25;;10487:80;:188;;;;10649:26;:4;:10;;;:24;:26::i;:::-;10613:32;:4;:16;;;:30;:32::i;:::-;:62;;10487:188;10474:1130;;;10818:17;10888:32;:4;:16;;;:30;:32::i;:::-;10838:16;;;;10875:45;;;;6080:78:57;;;;10868:3:105;10838:33;:83;10818:103;;11135:81;11150:4;:11;;;11175:12;11163:4;:9;;;:24;11189:26;:4;:10;;;:24;:26::i;:::-;11135:14;:81::i;:::-;11092:124;;11093:13;;;11092:124;-1:-1:-1;11459:13:105;;11410:10;;1552:2:47;1535:20;;-1:-1:-1;11400:28:105;;;:9;-1:-1:-1;11400:28:105;;;-1:-1:-1;11400:28:105;;;:37;;;;;;;;:73;;-1:-1:-1;;;;;;;;11400:73:105;;;;;;;;;;;;-1:-1:-1;;;;;11400:73:105;;;;;;;;;10474:1130;;;11568:16;;;;6080:78:57;;;;11552:13:105;;;:43;10474:1130;11875:11;;;;8804:73:54;;;;11858:4:105;:13;;;:39;;11850:77;;;;-1:-1:-1;;;11850:77:105;;;;;;;:::i;:::-;11939:3;-1:-1:-1;;;;;11939:21:105;;11968:4;:9;;;11988:4;:10;;;12000:4;:9;;;12011:4;:10;;;12023:4;:11;;;12036:4;:13;;;12051:7;11939:127;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11935:295;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;12160:4;:13;;;12175:6;12152:30;;;;;-1:-1:-1;;;12152:30:105;;;;;;;;:::i;:::-;-1:-1:-1;12199:22:105;12213:6;12199:22;:::i;:::-;12192:29;;;;;;;11935:295;;;;;;;;;;;-1:-1:-1;;;12077:21:105;;;;;;11935:295;10199:2037;;10098:2142;;;;:::o;8617:808:99:-;8676:22;8701:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;8701:8;8676:33;;8824:61;8849:5;8864:3;-1:-1:-1;;8824:24:99;:61::i;:::-;8816:103;;;;-1:-1:-1;;;8816:103:99;;26150:2:131;8816:103:99;;;26132:21:131;26189:2;26169:18;;;26162:30;26228:31;26208:18;;;26201:59;26277:18;;8816:103:99;25948:353:131;8816:103:99;-1:-1:-1;;;;;8929:20:99;;;8925:496;;9067:65;9092:5;9107:7;-1:-1:-1;;9067:24:99;:65::i;:::-;9059:104;;;;-1:-1:-1;;;9059:104:99;;26508:2:131;9059:104:99;;;26490:21:131;26547:2;26527:18;;;26520:30;26586:28;26566:18;;;26559:56;26632:18;;9059:104:99;26306:350:131;9059:104:99;9391:23;;-1:-1:-1;;;9391:23:99;;-1:-1:-1;;;;;2880:32:131;;;9391:23:99;;;2862:51:131;9391:16:99;;;;;2835:18:131;;9391:23:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8925:496;8670:755;8617:808;:::o;13178:1377:105:-;13271:12;13291:20;13314:9;:23;13324:12;:5;1552:2:47;1535:20;;;1419:146;13324:12:105;13314:23;;;;;;;;;;;:32;13338:7;13314:32;;;;;;;;;;;13291:55;;13362:11;:31;;13392:1;13362:31;;;13376:13;;-1:-1:-1;;;13376:13:105;;-1:-1:-1;;;;;13376:13:105;13362:31;-1:-1:-1;;;;;13352:41:105;;;13417:3;-1:-1:-1;;;;;13417:16:105;;13434:5;13441:7;13450:11;13417:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13406:56;;;;:::i;:::-;;-1:-1:-1;13479:11:105;;13475:1076;;13558:21;;-1:-1:-1;;;13558:21:105;;;;;1256:25:131;;;13558:3:105;-1:-1:-1;;;;;13558:12:105;;;;1229:18:131;;13558:21:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13550:56;;;;-1:-1:-1;;;13550:56:105;;27485:2:131;13550:56:105;;;27467:21:131;27524:2;27504:18;;;27497:30;-1:-1:-1;;;27543:18:131;;;27536:52;27605:18;;13550:56:105;27283:346:131;13550:56:105;13660:17;;-1:-1:-1;;;;;13660:17:105;;;;14458:33;;-1:-1:-1;;13660:17:105;14479:7;;-1:-1:-1;14458:33:105;-1:-1:-1;14458:33:105;14479:7;13660:17;14458:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14439:52;;;14507:8;14499:45;;;;-1:-1:-1;;;14499:45:105;;19404:2:131;14499:45:105;;;19386:21:131;19443:2;19423:18;;;19416:30;-1:-1:-1;;;19462:18:131;;;19455:54;19526:18;;14499:45:105;19202:348:131;17606:289:99;17685:14;17707:23;17733:3;-1:-1:-1;;;;;17733:16:99;;17750:5;17757:7;17733:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17707:58;-1:-1:-1;5160:74:57;;;;;;17833:27:99;:11;:25;:27::i;:::-;:50;6080:78:57;;;;;;17801:83:99;17826:3;17801:83;;17606:289;-1:-1:-1;;;;17606:289:99:o;15478:1256::-;15599:12;15659:13;15674:12;15690:25;15709:5;15690:18;:25::i;:::-;15658:57;;;;16266:8;16278:1;16266:13;:59;;;-1:-1:-1;16283:37:99;:7;16311:8;16283:27;:37::i;:::-;:42;16266:59;16262:100;;;-1:-1:-1;;;16335:20:99;;;;;;16262:100;16394:228;;;;;;;;;16374:275;;16394:228;;;;;;;;16421:5;16394:228;:::i;:::-;;;;;;;;;;;;;;;;;16498:17;;;;5160:74:57;;;;16394:228:99;;;;16544:17;;;;6080:78:57;;;;16394:228:99;;16612:1;16394:228;;;;16592:4;16394:228;;;;;16630:13;;;;16374:12;:275::i;:::-;16367:282;;16690:39;16706:5;16713:9;16724:4;16690:15;:39::i;17042:1321:105:-;17146:52;17201:9;17146:52;17211:18;:16;;;;;;;:5;:16;:::i;:18::-;17201:29;;;;;;;;;;;-1:-1:-1;17201:29:105;;;;-1:-1:-1;17508:17:105;;;;5160:74:57;;;;17494:40:105;;17540:14;17604:33;:5;:17;;;:31;:33::i;:::-;17595:42;;:6;:42;:::i;:::-;17557:34;6080:78:57;17563:17:105;;;;6080:78:57;;;17557:3:105;:34;:::i;:::-;:81;;;;:::i;:::-;17540:98;-1:-1:-1;17744:13:105;17760:29;8804:73:54;17760:12:105;;;;8804:73:54;;;17786:3:105;17760:29;:::i;:::-;17744:45;;17795:25;17845:27;:5;:11;;;:25;:27::i;:::-;17823:19;1107:4;17823:6;:19;:::i;:::-;:49;;;;:::i;:::-;17795:77;;17878:17;17935:8;17922:9;17899:32;;:20;:32;:::i;:::-;17898:45;;;;:::i;:::-;17878:65;;17949:28;17996:9;17980:12;:25;;:56;;18012:24;18024:12;18012:9;:24;:::i;:::-;17980:56;;;18008:1;17980:56;18298:13;;;;18280:32;;;;;;;;;;;:78;;17949:87;;-1:-1:-1;17949:87:105;;18280:43;;:78;;17949:87;;-1:-1:-1;;;18280:78:105;;-1:-1:-1;;;;;18280:78:105;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;18280:78:105;;;;;-1:-1:-1;;;;;18280:78:105;;;;;;17140:1223;;;;;;;17042:1321;:::o;5061:145:5:-;5145:4;5164:37;5178:5;5185:7;5194:6;5164:13;:37::i;:::-;5157:44;5061:145;-1:-1:-1;;;;5061:145:5:o;9710:164:99:-;9783:44;;-1:-1:-1;;;9783:44:99;;9807:4;9783:44;;;19780:34:131;-1:-1:-1;;;;;9822:3:99;19850:15:131;;19830:18;;;19823:43;-1:-1:-1;;9783:15:99;;;;;;19715:18:131;;9783:44:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;9775:94;;;;-1:-1:-1;;;9775:94:99;;28511:2:131;9775:94:99;;;28493:21:131;28550:2;28530:18;;;28523:30;28589:34;28569:18;;;28562:62;-1:-1:-1;;;28640:18:131;;;28633:31;28681:19;;9775:94:99;28309:397:131;9775:94:99;9710:164;:::o;10423:815:12:-;10480:8;10490;10537:32;10564:4;10537:26;:32::i;:::-;10524:45;;-1:-1:-1;10524:45:12;-1:-1:-1;5056:3:7;10595:33:12;;;10577:15;10777:12;10830:30;;;10826:37;-1:-1:-1;10760:30:12;;;10812:52;;-1:-1:-1;;10890:18:12;;;:47;;10949:8;;10945:177;;;11047:17;;;;10945:177;;;11108:4;11107:5;;11095:3;:18;;11089:24;;10945:177;11217:9;2943:3:7;11188:38:12;11177:50;;10506:728;;;10423:815;;;:::o;3062:233::-;3144:4;3175:8;3185;3197:44;3234:4;3221:18;;3197:13;:44::i;8752:954:105:-;8827:12;8841:14;8907:13;8922;8939:28;8962:4;8939:22;:28::i;:::-;9244:9;;;;9255:10;;9267:9;;;;9278:10;;;;;9290:11;;;;9218:94;;-1:-1:-1;;;9218:94:105;;8906:61;;-1:-1:-1;8906:61:105;;-1:-1:-1;;;;;;9218:3:105;:18;;;;:94;;9255:10;9267:9;9278:10;;8906:61;;9218:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9218:94:105;;;;;;;;-1:-1:-1;;9218:94:105;;;;;;;;;;;;:::i;:::-;;;9214:488;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;9634:4;:13;;;9649:6;9626:30;;;;;-1:-1:-1;;;9626:30:105;;;;;;;;:::i;:::-;-1:-1:-1;9673:22:105;9687:6;9673:22;:::i;:::-;9664:31;;9516:186;9214:488;;;9403:10;;1552:2:47;1535:20;;9394:54:105;;9422:8;9432:5;9439:8;9394;:54::i;:::-;9466:8;-1:-1:-1;;;;9491:17:105;-1:-1:-1;9214:488:105;8857:849;;8752:954;;;;;:::o;986:128:9:-;1045:4;12515:92:55;;;;;;1076:26:9;1105:3;1076:32;;986:128;-1:-1:-1;;986:128:9:o;231:146:10:-;302:4;5589:98:57;;;;;;333:32:10;5486:207:57;4498:873:105;4605:13;;4698:3;4673:21;;;4672:29;4807:16;;;;4799:54;;;;-1:-1:-1;;;4799:54:105;;;;;;;:::i;:::-;5041:3;5024:13;5023:21;5011:9;:33;5003:72;;;;-1:-1:-1;;;5003:72:105;;29472:2:131;5003:72:105;;;29454:21:131;29511:2;29491:18;;;29484:30;29550:28;29530:18;;;29523:56;29596:18;;5003:72:105;29270:350:131;5003:72:105;5106:3;5094:9;:15;;;;;:::i;:::-;;;5337:21;;;;5319:40;;5330:3;5319:40;5306:54;;;;-1:-1:-1;4498:873:105;;-1:-1:-1;;4498:873:105:o;14189:212:99:-;14278:13;;14324:38;14346:16;;;;-1:-1:-1;;;;;14324:11:99;;;;5058:66:56;;;14324:38:99;:::i;:::-;14313:49;-1:-1:-1;14378:11:99;;;;1421:23:56;4674:37;4717:15;4670:63;14368:28:99;;14189:212;;;:::o;2156:179:12:-;2237:4;2250:8;2260;2272:19;2286:4;2272:13;:19::i;:::-;2249:42;;-1:-1:-1;2249:42:12;-1:-1:-1;2249:42:12;2305:17;2311:11;2249:42;2305:17;:::i;:::-;2304:26;;;2156:179;-1:-1:-1;;;;;2156:179:12:o;6902:576:99:-;-1:-1:-1;;;7166:12:99;:29;:63;;;;-1:-1:-1;;;7199:12:99;:30;7166:63;:114;;;;7233:12;:47;;7166:114;7155:319;;;6902:576;;;:::o;7155:319::-;7428:13;;;;7408:18;:16;;;;;;;7428:5;7408:16;:::i;:18::-;7396:71;;;20051:25:131;;;20107:2;20092:18;;20085:34;;;7396:71:99;;20024:18:131;7396:71:99;;;;;;;6902:576;;;:::o;4155:623:5:-;4637:63;;;-1:-1:-1;;;;;29949:32:131;;;4637:63:5;;;29931:51:131;29998:18;;;;29991:34;;;4637:63:5;;;;;;;;;;29904:18:131;;;;4637:63:5;;;;;;;-1:-1:-1;;;;;4637:63:5;-1:-1:-1;;;4637:63:5;;;4617:84;;-1:-1:-1;;;;;;4617:19:5;;;;:84;;4637:63;4617:84;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4575:126;;;;4715:7;:57;;;;-1:-1:-1;4727:11:5;;:16;;:44;;;4758:4;4747:24;;;;;;;;;;;;:::i;11962:2858:12:-;12032:8;12042;12058:12;12093:1;12085:4;12073:21;:74;;12141:4;12073:74;;;12102:18;12115:4;12102:18;:::i;:::-;12058:89;;2296:6:7;12161:7:12;:25;;12153:61;;;;-1:-1:-1;;;12153:61:12;;30530:2:131;12153:61:12;;;30512:21:131;30569:2;30549:18;;;30542:30;30608:25;30588:18;;;30581:53;30651:18;;12153:61:12;30328:347:131;12153:61:12;12221:15;12256:3;12246:13;;:18;12242:141;;12280:34;12274:40;;12242:141;;;-1:-1:-1;;;12335:41:12;;12242:141;12402:3;12392:13;;:18;12388:94;;12472:3;12427:40;:3;12433:34;12427:40;:::i;:::-;12426:49;;12420:55;;12388:94;12501:3;12491:13;;:18;12487:94;;12571:3;12526:40;:3;12532:34;12526:40;:::i;:::-;12525:49;;12519:55;;12487:94;12600:3;12590:13;;:18;12586:94;;12670:3;12625:40;:3;12631:34;12625:40;:::i;:::-;12624:49;;12618:55;;12586:94;12699:4;12689:14;;:19;12685:95;;12770:3;12725:40;:3;12731:34;12725:40;:::i;:::-;12724:49;;12718:55;;12685:95;12799:4;12789:14;;:19;12785:95;;12870:3;12825:40;:3;12831:34;12825:40;:::i;:::-;12824:49;;12818:55;;12785:95;12899:4;12889:14;;:19;12885:95;;12970:3;12925:40;:3;12931:34;12925:40;:::i;:::-;12924:49;;12918:55;;12885:95;12999:4;12989:14;;:19;12985:95;;13070:3;13025:40;:3;13031:34;13025:40;:::i;:::-;13024:49;;13018:55;;12985:95;13099:5;13089:15;;:20;13085:96;;13171:3;13126:40;:3;13132:34;13126:40;:::i;:::-;13125:49;;13119:55;;13085:96;13200:5;13190:15;;:20;13186:96;;13272:3;13227:40;:3;13233:34;13227:40;:::i;:::-;13226:49;;13220:55;;13186:96;13301:5;13291:15;;:20;13287:96;;13373:3;13328:40;:3;13334:34;13328:40;:::i;:::-;13327:49;;13321:55;;13287:96;13402:5;13392:15;;:20;13388:96;;13474:3;13429:40;:3;13435:34;13429:40;:::i;:::-;13428:49;;13422:55;;13388:96;13503:6;13493:16;;:21;13489:97;;13576:3;13531:40;:3;13537:34;13531:40;:::i;:::-;13530:49;;13524:55;;13489:97;13605:6;13595:16;;:21;13591:121;;13678:3;13633:40;:3;13639:34;13633:40;:::i;:::-;13632:49;;;-1:-1:-1;13689:16:12;13704:1;13689:16;;:::i;:::-;;;13591:121;13731:6;13721:16;;:21;13717:121;;13804:3;13759:40;:3;13765:34;13759:40;:::i;:::-;13758:49;;;-1:-1:-1;13815:16:12;13830:1;13815:16;;:::i;:::-;;;13717:121;13857:6;13847:16;;:21;13843:121;;13930:3;13885:40;:3;13891:34;13885:40;:::i;:::-;13884:49;;;-1:-1:-1;13941:16:12;13956:1;13941:16;;:::i;:::-;;;13843:121;13983:7;13973:17;;:22;13969:122;;14057:3;14012:40;:3;14018:34;14012:40;:::i;:::-;14011:49;;;-1:-1:-1;14068:16:12;14083:1;14068:16;;:::i;:::-;;;13969:122;14110:7;14100:17;;:22;14096:123;;14184:3;14139:40;:3;14145:34;14139:40;:::i;:::-;14138:49;;;-1:-1:-1;14195:17:12;14210:2;14195:17;;:::i;:::-;;;14096:123;14238:7;14228:17;;:22;14224:123;;14312:3;14267:40;:3;14273:34;14267:40;:::i;:::-;14266:49;;;-1:-1:-1;14323:17:12;14338:2;14323:17;;:::i;:::-;;;14224:123;14366:7;14356:17;;:22;14352:123;;14440:3;14395:40;:3;14401:34;14395:40;:::i;:::-;14394:49;;;-1:-1:-1;14451:17:12;14466:2;14451:17;;:::i;:::-;;;14352:123;14504:1;14496:4;14484:21;14480:300;;;14730:1;14724:3;14718;14715:1;14711:11;14707:21;14703:29;14696:36;;14762:11;14761:12;;;:::i;:::-;14747:26;;14480:300;14796:17;14802:11;14796:3;:17;:::i;:::-;14785:29;;12052:2768;;11962:2858;;;:::o;6095:862:105:-;6173:13;6188;6210;6225:11;6240:3;-1:-1:-1;;;;;6240:10:105;;6251:4;:10;;;6240:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6209:53;;;;6386:61;6401:4;:11;;;6414:4;:9;;;6425:21;:5;:19;:21::i;6386:61::-;6363:84;;-1:-1:-1;6363:84:105;-1:-1:-1;8804:73:54;;;;;;6893:8:105;:29;;6885:67;;;;-1:-1:-1;;;6885:67:105;;;;;;;:::i;:::-;6203:754;;6095:862;;;:::o;3611:239::-;3739:55;;;;;;;;-1:-1:-1;;;;;3739:55:105;;;;;;-1:-1:-1;;;;;3739:55:105;;;;;;;;;;-1:-1:-1;3707:20:105;;;:9;:20;;;;;:29;;;;;;;;;:87;;;;;;;-1:-1:-1;;;3707:87:105;;;;;;;;;;3805:40;;3739:55;;3728:7;;3717:9;;3805:40;;;3611:239;;;;:::o;14:375:131:-;85:8;95:6;149:3;142:4;134:6;130:17;126:27;116:55;;167:1;164;157:12;116:55;-1:-1:-1;190:20:131;;233:18;222:30;;219:50;;;265:1;262;255:12;219:50;302:4;294:6;290:17;278:29;;362:3;355:4;345:6;342:1;338:14;330:6;326:27;322:38;319:47;316:67;;;379:1;376;369:12;316:67;14:375;;;;;:::o;394:458::-;493:6;501;554:2;542:9;533:7;529:23;525:32;522:52;;;570:1;567;560:12;522:52;610:9;597:23;643:18;635:6;632:30;629:50;;;675:1;672;665:12;629:50;714:78;784:7;775:6;764:9;760:22;714:78;:::i;:::-;811:8;;688:104;;-1:-1:-1;394:458:131;-1:-1:-1;;;;394:458:131:o;857:248::-;925:6;933;986:2;974:9;965:7;961:23;957:32;954:52;;;1002:1;999;992:12;954:52;-1:-1:-1;;1025:23:131;;;1095:2;1080:18;;;1067:32;;-1:-1:-1;857:248:131:o;1292:159::-;1355:5;1400:3;1391:6;1386:3;1382:16;1378:26;1375:46;;;1417:1;1414;1407:12;1456:246;1546:6;1599:3;1587:9;1578:7;1574:23;1570:33;1567:53;;;1616:1;1613;1606:12;1567:53;1639:57;1688:7;1677:9;1639:57;:::i;2924:127::-;2985:10;2980:3;2976:20;2973:1;2966:31;3016:4;3013:1;3006:15;3040:4;3037:1;3030:15;3056:346;3166:2;3147:13;;-1:-1:-1;;3143:27:131;3131:40;;3201:18;3186:34;;3222:22;;;3183:62;3180:185;;;3287:10;3282:3;3278:20;3275:1;3268:31;3322:4;3319:1;3312:15;3350:4;3347:1;3340:15;3180:185;3381:2;3374:22;-1:-1:-1;;3056:346:131:o;3407:347::-;3474:2;3468:9;3516:6;3504:19;;3553:18;3538:34;;3574:22;;;3535:62;3532:185;;;3639:10;3634:3;3630:20;3627:1;3620:31;3674:4;3671:1;3664:15;3702:4;3699:1;3692:15;3532:185;3733:2;3726:22;3407:347;:::o;3759:131::-;-1:-1:-1;;;;;3834:31:131;;3824:42;;3814:70;;3880:1;3877;3870:12;3895:779;3947:5;3995:4;3983:9;3978:3;3974:19;3970:30;3967:50;;;4013:1;4010;4003:12;3967:50;4046:2;4040:9;4088:4;4080:6;4076:17;4159:6;4147:10;4144:22;4123:18;4111:10;4108:34;4105:62;4102:185;;;4209:10;4204:3;4200:20;4197:1;4190:31;4244:4;4241:1;4234:15;4272:4;4269:1;4262:15;4102:185;4303:2;4296:22;4336:6;-1:-1:-1;4336:6:131;4366:23;;4398:33;4366:23;4398:33;:::i;:::-;4440:23;;4515:2;4500:18;;4487:32;4528:33;4487:32;4528:33;:::i;:::-;4589:2;4577:15;;4570:32;4663:2;4648:18;;;4635:32;4618:15;;4611:57;;;;3895:779;;-1:-1:-1;3895:779:131:o;4679:456::-;4814:6;4822;4830;4838;4891:3;4879:9;4870:7;4866:23;4862:33;4859:53;;;4908:1;4905;4898:12;4859:53;4931:43;4966:7;4955:9;4931:43;:::i;:::-;4921:53;5021:2;5006:18;;4993:32;;-1:-1:-1;5072:3:131;5057:19;;5044:33;;5124:3;5109:19;5096:33;;-1:-1:-1;4679:456:131;-1:-1:-1;;;4679:456:131:o;5140:316::-;5217:6;5225;5233;5286:2;5274:9;5265:7;5261:23;5257:32;5254:52;;;5302:1;5299;5292:12;5254:52;-1:-1:-1;;5325:23:131;;;5395:2;5380:18;;5367:32;;-1:-1:-1;5446:2:131;5431:18;;;5418:32;;5140:316;-1:-1:-1;5140:316:131:o;5693:118::-;5779:5;5772:13;5765:21;5758:5;5755:32;5745:60;;5801:1;5798;5791:12;5816:128;5881:20;;5910:28;5881:20;5910:28;:::i;:::-;5816:128;;;:::o;5949:423::-;6047:6;6055;6063;6116:3;6104:9;6095:7;6091:23;6087:33;6084:53;;;6133:1;6130;6123:12;6084:53;6156:43;6191:7;6180:9;6156:43;:::i;:::-;6146:53;;6246:2;6235:9;6231:18;6218:32;6208:42;;6300:3;6289:9;6285:19;6272:33;6314:28;6336:5;6314:28;:::i;:::-;6361:5;6351:15;;;5949:423;;;;;:::o;6377:247::-;6436:6;6489:2;6477:9;6468:7;6464:23;6460:32;6457:52;;;6505:1;6502;6495:12;6457:52;6544:9;6531:23;6563:31;6588:5;6563:31;:::i;6629:323::-;6705:6;6713;6766:2;6754:9;6745:7;6741:23;6737:32;6734:52;;;6782:1;6779;6772:12;6734:52;6818:9;6805:23;6795:33;;6878:2;6867:9;6863:18;6850:32;6891:31;6916:5;6891:31;:::i;:::-;6941:5;6931:15;;;6629:323;;;;;:::o;6957:401::-;7038:6;7046;7099:2;7087:9;7078:7;7074:23;7070:32;7067:52;;;7115:1;7112;7105:12;7067:52;7154:9;7141:23;7173:31;7198:5;7173:31;:::i;:::-;7223:5;-1:-1:-1;7280:2:131;7265:18;;7252:32;7293:33;7252:32;7293:33;:::i;7598:293::-;7690:6;7698;7751:3;7739:9;7730:7;7726:23;7722:33;7719:53;;;7768:1;7765;7758:12;7719:53;7791:43;7826:7;7815:9;7791:43;:::i;:::-;7781:53;7881:2;7866:18;;;;7853:32;;-1:-1:-1;;;7598:293:131:o;8172:410::-;8304:6;8312;8356:9;8347:7;8343:23;8386:3;8382:2;8378:12;8375:32;;;8403:1;8400;8393:12;8375:32;8426:57;8475:7;8464:9;8426:57;:::i;:::-;8416:67;-1:-1:-1;8518:2:131;-1:-1:-1;;8499:17:131;;8495:26;8492:46;;;8534:1;8531;8524:12;8492:46;;8572:3;8561:9;8557:19;8547:29;;8172:410;;;;;:::o;8587:513::-;8682:6;8690;8698;8751:2;8739:9;8730:7;8726:23;8722:32;8719:52;;;8767:1;8764;8757:12;8719:52;8803:9;8790:23;8780:33;;8864:2;8853:9;8849:18;8836:32;8891:18;8883:6;8880:30;8877:50;;;8923:1;8920;8913:12;8877:50;8962:78;9032:7;9023:6;9012:9;9008:22;8962:78;:::i;:::-;8587:513;;9059:8;;-1:-1:-1;8936:104:131;;-1:-1:-1;;;;8587:513:131:o;9105:658::-;9276:2;9328:21;;;9398:13;;9301:18;;;9420:22;;;9247:4;;9276:2;9499:15;;;;9473:2;9458:18;;;9247:4;9542:195;9556:6;9553:1;9550:13;9542:195;;;9621:13;;-1:-1:-1;;;;;9617:39:131;9605:52;;9712:15;;;;9677:12;;;;9653:1;9571:9;9542:195;;;-1:-1:-1;9754:3:131;;9105:658;-1:-1:-1;;;;;;9105:658:131:o;9768:469::-;9858:6;9866;9874;9927:2;9915:9;9906:7;9902:23;9898:32;9895:52;;;9943:1;9940;9933:12;9895:52;9982:9;9969:23;10001:31;10026:5;10001:31;:::i;:::-;10051:5;-1:-1:-1;10108:2:131;10093:18;;10080:32;10121:33;10080:32;10121:33;:::i;:::-;9768:469;;10173:7;;-1:-1:-1;;;10227:2:131;10212:18;;;;10199:32;;9768:469::o;10434:127::-;10495:10;10490:3;10486:20;10483:1;10476:31;10526:4;10523:1;10516:15;10550:4;10547:1;10540:15;10831:127;10892:10;10887:3;10883:20;10880:1;10873:31;10923:4;10920:1;10913:15;10947:4;10944:1;10937:15;10963:135;11002:3;11023:17;;;11020:43;;11043:18;;:::i;:::-;-1:-1:-1;11090:1:131;11079:13;;10963:135::o;11448:241::-;11504:6;11557:2;11545:9;11536:7;11532:23;11528:32;11525:52;;;11573:1;11570;11563:12;11525:52;11612:9;11599:23;11631:28;11653:5;11631:28;:::i;12169:184::-;12239:6;12292:2;12280:9;12271:7;12267:23;12263:32;12260:52;;;12308:1;12305;12298:12;12260:52;-1:-1:-1;12331:16:131;;12169:184;-1:-1:-1;12169:184:131:o;12710:779::-;12798:6;12851:3;12839:9;12830:7;12826:23;12822:33;12819:53;;;12868:1;12865;12858:12;12819:53;12894:17;;:::i;:::-;12934:43;12969:7;12958:9;12934:43;:::i;:::-;12927:5;12920:58;13012:35;13043:2;13032:9;13028:18;13012:35;:::i;:::-;13005:4;12998:5;12994:16;12987:61;13110:3;13099:9;13095:19;13082:33;13075:4;13068:5;13064:16;13057:59;13176:3;13165:9;13161:19;13148:33;13143:2;13136:5;13132:14;13125:57;13215:36;13246:3;13235:9;13231:19;13215:36;:::i;:::-;13209:3;13202:5;13198:15;13191:61;13285:36;13316:3;13305:9;13301:19;13285:36;:::i;:::-;13279:3;13268:15;;13261:61;13383:6;13368:22;;13355:36;13349:3;13338:15;;13331:61;13453:3;13438:19;;;13425:33;13419:3;13408:15;;13401:58;-1:-1:-1;13272:5:131;12710:779;-1:-1:-1;12710:779:131:o;13494:827::-;13780:3;13765:19;;13806:20;;13835:31;13806:20;13835:31;:::i;:::-;-1:-1:-1;;;;;13931:14:131;;;13913:33;;13995:4;13983:17;;13970:31;;14010:33;13970:31;14010:33;:::i;:::-;14081:16;14074:4;14059:20;;14052:46;14161:4;14149:17;;;14136:31;14114:20;;;14107:61;;;;14199:2;14184:18;;14177:34;;;;14242:3;14227:19;;14220:35;;;;14299:14;14292:22;14286:3;14271:19;;;14264:51;13494:827;:::o;14326:368::-;14423:6;14431;14439;14447;14500:3;14488:9;14479:7;14475:23;14471:33;14468:53;;;14517:1;14514;14507:12;14468:53;-1:-1:-1;;14540:16:131;;14596:2;14581:18;;14575:25;14640:2;14625:18;;14619:25;14684:2;14669:18;;;14663:25;14540:16;;14575:25;;-1:-1:-1;14663:25:131;;-1:-1:-1;14326:368:131;-1:-1:-1;14326:368:131:o;15789:128::-;15856:9;;;15877:11;;;15874:37;;;15891:18;;:::i;15922:125::-;15987:9;;;16008:10;;;16005:36;;;16021:18;;:::i;16052:224::-;16135:6;16188:2;16176:9;16167:7;16163:23;16159:32;16156:52;;;16204:1;16201;16194:12;16156:52;16227:43;16262:7;16251:9;16227:43;:::i;16839:348::-;17041:2;17023:21;;;17080:2;17060:18;;;17053:30;17119:26;17114:2;17099:18;;17092:54;17178:2;17163:18;;16839:348::o;18602:245::-;18669:6;18722:2;18710:9;18701:7;18697:23;18693:32;18690:52;;;18738:1;18735;18728:12;18690:52;18770:9;18764:16;18789:28;18811:5;18789:28;:::i;21076:136::-;21111:3;-1:-1:-1;;;21132:22:131;;21129:48;;21157:18;;:::i;:::-;-1:-1:-1;21197:1:131;21193:13;;21076:136::o;21217:258::-;21330:12;;-1:-1:-1;;;;;21326:21:131;;;21314:34;;21401:4;21390:16;;;21384:23;21380:32;;;21364:14;;;21357:56;21462:4;21451:16;;;21445:23;21429:14;;21422:47;21217:258::o;21480:314::-;21690:3;21675:19;;21703:42;21679:9;21727:6;21703:42;:::i;:::-;21781:6;21776:2;21765:9;21761:18;21754:34;21480:314;;;;;:::o;22371:242::-;22553:2;22538:18;;22565:42;22542:9;22589:6;22565:42;:::i;22618:300::-;22752:6;22760;22813:2;22801:9;22792:7;22788:23;22784:32;22781:52;;;22829:1;22826;22819:12;22781:52;-1:-1:-1;;22852:16:131;;22908:2;22893:18;;;22887:25;22852:16;;22887:25;;-1:-1:-1;22618:300:131:o;23145:349::-;23347:2;23329:21;;;23386:2;23366:18;;;23359:30;23425:27;23420:2;23405:18;;23398:55;23485:2;23470:18;;23145:349::o;23499:626::-;23845:3;23830:19;;23858:42;23834:9;23882:6;23858:42;:::i;:::-;23931:2;23916:18;;23909:34;;;;23974:3;23959:19;;23952:35;;;;24018:3;24003:19;;23996:35;;;;24062:3;24047:19;;24040:35;24106:3;24091:19;;;24084:35;23499:626;;-1:-1:-1;23499:626:131:o;24130:179::-;24165:3;24207:1;24189:16;24186:23;24183:120;;;24253:1;24250;24247;24232:23;-1:-1:-1;24290:1:131;24284:8;24279:3;24275:18;24183:120;24130:179;:::o;24314:671::-;24353:3;24395:4;24377:16;24374:26;24371:39;;;24314:671;:::o;24371:39::-;24437:2;24431:9;-1:-1:-1;;24502:16:131;24498:25;;24495:1;24431:9;24474:50;24553:4;24547:11;24577:16;24612:18;24683:2;24676:4;24668:6;24664:17;24661:25;24656:2;24648:6;24645:14;24642:45;24639:58;;;24690:5;;;;;24314:671;:::o;24639:58::-;24727:6;24721:4;24717:17;24706:28;;24763:3;24757:10;24790:2;24782:6;24779:14;24776:27;;;24796:5;;;;;;24314:671;:::o;24776:27::-;24880:2;24861:16;24855:4;24851:27;24847:36;24840:4;24831:6;24826:3;24822:16;24818:27;24815:69;24812:82;;;24887:5;;;;;;24314:671;:::o;24812:82::-;24903:57;24954:4;24945:6;24937;24933:19;24929:30;24923:4;24903:57;:::i;:::-;-1:-1:-1;24976:3:131;;24314:671;-1:-1:-1;;;;;24314:671:131:o;24990:250::-;25075:1;25085:113;25099:6;25096:1;25093:13;25085:113;;;25175:11;;;25169:18;25156:11;;;25149:39;25121:2;25114:10;25085:113;;;-1:-1:-1;;25232:1:131;25214:16;;25207:27;24990:250::o;25245:396::-;25394:2;25383:9;25376:21;25357:4;25426:6;25420:13;25469:6;25464:2;25453:9;25449:18;25442:34;25485:79;25557:6;25552:2;25541:9;25537:18;25532:2;25524:6;25520:15;25485:79;:::i;:::-;25625:2;25604:15;-1:-1:-1;;25600:29:131;25585:45;;;;25632:2;25581:54;;25245:396;-1:-1:-1;;25245:396:131:o;25646:297::-;25764:12;;25811:4;25800:16;;;25794:23;;25764:12;25829:16;;25826:111;;;-1:-1:-1;;25903:4:131;25899:17;;;;25896:1;25892:25;25888:38;25877:50;;25646:297;-1:-1:-1;25646:297:131:o;26882:396::-;27114:3;27099:19;;27127:42;27103:9;27151:6;27127:42;:::i;:::-;27205:6;27200:2;27189:9;27185:18;27178:34;27263:6;27256:14;27249:22;27243:3;27232:9;27228:19;27221:51;26882:396;;;;;;:::o;27634:168::-;27707:9;;;27738;;27755:15;;;27749:22;;27735:37;27725:71;;27776:18;;:::i;27807:188::-;-1:-1:-1;;;;;27920:10:131;;;27932;;;27916:27;;27955:11;;;27952:37;;;27969:18;;:::i;28711:554::-;29029:3;29014:19;;29042:42;29018:9;29066:6;29042:42;:::i;:::-;29120:6;29115:2;29104:9;29100:18;29093:34;29164:6;29158:3;29147:9;29143:19;29136:35;29208:6;29202:3;29191:9;29187:19;29180:35;29252:6;29246:3;29235:9;29231:19;29224:35;28711:554;;;;;;;;:::o;29625:127::-;29686:10;29681:3;29677:20;29674:1;29667:31;29717:4;29714:1;29707:15;29741:4;29738:1;29731:15;30036:287;30165:3;30203:6;30197:13;30219:66;30278:6;30273:3;30266:4;30258:6;30254:17;30219:66;:::i;:::-;30301:16;;;;;30036:287;-1:-1:-1;;30036:287:131:o;30680:216::-;30744:9;;;30772:11;;;30719:3;30802:9;;30830:10;;30826:19;;30855:10;;30847:19;;30823:44;30820:70;;;30870:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "81625": [
        {
          "start": 930,
          "length": 32
        },
        {
          "start": 4920,
          "length": 32
        },
        {
          "start": 4966,
          "length": 32
        }
      ],
      "81629": [
        {
          "start": 878,
          "length": 32
        },
        {
          "start": 1806,
          "length": 32
        },
        {
          "start": 2962,
          "length": 32
        },
        {
          "start": 3660,
          "length": 32
        },
        {
          "start": 3869,
          "length": 32
        },
        {
          "start": 4279,
          "length": 32
        },
        {
          "start": 4419,
          "length": 32
        },
        {
          "start": 5217,
          "length": 32
        },
        {
          "start": 6511,
          "length": 32
        },
        {
          "start": 7521,
          "length": 32
        },
        {
          "start": 7678,
          "length": 32
        },
        {
          "start": 8115,
          "length": 32
        },
        {
          "start": 8440,
          "length": 32
        },
        {
          "start": 8845,
          "length": 32
        },
        {
          "start": 9030,
          "length": 32
        },
        {
          "start": 9381,
          "length": 32
        },
        {
          "start": 10159,
          "length": 32
        },
        {
          "start": 10565,
          "length": 32
        },
        {
          "start": 12630,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "checkList(address[])": "03eb17e2",
    "expiring(bytes32,uint256)": "0479ab93",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "offerOwners(bytes32,uint256[])": "ceba7360",
    "ownerOf(bytes32,uint256)": "3a9dfae2",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "retractOffer((address,address,uint256),uint256,bool)": "6e7a5cb8",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setExpiry(bytes32,uint256,uint256)": "535f55ca",
    "setRouter(address)": "c0d78655",
    "take(((address,address,uint256),bool,int256,uint256,bool,bool,uint256,uint256))": "126490ee",
    "updateOffer((address,address,uint256),int256,uint256,uint256)": "400ee571",
    "withdrawFromMangrove(uint256,address)": "7144df24"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MangroveOrderComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fillOrKill\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"restingOrder\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"MangroveOrderStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"NewOwnedOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"SetExpiry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"expiring\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"offerIds\",\"type\":\"uint256[]\"}],\"name\":\"offerOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"offerOwners_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deprovision\",\"type\":\"bool\"}],\"name\":\"retractOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"freeWei\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"}],\"name\":\"setExpiry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"fillOrKill\",\"type\":\"bool\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"fillVolume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"restingOrder\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"internalType\":\"struct IOrderLogic.TakerOrder\",\"name\":\"tko\",\"type\":\"tuple\"}],\"name\":\"take\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"takerGot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGave\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"offerWriteData\",\"type\":\"bytes32\"}],\"internalType\":\"struct IOrderLogic.TakerOrderResult\",\"name\":\"res\",\"type\":\"tuple\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"updateOffer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"requiring no partial fill *and* a resting order is interpreted here as an instruction to revert if the resting order fails to be posted (e.g., if below density).\",\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"MangroveOrderStart(bytes32,address,bool,int256,uint256,bool,bool,uint256)\":{\"params\":{\"fillOrKill\":\"The fillOrKill that take was called with\",\"fillVolume\":\"the volume to fill. This is not needed for an indexer, as it can get it from the OrderStart event. It is only emitted for RPC calls.\",\"fillWants\":\"if true (buying), the market order stops when `fillVolume` units of `olKey.outbound_tkn` have been obtained (fee included); otherwise (selling), the market order stops when `fillVolume` units of `olKey.inbound_tkn` have been sold.\",\"offerId\":\"The optional offerId take was called with, 0 if not passed. This is not needed for an indexer. It is only emitted for RPC calls.\",\"olKeyHash\":\"the hash of the offer list key. This could be found by the OrderStart event, but is needed for RPC call. This is indexed so that RPC calls can filter on it.\",\"restingOrder\":\"The restingOrder boolean take was called with.\",\"taker\":\"The address of the taker. This could be found by the OrderStart event, but is needed for RPC call. This is indexed so that RPC calls can filter on it.\",\"tick\":\"The tick of the order. This is not needed for an indexer, as it can get it from the OrderStart event. It is only emitted for RPC calls.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"NewOwnedOffer(bytes32,uint256,address)\":{\"params\":{\"offerId\":\"the Mangrove offer id. This is indexed to allow RPC calls to filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed to allow RPC calls to filter on it.\",\"owner\":\"the offer maker that can manage the offer. It is indexed to allow RPC calls to filter on it.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetExpiry(bytes32,uint256,uint256)\":{\"params\":{\"date\":\"in seconds since unix epoch\",\"offerId\":\"the Mangrove offer id.\",\"olKeyHash\":\"the hash of the offer list key. It is indexed so RPC call can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"constructor\":{\"params\":{\"deployer\":\"The address of the admin of `this` at the end of deployment\",\"gasreq\":\"The gas required for `this` to execute `makerExecute` and `makerPosthook` when called by mangrove for a resting order.\",\"mgv\":\"The mangrove contract on which this logic will run taker and maker orders.\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"offerOwners(bytes32,uint256[])\":{\"details\":\"if `offerIds[i]==address(0)` if and only if this offer has no owner.\",\"params\":{\"offerIds\":\"an array of offer identifiers on the offer list.\",\"olKeyHash\":\"the hash of the offer list key.\"},\"returns\":{\"offerOwners_\":\"an array of the same length where the address at position i is the owner of `offerIds[i]`\"}},\"ownerOf(bytes32,uint256)\":{\"details\":\"`ownerOf(in,out,id)` is equivalent to `offerOwners(in, out, [id])` but more gas efficient.\",\"params\":{\"offerId\":\"the offer identifier on the offer list.\",\"olKeyHash\":\"the hash of the offer list key.\"},\"returns\":{\"owner\":\"the offer maker that can manage the offer.\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"retractOffer((address,address,uint256),uint256,bool)\":{\"details\":\"An offer that is retracted without `deprovision` is retracted from the offer list, but still has its provisions locked by Mangrove.Calling this function, with the `deprovision` flag, on an offer that is already retracted must be used to retrieve the locked provisions.\",\"params\":{\"deprovision\":\"if set to `true` if offer owner wishes to redeem the offer's provision.\",\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"freeWei\":\"the amount of native tokens (in WEI) that have been retrieved by retracting the offer.\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setExpiry(bytes32,uint256,uint256)\":{\"details\":\"We also allow Mangrove to call this so that it can part of an offer logic.\",\"params\":{\"date\":\"in seconds since unix epoch\",\"offerId\":\"The offer id whose expiry date is to be set.\",\"olKeyHash\":\"the hash of the offer list key.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"take(((address,address,uint256),bool,int256,uint256,bool,bool,uint256,uint256))\":{\"params\":{\"tko\":\"the arguments in memory of the taker order\"},\"returns\":{\"res\":\"the result of the taker order. If `offerId==0`, no resting order was posted on `msg.sender`'s behalf.\"}},\"updateOffer((address,address,uint256),int256,uint256,uint256)\":{\"details\":\"this can be used to update price of the resting order\",\"params\":{\"gives\":\"new amount of `olKey.outbound_tkn` offer owner gives\",\"offerId\":\"the id of the offer to be updated\",\"olKey\":\"the offer list key.\",\"tick\":\"the tick\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}}},\"stateVariables\":{\"expiring\":{\"details\":\"0 means no expiry.\"}},\"title\":\"MangroveOrder. A periphery contract to Mangrove protocol that implements \\\"Good till cancelled\\\" (GTC) orders as well as \\\"Fill or kill\\\" (FOK) orders.\",\"version\":1},\"userdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"MangroveOrderComplete()\":{\"notice\":\"Indicates that the MangroveOrder has been completed.We only emit this, so that an indexer can know that the order is completed and can thereby keep a correct context\"},\"MangroveOrderStart(bytes32,address,bool,int256,uint256,bool,bool,uint256)\":{\"notice\":\"Information about the order.By emitting this data, an indexer will be able to tell that we are in the context of an mangroveOrder and keep track of what parameters was use to start the order.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"NewOwnedOffer(bytes32,uint256,address)\":{\"notice\":\"Logging new offer ownerBy emitting this data, an indexer will be able to keep track of the real owner of an offer\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetExpiry(bytes32,uint256,uint256)\":{\"notice\":\"The expiry of the offer has been setBy emitting this data, an indexer will be able to keep track of the expiry date of an offer.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"}},\"kind\":\"user\",\"methods\":{\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"constructor\":{\"notice\":\"MangroveOrder is a Forwarder logic with a simple router.\"},\"expiring(bytes32,uint256)\":{\"notice\":\"`expiring[olKey.hash()][offerId]` gives timestamp beyond which `offerId` on the `olKey.(outbound_tkn, inbound_tkn, tickSpacing)` offer list should renege on trade.if the order tx is included after the expiry date, it reverts.\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"offerOwners(bytes32,uint256[])\":{\"notice\":\"view on offer owners.\"},\"ownerOf(bytes32,uint256)\":{\"notice\":\"view on an offer owner.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"retractOffer((address,address,uint256),uint256,bool)\":{\"notice\":\"Retracts an offer from an Offer List of Mangrove.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setExpiry(bytes32,uint256,uint256)\":{\"notice\":\"Updates the expiry date for a specific offer.\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"take(((address,address,uint256),bool,int256,uint256,bool,bool,uint256,uint256))\":{\"notice\":\"Implements \\\"Fill or kill\\\" or \\\"Good till cancelled\\\" orders on a given offer list.\"},\"updateOffer((address,address,uint256),int256,uint256,uint256)\":{\"notice\":\"updates an offer on Mangrove\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"}},\"notice\":\"A GTC order is a buy (sell) limit order complemented by a bid (ask) limit order, called a resting order, that occurs when the buy (sell) order was partially filled. If the GTC is for some amount $a_goal$ at a price $p$, and the corresponding limit order was partially filled for $a_now < a_goal$, the resting order should be posted for an amount $a_later = a_goal - a_now$ at price $p$.A FOK order is simply a buy or sell limit order that is either completely filled or cancelled. No resting order is posted.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOrder.sol\":\"MangroveOrder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOrder.sol\":{\"keccak256\":\"0x2b4866c48fdf9fd44fe30ad3c877729a95c3aeb6f29bba01f252715c49361bc3\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0ac2b01b2ec2359fe4548b6cf395fed347e82c894b6adda90ecb4d0a9863f33a\",\"dweb:/ipfs/Qmdbn1dMyGqtKD4sav9wVy8AkSrqSZSigdA1rzxcFL4JVY\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IForwarder.sol\":{\"keccak256\":\"0x022a3c4560a822ef2fa1173adab039daacc8b96e0ffa93f35fbbcb4894cbe2a7\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://60d13359ffdd8e2b8acfa808906bd531da3743e728ecc572ce23f68f2705e743\",\"dweb:/ipfs/QmR9qx7We2j8FJzGXK3GA5RPnDpK6gfs6G2i3ZyYFiKFrm\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOrderLogic.sol\":{\"keccak256\":\"0xe686dbe5d597dc5b40ca3f66a3666f76cafaa86e0bcde3f4ce2b418f881d98e9\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://d6da59d63e70c0cf018ddcf9e76cdff3785133905458f5ee56798eb58818a218\",\"dweb:/ipfs/QmVGwZUaNZ5aJb7rgWhdCxfCNBcXcyRst5KdJcVn8cfbFp\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_forwarder/abstract/Forwarder.sol\":{\"keccak256\":\"0x2407fe73896b7e0a9081a234d461decf57d0a8bec817d4b435e7f297b7913253\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://08c0f390879310cdcf330d2c8f65a45458a7b2d6a5e84ade8dc3037eaa453d7e\",\"dweb:/ipfs/QmTqwqoNRjAdgT9ii3G26kd3Lw1TZykzUCxqjhbNzHdbe2\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol\":{\"keccak256\":\"0x60f2462f860db516f3da0ae805b0e09bc986705f90304cd1e5bff61b6f5ae80d\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://541dd0a15bd39414a57a6b73117b21ac0057f2e258c5a516335887ea5fd3d9b2\",\"dweb:/ipfs/QmVtWJRw2DJ6cdhwqm7sRJkjnGPZz1cwWsEzd6j1JDAyxR\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol\":{\"keccak256\":\"0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066\",\"dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "MangroveOrderComplete",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "fillOrKill",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fillVolume",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "restingOrder",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MangroveOrderStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewOwnedOffer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetExpiry",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "expiring",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "offerIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerOwners",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "offerOwners_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "deprovision",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "freeWei",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "date",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExpiry"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "struct IOrderLogic.TakerOrder",
              "name": "tko",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "bool",
                  "name": "fillOrKill",
                  "type": "bool"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "fillVolume",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "fillWants",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "restingOrder",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "expiryDate",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "take",
          "outputs": [
            {
              "internalType": "struct IOrderLogic.TakerOrderResult",
              "name": "res",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "takerGot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGave",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "bounty",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "offerWriteData",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateOffer"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "constructor": {
            "params": {
              "deployer": "The address of the admin of `this` at the end of deployment",
              "gasreq": "The gas required for `this` to execute `makerExecute` and `makerPosthook` when called by mangrove for a resting order.",
              "mgv": "The mangrove contract on which this logic will run taker and maker orders."
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "offerOwners(bytes32,uint256[])": {
            "details": "if `offerIds[i]==address(0)` if and only if this offer has no owner.",
            "params": {
              "offerIds": "an array of offer identifiers on the offer list.",
              "olKeyHash": "the hash of the offer list key."
            },
            "returns": {
              "offerOwners_": "an array of the same length where the address at position i is the owner of `offerIds[i]`"
            }
          },
          "ownerOf(bytes32,uint256)": {
            "details": "`ownerOf(in,out,id)` is equivalent to `offerOwners(in, out, [id])` but more gas efficient.",
            "params": {
              "offerId": "the offer identifier on the offer list.",
              "olKeyHash": "the hash of the offer list key."
            },
            "returns": {
              "owner": "the offer maker that can manage the offer."
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "retractOffer((address,address,uint256),uint256,bool)": {
            "details": "An offer that is retracted without `deprovision` is retracted from the offer list, but still has its provisions locked by Mangrove.Calling this function, with the `deprovision` flag, on an offer that is already retracted must be used to retrieve the locked provisions.",
            "params": {
              "deprovision": "if set to `true` if offer owner wishes to redeem the offer's provision.",
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "freeWei": "the amount of native tokens (in WEI) that have been retrieved by retracting the offer."
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setExpiry(bytes32,uint256,uint256)": {
            "details": "We also allow Mangrove to call this so that it can part of an offer logic.",
            "params": {
              "date": "in seconds since unix epoch",
              "offerId": "The offer id whose expiry date is to be set.",
              "olKeyHash": "the hash of the offer list key."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "take(((address,address,uint256),bool,int256,uint256,bool,bool,uint256,uint256))": {
            "params": {
              "tko": "the arguments in memory of the taker order"
            },
            "returns": {
              "res": "the result of the taker order. If `offerId==0`, no resting order was posted on `msg.sender`'s behalf."
            }
          },
          "updateOffer((address,address,uint256),int256,uint256,uint256)": {
            "details": "this can be used to update price of the resting order",
            "params": {
              "gives": "new amount of `olKey.outbound_tkn` offer owner gives",
              "offerId": "the id of the offer to be updated",
              "olKey": "the offer list key.",
              "tick": "the tick"
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "constructor": {
            "notice": "MangroveOrder is a Forwarder logic with a simple router."
          },
          "expiring(bytes32,uint256)": {
            "notice": "`expiring[olKey.hash()][offerId]` gives timestamp beyond which `offerId` on the `olKey.(outbound_tkn, inbound_tkn, tickSpacing)` offer list should renege on trade.if the order tx is included after the expiry date, it reverts."
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "offerOwners(bytes32,uint256[])": {
            "notice": "view on offer owners."
          },
          "ownerOf(bytes32,uint256)": {
            "notice": "view on an offer owner."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "retractOffer((address,address,uint256),uint256,bool)": {
            "notice": "Retracts an offer from an Offer List of Mangrove."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setExpiry(bytes32,uint256,uint256)": {
            "notice": "Updates the expiry date for a specific offer."
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "take(((address,address,uint256),bool,int256,uint256,bool,bool,uint256,uint256))": {
            "notice": "Implements \"Fill or kill\" or \"Good till cancelled\" orders on a given offer list."
          },
          "updateOffer((address,address,uint256),int256,uint256,uint256)": {
            "notice": "updates an offer on Mangrove"
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOrder.sol": "MangroveOrder"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOrder.sol": {
        "keccak256": "0x2b4866c48fdf9fd44fe30ad3c877729a95c3aeb6f29bba01f252715c49361bc3",
        "urls": [
          "bzz-raw://0ac2b01b2ec2359fe4548b6cf395fed347e82c894b6adda90ecb4d0a9863f33a",
          "dweb:/ipfs/Qmdbn1dMyGqtKD4sav9wVy8AkSrqSZSigdA1rzxcFL4JVY"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IForwarder.sol": {
        "keccak256": "0x022a3c4560a822ef2fa1173adab039daacc8b96e0ffa93f35fbbcb4894cbe2a7",
        "urls": [
          "bzz-raw://60d13359ffdd8e2b8acfa808906bd531da3743e728ecc572ce23f68f2705e743",
          "dweb:/ipfs/QmR9qx7We2j8FJzGXK3GA5RPnDpK6gfs6G2i3ZyYFiKFrm"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOrderLogic.sol": {
        "keccak256": "0xe686dbe5d597dc5b40ca3f66a3666f76cafaa86e0bcde3f4ce2b418f881d98e9",
        "urls": [
          "bzz-raw://d6da59d63e70c0cf018ddcf9e76cdff3785133905458f5ee56798eb58818a218",
          "dweb:/ipfs/QmVGwZUaNZ5aJb7rgWhdCxfCNBcXcyRst5KdJcVn8cfbFp"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_forwarder/abstract/Forwarder.sol": {
        "keccak256": "0x2407fe73896b7e0a9081a234d461decf57d0a8bec817d4b435e7f297b7913253",
        "urls": [
          "bzz-raw://08c0f390879310cdcf330d2c8f65a45458a7b2d6a5e84ade8dc3037eaa453d7e",
          "dweb:/ipfs/QmTqwqoNRjAdgT9ii3G26kd3Lw1TZykzUCxqjhbNzHdbe2"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol": {
        "keccak256": "0x60f2462f860db516f3da0ae805b0e09bc986705f90304cd1e5bff61b6f5ae80d",
        "urls": [
          "bzz-raw://541dd0a15bd39414a57a6b73117b21ac0057f2e258c5a516335887ea5fd3d9b2",
          "dweb:/ipfs/QmVtWJRw2DJ6cdhwqm7sRJkjnGPZz1cwWsEzd6j1JDAyxR"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol": {
        "keccak256": "0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5",
        "urls": [
          "bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066",
          "dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOrder.sol",
    "id": 83082,
    "exportedSymbols": {
      "Forwarder": [
        84630
      ],
      "IERC20": [
        88
      ],
      "IMangrove": [
        54127
      ],
      "IOrderLogic": [
        83682
      ],
      "MangroveOffer": [
        82367
      ],
      "MangroveOrder": [
        83081
      ],
      "MgvLib": [
        55985
      ],
      "OLKey": [
        55875
      ],
      "SimpleRouter": [
        88231
      ],
      "Tick": [
        5280
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:15319:100",
    "nodes": [
      {
        "id": 82369,
        "nodeType": "PragmaDirective",
        "src": "41:24:100",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 82371,
        "nodeType": "ImportDirective",
        "src": "67:49:100",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
        "file": "@mgv/src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83082,
        "sourceUnit": 54128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82370,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54127,
              "src": "75:9:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82374,
        "nodeType": "ImportDirective",
        "src": "117:107:100",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_forwarder/abstract/Forwarder.sol",
        "file": "@mgv-strats/src/strategies/offer_forwarder/abstract/Forwarder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83082,
        "sourceUnit": 84631,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82372,
              "name": "Forwarder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 84630,
              "src": "125:9:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 82373,
              "name": "MangroveOffer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82367,
              "src": "136:13:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82376,
        "nodeType": "ImportDirective",
        "src": "225:82:100",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOrderLogic.sol",
        "file": "@mgv-strats/src/strategies/interfaces/IOrderLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83082,
        "sourceUnit": 83683,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82375,
              "name": "IOrderLogic",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83682,
              "src": "233:11:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82378,
        "nodeType": "ImportDirective",
        "src": "308:81:100",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol",
        "file": "@mgv-strats/src/strategies/routers/SimpleRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83082,
        "sourceUnit": 88232,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82377,
              "name": "SimpleRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88231,
              "src": "316:12:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82382,
        "nodeType": "ImportDirective",
        "src": "390:63:100",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83082,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82379,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55985,
              "src": "398:6:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 82380,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "406:6:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 82381,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "414:5:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 82384,
        "nodeType": "ImportDirective",
        "src": "454:47:100",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol",
        "file": "@mgv/lib/core/TickLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 83082,
        "sourceUnit": 6402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 82383,
              "name": "Tick",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5280,
              "src": "462:4:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 83081,
        "nodeType": "ContractDefinition",
        "src": "1372:13987:100",
        "nodes": [
          {
            "id": 82396,
            "nodeType": "VariableDeclaration",
            "src": "1707:82:100",
            "nodes": [],
            "baseFunctions": [
              83661
            ],
            "constant": false,
            "documentation": {
              "id": 82390,
              "nodeType": "StructuredDocumentation",
              "src": "1425:279:100",
              "text": "@notice `expiring[olKey.hash()][offerId]` gives timestamp beyond which `offerId` on the `olKey.(outbound_tkn, inbound_tkn, tickSpacing)` offer list should renege on trade.\n@notice if the order tx is included after the expiry date, it reverts.\n@dev 0 means no expiry."
            },
            "functionSelector": "0479ab93",
            "mutability": "mutable",
            "name": "expiring",
            "nameLocation": "1781:8:100",
            "scope": 83081,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
            },
            "typeName": {
              "id": 82395,
              "keyName": "olKeyHash",
              "keyNameLocation": "1723:9:100",
              "keyType": {
                "id": 82391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1715:7:100",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1707:66:100",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 82394,
                "keyName": "offerId",
                "keyNameLocation": "1749:7:100",
                "keyType": {
                  "id": 82392,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1744:4:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1736:36:100",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                  "typeString": "mapping(uint256 => uint256)"
                },
                "valueName": "expiry",
                "valueNameLocation": "1765:6:100",
                "valueType": {
                  "id": 82393,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1760:4:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 82441,
            "nodeType": "FunctionDefinition",
            "src": "2174:544:100",
            "nodes": [],
            "body": {
              "id": 82440,
              "nodeType": "Block",
              "src": "2275:443:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82420,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2422:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MangroveOrder_$83081",
                              "typeString": "contract MangroveOrder"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MangroveOrder_$83081",
                              "typeString": "contract MangroveOrder"
                            }
                          ],
                          "id": 82419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2414:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82418,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2414:7:100",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2414:13:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 82415,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81713,
                          "src": "2400:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                            "typeString": "function () view returns (contract AbstractRouter)"
                          }
                        },
                        "id": 82416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2400:8:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 82417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2409:4:100",
                      "memberName": "bind",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88498,
                      "src": "2400:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2400:28:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82423,
                  "nodeType": "ExpressionStatement",
                  "src": "2400:28:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82427,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82402,
                        "src": "2452:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 82424,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81713,
                          "src": "2434:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                            "typeString": "function () view returns (contract AbstractRouter)"
                          }
                        },
                        "id": 82425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:8:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 82426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2443:8:100",
                      "memberName": "setAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89840,
                      "src": "2434:17:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 82428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:27:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82429,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:27:100"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 82433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 82430,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2657:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 82431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2661:6:100",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2657:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 82432,
                      "name": "deployer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82402,
                      "src": "2671:8:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2657:22:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82439,
                  "nodeType": "IfStatement",
                  "src": "2653:61:100",
                  "trueBody": {
                    "id": 82438,
                    "nodeType": "Block",
                    "src": "2681:33:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 82435,
                              "name": "deployer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82402,
                              "src": "2698:8:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 82434,
                            "name": "setAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89840,
                            "src": "2689:8:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 82436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2689:18:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82437,
                        "nodeType": "ExpressionStatement",
                        "src": "2689:18:100"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 82397,
              "nodeType": "StructuredDocumentation",
              "src": "1794:377:100",
              "text": "@notice MangroveOrder is a Forwarder logic with a simple router.\n@param mgv The mangrove contract on which this logic will run taker and maker orders.\n@param deployer The address of the admin of `this` at the end of deployment\n@param gasreq The gas required for `this` to execute `makerExecute` and `makerPosthook` when called by mangrove for a resting order."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 82407,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82400,
                    "src": "2242:3:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 82410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2247:16:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleRouter_$88231_$",
                        "typeString": "function () returns (contract SimpleRouter)"
                      },
                      "typeName": {
                        "id": 82409,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 82408,
                          "name": "SimpleRouter",
                          "nameLocations": [
                            "2251:12:100"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88231,
                          "src": "2251:12:100"
                        },
                        "referencedDeclaration": 88231,
                        "src": "2251:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleRouter_$88231",
                          "typeString": "contract SimpleRouter"
                        }
                      }
                    },
                    "id": 82411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:18:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleRouter_$88231",
                      "typeString": "contract SimpleRouter"
                    }
                  },
                  {
                    "id": 82412,
                    "name": "gasreq",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82404,
                    "src": "2267:6:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 82413,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 82406,
                  "name": "Forwarder",
                  "nameLocations": [
                    "2232:9:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 84630,
                  "src": "2232:9:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "2232:42:100"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 82405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82400,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "2196:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82441,
                  "src": "2186:13:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 82399,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82398,
                      "name": "IMangrove",
                      "nameLocations": [
                        "2186:9:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "2186:9:100"
                    },
                    "referencedDeclaration": 54127,
                    "src": "2186:9:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82402,
                  "mutability": "mutable",
                  "name": "deployer",
                  "nameLocation": "2209:8:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82441,
                  "src": "2201:16:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2201:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82404,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "2224:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82441,
                  "src": "2219:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82403,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2185:46:100"
            },
            "returnParameters": {
              "id": 82414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2275:0:100"
            },
            "scope": 83081,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82470,
            "nodeType": "FunctionDefinition",
            "src": "2836:193:100",
            "nodes": [],
            "body": {
              "id": 82469,
              "nodeType": "Block",
              "src": "2937:92:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 82461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 82455,
                          "name": "expiring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82396,
                          "src": "2943:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                            "typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
                          }
                        },
                        "id": 82458,
                        "indexExpression": {
                          "id": 82456,
                          "name": "olKeyHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82444,
                          "src": "2952:9:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2943:19:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 82459,
                      "indexExpression": {
                        "id": 82457,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82446,
                        "src": "2963:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2943:28:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82460,
                      "name": "date",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82448,
                      "src": "2974:4:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2943:35:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82462,
                  "nodeType": "ExpressionStatement",
                  "src": "2943:35:100"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 82464,
                        "name": "olKeyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82444,
                        "src": "2999:9:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 82465,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82446,
                        "src": "3010:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 82466,
                        "name": "date",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82448,
                        "src": "3019:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 82463,
                      "name": "SetExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83651,
                      "src": "2989:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 82467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:35:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82468,
                  "nodeType": "EmitStatement",
                  "src": "2984:40:100"
                }
              ]
            },
            "baseFunctions": [
              83671
            ],
            "documentation": {
              "id": 82442,
              "nodeType": "StructuredDocumentation",
              "src": "2722:111:100",
              "text": "@inheritdoc IOrderLogic\n@dev We also allow Mangrove to call this so that it can part of an offer logic."
            },
            "functionSelector": "535f55ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 82451,
                    "name": "olKeyHash",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82444,
                    "src": "2917:9:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 82452,
                    "name": "offerId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82446,
                    "src": "2928:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 82453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 82450,
                  "name": "mgvOrOwner",
                  "nameLocations": [
                    "2906:10:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 83777,
                  "src": "2906:10:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "2906:30:100"
              }
            ],
            "name": "setExpiry",
            "nameLocation": "2845:9:100",
            "parameters": {
              "id": 82449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82444,
                  "mutability": "mutable",
                  "name": "olKeyHash",
                  "nameLocation": "2863:9:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82470,
                  "src": "2855:17:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 82443,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82446,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2879:7:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82470,
                  "src": "2874:12:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82445,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82448,
                  "mutability": "mutable",
                  "name": "date",
                  "nameLocation": "2893:4:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82470,
                  "src": "2888:9:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82447,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2888:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2854:44:100"
            },
            "returnParameters": {
              "id": 82454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2937:0:100"
            },
            "scope": 83081,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82538,
            "nodeType": "FunctionDefinition",
            "src": "3328:556:100",
            "nodes": [],
            "body": {
              "id": 82537,
              "nodeType": "Block",
              "src": "3470:414:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    82492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82492,
                      "mutability": "mutable",
                      "name": "args",
                      "nameLocation": "3493:4:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82537,
                      "src": "3476:21:100",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                        "typeString": "struct IOfferLogic.OfferArgs"
                      },
                      "typeName": {
                        "id": 82491,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 82490,
                          "name": "OfferArgs",
                          "nameLocations": [
                            "3476:9:100"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 83563,
                          "src": "3476:9:100"
                        },
                        "referencedDeclaration": 83563,
                        "src": "3476:9:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82493,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3476:21:100"
                },
                {
                  "expression": {
                    "id": 82499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82494,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3599:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 82496,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3604:4:100",
                      "memberName": "fund",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83560,
                      "src": "3599:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 82497,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3611:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 82498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3615:5:100",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3611:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3599:21:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82500,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:21:100"
                },
                {
                  "expression": {
                    "id": 82505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82501,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3688:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 82503,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3693:5:100",
                      "memberName": "olKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83549,
                      "src": "3688:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82504,
                      "name": "olKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82474,
                      "src": "3701:5:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "src": "3688:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "id": 82506,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:18:100"
                },
                {
                  "expression": {
                    "id": 82511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82507,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3712:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 82509,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3717:4:100",
                      "memberName": "tick",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83552,
                      "src": "3712:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82510,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82477,
                      "src": "3724:4:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      }
                    },
                    "src": "3712:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "id": 82512,
                  "nodeType": "ExpressionStatement",
                  "src": "3712:16:100"
                },
                {
                  "expression": {
                    "id": 82517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82513,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3734:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 82515,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3739:5:100",
                      "memberName": "gives",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83554,
                      "src": "3734:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82516,
                      "name": "gives",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82479,
                      "src": "3747:5:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3734:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82518,
                  "nodeType": "ExpressionStatement",
                  "src": "3734:18:100"
                },
                {
                  "expression": {
                    "id": 82524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82519,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3758:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 82521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3763:6:100",
                      "memberName": "gasreq",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83556,
                      "src": "3758:11:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 82522,
                        "name": "offerGasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          81733,
                          81767
                        ],
                        "referencedDeclaration": 81733,
                        "src": "3772:11:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 82523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3772:13:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:27:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 82525,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:27:100"
                },
                {
                  "expression": {
                    "id": 82530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 82526,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3791:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 82528,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3796:8:100",
                      "memberName": "noRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83562,
                      "src": "3791:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 82529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3807:5:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3791:21:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82531,
                  "nodeType": "ExpressionStatement",
                  "src": "3791:21:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82533,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82492,
                        "src": "3865:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      {
                        "id": 82534,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82481,
                        "src": "3871:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 82532,
                      "name": "_updateOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        84310
                      ],
                      "referencedDeclaration": 84310,
                      "src": "3852:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (struct IOfferLogic.OfferArgs memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 82535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3852:27:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 82536,
                  "nodeType": "ExpressionStatement",
                  "src": "3852:27:100"
                }
              ]
            },
            "documentation": {
              "id": 82471,
              "nodeType": "StructuredDocumentation",
              "src": "3033:292:100",
              "text": "@notice updates an offer on Mangrove\n@dev this can be used to update price of the resting order\n@param olKey the offer list key.\n@param tick the tick\n@param gives new amount of `olKey.outbound_tkn` offer owner gives\n@param offerId the id of the offer to be updated"
            },
            "functionSelector": "400ee571",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82484,
                        "name": "olKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82474,
                        "src": "3445:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      "id": 82485,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3451:4:100",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55889,
                      "src": "3445:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                        "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                      }
                    },
                    "id": 82486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:12:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 82487,
                    "name": "offerId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82481,
                    "src": "3459:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 82488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 82483,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3435:9:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 83746,
                  "src": "3435:9:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "3435:32:100"
              }
            ],
            "name": "updateOffer",
            "nameLocation": "3337:11:100",
            "parameters": {
              "id": 82482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82474,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "3362:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82538,
                  "src": "3349:18:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 82473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82472,
                      "name": "OLKey",
                      "nameLocations": [
                        "3349:5:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "3349:5:100"
                    },
                    "referencedDeclaration": 55875,
                    "src": "3349:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82477,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "3374:4:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82538,
                  "src": "3369:9:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 82476,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82475,
                      "name": "Tick",
                      "nameLocations": [
                        "3369:4:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "3369:4:100"
                    },
                    "referencedDeclaration": 5280,
                    "src": "3369:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82479,
                  "mutability": "mutable",
                  "name": "gives",
                  "nameLocation": "3385:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82538,
                  "src": "3380:10:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82478,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3380:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82481,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "3397:7:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82538,
                  "src": "3392:12:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82480,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3348:57:100"
            },
            "returnParameters": {
              "id": 82489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3470:0:100"
            },
            "scope": 83081,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82564,
            "nodeType": "FunctionDefinition",
            "src": "4549:212:100",
            "nodes": [],
            "body": {
              "id": 82563,
              "nodeType": "Block",
              "src": "4701:60:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82558,
                        "name": "olKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82542,
                        "src": "4728:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "id": 82559,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82544,
                        "src": "4735:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 82560,
                        "name": "deprovision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82546,
                        "src": "4744:11:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82557,
                      "name": "_retractOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84418,
                      "src": "4714:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 82561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4714:42:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 82556,
                  "id": 82562,
                  "nodeType": "Return",
                  "src": "4707:49:100"
                }
              ]
            },
            "documentation": {
              "id": 82539,
              "nodeType": "StructuredDocumentation",
              "src": "3888:658:100",
              "text": "@notice Retracts an offer from an Offer List of Mangrove.\n@param olKey the offer list key.\n@param offerId the identifier of the offer in the offer list\n@param deprovision if set to `true` if offer owner wishes to redeem the offer's provision.\n@return freeWei the amount of native tokens (in WEI) that have been retrieved by retracting the offer.\n@dev An offer that is retracted without `deprovision` is retracted from the offer list, but still has its provisions locked by Mangrove.\n@dev Calling this function, with the `deprovision` flag, on an offer that is already retracted must be used to retrieve the locked provisions."
            },
            "functionSelector": "6e7a5cb8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 82549,
                        "name": "olKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82542,
                        "src": "4649:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      "id": 82550,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4655:4:100",
                      "memberName": "hash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55889,
                      "src": "4649:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                        "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                      }
                    },
                    "id": 82551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4649:12:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "id": 82552,
                    "name": "offerId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82544,
                    "src": "4663:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 82553,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 82548,
                  "name": "mgvOrOwner",
                  "nameLocations": [
                    "4638:10:100"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 83777,
                  "src": "4638:10:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "4638:33:100"
              }
            ],
            "name": "retractOffer",
            "nameLocation": "4558:12:100",
            "parameters": {
              "id": 82547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82542,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "4584:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82564,
                  "src": "4571:18:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 82541,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82540,
                      "name": "OLKey",
                      "nameLocations": [
                        "4571:5:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "4571:5:100"
                    },
                    "referencedDeclaration": 55875,
                    "src": "4571:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82544,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "4596:7:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82564,
                  "src": "4591:12:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82543,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4591:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82546,
                  "mutability": "mutable",
                  "name": "deprovision",
                  "nameLocation": "4610:11:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82564,
                  "src": "4605:16:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82545,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4605:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4570:52:100"
            },
            "returnParameters": {
              "id": 82556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82555,
                  "mutability": "mutable",
                  "name": "freeWei",
                  "nameLocation": "4690:7:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82564,
                  "src": "4685:12:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82554,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4684:14:100"
            },
            "scope": 83081,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 82604,
            "nodeType": "FunctionDefinition",
            "src": "4893:273:100",
            "nodes": [],
            "body": {
              "id": 82603,
              "nodeType": "Block",
              "src": "4994:172:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    82575
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82575,
                      "mutability": "mutable",
                      "name": "exp",
                      "nameLocation": "5005:3:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82603,
                      "src": "5000:8:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82574,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5000:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82585,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 82576,
                        "name": "expiring",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82396,
                        "src": "5011:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
                        }
                      },
                      "id": 82581,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 82577,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82568,
                              "src": "5020:5:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                "typeString": "struct MgvLib.SingleOrder calldata"
                              }
                            },
                            "id": 82578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5026:5:100",
                            "memberName": "olKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55950,
                            "src": "5020:11:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                              "typeString": "struct OLKey calldata"
                            }
                          },
                          "id": 82579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5032:4:100",
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55889,
                          "src": "5020:16:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                            "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                          }
                        },
                        "id": 82580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5020:18:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5011:28:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 82584,
                    "indexExpression": {
                      "expression": {
                        "id": 82582,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82568,
                        "src": "5040:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      },
                      "id": 82583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5046:7:100",
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55952,
                      "src": "5040:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5011:43:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5000:54:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 82594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 82587,
                            "name": "exp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82575,
                            "src": "5068:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 82588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5075:1:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5068:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 82590,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5080:5:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 82591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5086:9:100",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5080:15:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 82592,
                            "name": "exp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82575,
                            "src": "5099:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5080:22:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5068:34:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67764f726465722f65787069726564",
                        "id": 82595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5104:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd946335b65b227a3e7e922413adf1f4f4e0f276e9a67778307a0740916c6daf",
                          "typeString": "literal_string \"mgvOrder/expired\""
                        },
                        "value": "mgvOrder/expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd946335b65b227a3e7e922413adf1f4f4e0f276e9a67778307a0740916c6daf",
                          "typeString": "literal_string \"mgvOrder/expired\""
                        }
                      ],
                      "id": 82586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5060:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5060:63:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82597,
                  "nodeType": "ExpressionStatement",
                  "src": "5060:63:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82600,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82568,
                        "src": "5155:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      ],
                      "expression": {
                        "id": 82598,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "5136:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_MangroveOrder_$83081_$",
                          "typeString": "type(contract super MangroveOrder)"
                        }
                      },
                      "id": 82599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5142:12:100",
                      "memberName": "__lastLook__",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82188,
                      "src": "5136:18:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata) returns (bytes32)"
                      }
                    },
                    "id": 82601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5136:25:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 82573,
                  "id": 82602,
                  "nodeType": "Return",
                  "src": "5129:32:100"
                }
              ]
            },
            "baseFunctions": [
              82188
            ],
            "documentation": {
              "id": 82565,
              "nodeType": "StructuredDocumentation",
              "src": "4765:125:100",
              "text": "Checks the current timestamps and reneges on trade (by reverting) if the offer has expired.\n@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__lastLook__",
            "nameLocation": "4902:12:100",
            "overrides": {
              "id": 82570,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4967:8:100"
            },
            "parameters": {
              "id": 82569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82568,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4943:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82604,
                  "src": "4915:33:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 82567,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82566,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "4915:6:100",
                        "4922:11:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "4915:18:100"
                    },
                    "referencedDeclaration": 55969,
                    "src": "4915:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4914:35:100"
            },
            "returnParameters": {
              "id": 82573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82604,
                  "src": "4985:7:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 82571,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4985:7:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4984:9:100"
            },
            "scope": 83081,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 82637,
            "nodeType": "FunctionDefinition",
            "src": "5423:611:100",
            "nodes": [],
            "body": {
              "id": 82636,
              "nodeType": "Block",
              "src": "5533:501:100",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "expression": {
                      "id": 82616,
                      "name": "tko",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82608,
                      "src": "5643:3:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder calldata"
                      }
                    },
                    "id": 82617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5647:9:100",
                    "memberName": "fillWants",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83598,
                    "src": "5643:13:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 82634,
                    "nodeType": "Block",
                    "src": "5867:163:100",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 82628,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82611,
                              "src": "5992:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrderResult memory"
                              }
                            },
                            "id": 82629,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5996:9:100",
                            "memberName": "takerGave",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83610,
                            "src": "5992:13:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 82630,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82608,
                              "src": "6009:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder calldata"
                              }
                            },
                            "id": 82631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6013:10:100",
                            "memberName": "fillVolume",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83596,
                            "src": "6009:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5992:31:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 82615,
                        "id": 82633,
                        "nodeType": "Return",
                        "src": "5985:38:100"
                      }
                    ]
                  },
                  "id": 82635,
                  "nodeType": "IfStatement",
                  "src": "5639:391:100",
                  "trueBody": {
                    "id": 82627,
                    "nodeType": "Block",
                    "src": "5658:203:100",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 82622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 82618,
                                "name": "res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82611,
                                "src": "5814:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                }
                              },
                              "id": 82619,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5818:8:100",
                              "memberName": "takerGot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83608,
                              "src": "5814:12:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "id": 82620,
                                "name": "res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82611,
                                "src": "5829:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                }
                              },
                              "id": 82621,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5833:3:100",
                              "memberName": "fee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83614,
                              "src": "5829:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5814:22:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 82623,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82608,
                              "src": "5840:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder calldata"
                              }
                            },
                            "id": 82624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5844:10:100",
                            "memberName": "fillVolume",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83596,
                            "src": "5840:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5814:40:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 82615,
                        "id": 82626,
                        "nodeType": "Return",
                        "src": "5807:47:100"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 82605,
              "nodeType": "StructuredDocumentation",
              "src": "5170:250:100",
              "text": "@notice compares a taker order with a market order result and checks whether the order was entirely filled\n@param tko the taker order\n@param res the market order result\n@return true if the order was entirely filled, false otherwise."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkCompleteness",
            "nameLocation": "5432:17:100",
            "parameters": {
              "id": 82612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82608,
                  "mutability": "mutable",
                  "name": "tko",
                  "nameLocation": "5470:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82637,
                  "src": "5450:23:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                    "typeString": "struct IOrderLogic.TakerOrder"
                  },
                  "typeName": {
                    "id": 82607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82606,
                      "name": "TakerOrder",
                      "nameLocations": [
                        "5450:10:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83605,
                      "src": "5450:10:100"
                    },
                    "referencedDeclaration": 83605,
                    "src": "5450:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$83605_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82611,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "5499:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82637,
                  "src": "5475:27:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                    "typeString": "struct IOrderLogic.TakerOrderResult"
                  },
                  "typeName": {
                    "id": 82610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82609,
                      "name": "TakerOrderResult",
                      "nameLocations": [
                        "5475:16:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83619,
                      "src": "5475:16:100"
                    },
                    "referencedDeclaration": 83619,
                    "src": "5475:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5449:54:100"
            },
            "returnParameters": {
              "id": 82615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 82637,
                  "src": "5527:4:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5526:6:100"
            },
            "scope": 83081,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 82854,
            "nodeType": "FunctionDefinition",
            "src": "6067:5603:100",
            "nodes": [],
            "body": {
              "id": 82853,
              "nodeType": "Block",
              "src": "6161:5509:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 82657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 82648,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82641,
                              "src": "6216:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder calldata"
                              }
                            },
                            "id": 82649,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6220:10:100",
                            "memberName": "expiryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83602,
                            "src": "6216:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 82650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6234:1:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6216:19:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 82652,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "6239:5:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 82653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6245:9:100",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6239:15:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 82654,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82641,
                              "src": "6258:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder calldata"
                              }
                            },
                            "id": 82655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6262:10:100",
                            "memberName": "expiryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83602,
                            "src": "6258:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6239:33:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6216:56:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67764f726465722f65787069726564",
                        "id": 82658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6274:18:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd946335b65b227a3e7e922413adf1f4f4e0f276e9a67778307a0740916c6daf",
                          "typeString": "literal_string \"mgvOrder/expired\""
                        },
                        "value": "mgvOrder/expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd946335b65b227a3e7e922413adf1f4f4e0f276e9a67778307a0740916c6daf",
                          "typeString": "literal_string \"mgvOrder/expired\""
                        }
                      ],
                      "id": 82647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6208:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6208:85:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82660,
                  "nodeType": "ExpressionStatement",
                  "src": "6208:85:100"
                },
                {
                  "assignments": [
                    82662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82662,
                      "mutability": "mutable",
                      "name": "takerGives",
                      "nameLocation": "7034:10:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82853,
                      "src": "7029:15:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82661,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7029:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82674,
                  "initialValue": {
                    "condition": {
                      "expression": {
                        "id": 82663,
                        "name": "tko",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82641,
                        "src": "7047:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      },
                      "id": 82664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7051:9:100",
                      "memberName": "fillWants",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83598,
                      "src": "7047:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 82671,
                        "name": "tko",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82641,
                        "src": "7112:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      },
                      "id": 82672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7116:10:100",
                      "memberName": "fillVolume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83596,
                      "src": "7112:14:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 82673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7047:79:100",
                    "trueExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 82668,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "7094:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7098:10:100",
                          "memberName": "fillVolume",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83596,
                          "src": "7094:14:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 82665,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "7063:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7067:4:100",
                          "memberName": "tick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83594,
                          "src": "7063:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          }
                        },
                        "id": 82667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7072:21:100",
                        "memberName": "inboundFromOutboundUp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5397,
                        "src": "7063:30:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Tick_$5280_$",
                          "typeString": "function (Tick,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 82670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7063:46:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7029:97:100"
                },
                {
                  "assignments": [
                    82676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82676,
                      "mutability": "mutable",
                      "name": "pulled",
                      "nameLocation": "7137:6:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82853,
                      "src": "7132:11:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82675,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7132:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82690,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 82681,
                                "name": "tko",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82641,
                                "src": "7167:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrder calldata"
                                }
                              },
                              "id": 82682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7171:5:100",
                              "memberName": "olKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83589,
                              "src": "7167:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                "typeString": "struct OLKey calldata"
                              }
                            },
                            "id": 82683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7177:11:100",
                            "memberName": "inbound_tkn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55872,
                            "src": "7167:21:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 82680,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "7160:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 82684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7160:29:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 82685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7191:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 82686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7195:6:100",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7191:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 82687,
                        "name": "takerGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82662,
                        "src": "7203:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 82688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7215:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 82677,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81713,
                          "src": "7146:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                            "typeString": "function () view returns (contract AbstractRouter)"
                          }
                        },
                        "id": 82678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7146:8:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 82679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7155:4:100",
                      "memberName": "pull",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88366,
                      "src": "7146:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,uint256,bool) external returns (uint256)"
                      }
                    },
                    "id": 82689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7146:74:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7132:88:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 82694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 82692,
                          "name": "pulled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82676,
                          "src": "7234:6:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 82693,
                          "name": "takerGives",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82662,
                          "src": "7244:10:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7234:20:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67764f726465722f7472616e73666572496e4661696c",
                        "id": 82695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7256:25:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee6c550f9727867afd2f01e3d5fbc8e43d0ffbe3001c39e4ab2b9eb67747843b",
                          "typeString": "literal_string \"mgvOrder/transferInFail\""
                        },
                        "value": "mgvOrder/transferInFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee6c550f9727867afd2f01e3d5fbc8e43d0ffbe3001c39e4ab2b9eb67747843b",
                          "typeString": "literal_string \"mgvOrder/transferInFail\""
                        }
                      ],
                      "id": 82691,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7226:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7226:56:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82697,
                  "nodeType": "ExpressionStatement",
                  "src": "7226:56:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 82699,
                        "name": "tko",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82641,
                        "src": "7443:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      ],
                      "id": 82698,
                      "name": "logOrderData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82883,
                      "src": "7430:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TakerOrder_$83605_memory_ptr_$returns$__$",
                        "typeString": "function (struct IOrderLogic.TakerOrder memory)"
                      }
                    },
                    "id": 82700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7430:17:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82701,
                  "nodeType": "ExpressionStatement",
                  "src": "7430:17:100"
                },
                {
                  "expression": {
                    "id": 82723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 82702,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82645,
                            "src": "7455:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 82704,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7459:8:100",
                          "memberName": "takerGot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83608,
                          "src": "7455:12:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 82705,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82645,
                            "src": "7469:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 82706,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7473:9:100",
                          "memberName": "takerGave",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83610,
                          "src": "7469:13:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 82707,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82645,
                            "src": "7484:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 82708,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7488:6:100",
                          "memberName": "bounty",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83612,
                          "src": "7484:10:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 82709,
                            "name": "res",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82645,
                            "src": "7496:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                              "typeString": "struct IOrderLogic.TakerOrderResult memory"
                            }
                          },
                          "id": 82710,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "7500:3:100",
                          "memberName": "fee",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83614,
                          "src": "7496:7:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 82711,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7454:50:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 82714,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "7543:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7547:5:100",
                          "memberName": "olKey",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83589,
                          "src": "7543:9:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                            "typeString": "struct OLKey calldata"
                          }
                        },
                        {
                          "expression": {
                            "id": 82716,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "7563:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7567:4:100",
                          "memberName": "tick",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83594,
                          "src": "7563:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          }
                        },
                        {
                          "expression": {
                            "id": 82718,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "7585:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7589:10:100",
                          "memberName": "fillVolume",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83596,
                          "src": "7585:14:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 82720,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "7612:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7616:9:100",
                          "memberName": "fillWants",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83598,
                          "src": "7612:13:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                            "typeString": "struct OLKey calldata"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 82712,
                          "name": "MGV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81629,
                          "src": "7513:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$54127",
                            "typeString": "contract IMangrove"
                          }
                        },
                        "id": 82713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7517:17:100",
                        "memberName": "marketOrderByTick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53596,
                        "src": "7513:21:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_bool_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,Tick,uint256,bool) external returns (uint256,uint256,uint256,uint256)"
                        }
                      },
                      "id": 82722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "7536:5:100",
                        "7554:7:100",
                        "7573:10:100",
                        "7601:9:100"
                      ],
                      "names": [
                        "olKey",
                        "maxTick",
                        "fillVolume",
                        "fillWants"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "7513:114:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256,uint256,uint256)"
                      }
                    },
                    "src": "7454:173:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82724,
                  "nodeType": "ExpressionStatement",
                  "src": "7454:173:100"
                },
                {
                  "assignments": [
                    82726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82726,
                      "mutability": "mutable",
                      "name": "isComplete",
                      "nameLocation": "7825:10:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82853,
                      "src": "7820:15:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 82725,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7820:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82731,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 82728,
                        "name": "tko",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82641,
                        "src": "7856:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      },
                      {
                        "id": 82729,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82645,
                        "src": "7861:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult memory"
                        }
                      ],
                      "id": 82727,
                      "name": "checkCompleteness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82637,
                      "src": "7838:17:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_TakerOrder_$83605_calldata_ptr_$_t_struct$_TakerOrderResult_$83619_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct IOrderLogic.TakerOrder calldata,struct IOrderLogic.TakerOrderResult memory) pure returns (bool)"
                      }
                    },
                    "id": 82730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7838:27:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7820:45:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 82740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 82737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 82735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "8115:15:100",
                            "subExpression": {
                              "expression": {
                                "id": 82733,
                                "name": "tko",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82641,
                                "src": "8116:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrder calldata"
                                }
                              },
                              "id": 82734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8120:10:100",
                              "memberName": "fillOrKill",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83591,
                              "src": "8116:14:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "id": 82736,
                            "name": "isComplete",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82726,
                            "src": "8134:10:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8115:29:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "expression": {
                            "id": 82738,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82641,
                            "src": "8148:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8152:12:100",
                          "memberName": "restingOrder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83600,
                          "src": "8148:16:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8115:49:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d67764f726465722f7061727469616c46696c6c",
                        "id": 82741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8166:22:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65a20e5356d993c8161e3e9a94d45ce686b997d9ca8a65c7e4ab5d1603a46525",
                          "typeString": "literal_string \"mgvOrder/partialFill\""
                        },
                        "value": "mgvOrder/partialFill"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_65a20e5356d993c8161e3e9a94d45ce686b997d9ca8a65c7e4ab5d1603a46525",
                          "typeString": "literal_string \"mgvOrder/partialFill\""
                        }
                      ],
                      "id": 82732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8107:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 82742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8107:82:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82743,
                  "nodeType": "ExpressionStatement",
                  "src": "8107:82:100"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 82744,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82645,
                        "src": "8299:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult memory"
                        }
                      },
                      "id": 82745,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8303:8:100",
                      "memberName": "takerGot",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83608,
                      "src": "8299:12:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 82746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8314:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8299:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82769,
                  "nodeType": "IfStatement",
                  "src": "8295:172:100",
                  "trueBody": {
                    "id": 82768,
                    "nodeType": "Block",
                    "src": "8317:150:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 82753,
                                            "name": "tko",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 82641,
                                            "src": "8363:3:100",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                                            }
                                          },
                                          "id": 82754,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8367:5:100",
                                          "memberName": "olKey",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 83589,
                                          "src": "8363:9:100",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                            "typeString": "struct OLKey calldata"
                                          }
                                        },
                                        "id": 82755,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8373:12:100",
                                        "memberName": "outbound_tkn",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 55870,
                                        "src": "8363:22:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 82752,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88,
                                      "src": "8356:6:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 82756,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8356:30:100",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$88",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 82757,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8388:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 82758,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8392:6:100",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8388:10:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 82759,
                                      "name": "res",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82645,
                                      "src": "8400:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                        "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                      }
                                    },
                                    "id": 82760,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8404:8:100",
                                    "memberName": "takerGot",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83608,
                                    "src": "8400:12:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$88",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 82749,
                                      "name": "router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81713,
                                      "src": "8342:6:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                                        "typeString": "function () view returns (contract AbstractRouter)"
                                      }
                                    },
                                    "id": 82750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8342:8:100",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                      "typeString": "contract AbstractRouter"
                                    }
                                  },
                                  "id": 82751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8351:4:100",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 88412,
                                  "src": "8342:13:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,address,uint256) external returns (uint256)"
                                  }
                                },
                                "id": 82761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8342:71:100",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 82762,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82645,
                                  "src": "8417:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 82763,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8421:8:100",
                                "memberName": "takerGot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 83608,
                                "src": "8417:12:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8342:87:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d67764f726465722f707573684661696c6564",
                              "id": 82765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8431:21:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a860a93d5dd613bdb104bef9d221d9b300c1076508c621dcc57e849e62ec1a22",
                                "typeString": "literal_string \"mgvOrder/pushFailed\""
                              },
                              "value": "mgvOrder/pushFailed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a860a93d5dd613bdb104bef9d221d9b300c1076508c621dcc57e849e62ec1a22",
                                "typeString": "literal_string \"mgvOrder/pushFailed\""
                              }
                            ],
                            "id": 82748,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8325:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 82766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8325:135:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82767,
                        "nodeType": "ExpressionStatement",
                        "src": "8325:135:100"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    82771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82771,
                      "mutability": "mutable",
                      "name": "inboundLeft",
                      "nameLocation": "8477:11:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82853,
                      "src": "8472:16:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82770,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8472:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82776,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 82772,
                      "name": "takerGives",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82662,
                      "src": "8491:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "expression": {
                        "id": 82773,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82645,
                        "src": "8504:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult memory"
                        }
                      },
                      "id": 82774,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8508:9:100",
                      "memberName": "takerGave",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83610,
                      "src": "8504:13:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8491:26:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8472:45:100"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 82777,
                      "name": "inboundLeft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82771,
                      "src": "8527:11:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 82778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8541:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8527:15:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82799,
                  "nodeType": "IfStatement",
                  "src": "8523:168:100",
                  "trueBody": {
                    "id": 82798,
                    "nodeType": "Block",
                    "src": "8544:147:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 82794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 82785,
                                            "name": "tko",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 82641,
                                            "src": "8590:3:100",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                                            }
                                          },
                                          "id": 82786,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "8594:5:100",
                                          "memberName": "olKey",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 83589,
                                          "src": "8590:9:100",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                            "typeString": "struct OLKey calldata"
                                          }
                                        },
                                        "id": 82787,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8600:11:100",
                                        "memberName": "inbound_tkn",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 55872,
                                        "src": "8590:21:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 82784,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88,
                                      "src": "8583:6:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 82788,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8583:29:100",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$88",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 82789,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8614:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 82790,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8618:6:100",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8614:10:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 82791,
                                    "name": "inboundLeft",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82771,
                                    "src": "8626:11:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$88",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 82781,
                                      "name": "router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81713,
                                      "src": "8569:6:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                                        "typeString": "function () view returns (contract AbstractRouter)"
                                      }
                                    },
                                    "id": 82782,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8569:8:100",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                      "typeString": "contract AbstractRouter"
                                    }
                                  },
                                  "id": 82783,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8578:4:100",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 88412,
                                  "src": "8569:13:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,address,uint256) external returns (uint256)"
                                  }
                                },
                                "id": 82792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8569:69:100",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 82793,
                                "name": "inboundLeft",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82771,
                                "src": "8642:11:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8569:84:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d67764f726465722f707573684661696c6564",
                              "id": 82795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8655:21:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a860a93d5dd613bdb104bef9d221d9b300c1076508c621dcc57e849e62ec1a22",
                                "typeString": "literal_string \"mgvOrder/pushFailed\""
                              },
                              "value": "mgvOrder/pushFailed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a860a93d5dd613bdb104bef9d221d9b300c1076508c621dcc57e849e62ec1a22",
                                "typeString": "literal_string \"mgvOrder/pushFailed\""
                              }
                            ],
                            "id": 82780,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8552:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 82796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8552:132:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82797,
                        "nodeType": "ExpressionStatement",
                        "src": "8552:132:100"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    82802
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82802,
                      "mutability": "mutable",
                      "name": "fund",
                      "nameLocation": "9378:4:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 82853,
                      "src": "9373:9:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82801,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9373:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev collected bounty compensates gas consumption for the failed offer, but could be lower than the cost of an additional native token transfer\n instead of sending the bounty back to `msg.sender` we recycle it into the resting order's provision (so `msg.sender` can retrieve it when deprovisioning).\n corner case: if the bounty is large enough, this will make posting of the resting order fail because of `gasprice` overflow.\n The funds will then be sent back to `msg.sender` (see below).",
                  "id": 82808,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 82803,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9385:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 82804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9389:5:100",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "9385:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "expression": {
                        "id": 82805,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82645,
                        "src": "9397:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult memory"
                        }
                      },
                      "id": 82806,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9401:6:100",
                      "memberName": "bounty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83612,
                      "src": "9397:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9385:22:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9373:34:100"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 82813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 82809,
                        "name": "tko",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82641,
                        "src": "9446:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      },
                      "id": 82810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9450:12:100",
                      "memberName": "restingOrder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83600,
                      "src": "9446:16:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 82812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "9486:11:100",
                      "subExpression": {
                        "id": 82811,
                        "name": "isComplete",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82726,
                        "src": "9487:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9446:51:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82827,
                  "nodeType": "IfStatement",
                  "src": "9414:1224:100",
                  "trueBody": {
                    "id": 82826,
                    "nodeType": "Block",
                    "src": "9514:1124:100",
                    "statements": [
                      {
                        "expression": {
                          "id": 82824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 82814,
                            "name": "fund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82802,
                            "src": "9869:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 82816,
                                "name": "tko",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82641,
                                "src": "9899:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrder calldata"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "expression": {
                                      "id": 82817,
                                      "name": "tko",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82641,
                                      "src": "9911:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                        "typeString": "struct IOrderLogic.TakerOrder calldata"
                                      }
                                    },
                                    "id": 82818,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9915:5:100",
                                    "memberName": "olKey",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83589,
                                    "src": "9911:9:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                      "typeString": "struct OLKey calldata"
                                    }
                                  },
                                  "id": 82819,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9921:7:100",
                                  "memberName": "flipped",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55908,
                                  "src": "9911:17:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_struct$_OLKey_$55875_memory_ptr_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                                    "typeString": "function (struct OLKey memory) pure returns (struct OLKey memory)"
                                  }
                                },
                                "id": 82820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9911:19:100",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                  "typeString": "struct OLKey memory"
                                }
                              },
                              {
                                "id": 82821,
                                "name": "res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82645,
                                "src": "9937:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                }
                              },
                              {
                                "id": 82822,
                                "name": "fund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82802,
                                "src": "9948:4:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrder calldata"
                                },
                                {
                                  "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                  "typeString": "struct OLKey memory"
                                },
                                {
                                  "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 82815,
                              "name": "postRestingOrder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83080,
                              "src": "9876:16:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_TakerOrder_$83605_calldata_ptr_$_t_struct$_OLKey_$55875_memory_ptr_$_t_struct$_TakerOrderResult_$83619_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (struct IOrderLogic.TakerOrder calldata,struct OLKey memory,struct IOrderLogic.TakerOrderResult memory,uint256) returns (uint256)"
                              }
                            },
                            "id": 82823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "9894:3:100",
                              "9904:5:100",
                              "9932:3:100",
                              "9942:4:100"
                            ],
                            "names": [
                              "tko",
                              "olKey",
                              "res",
                              "fund"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "9876:78:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9869:85:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82825,
                        "nodeType": "ExpressionStatement",
                        "src": "9869:85:100"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 82828,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82802,
                      "src": "10648:4:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 82829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10655:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10648:8:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 82847,
                  "nodeType": "IfStatement",
                  "src": "10644:674:100",
                  "trueBody": {
                    "id": 82846,
                    "nodeType": "Block",
                    "src": "10658:660:100",
                    "statements": [
                      {
                        "assignments": [
                          82832,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 82832,
                            "mutability": "mutable",
                            "name": "noRevert",
                            "nameLocation": "11218:8:100",
                            "nodeType": "VariableDeclaration",
                            "scope": 82846,
                            "src": "11213:13:100",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 82831,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "11213:4:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 82840,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 82838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11260:2:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 82833,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11231:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 82834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11235:6:100",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11231:10:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 82835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11242:4:100",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "11231:15:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 82837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 82836,
                                "name": "fund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82802,
                                "src": "11254:4:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "11231:28:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 82839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11231:32:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11212:51:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 82842,
                              "name": "noRevert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82832,
                              "src": "11279:8:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d67764f726465722f726566756e644661696c",
                              "id": 82843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11289:21:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5a280965262c14d7a7a2f06fc8d43a9e6b44c3adf345dc705ab8421043e20cff",
                                "typeString": "literal_string \"mgvOrder/refundFail\""
                              },
                              "value": "mgvOrder/refundFail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5a280965262c14d7a7a2f06fc8d43a9e6b44c3adf345dc705ab8421043e20cff",
                                "typeString": "literal_string \"mgvOrder/refundFail\""
                              }
                            ],
                            "id": 82841,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11271:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 82844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11271:40:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82845,
                        "nodeType": "ExpressionStatement",
                        "src": "11271:40:100"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 82848,
                      "name": "MangroveOrderComplete",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83642,
                      "src": "11626:21:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 82849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11626:23:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82850,
                  "nodeType": "EmitStatement",
                  "src": "11621:28:100"
                },
                {
                  "expression": {
                    "id": 82851,
                    "name": "res",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82645,
                    "src": "11662:3:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                    }
                  },
                  "functionReturnParameters": 82646,
                  "id": 82852,
                  "nodeType": "Return",
                  "src": "11655:10:100"
                }
              ]
            },
            "baseFunctions": [
              83681
            ],
            "documentation": {
              "id": 82638,
              "nodeType": "StructuredDocumentation",
              "src": "6038:26:100",
              "text": "@inheritdoc IOrderLogic"
            },
            "functionSelector": "126490ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "take",
            "nameLocation": "6076:4:100",
            "parameters": {
              "id": 82642,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82641,
                  "mutability": "mutable",
                  "name": "tko",
                  "nameLocation": "6101:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82854,
                  "src": "6081:23:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                    "typeString": "struct IOrderLogic.TakerOrder"
                  },
                  "typeName": {
                    "id": 82640,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82639,
                      "name": "TakerOrder",
                      "nameLocations": [
                        "6081:10:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83605,
                      "src": "6081:10:100"
                    },
                    "referencedDeclaration": 83605,
                    "src": "6081:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$83605_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6080:25:100"
            },
            "returnParameters": {
              "id": 82646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82645,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "6156:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82854,
                  "src": "6132:27:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                    "typeString": "struct IOrderLogic.TakerOrderResult"
                  },
                  "typeName": {
                    "id": 82644,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82643,
                      "name": "TakerOrderResult",
                      "nameLocations": [
                        "6132:16:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83619,
                      "src": "6132:16:100"
                    },
                    "referencedDeclaration": 83619,
                    "src": "6132:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6131:29:100"
            },
            "scope": 83081,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 82883,
            "nodeType": "FunctionDefinition",
            "src": "11843:344:100",
            "nodes": [],
            "body": {
              "id": 82882,
              "nodeType": "Block",
              "src": "11897:290:100",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 82862,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82858,
                              "src": "11946:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder memory"
                              }
                            },
                            "id": 82863,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11950:5:100",
                            "memberName": "olKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83589,
                            "src": "11946:9:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                              "typeString": "struct OLKey memory"
                            }
                          },
                          "id": 82864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11956:4:100",
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55889,
                          "src": "11946:14:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                            "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                          }
                        },
                        "id": 82865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11946:16:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 82866,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11977:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 82867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11981:6:100",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11977:10:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 82868,
                          "name": "tko",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82858,
                          "src": "12007:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        },
                        "id": 82869,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12011:10:100",
                        "memberName": "fillOrKill",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83591,
                        "src": "12007:14:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 82870,
                          "name": "tko",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82858,
                          "src": "12035:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        },
                        "id": 82871,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12039:4:100",
                        "memberName": "tick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83594,
                        "src": "12035:8:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      {
                        "expression": {
                          "id": 82872,
                          "name": "tko",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82858,
                          "src": "12063:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        },
                        "id": 82873,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12067:10:100",
                        "memberName": "fillVolume",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83596,
                        "src": "12063:14:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 82874,
                          "name": "tko",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82858,
                          "src": "12096:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        },
                        "id": 82875,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12100:9:100",
                        "memberName": "fillWants",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83598,
                        "src": "12096:13:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 82876,
                          "name": "tko",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82858,
                          "src": "12131:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        },
                        "id": 82877,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12135:12:100",
                        "memberName": "restingOrder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83600,
                        "src": "12131:16:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "expression": {
                          "id": 82878,
                          "name": "tko",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82858,
                          "src": "12164:3:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                            "typeString": "struct IOrderLogic.TakerOrder memory"
                          }
                        },
                        "id": 82879,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12168:7:100",
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83604,
                        "src": "12164:11:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 82861,
                      "name": "MangroveOrderStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83639,
                      "src": "11908:18:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bool_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_bool_$_t_bool_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,bool,Tick,uint256,bool,bool,uint256)"
                      }
                    },
                    "id": 82880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "11935:9:100",
                      "11970:5:100",
                      "11995:10:100",
                      "12029:4:100",
                      "12051:10:100",
                      "12085:9:100",
                      "12117:12:100",
                      "12155:7:100"
                    ],
                    "names": [
                      "olKeyHash",
                      "taker",
                      "fillOrKill",
                      "tick",
                      "fillVolume",
                      "fillWants",
                      "restingOrder",
                      "offerId"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "11908:274:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 82881,
                  "nodeType": "EmitStatement",
                  "src": "11903:279:100"
                }
              ]
            },
            "documentation": {
              "id": 82855,
              "nodeType": "StructuredDocumentation",
              "src": "11674:166:100",
              "text": "@notice logs `MangroveOrderStart`\n@param tko the arguments in memory of the taker order\n@dev this function avoids loading too many variables on the stack"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logOrderData",
            "nameLocation": "11852:12:100",
            "parameters": {
              "id": 82859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82858,
                  "mutability": "mutable",
                  "name": "tko",
                  "nameLocation": "11883:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 82883,
                  "src": "11865:21:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$83605_memory_ptr",
                    "typeString": "struct IOrderLogic.TakerOrder"
                  },
                  "typeName": {
                    "id": 82857,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82856,
                      "name": "TakerOrder",
                      "nameLocations": [
                        "11865:10:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83605,
                      "src": "11865:10:100"
                    },
                    "referencedDeclaration": 83605,
                    "src": "11865:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$83605_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11864:23:100"
            },
            "returnParameters": {
              "id": 82860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11897:0:100"
            },
            "scope": 83081,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 83080,
            "nodeType": "FunctionDefinition",
            "src": "13023:2334:100",
            "nodes": [],
            "body": {
              "id": 83079,
              "nodeType": "Block",
              "src": "13175:2182:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    82902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82902,
                      "mutability": "mutable",
                      "name": "residualTick",
                      "nameLocation": "13186:12:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 83079,
                      "src": "13181:17:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      },
                      "typeName": {
                        "id": 82901,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 82900,
                          "name": "Tick",
                          "nameLocations": [
                            "13181:4:100"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5280,
                          "src": "13181:4:100"
                        },
                        "referencedDeclaration": 5280,
                        "src": "13181:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82912,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 82910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "13211:22:100",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 82907,
                                "name": "tko",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82887,
                                "src": "13224:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrder calldata"
                                }
                              },
                              "id": 82908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13228:4:100",
                              "memberName": "tick",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83594,
                              "src": "13224:8:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              }
                            ],
                            "expression": {
                              "id": 82905,
                              "name": "Tick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5280,
                              "src": "13212:4:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_userDefinedValueType$_Tick_$5280_$",
                                "typeString": "type(Tick)"
                              }
                            },
                            "id": 82906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "13217:6:100",
                            "memberName": "unwrap",
                            "nodeType": "MemberAccess",
                            "src": "13212:11:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Tick_$5280_$returns$_t_int256_$",
                              "typeString": "function (Tick) pure returns (int256)"
                            }
                          },
                          "id": 82909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13212:21:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 82903,
                        "name": "Tick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5280,
                        "src": "13201:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_userDefinedValueType$_Tick_$5280_$",
                          "typeString": "type(Tick)"
                        }
                      },
                      "id": 82904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "13206:4:100",
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "src": "13201:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_wrap_pure$_t_int256_$returns$_t_userDefinedValueType$_Tick_$5280_$",
                        "typeString": "function (int256) pure returns (Tick)"
                      }
                    },
                    "id": 82911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13201:33:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13181:53:100"
                },
                {
                  "assignments": [
                    82914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82914,
                      "mutability": "mutable",
                      "name": "residualGives",
                      "nameLocation": "13245:13:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 83079,
                      "src": "13240:18:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 82913,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13240:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82915,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13240:18:100"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 82916,
                      "name": "tko",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82887,
                      "src": "13268:3:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                        "typeString": "struct IOrderLogic.TakerOrder calldata"
                      }
                    },
                    "id": 82917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13272:9:100",
                    "memberName": "fillWants",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 83598,
                    "src": "13268:13:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 82946,
                    "nodeType": "Block",
                    "src": "13585:116:100",
                    "statements": [
                      {
                        "expression": {
                          "id": 82944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 82938,
                            "name": "residualGives",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82914,
                            "src": "13648:13:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 82943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 82939,
                                "name": "tko",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82887,
                                "src": "13664:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrder calldata"
                                }
                              },
                              "id": 82940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13668:10:100",
                              "memberName": "fillVolume",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83596,
                              "src": "13664:14:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "expression": {
                                "id": 82941,
                                "name": "res",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82893,
                                "src": "13681:3:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                  "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                }
                              },
                              "id": 82942,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13685:9:100",
                              "memberName": "takerGave",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 83610,
                              "src": "13681:13:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13664:30:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13648:46:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82945,
                        "nodeType": "ExpressionStatement",
                        "src": "13648:46:100"
                      }
                    ]
                  },
                  "id": 82947,
                  "nodeType": "IfStatement",
                  "src": "13264:437:100",
                  "trueBody": {
                    "id": 82937,
                    "nodeType": "Block",
                    "src": "13283:296:100",
                    "statements": [
                      {
                        "assignments": [
                          82919
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 82919,
                            "mutability": "mutable",
                            "name": "residualWants",
                            "nameLocation": "13360:13:100",
                            "nodeType": "VariableDeclaration",
                            "scope": 82937,
                            "src": "13355:18:100",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 82918,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13355:4:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 82929,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 82928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 82920,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82887,
                              "src": "13376:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder calldata"
                              }
                            },
                            "id": 82921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13380:10:100",
                            "memberName": "fillVolume",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83596,
                            "src": "13376:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 82926,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 82922,
                                    "name": "res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82893,
                                    "src": "13394:3:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                    }
                                  },
                                  "id": 82923,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13398:8:100",
                                  "memberName": "takerGot",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83608,
                                  "src": "13394:12:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 82924,
                                    "name": "res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82893,
                                    "src": "13409:3:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                    }
                                  },
                                  "id": 82925,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "13413:3:100",
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83614,
                                  "src": "13409:7:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13394:22:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 82927,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13393:24:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13376:41:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13355:62:100"
                      },
                      {
                        "expression": {
                          "id": 82935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 82930,
                            "name": "residualGives",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82914,
                            "src": "13507:13:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 82933,
                                "name": "residualWants",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82919,
                                "src": "13558:13:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 82931,
                                "name": "residualTick",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82902,
                                "src": "13523:12:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                  "typeString": "Tick"
                                }
                              },
                              "id": 82932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13536:21:100",
                              "memberName": "outboundFromInboundUp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 5464,
                              "src": "13523:34:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Tick_$5280_$",
                                "typeString": "function (Tick,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 82934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13523:49:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13507:65:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 82936,
                        "nodeType": "ExpressionStatement",
                        "src": "13507:65:100"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    82950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82950,
                      "mutability": "mutable",
                      "name": "args",
                      "nameLocation": "13723:4:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 83079,
                      "src": "13706:21:100",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                        "typeString": "struct IOfferLogic.OfferArgs"
                      },
                      "typeName": {
                        "id": 82949,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 82948,
                          "name": "OfferArgs",
                          "nameLocations": [
                            "13706:9:100"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 83563,
                          "src": "13706:9:100"
                        },
                        "referencedDeclaration": 83563,
                        "src": "13706:9:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 82961,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 82952,
                        "name": "olKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82890,
                        "src": "13755:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "id": 82953,
                        "name": "residualTick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82902,
                        "src": "13774:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      {
                        "id": 82954,
                        "name": "residualGives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82914,
                        "src": "13801:13:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 82955,
                          "name": "offerGasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            81733,
                            81767
                          ],
                          "referencedDeclaration": 81733,
                          "src": "13830:11:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 82956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13830:13:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 82957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13898:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 82958,
                        "name": "fund",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82895,
                        "src": "13924:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 82959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13946:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 82951,
                      "name": "OfferArgs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83563,
                      "src": "13730:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_OfferArgs_$83563_storage_ptr_$",
                        "typeString": "type(struct IOfferLogic.OfferArgs storage pointer)"
                      }
                    },
                    "id": 82960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "13748:5:100",
                      "13768:4:100",
                      "13794:5:100",
                      "13822:6:100",
                      "13888:8:100",
                      "13918:4:100",
                      "13936:8:100"
                    ],
                    "names": [
                      "olKey",
                      "tick",
                      "gives",
                      "gasreq",
                      "gasprice",
                      "fund",
                      "noRevert"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "13730:257:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13706:281:100"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 82962,
                        "name": "tko",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82887,
                        "src": "13997:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                          "typeString": "struct IOrderLogic.TakerOrder calldata"
                        }
                      },
                      "id": 82963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14001:7:100",
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83604,
                      "src": "13997:11:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 82964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14012:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13997:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 83043,
                    "nodeType": "Block",
                    "src": "14099:438:100",
                    "statements": [
                      {
                        "assignments": [
                          82981
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 82981,
                            "mutability": "mutable",
                            "name": "offerId",
                            "nameLocation": "14112:7:100",
                            "nodeType": "VariableDeclaration",
                            "scope": 83043,
                            "src": "14107:12:100",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 82980,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "14107:4:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 82984,
                        "initialValue": {
                          "expression": {
                            "id": 82982,
                            "name": "tko",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82887,
                            "src": "14122:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                              "typeString": "struct IOrderLogic.TakerOrder calldata"
                            }
                          },
                          "id": 82983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14126:7:100",
                          "memberName": "offerId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83604,
                          "src": "14122:11:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14107:26:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 82996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 82986,
                                      "name": "ownerData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 83724,
                                      "src": "14149:9:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_struct$_OwnerData_$83716_storage_$_$",
                                        "typeString": "mapping(bytes32 => mapping(uint256 => struct Forwarder.OwnerData storage ref))"
                                      }
                                    },
                                    "id": 82990,
                                    "indexExpression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 82987,
                                          "name": "olKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 82890,
                                          "src": "14159:5:100",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                            "typeString": "struct OLKey memory"
                                          }
                                        },
                                        "id": 82988,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "14165:4:100",
                                        "memberName": "hash",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 55889,
                                        "src": "14159:10:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                                          "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                                        }
                                      },
                                      "id": 82989,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14159:12:100",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14149:23:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_OwnerData_$83716_storage_$",
                                      "typeString": "mapping(uint256 => struct Forwarder.OwnerData storage ref)"
                                    }
                                  },
                                  "id": 82992,
                                  "indexExpression": {
                                    "id": 82991,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82981,
                                    "src": "14173:7:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14149:32:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OwnerData_$83716_storage",
                                    "typeString": "struct Forwarder.OwnerData storage ref"
                                  }
                                },
                                "id": 82993,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14182:5:100",
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 83713,
                                "src": "14149:38:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 82994,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14191:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 82995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14195:6:100",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "14191:10:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14149:52:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416363657373436f6e74726f6c6c65642f496e76616c6964",
                              "id": 82997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14203:26:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                                "typeString": "literal_string \"AccessControlled/Invalid\""
                              },
                              "value": "AccessControlled/Invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                                "typeString": "literal_string \"AccessControlled/Invalid\""
                              }
                            ],
                            "id": 82985,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14141:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 82998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14141:89:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82999,
                        "nodeType": "ExpressionStatement",
                        "src": "14141:89:100"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "14246:36:100",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 83003,
                                        "name": "olKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 82890,
                                        "src": "14258:5:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                          "typeString": "struct OLKey memory"
                                        }
                                      },
                                      {
                                        "id": 83004,
                                        "name": "offerId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 82981,
                                        "src": "14265:7:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                          "typeString": "struct OLKey memory"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 83001,
                                        "name": "MGV",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 81629,
                                        "src": "14247:3:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IMangrove_$54127",
                                          "typeString": "contract IMangrove"
                                        }
                                      },
                                      "id": 83002,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "14251:6:100",
                                      "memberName": "offers",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 53887,
                                      "src": "14247:10:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                                        "typeString": "function (struct OLKey memory,uint256) view external returns (Offer)"
                                      }
                                    },
                                    "id": 83005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14247:26:100",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                      "typeString": "Offer"
                                    }
                                  },
                                  "id": 83006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "14274:6:100",
                                  "memberName": "isLive",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5181,
                                  "src": "14247:33:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                                    "typeString": "function (Offer) pure returns (bool)"
                                  }
                                },
                                "id": 83007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14247:35:100",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d67764f726465722f6f66666572416c7265616479416374697665",
                              "id": 83009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14284:29:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac5f21c5b3ab95c8022c7a7aad4f58163384944342b0bc0c404c9841fe3064de",
                                "typeString": "literal_string \"mgvOrder/offerAlreadyActive\""
                              },
                              "value": "mgvOrder/offerAlreadyActive"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac5f21c5b3ab95c8022c7a7aad4f58163384944342b0bc0c404c9841fe3064de",
                                "typeString": "literal_string \"mgvOrder/offerAlreadyActive\""
                              }
                            ],
                            "id": 83000,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14238:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 83010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14238:76:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83011,
                        "nodeType": "ExpressionStatement",
                        "src": "14238:76:100"
                      },
                      {
                        "assignments": [
                          83013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 83013,
                            "mutability": "mutable",
                            "name": "repostData",
                            "nameLocation": "14330:10:100",
                            "nodeType": "VariableDeclaration",
                            "scope": 83043,
                            "src": "14322:18:100",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 83012,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "14322:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 83018,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 83015,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82950,
                              "src": "14356:4:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            {
                              "id": 83016,
                              "name": "offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82981,
                              "src": "14362:7:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 83014,
                            "name": "_updateOffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              84310
                            ],
                            "referencedDeclaration": 84310,
                            "src": "14343:12:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (struct IOfferLogic.OfferArgs memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 83017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14343:27:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14322:48:100"
                      },
                      {
                        "expression": {
                          "id": 83023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 83019,
                              "name": "res",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82893,
                              "src": "14378:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                "typeString": "struct IOrderLogic.TakerOrderResult memory"
                              }
                            },
                            "id": 83021,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14382:14:100",
                            "memberName": "offerWriteData",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83618,
                            "src": "14378:18:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 83022,
                            "name": "repostData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83013,
                            "src": "14399:10:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14378:31:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 83024,
                        "nodeType": "ExpressionStatement",
                        "src": "14378:31:100"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 83027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 83025,
                            "name": "repostData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83013,
                            "src": "14421:10:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 83026,
                            "name": "REPOST_SUCCESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81647,
                            "src": "14435:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14421:28:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 83041,
                          "nodeType": "Block",
                          "src": "14497:34:100",
                          "statements": [
                            {
                              "expression": {
                                "id": 83039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 83035,
                                    "name": "res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82893,
                                    "src": "14507:3:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                    }
                                  },
                                  "id": 83037,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "14511:7:100",
                                  "memberName": "offerId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83616,
                                  "src": "14507:11:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 83038,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14521:1:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14507:15:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 83040,
                              "nodeType": "ExpressionStatement",
                              "src": "14507:15:100"
                            }
                          ]
                        },
                        "id": 83042,
                        "nodeType": "IfStatement",
                        "src": "14417:114:100",
                        "trueBody": {
                          "id": 83034,
                          "nodeType": "Block",
                          "src": "14451:40:100",
                          "statements": [
                            {
                              "expression": {
                                "id": 83032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 83028,
                                    "name": "res",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 82893,
                                    "src": "14461:3:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                      "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                    }
                                  },
                                  "id": 83030,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "14465:7:100",
                                  "memberName": "offerId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83616,
                                  "src": "14461:11:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 83031,
                                  "name": "offerId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82981,
                                  "src": "14475:7:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14461:21:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 83033,
                              "nodeType": "ExpressionStatement",
                              "src": "14461:21:100"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 83044,
                  "nodeType": "IfStatement",
                  "src": "13993:544:100",
                  "trueBody": {
                    "id": 82979,
                    "nodeType": "Block",
                    "src": "14015:78:100",
                    "statements": [
                      {
                        "expression": {
                          "id": 82977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "expression": {
                                  "id": 82966,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82893,
                                  "src": "14024:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 82968,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "14028:7:100",
                                "memberName": "offerId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 83616,
                                "src": "14024:11:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 82969,
                                  "name": "res",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82893,
                                  "src": "14037:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                  }
                                },
                                "id": 82970,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "14041:14:100",
                                "memberName": "offerWriteData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 83618,
                                "src": "14037:18:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 82971,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "14023:33:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
                              "typeString": "tuple(uint256,bytes32)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 82973,
                                "name": "args",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82950,
                                "src": "14069:4:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                  "typeString": "struct IOfferLogic.OfferArgs memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 82974,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14075:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 82975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14079:6:100",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "14075:10:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                  "typeString": "struct IOfferLogic.OfferArgs memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 82972,
                              "name": "_newOffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84112,
                              "src": "14059:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_address_$returns$_t_uint256_$_t_bytes32_$",
                                "typeString": "function (struct IOfferLogic.OfferArgs memory,address) returns (uint256,bytes32)"
                              }
                            },
                            "id": 82976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14059:27:100",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
                              "typeString": "tuple(uint256,bytes32)"
                            }
                          },
                          "src": "14023:63:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 82978,
                        "nodeType": "ExpressionStatement",
                        "src": "14023:63:100"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 83048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 83045,
                        "name": "res",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82893,
                        "src": "14546:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                          "typeString": "struct IOrderLogic.TakerOrderResult memory"
                        }
                      },
                      "id": 83046,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14550:7:100",
                      "memberName": "offerId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83616,
                      "src": "14546:11:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 83047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14561:1:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14546:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 83077,
                    "nodeType": "Block",
                    "src": "15100:253:100",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 83064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 83061,
                              "name": "tko",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82887,
                              "src": "15256:3:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                "typeString": "struct IOrderLogic.TakerOrder calldata"
                              }
                            },
                            "id": 83062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15260:10:100",
                            "memberName": "expiryDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83602,
                            "src": "15256:14:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 83063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15273:1:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15256:18:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 83076,
                        "nodeType": "IfStatement",
                        "src": "15252:95:100",
                        "trueBody": {
                          "id": 83075,
                          "nodeType": "Block",
                          "src": "15276:71:100",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 83066,
                                        "name": "olKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 82890,
                                        "src": "15296:5:100",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                          "typeString": "struct OLKey memory"
                                        }
                                      },
                                      "id": 83067,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "15302:4:100",
                                      "memberName": "hash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 55889,
                                      "src": "15296:10:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                                        "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 83068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15296:12:100",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 83069,
                                      "name": "res",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82893,
                                      "src": "15310:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                                        "typeString": "struct IOrderLogic.TakerOrderResult memory"
                                      }
                                    },
                                    "id": 83070,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15314:7:100",
                                    "memberName": "offerId",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83616,
                                    "src": "15310:11:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 83071,
                                      "name": "tko",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82887,
                                      "src": "15323:3:100",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                        "typeString": "struct IOrderLogic.TakerOrder calldata"
                                      }
                                    },
                                    "id": 83072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "15327:10:100",
                                    "memberName": "expiryDate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83602,
                                    "src": "15323:14:100",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 83065,
                                  "name": "setExpiry",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82470,
                                  "src": "15286:9:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes32,uint256,uint256)"
                                  }
                                },
                                "id": 83073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15286:52:100",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 83074,
                              "nodeType": "ExpressionStatement",
                              "src": "15286:52:100"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 83078,
                  "nodeType": "IfStatement",
                  "src": "14542:811:100",
                  "trueBody": {
                    "id": 83060,
                    "nodeType": "Block",
                    "src": "14564:530:100",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "14955:15:100",
                              "subExpression": {
                                "expression": {
                                  "id": 83050,
                                  "name": "tko",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 82887,
                                  "src": "14956:3:100",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                                    "typeString": "struct IOrderLogic.TakerOrder calldata"
                                  }
                                },
                                "id": 83051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14960:10:100",
                                "memberName": "fillOrKill",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 83591,
                                "src": "14956:14:100",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d67764f726465722f7061727469616c46696c6c",
                              "id": 83053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14972:22:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_65a20e5356d993c8161e3e9a94d45ce686b997d9ca8a65c7e4ab5d1603a46525",
                                "typeString": "literal_string \"mgvOrder/partialFill\""
                              },
                              "value": "mgvOrder/partialFill"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_65a20e5356d993c8161e3e9a94d45ce686b997d9ca8a65c7e4ab5d1603a46525",
                                "typeString": "literal_string \"mgvOrder/partialFill\""
                              }
                            ],
                            "id": 83049,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14947:7:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 83054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14947:48:100",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83055,
                        "nodeType": "ExpressionStatement",
                        "src": "14947:48:100"
                      },
                      {
                        "expression": {
                          "id": 83058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 83056,
                            "name": "refund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82898,
                            "src": "15074:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 83057,
                            "name": "fund",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82895,
                            "src": "15083:4:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15074:13:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 83059,
                        "nodeType": "ExpressionStatement",
                        "src": "15074:13:100"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 82884,
              "nodeType": "StructuredDocumentation",
              "src": "12191:829:100",
              "text": "@notice posts a maker order on the (`olKey`) offer list.\n@param tko the arguments in memory of the taker order\n@param olKey the offer list key.\n@param fund amount of WEIs used to cover for the offer bounty (covered gasprice is derived from `fund`).\n@param res the result of the taker order.\n@return refund the amount to refund to the taker of the fund.\n@dev if relative limit price of taker order is `ratio` in the (outbound_tkn, inbound_tkn) offer list (represented by `tick=log_{1.0001}(ratio)` )\n@dev then entailed relative price for resting order must be `1/ratio` (relative price on the (inbound_tkn, outbound_tkn) offer list)\n@dev so with ticks that is `-log(ratio)`, or -tick.\n@dev the price of the resting order should be the same as for the max price for the market order."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postRestingOrder",
            "nameLocation": "13032:16:100",
            "parameters": {
              "id": 82896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82887,
                  "mutability": "mutable",
                  "name": "tko",
                  "nameLocation": "13069:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 83080,
                  "src": "13049:23:100",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrder_$83605_calldata_ptr",
                    "typeString": "struct IOrderLogic.TakerOrder"
                  },
                  "typeName": {
                    "id": 82886,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82885,
                      "name": "TakerOrder",
                      "nameLocations": [
                        "13049:10:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83605,
                      "src": "13049:10:100"
                    },
                    "referencedDeclaration": 83605,
                    "src": "13049:10:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrder_$83605_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82890,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "13087:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 83080,
                  "src": "13074:18:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 82889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82888,
                      "name": "OLKey",
                      "nameLocations": [
                        "13074:5:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "13074:5:100"
                    },
                    "referencedDeclaration": 55875,
                    "src": "13074:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82893,
                  "mutability": "mutable",
                  "name": "res",
                  "nameLocation": "13118:3:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 83080,
                  "src": "13094:27:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TakerOrderResult_$83619_memory_ptr",
                    "typeString": "struct IOrderLogic.TakerOrderResult"
                  },
                  "typeName": {
                    "id": 82892,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 82891,
                      "name": "TakerOrderResult",
                      "nameLocations": [
                        "13094:16:100"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83619,
                      "src": "13094:16:100"
                    },
                    "referencedDeclaration": 83619,
                    "src": "13094:16:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TakerOrderResult_$83619_storage_ptr",
                      "typeString": "struct IOrderLogic.TakerOrderResult"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82895,
                  "mutability": "mutable",
                  "name": "fund",
                  "nameLocation": "13128:4:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 83080,
                  "src": "13123:9:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82894,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13123:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13048:85:100"
            },
            "returnParameters": {
              "id": 82899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82898,
                  "mutability": "mutable",
                  "name": "refund",
                  "nameLocation": "13165:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 83080,
                  "src": "13160:11:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 82897,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13160:4:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13159:13:100"
            },
            "scope": 83081,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 82386,
              "name": "Forwarder",
              "nameLocations": [
                "1398:9:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 84630,
              "src": "1398:9:100"
            },
            "id": 82387,
            "nodeType": "InheritanceSpecifier",
            "src": "1398:9:100"
          },
          {
            "baseName": {
              "id": 82388,
              "name": "IOrderLogic",
              "nameLocations": [
                "1409:11:100"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83682,
              "src": "1409:11:100"
            },
            "id": 82389,
            "nodeType": "InheritanceSpecifier",
            "src": "1409:11:100"
          }
        ],
        "canonicalName": "MangroveOrder",
        "contractDependencies": [
          88231
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 82385,
          "nodeType": "StructuredDocumentation",
          "src": "503:868:100",
          "text": "@title MangroveOrder. A periphery contract to Mangrove protocol that implements \"Good till cancelled\" (GTC) orders as well as \"Fill or kill\" (FOK) orders.\n@notice A GTC order is a buy (sell) limit order complemented by a bid (ask) limit order, called a resting order, that occurs when the buy (sell) order was partially filled.\n If the GTC is for some amount $a_goal$ at a price $p$, and the corresponding limit order was partially filled for $a_now < a_goal$,\n the resting order should be posted for an amount $a_later = a_goal - a_now$ at price $p$.\n@notice A FOK order is simply a buy or sell limit order that is either completely filled or cancelled. No resting order is posted.\n@dev requiring no partial fill *and* a resting order is interpreted here as an instruction to revert if the resting order fails to be posted (e.g., if below density)."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          83081,
          83682,
          84630,
          82367,
          83578,
          56211,
          89841,
          83441
        ],
        "name": "MangroveOrder",
        "nameLocation": "1381:13:100",
        "scope": 83082,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83418,
          83467,
          83473,
          83639,
          83642,
          83651,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 100
}