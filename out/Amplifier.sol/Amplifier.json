{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "base",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "stable1",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "stable2",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tickSpacing1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tickSpacing2",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "SetReserveId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE_ID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STABLE1",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STABLE2",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TICK_SPACING1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TICK_SPACING2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wants1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "wants2",
          "type": "uint256"
        }
      ],
      "name": "newAmplifiedOffers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "deprovision",
          "type": "bool"
        }
      ],
      "name": "retractOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "freeWei",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "deprovision",
          "type": "bool"
        }
      ],
      "name": "retractOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "325:7515:130:-:0;;;937:720;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1101:3;1609:1:99;1117:7:130;1126:5;1101:3;1117:7;2955:10:99;;977:57:123;;;;-1:-1:-1;;;977:57:123;;1394:2:131;977:57:123;;;1376:21:131;1433:2;1413:18;;;1406:30;1472:26;1452:18;;;1445:54;1516:18;;977:57:123;;;;;;;;;1040:6;:15;;-1:-1:-1;;;;;;1040:15:123;-1:-1:-1;;;;;1040:15:123;;;;;;;;;;2981:24:99::1;::::0;::::1;::::0;::::1;2973:60;;;::::0;-1:-1:-1;;;2973:60:99;;1747:2:131;2973:60:99::1;::::0;::::1;1729:21:131::0;1786:2;1766:18;;;1759:30;1825:25;1805:18;;;1798:53;1868:18;;2973:60:99::1;1545:347:131::0;2973:60:99::1;-1:-1:-1::0;;;;;3039:9:99;::::1;;::::0;;;3054:24:::1;::::0;;;3089:8:::1;::::0;2070:51:131;;;3089:8:99::1;::::0;-1:-1:-1;2043:18:131;3089:8:99::1;;;;;;;-1:-1:-1::0;;;;;;;2052:20:106;::::1;::::0;2048:59:::1;;2082:18;2092:7:::0;2082:9:::1;:18::i;:::-;2112;-1:-1:-1::0;;;;;2133:23:106;::::1;::::0;:51:::1;;2175:9;2133:51;;;2167:4;2133:51;-1:-1:-1::0;;;;;2190:23:106;::::1;;::::0;;;2224:24:::1;::::0;2112:72;;-1:-1:-1;2190:23:106;2224:24:::1;::::0;;;::::1;-1:-1:-1::0;;;;;;;;1214:17:130;;::::1;;::::0;1237;;::::1;;::::0;1260:28:::1;::::0;;;1294::::1;::::0;;;1328:11;::::1;;::::0;-1:-1:-1;;;1370:18:130;1345:22:::1;::::0;1370:18:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;1345:43:130;-1:-1:-1;1394:18:130::1;1345:43:::0;1394:9:::1;:18::i;:::-;1575:27;::::0;-1:-1:-1;;;1575:27:130;;1596:4:::1;1575:27;::::0;::::1;2070:51:131::0;-1:-1:-1;;;;;1575:12:130;::::1;::::0;::::1;::::0;2043:18:131;;1575:27:130::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;1608:23:130::1;::::0;-1:-1:-1;;;1608:23:130;;-1:-1:-1;;;;;2088:32:131;;;1608:23:130::1;::::0;::::1;2070:51:131::0;1608:16:130;::::1;::::0;-1:-1:-1;1608:16:130::1;::::0;-1:-1:-1;2043:18:131;;1608:23:130::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1637:15;1646:5;1637:8;;;:15;;:::i;:::-;1133:524;937:720:::0;;;;;;;325:7515;;7512:127:99;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;2542:2:131;1171:57:123;;;2524:21:131;2581:2;2561:18;;;2554:30;2620:26;2600:18;;;2593:54;2664:18;;1171:57:123;2340:348:131;1171:57:123;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;2070:51:131;;;7616:18:99::1;::::0;2058:2:131;2043:18;7616::99::1;;;;;;;;7512:127:::0;:::o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;2542:2:131;1171:57:123;;;2524:21:131;2581:2;2561:18;;;2554:30;2620:26;2600:18;;;2593:54;2664:18;;1171:57:123;2340:348:131;1171:57:123;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;1394:2:131;2278:57:123::1;::::0;::::1;1376:21:131::0;1433:2;1413:18;;;1406:30;1472:26;1452:18;;;1445:54;1516:18;;2278:57:123::1;1192:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;2070:51:131;;;2367:16:123::1;::::0;2058:2:131;2043:18;2367:16:123::1;1897:230:131::0;325:7515:130;;;;;;;;:::o;14:142:131:-;-1:-1:-1;;;;;100:31:131;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:1026::-;343:6;351;359;367;375;383;391;444:3;432:9;423:7;419:23;415:33;412:53;;;461:1;458;451:12;412:53;493:9;487:16;512:42;548:5;512:42;:::i;:::-;623:2;608:18;;602:25;573:5;;-1:-1:-1;636:44:131;602:25;636:44;:::i;:::-;751:2;736:18;;730:25;699:7;;-1:-1:-1;764:44:131;730:25;764:44;:::i;:::-;879:2;864:18;;858:25;827:7;;-1:-1:-1;892:44:131;858:25;892:44;:::i;:::-;955:7;945:17;;;1002:3;991:9;987:19;981:26;971:36;;1047:3;1036:9;1032:19;1026:26;1016:36;;1097:3;1086:9;1082:19;1076:26;1111:44;1147:7;1111:44;:::i;:::-;1174:7;1164:17;;;161:1026;;;;;;;;;;:::o;2693:227::-;325:7515:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061016a5760003560e01c806399fa5e2d116100d1578063cfcd26791161008a578063ec342ad011610064578063ec342ad0146104bd578063f851a440146104f1578063f887ea401461050f578063fbc7d10b1461052d57600080fd5b8063cfcd267914610444578063e1f21c6714610459578063eafb61411461048957600080fd5b806399fa5e2d146103485780639eb7d4fe1461037c578063a24f2b2d146103b0578063bbce228e146103d0578063c0d7865514610404578063c7e1bb441461042457600080fd5b80635570db1d116101235780635570db1d1461027f5780636a7ee749146102945780636e7a5cb8146102c8578063704b6c02146102e85780637144df2414610308578063820db1f71461032857600080fd5b806303eb17e214610176578063150957c71461019857806315986e4a146101b85780632380fafd146101e55780635293840d146102135780635450af301461023357600080fd5b3661017157005b600080fd5b34801561018257600080fd5b506101966101913660046130e1565b610561565b005b3480156101a457600080fd5b506101966101b3366004613164565b6105b0565b6101cb6101c6366004613181565b610874565b604080519283526020830191909152015b60405180910390f35b3480156101f157600080fd5b506102056102003660046131c0565b610d21565b6040519081526020016101dc565b34801561021f57600080fd5b5061019661022e3660046130e1565b610dd1565b34801561023f57600080fd5b506102677f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101dc565b34801561028b57600080fd5b50610267600081565b3480156102a057600080fd5b506102677f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d457600080fd5b506102056102e33660046132a7565b610e45565b3480156102f457600080fd5b506101966103033660046132e8565b610eb9565b34801561031457600080fd5b50610196610323366004613305565b610f8e565b34801561033457600080fd5b50610205610343366004613335565b6111be565b34801561035457600080fd5b506102677f000000000000000000000000000000000000000000000000000000000000000081565b34801561038857600080fd5b506102057f000000000000000000000000000000000000000000000000000000000000000081565b3480156103bc57600080fd5b506102056103cb366004613363565b6112b9565b3480156103dc57600080fd5b506102057f000000000000000000000000000000000000000000000000000000000000000081565b34801561041057600080fd5b5061019661041f3660046132e8565b6112cc565b34801561043057600080fd5b5061019661043f36600461338e565b611344565b34801561045057600080fd5b50610205611421565b34801561046557600080fd5b506104796104743660046133d1565b611433565b60405190151581526020016101dc565b34801561049557600080fd5b506102057f000000000000000000000000000000000000000000000000000000000000000081565b3480156104c957600080fd5b506102677f000000000000000000000000000000000000000000000000000000000000000081565b3480156104fd57600080fd5b506000546001600160a01b0316610267565b34801561051b57600080fd5b506001546001600160a01b0316610267565b34801561053957600080fd5b506102677f000000000000000000000000000000000000000000000000000000000000000081565b60005b818110156105ab5761059b83838381811061058157610581613412565b905060200201602081019061059691906132e8565b6114bf565b6105a48161343e565b9050610564565b505050565b600061064b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525060025484610e45565b90506106e660405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525060035484610e45565b6106f09082613457565b9050801561087057604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af115801561075f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610783919061346a565b6107cd5760405162461bcd60e51b8152602060048201526016602482015275105b5c1b1a599a595c8bddda5d1a191c985dd1985a5b60521b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169083908381818185875af1925050503d806000811461081a576040519150601f19603f3d011682016040523d82523d6000602084013e61081f565b606091505b50509050806105ab5760405162461bcd60e51b815260206004820152601960248201527f416d706c69666965722f7765695472616e736665724661696c0000000000000060448201526064016107c4565b5050565b6000805481906001600160a01b031633146108a15760405162461bcd60e51b81526004016107c490613487565b6109d27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304a7a1b460405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000008152506002546040518363ffffffff1660e01b81526004016109809291906134e5565b602060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c19190613500565b602c1c60016001607f1b0316151590565b15610a1f5760405162461bcd60e51b815260206004820152601d60248201527f416d706c69666965722f6f6666657231416c726561647941637469766500000060448201526064016107c4565b610afe7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304a7a1b460405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000008152506003546040518363ffffffff1660e01b81526004016109809291906134e5565b15610b4b5760405162461bcd60e51b815260206004820152601d60248201527f416d706c69666965722f6f6666657232416c726561647941637469766500000060448201526064016107c4565b6000610b57858761157d565b9050610c296040518060e0016040528060405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000008152508152602001838152602001888152602001610c0d611421565b815260006020820181905234604083015260609091015261159a565b50600255610c37848761157d565b9050610d0c6040518060e0016040528060405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000008152508152602001838152602001888152602001610ced611421565b815260200160008152602001600081526020016000151581525061159a565b50600381905560025497909650945050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610d6c5760405162461bcd60e51b81526004016107c490613487565b60009150610d7e8360a00135846116cb565b15610dcb5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c6564000000000000000060448201526064016107c4565b50919050565b6000546001600160a01b03163314610dfb5760405162461bcd60e51b81526004016107c490613487565b60005b818110156105ab57610e35838383818110610e1b57610e1b613412565b9050602002016020810190610e3091906132e8565b611880565b610e3e8161343e565b9050610dfe565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b0382161480610e8957506000546001600160a01b031633145b610ea55760405162461bcd60e51b81526004016107c490613487565b610eb08585856119d6565b95945050505050565b6000546001600160a01b03163314610ee35760405162461bcd60e51b81526004016107c490613487565b6001600160a01b038116610f395760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016107c4565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b03163314610fb85760405162461bcd60e51b81526004016107c490613487565b600019820361104c576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611025573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110499190613500565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af11580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d7919061346a565b61111b5760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b60448201526064016107c4565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611168576040519150601f19603f3d011682016040523d82523d6000602084013e61116d565b606091505b50509050806105ab5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f7765695472616e736665724661696c000000000000000060448201526064016107c4565b6000806111d36001546001600160a01b031690565b90506001600160a01b038116156112885760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa158015611232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112569190613500565b611280907f0000000000000000000000000000000000000000000000000000000000000000613457565b9150506112b3565b7f00000000000000000000000000000000000000000000000000000000000000009150506112b3565b505b92915050565b60006112c58383611a74565b9392505050565b6000546001600160a01b031633146112f65760405162461bcd60e51b81526004016107c490613487565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590602001610f83565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b0382161461138d5760405162461bcd60e51b81526004016107c490613487565b81602001356f6d67762f74726164655375636365737360801b036113bc576113b6838335611b39565b50505050565b60608301356113da6113d336869003860186613519565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a36113b68383611f18565b600061142e6000806111be565b905090565b600080546001600160a01b0316331461145e5760405162461bcd60e51b81526004016107c490613487565b611469848484612066565b6114b55760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c656400000000000000000060448201526064016107c4565b5060019392505050565b6114c881612073565b60006114dc6001546001600160a01b031690565b6001600160a01b03161461157a576001546001600160a01b0316604051631403b99b60e31b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063a01dccd89060440160006040518083038186803b15801561156157600080fd5b505afa158015611575573d6000803e3d6000fd5b505050505b50565b600080600061158c858561215e565b91509150610eb0828261238b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f95902aa8460a00151856000015186602001518760400151886060015189608001516040518763ffffffff1660e01b815260040161160a959493929190613535565b60206040518083038185885af193505050508015611645575060408051601f3d908101601f1916820190925261164291810190613500565b60015b6116b257611651613565565b806308c379a0036116a65750611665613581565b8061167057506116a8565b8360c0015181906116945760405162461bcd60e51b81526004016107c4919061362f565b5061169e81613662565b915050915091565b505b3d6000803e3d6000fd5b936c1bd999995c8bd8dc99585d1959609a1b9350915050565b6000806116db60208401846132e8565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117459190613500565b90508381106117585760009150506112b3565b6117628185613686565b905060006117786001546001600160a01b031690565b90506001600160a01b038116611790575090506112b3565b60006001600160a01b03821663333dbb0d6117ae60208801886132e8565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482018190526044820187905230141560648201526084016020604051808303816000875af115801561182e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118529190613500565b90508281101561186b576118668184613686565b61186e565b60005b93505050506112b3565b505092915050565b60006118946001546001600160a01b031690565b90506118c3827f0000000000000000000000000000000000000000000000000000000000000000600019612066565b61190f5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c00000060448201526064016107c4565b6001600160a01b038116156108705761192b8282600019612066565b6119775760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c00000000000060448201526064016107c4565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b1580156119ba57600080fd5b505af11580156119ce573d6000803e3d6000fd5b505050505050565b604051630dcf4b9760e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e7a5cb890611a2990879087908790600401613699565b6020604051808303816000875af1158015611a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6c9190613500565b949350505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b8152600401611ac59291906134e5565b602060405180830381865afa158015611ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b069190613500565b905062ffffff604882901c166103e86101ff603f84901c160201602582901c6303ffffff1602620f424002949350505050565b600080611b4684846126b5565b90506000806001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611b8560408801602089016132e8565b6001600160a01b031614611c1557604080516060810190915280611bac60208901896132e8565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f0000000000000000000000000000000000000000000000000000000000000000815250600254611c93565b604080516060810190915280611c2e60208901896132e8565b6001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000008152506003545b915091506c1bd999995c8bdd5c19185d1959609a1b8303611ee7576000611cb9876127f1565b50905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166304a7a1b485856040518363ffffffff1660e01b8152600401611d0c9291906134e5565b602060405180830381865afa158015611d29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4d9190613500565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d86866040518363ffffffff1660e01b8152600401611d9f9291906134e5565b602060405180830381865afa158015611dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611de09190613500565b90506000611ded83612826565b905060016001607f1b0360808b0135602c1c1660008186840281611e1357611e136136bd565b0490506000611e6a6040518060e001604052808b8152602001611e36858b61157d565b8152602081018a9052604001604888901c62ffffff168152600060208201819052604082015260016060909101528961284c565b90506c1bd999995c8bdd5c19185d1959609a1b8114611eb5577f706f7374686f6f6b2f616c744f666665725265706f73744661696c00000000009a50505050505050505050506112b3565b7f706f7374686f6f6b2f626f74684f666665725265706f737465640000000000009a50505050505050505050506112b3565b611ef382826000610e45565b50751c1bdcdd1a1bdbdacbd89bdd1a14995d1c9858dd195960521b93505050506112b3565b60008080806001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016611f5760408801602089016132e8565b6001600160a01b031614611faf577f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600254611ff5565b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006003545b60408051606081019091529295509093509150612043908061201a60208a018a6132e8565b6001600160a01b03168152602001856001600160a01b0316815260200184815250826000610e45565b5073706f7374686f6f6b2f626f74684661696c696e6760601b9695505050505050565b6000611a6c848484612959565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa1580156120e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121079190613500565b1161157a5760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b60648201526084016107c4565b60008060016001607f1b038411156121b85760405162461bcd60e51b815260206004820152601f60248201527f6d67762f726174696f46726f6d566f6c2f696e626f756e642f746f6f4269670060448201526064016107c4565b60016001607f1b0383111561220f5760405162461bcd60e51b815260206004820181905260248201527f6d67762f726174696f46726f6d566f6c2f6f7574626f756e642f746f6f42696760448201526064016107c4565b8260000361223257506ffffb12cdf1087799c03e5a811a7aaa1c90506000612384565b8360000361225557506f800276a52a62a71c29fc1cc441e523bc905060ff612384565b600083608086901b8161226a5761226a6136bd565b0490506000612303827e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f6307c4acdd60e01b6fffffffffffffffffffffffffffffffff831160071b8315600890811b9190911784811c67ffffffffffffffff1060061b1784811c63ffffffff1060051b1793841c600181901c17600281901c17600481901c179081901c17601081901c170260fb1c1a1790565b9050816000036123555760405162461bcd60e51b815260206004820152601e60248201527f6d67762f726174696f46726f6d566f6c756d65732f7a65726f526174696f000060448201526064016107c4565b607f81111561237657607e1981019190911c9250608003607f019050612384565b607f0390811b925060800190505b9250929050565b60006123aa83836f800276a52a62a71c29fc1cc441e523bc60ff612a2d565b156123f75760405162461bcd60e51b815260206004820152601860248201527f6d67762f7469636b46726f6d526174696f2f746f6f4c6f77000000000000000060448201526064016107c4565b6124146ffffb12cdf1087799c03e5a811a7aaa1c60008585612a2d565b156124615760405162461bcd60e51b815260206004820152601960248201527f6d67762f7469636b46726f6d526174696f2f746f6f486967680000000000000060448201526064016107c4565b6000604061247084607f6136d3565b901b90506000612481607f80613686565b85901c800260c081901c6780000000000000001692909217607f83811c60ff94851c1c800260c181901c674000000000000000169290921782821c92851c9290921c800260c281901c672000000000000000169290921782821c92851c9290921c800260c381901c671000000000000000169290921782821c92851c9290921c800260c481901c670800000000000000169290921782821c92851c9290921c800260c581901c670400000000000000169290921782821c92851c9290921c800260c681901c670200000000000000169290921782821c92851c9290921c800260c781901c670100000000000000169290921782821c92851c9290921c800260c881901c6680000000000000169290921782821c92851c9290921c800260c981901c6640000000000000169290921782821c92851c9290921c800260ca81901c6620000000000000169290921782821c92851c9290921c800260cb81901c6610000000000000169290921782821c9290941c9190911c800260cc81901c6608000000000000169390931792901c9050600061262583691b13d180eb882abba6436136f3565b9050600060806126456f0147b240d5bf82739a122ad496972236846136d3565b901d905060006080612667846fd9e63e52eeeb7875a857348794e73675613723565b901d905060008061267783612a4c565b9150915060006126898b8b8585612a2d565b9050838514806126965750805b156126a3578498506126a7565b8398505b505050505050505092915050565b6000806126ca6001546001600160a01b031690565b90506001600160a01b038116156127e75760408051600280825260608201835260009260208301908036833701905050905061270960208601866132e8565b8160008151811061271c5761271c613412565b6001600160a01b0390921660209283029190910182015261274390604087019087016132e8565b8160018151811061275657612756613412565b6001600160a01b039283166020918202929092010152604051633e142a0760e21b81529083169063f850a81c906127b39084907f000000000000000000000000000000000000000000000000000000000000000090600401613743565b600060405180830381600087803b1580156127cd57600080fd5b505af11580156127e1573d6000803e3d6000fd5b50505050505b611a6c8484612abe565b60008061281260a084013560016001607f1b036080860135602c1c16613686565b9150608083013560401b60eb1d9050915091565b60006112b3602c83901c60016001607f1b03166128468460401b60eb1d90565b90612b7e565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88460a0015185600001518660200151876040015188606001518960800151896040518863ffffffff1660e01b81526004016128bd969594939291906137a0565b6000604051808303818588803b1580156128d657600080fd5b505af1935050505080156128e8575060015b612941576128f4613565565b806308c379a0036116a65750612908613581565b8061291357506116a8565b8360c0015181906129375760405162461bcd60e51b81526004016107c4919061362f565b5061128081613662565b506c1bd999995c8bdd5c19185d1959609a1b92915050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283928392918816916129b791906137d7565b6000604051808303816000865af19150503d80600081146129f4576040519150601f19603f3d011682016040523d82523d6000602084013e6129f9565b606091505b5091509150818015612a23575080511580612a23575080806020019051810190612a23919061346a565b9695505050505050565b600081841180610eb057508184148015610eb057505050909110919050565b600080612a5883612baa565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e198285010190811315612aa65793841c93612ab0565b8060000385901b94505b81607f039350505050915091565b6000806000612acc856127f1565b915091508160001480612ae65750612ae48183613003565b155b15612b04576b1bd999995c8bd99a5b1b195960a21b925050506112b3565b6040805160e08101909152612b719080612b2336899003890189613519565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff168152600060208201526001604090910152606087013561284c565b925061187885858561302c565b6000806000612b8c85612a4c565b91509150610eb0848302826001811b600019018216151591901c0190565b6000806000808412612bbc5783612bc5565b612bc5846137f3565b9050620d89e8811115612c1a5760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e647300000000000000000060448201526064016107c4565b60006001821615612c3d576ffff97272373d413259a46990580e21399350612c45565b600160801b93505b6002821615612c6f576080612c6a856ffff2e50f5f656932ef12357cf3c7fdcb61380f565b901c93505b6004821615612c99576080612c94856fffe5caca7e10e4e61c3624eaa0941ccf61380f565b901c93505b6008821615612cc3576080612cbe856fffcb9843d60f6159c9db58835c92664361380f565b901c93505b6010821615612ced576080612ce8856fff973b41fa98c081472e6896dfb254bf61380f565b901c93505b6020821615612d17576080612d12856fff2ea16466c96a3843ec78b326b5286061380f565b901c93505b6040821615612d41576080612d3c856ffe5dee046a99a2a811c461f1969c305261380f565b901c93505b6080821615612d6b576080612d66856ffcbe86c7900a88aedcffc83b479aa3a361380f565b901c93505b610100821615612d96576080612d91856ff987a7253ac413176f2b074cf7815e5361380f565b901c93505b610200821615612dc1576080612dbc856ff3392b0822b70005940c7a398e4b70f261380f565b901c93505b610400821615612dec576080612de7856fe7159475a2c29b7443b29c7fa6e889d861380f565b901c93505b610800821615612e17576080612e12856fd097f3bdfd2022b8845ad8f792aa582561380f565b901c93505b611000821615612e42576080612e3d856fa9f746462d870fdf8a65dc1f90e061e461380f565b901c93505b612000821615612e7a576080612e68856fe1b0d342ada5437121767bec575e65ed61380f565b901c9350612e77600182613723565b90505b614000821615612eb2576080612ea0856fc6f84d7e5f423f66048c541550bf3e9661380f565b901c9350612eaf600282613723565b90505b618000821615612eea576080612ed8856f9aa508b5b7a84e1c677de54f3e99bc8f61380f565b901c9350612ee7600482613723565b90505b62010000821615612f23576080612f11856fbad5f1bdb70232cd33865244bdcc089c61380f565b901c9350612f20600982613723565b90505b62020000821615612f5c576080612f4a856f885b9613d7e87aa498106fb7fa5edd3761380f565b901c9350612f59601282613723565b90505b62040000821615612f95576080612f83856f9142e0723efb884889d1f447715afacd61380f565b901c9350612f92602582613723565b90505b62080000821615612fce576080612fbc856fa4d9a773d61316918f140bd96e8e681461380f565b901c9350612fcb604b82613723565b90505b6000851315612fef57600184856000030401935080612fec906137f3565b90505b612ffa816080613723565b92505050915091565b600080600061301185612a4c565b909250905080613021858461380f565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b81148061305857506c1bd999995c8bdd5c19185d1959609a1b81145b806130825750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b1561308c57505050565b60608301356130a36113d336869003860186613519565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b600080602083850312156130f457600080fd5b823567ffffffffffffffff8082111561310c57600080fd5b818501915085601f83011261312057600080fd5b81358181111561312f57600080fd5b8660208260051b850101111561314457600080fd5b60209290920196919550909350505050565b801515811461157a57600080fd5b60006020828403121561317657600080fd5b81356112c581613156565b60008060006060848603121561319657600080fd5b505081359360208301359350604090920135919050565b60006101408284031215610dcb57600080fd5b600061014082840312156131d357600080fd5b6112c583836131ad565b601f8201601f1916810167ffffffffffffffff8111828210171561321157634e487b7160e01b600052604160045260246000fd5b6040525050565b6001600160a01b038116811461157a57600080fd5b60006060828403121561323f57600080fd5b6040516060810181811067ffffffffffffffff8211171561327057634e487b7160e01b600052604160045260246000fd5b604052905080823561328181613218565b8152602083013561329181613218565b6020820152604092830135920191909152919050565b600080600060a084860312156132bc57600080fd5b6132c6858561322d565b92506060840135915060808401356132dd81613156565b809150509250925092565b6000602082840312156132fa57600080fd5b81356112c581613218565b6000806040838503121561331857600080fd5b82359150602083013561332a81613218565b809150509250929050565b6000806040838503121561334857600080fd5b823561335381613218565b9150602083013561332a81613218565b6000806080838503121561337657600080fd5b613380848461322d565b946060939093013593505050565b6000808284036101808112156133a357600080fd5b6133ad85856131ad565b9250604061013f19820112156133c257600080fd5b50610140830190509250929050565b6000806000606084860312156133e657600080fd5b83356133f181613218565b9250602084013561340181613218565b929592945050506040919091013590565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161345057613450613428565b5060010190565b808201808211156112b3576112b3613428565b60006020828403121561347c57600080fd5b81516112c581613156565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b608081016134f382856134be565b8260608301529392505050565b60006020828403121561351257600080fd5b5051919050565b60006060828403121561352b57600080fd5b6112c5838361322d565b60e0810161354382886134be565b8560608301528460808301528360a08301528260c08301529695505050505050565b600060033d111561357e5760046000803e5060005160e01c5b90565b600060443d101561358f5790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156135bf57505050505090565b82850191508151818111156135d75750505050505090565b843d87010160208285010111156135f15750505050505090565b613600602082860101876131dd565b509095945050505050565b60005b8381101561362657818101518382015260200161360e565b50506000910152565b602081526000825180602084015261364e81604085016020870161360b565b601f01601f19169190910160400192915050565b80516020808301519190811015610dcb5760001960209190910360031b1b16919050565b818103818111156112b3576112b3613428565b60a081016136a782866134be565b8360608301528215156080830152949350505050565b634e487b7160e01b600052601260045260246000fd5b81810360008312801583831316838312821617156112b1576112b1613428565b80820260008212600160ff1b8414161561370f5761370f613428565b81810583148215176112b3576112b3613428565b808201828112600083128015821682158216171561187857611878613428565b604080825283519082018190526000906020906060840190828701845b828110156137855781516001600160a01b031684529284019290840190600101613760565b5050506001600160a01b039490941692019190915250919050565b61010081016137af82896134be565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600082516137e981846020870161360b565b9190910192915050565b6000600160ff1b820161380857613808613428565b5060000390565b80820281158282048414176112b3576112b361342856fea264697066735822122004fe444cb894e06d30fe873e8b36caea9f24cc5aeb15967a0e9bf038dd92d3b664736f6c63430008140033",
    "sourceMap": "325:7515:130:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8197:158:99;;;;;;;;;;-1:-1:-1;8197:158:99;;;;;:::i;:::-;;:::i;:::-;;6388:840:130;;;;;;;;;;-1:-1:-1;6388:840:130;;;;;:::i;:::-;;:::i;2010:1900::-;;;;;;:::i;:::-;;:::i;:::-;;;;1511:25:131;;;1567:2;1552:18;;1545:34;;;;1484:18;2010:1900:130;;;;;;;;4721:649:99;;;;;;;;;;-1:-1:-1;4721:649:99;;;;;:::i;:::-;;:::i;:::-;;;2154:25:131;;;2142:2;2127:18;4721:649:99;2008:177:131;7921:161:99;;;;;;;;;;-1:-1:-1;7921:161:99;;;;;:::i;:::-;;:::i;390:31:130:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2367:32:131;;;2349:51;;2337:2;2322:18;390:31:130;2190:216:131;1543:69:99;;;;;;;;;;;;1609:1;1543:69;;425:31:130;;;;;;;;;;;;;;;6178:206;;;;;;;;;;-1:-1:-1;6178:206:130;;;;;:::i;:::-;;:::i;2221:167:123:-;;;;;;;;;;-1:-1:-1;2221:167:123;;;;;:::i;:::-;;:::i;9908:470:99:-;;;;;;;;;;-1:-1:-1;9908:470:99;;;;;:::i;:::-;;:::i;3405:277::-;;;;;;;;;;-1:-1:-1;3405:277:99;;;;;:::i;:::-;;:::i;1473:30::-;;;;;;;;;;;;;;;1330:37;;;;;;;;;;;;;;;4500:154:106;;;;;;;;;;-1:-1:-1;4500:154:106;;;;;:::i;:::-;;:::i;499:35:130:-;;;;;;;;;;;;;;;7512:127:99;;;;;;;;;;-1:-1:-1;7512:127:99;;;;;:::i;:::-;;:::i;6005:568::-;;;;;;;;;;-1:-1:-1;6005:568:99;;;;;:::i;:::-;;:::i;3260:111::-;;;;;;;;;;;;;:::i;7673:214::-;;;;;;;;;;-1:-1:-1;7673:214:99;;;;;:::i;:::-;;:::i;:::-;;;7506:14:131;;7499:22;7481:41;;7469:2;7454:18;7673:214:99;7341:187:131;460:35:130;;;;;;;;;;;;;;;358:28;;;;;;;;;;;;;;;1989:79:123;;;;;;;;;;-1:-1:-1;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;1989:79;;3136:90:99;;;;;;;;;;-1:-1:-1;3213:8:99;;-1:-1:-1;;;;;3213:8:99;3136:90;;1430:35:106;;;;;;;;;;;;;;;8197:158:99;8276:6;8271:80;8288:17;;;8271:80;;;8320:24;8334:6;;8341:1;8334:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8320:13;:24::i;:::-;8307:3;;;:::i;:::-;;;8271:80;;;;8197:158;;:::o;6388:840:130:-;6444:12;6459:145;6487:53;;;;;;;;6501:4;-1:-1:-1;;;;;6487:53:130;;;;;6516:7;-1:-1:-1;;;;;6487:53:130;;;;;6526:13;6487:53;;;6557:8;;6586:11;6459:12;:145::i;:::-;6444:160;;6621:145;6649:53;;;;;;;;6663:4;-1:-1:-1;;;;;6649:53:130;;;;;6678:7;-1:-1:-1;;;;;6649:53:130;;;;;6688:13;6649:53;;;6719:8;;6748:11;6621:12;:145::i;:::-;6610:156;;;;:::i;:::-;;-1:-1:-1;6776:11:130;;6772:452;;6805:21;;-1:-1:-1;;;6805:21:130;;;;;2154:25:131;;;6805:3:130;-1:-1:-1;;;;;6805:12:130;;;;2127:18:131;;6805:21:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6797:56;;;;-1:-1:-1;;;6797:56:130;;8992:2:131;6797:56:130;;;8974:21:131;9031:2;9011:18;;;9004:30;-1:-1:-1;;;9050:18:131;;;9043:52;9112:18;;6797:56:130;;;;;;;;;7113:13;2057:6:123;;7131:32:130;;-1:-1:-1;;;;;2057:6:123;;;;7151:7:130;;7113:13;7131:32;7113:13;7131:32;7151:7;2057:6:123;7131:32:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7112:51;;;7179:8;7171:46;;;;-1:-1:-1;;;7171:46:130;;9553:2:131;7171:46:130;;;9535:21:131;9592:2;9572:18;;;9565:30;9631:27;9611:18;;;9604:55;9676:18;;7171:46:130;9351:349:131;6772:452:130;6438:790;6388:840;:::o;2010:1900::-;2164:4;1193:6:123;;2164:4:130;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;2726:84:130::1;:3;-1:-1:-1::0;;;;;2726:10:130::1;;2737:53;;;;;;;;2751:4;-1:-1:-1::0;;;;;2737:53:130::1;;;;;2766:7;-1:-1:-1::0;;;;;2737:53:130::1;;;;;2776:13;2737:53;;::::0;2792:8:::1;;2726:75;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5058:66:56::0;;-1:-1:-1;;;;;5058:66:56;815:13:11;808:21;;666:173;2726:84:130::1;2725:85;2710:145;;;::::0;-1:-1:-1;;;2710:145:130;;11058:2:131;2710:145:130::1;::::0;::::1;11040:21:131::0;11097:2;11077:18;;;11070:30;11136:31;11116:18;;;11109:59;11185:18;;2710:145:130::1;10856:353:131::0;2710:145:130::1;2877:84;:3;-1:-1:-1::0;;;;;2877:10:130::1;;2888:53;;;;;;;;2902:4;-1:-1:-1::0;;;;;2888:53:130::1;;;;;2917:7;-1:-1:-1::0;;;;;2888:53:130::1;;;;;2927:13;2888:53;;::::0;2943:8:::1;;2877:75;;;;;;;;;;;;;;;;:::i;:84::-;2876:85;2861:145;;;::::0;-1:-1:-1;;;2861:145:130;;11416:2:131;2861:145:130::1;::::0;::::1;11398:21:131::0;11455:2;11435:18;;;11428:30;11494:31;11474:18;;;11467:59;11543:18;;2861:145:130::1;11214:353:131::0;2861:145:130::1;3125:9;3137:38;3161:6;3169:5;3137:23;:38::i;:::-;3125:50;;3196:256;3213:233;;;;;;;;3240:53;;;;;;;;3254:4;-1:-1:-1::0;;;;;3240:53:130::1;;;;;3269:7;-1:-1:-1::0;;;;;3240:53:130::1;;;;;3279:13;3240:53;;::::0;3213:233:::1;;;;3309:4;3213:233;;;;3330:5;3213:233;;;;3353:13;:11;:13::i;:::-;3213:233:::0;;3386:1:::1;3213:233;::::0;::::1;::::0;;;3403:9:::1;3213:233:::0;;;;;;;;;3196:9:::1;:256::i;:::-;-1:-1:-1::0;3183:8:130::1;3182:270:::0;3564:38:::1;3588:6:::0;3596:5;3564:23:::1;:38::i;:::-;3557:45;;3623:248;3640:225;;;;;;;;3667:53;;;;;;;;3681:4;-1:-1:-1::0;;;;;3667:53:130::1;;;;;3696:7;-1:-1:-1::0;;;;;3667:53:130::1;;;;;3706:13;3667:53;;::::0;3640:225:::1;;;;3736:4;3640:225;;;;3757:5;3640:225;;;;3780:13;:11;:13::i;:::-;3640:225;;;;3813:1;3640:225;;;;3830:1;3640:225;;;;3851:5;3640:225;;;;::::0;3623:9:::1;:248::i;:::-;-1:-1:-1::0;3610:8:130::1;3609:262:::0;;;3886:8:::1;::::0;;3609:262;;-1:-1:-1;2010:1900:130;-1:-1:-1;;;;;2010:1900:130:o;4721:649:99:-;4846:11;4827:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;12674:12:99;;-1:-1:-1;5299:32:99::1;5307:5;:16;;;5325:5;5299:7;:32::i;:::-;:37:::0;5291:74:::1;;;::::0;-1:-1:-1;;;5291:74:99;;12127:2:131;5291:74:99::1;::::0;::::1;12109:21:131::0;12166:2;12146:18;;;12139:30;12205:26;12185:18;;;12178:54;12249:18;;5291:74:99::1;11925:348:131::0;5291:74:99::1;4721:649:::0;;;;:::o;7921:161::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;8004:6:99::1;7999:79;8016:17:::0;;::::1;7999:79;;;8048:23;8061:6;;8068:1;8061:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8048:12;:23::i;:::-;8035:3;::::0;::::1;:::i;:::-;;;7999:79;;6178:206:130::0;6308:12;6289:3;1818:10:123;-1:-1:-1;;;;;1818:20:123;;;;:44;;-1:-1:-1;1856:6:123;;-1:-1:-1;;;;;1856:6:123;1842:10;:20;1818:44;1810:81;;;;-1:-1:-1;;;1810:81:123;;;;;;;:::i;:::-;6337:42:130::1;6351:5;6358:7;6367:11;6337:13;:42::i;:::-;6330:49:::0;6178:206;-1:-1:-1;;;;;6178:206:130:o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;12480:2:131;2278:57:123::1;::::0;::::1;12462:21:131::0;12519:2;12499:18;;;12492:30;12558:26;12538:18;;;12531:54;12602:18;;2278:57:123::1;12278:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;2349:51:131;;;2367:16:123::1;::::0;2337:2:131;2322:18;2367:16:123::1;;;;;;;;2221:167:::0;:::o;9908:470:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;10004:6:99::1;:24:::0;10000:82:::1;;10047:28;::::0;-1:-1:-1;;;10047:28:99;;10069:4:::1;10047:28;::::0;::::1;2349:51:131::0;10047:3:99::1;-1:-1:-1::0;;;;;10047:13:99::1;::::0;::::1;::::0;2322:18:131;;10047:28:99::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10038:37;;10000:82;10174:20;::::0;-1:-1:-1;;;10174:20:99;;::::1;::::0;::::1;2154:25:131::0;;;10174:3:99::1;-1:-1:-1::0;;;;;10174:12:99::1;::::0;::::1;::::0;2127:18:131;;10174:20:99::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10166:54;;;::::0;-1:-1:-1;;;10166:54:99;;13022:2:131;10166:54:99::1;::::0;::::1;13004:21:131::0;13061:2;13041:18;;;13034:30;-1:-1:-1;;;13080:18:131;;;13073:51;13141:18;;10166:54:99::1;12820:345:131::0;10166:54:99::1;10227:13;10245:8;-1:-1:-1::0;;;;;10245:13:99::1;10266:6;10245:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10226:51;;;10336:8;10328:45;;;::::0;-1:-1:-1;;;10328:45:99;;13372:2:131;10328:45:99::1;::::0;::::1;13354:21:131::0;13411:2;13391:18;;;13384:30;13450:26;13430:18;;;13423:54;13494:18;;10328:45:99::1;13170:348:131::0;3405:277:99;3480:4;3492:22;3517:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;3517:8;3492:33;-1:-1:-1;;;;;;3535:20:99;;;3531:147;;3590:38;;-1:-1:-1;;;3590:38:99;;-1:-1:-1;;;;;13766:15:131;;;3590:38:99;;;13748:34:131;13818:15;;;13798:18;;;13791:43;3590:20:99;;;;;13683:18:131;;3590:38:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3572:56;;:15;:56;:::i;:::-;3565:63;;;;;3531:147;3656:15;3649:22;;;;;3531:147;3486:196;3405:277;;;;;:::o;4500:154:106:-;4587:14;4621:28;4634:5;4641:7;4621:12;:28::i;:::-;4609:40;4500:154;-1:-1:-1;;;4500:154:106:o;7512:127:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;2349:51:131;;;7616:18:99::1;::::0;2337:2:131;2322:18;7616::99::1;2190:216:131::0;6005:568:99;6148:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;6166:6:99::1;:14;;;-1:-1:-1::0;;;6166:36:99;6162:407:::1;;6212:44;6232:5:::0;6239:16;::::1;6212:19;:44::i;:::-;;8271:80:::0;8197:158;;:::o;6162:407::-:1;6369:13;::::0;::::1;;6349:18;:16;;::::0;;::::1;::::0;::::1;6369:5:::0;6349:16:::1;:::i;:::-;1552:2:47::0;1535:20;;;1419:146;6349:18:99::1;6337:80;::::0;;6384:16;::::1;1511:25:131::0;;6402:14:99::1;::::0;;::::1;;1552:18:131::0;;;1545:34;6337:80:99::1;::::0;1484:18:131;6337:80:99::1;;;;;;;6485:35;6506:5;6513:6;6485:20;:35::i;3260:111::-:0;3304:4;3323:43;3350:1;3363;3323:11;:43::i;:::-;3316:50;;3260:111;:::o;7673:214::-;7769:4;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7789:48:99::1;7814:5;7821:7;7830:6;7789:24;:48::i;:::-;7781:84;;;::::0;-1:-1:-1;;;7781:84:99;;14529:2:131;7781:84:99::1;::::0;::::1;14511:21:131::0;14568:2;14548:18;;;14541:30;14607:25;14587:18;;;14580:53;14650:18;;7781:84:99::1;14327:347:131::0;7781:84:99::1;-1:-1:-1::0;7878:4:99::1;7673:214:::0;;;;;:::o;6942:189:106:-;7016:26;7036:5;7016:19;:26::i;:::-;1609:1:99;7052:8:106;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;7052:8:106;-1:-1:-1;;;;;7052:21:106;;7048:79;;3213:8:99;;-1:-1:-1;;;;;3213:8:99;7083:37:106;;-1:-1:-1;;;7083:37:106;;-1:-1:-1;;;;;13766:15:131;;;7083:37:106;;;13748:34:131;7109:10:106;13818:15:131;;13798:18;;;13791:43;7083:18:106;;;;;;;13683::131;;7083:37:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7048:79;6942:189;:::o;5187:214:12:-;5270:9;5288:8;5298;5310:41;5327:10;5339:11;5310:16;:41::i;:::-;5287:64;;;;5364:32;5388:3;5392;5364:23;:32::i;2655:426:106:-;2715:12;2729:14;2755:3;-1:-1:-1;;;;;2755:18:106;;2781:4;:9;;;2792:4;:10;;;2804:4;:9;;;2815:4;:10;;;2827:4;:11;;;2840:4;:13;;;2755:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2755:99:106;;;;;;;;-1:-1:-1;;2755:99:106;;;;;;;;;;;;:::i;:::-;;;2751:326;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3009:4;:13;;;3024:6;3001:30;;;;;-1:-1:-1;;;3001:30:106;;;;;;;;:::i;:::-;-1:-1:-1;3048:22:106;3062:6;3048:22;:::i;:::-;3039:31;;2959:118;2655:426;;;:::o;2751:326::-;;;;;;;;;;;2909:8;-1:-1:-1;;;2934:17:106;-1:-1:-1;2655:426:106;-1:-1:-1;;2655:426:106:o;5244:773::-;5344:4;;5378:24;;;;:5;:24;:::i;:::-;5371:57;;-1:-1:-1;;;5371:57:106;;5422:4;5371:57;;;2349:51:131;-1:-1:-1;;;;;5371:42:106;;;;;;;2322:18:131;;5371:57:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5356:72;;5449:6;5438:7;:17;5434:46;;5472:1;5465:8;;;;;5434:46;5495:16;5504:7;5495:6;:16;:::i;:::-;5485:26;;5517:22;5542:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;5542:8:106;5517:33;-1:-1:-1;;;;;;5560:20:106;;5556:457;;-1:-1:-1;5597:7:106;-1:-1:-1;5590:14:106;;5556:457;5841:11;-1:-1:-1;;;;;5855:12:106;;;5875:24;;;;:5;:24;:::i;:::-;5855:96;;-1:-1:-1;;;;;;5855:96:106;;;;;;;-1:-1:-1;;;;;17483:15:131;;;5855:96:106;;;17465:34:131;5902:10:106;5923:27;;;17515:18:131;;;17508:43;;;17567:18;;;17560:34;;;5945:4:106;5923:27;;17610:18:131;;;17603:50;17399:19;;5855:96:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5841:110;;5976:7;5966:6;:17;;:40;;5990:16;6000:6;5990:7;:16;:::i;:::-;5966:40;;;5986:1;5966:40;5959:47;;;;;;;5556:457;5350:667;;5244:773;;;;:::o;8617:808:99:-;8676:22;8701:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;8701:8;8676:33;;8824:61;8849:5;8864:3;-1:-1:-1;;8824:24:99;:61::i;:::-;8816:103;;;;-1:-1:-1;;;8816:103:99;;17866:2:131;8816:103:99;;;17848:21:131;17905:2;17885:18;;;17878:30;17944:31;17924:18;;;17917:59;17993:18;;8816:103:99;17664:353:131;8816:103:99;-1:-1:-1;;;;;8929:20:99;;;8925:496;;9067:65;9092:5;9107:7;-1:-1:-1;;9067:24:99;:65::i;:::-;9059:104;;;;-1:-1:-1;;;9059:104:99;;18224:2:131;9059:104:99;;;18206:21:131;18263:2;18243:18;;;18236:30;18302:28;18282:18;;;18275:56;18348:18;;9059:104:99;18022:350:131;9059:104:99;9391:23;;-1:-1:-1;;;9391:23:99;;-1:-1:-1;;;;;2367:32:131;;;9391:23:99;;;2349:51:131;9391:16:99;;;;;2322:18:131;;9391:23:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8670:755;8617:808;:::o;4170:297:106:-;4417:45;;-1:-1:-1;;;4417:45:106;;4387:12;;-1:-1:-1;;;;;4417:3:106;:16;;;;:45;;4434:5;;4441:7;;4450:11;;4417:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4407:55;4170:297;-1:-1:-1;;;;4170:297:106:o;17606:289:99:-;17685:14;17707:23;17733:3;-1:-1:-1;;;;;17733:16:99;;17750:5;17757:7;17733:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17707:58;-1:-1:-1;5160:74:57;;;;;;368:3:10;5589:98:57;;;;;;333:38:10;17833:50:99;6080:78:57;;;;;;17801:83:99;17826:3;17801:83;;17606:289;-1:-1:-1;;;;17606:289:99:o;4093:2081:130:-;4215:7;4283:21;4307:43;4333:5;4340:9;4307:25;:43::i;:::-;4283:67;-1:-1:-1;4561:21:130;;-1:-1:-1;;;;;4639:7:130;4604:42;4611:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4604:42:130;;:212;;4741:64;;;;;;;;;;4747:24;;;;:5;:24;:::i;:::-;-1:-1:-1;;;;;4741:64:130;;;;;4781:7;-1:-1:-1;;;;;4741:64:130;;;;;4791:13;4741:64;;;4807:8;;4604:212;;;4656:64;;;;;;;;;;4662:24;;;;:5;:24;:::i;:::-;-1:-1:-1;;;;;4656:64:130;;;;;4696:7;-1:-1:-1;;;;;4656:64:130;;;;;4706:13;4656:64;;;4722:8;;4604:212;4560:256;;;;-1:-1:-1;;;4826:13:130;:31;4822:1348;;4868:18;4891:25;4910:5;4891:18;:25::i;:::-;4867:49;;;4941:15;4959:3;-1:-1:-1;;;;;4959:10:130;;4970:8;4980:11;4959:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4941:51;;5000:22;5025:3;-1:-1:-1;;;;;5025:16:130;;5042:8;5052:11;5025:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5000:64;;5073:18;5094:17;:9;:15;:17::i;:::-;5073:38;-1:-1:-1;;;;;;5181:11:130;;;;5058:66:56;;;5160:18:130;5058:66:56;5402:29:130;;;5058:66:56;5401:47:130;;;;:::i;:::-;;5385:63;;5501:14;5518:309;5540:258;;;;;;;;5569:8;5540:258;;;;5627:53;5651:13;5666;5627:23;:53::i;:::-;5540:258;;;;;;;;;;5160:74:57;;;;;;5540:258:130;;5741:1;5540:258;;;;;;;;;;5783:4;5540:258;;;;;5808:11;5518:12;:309::i;:::-;5501:326;;-1:-1:-1;;;5839:6:130;:24;5835:145;;5875:36;;;;;;;;;;;;;;;5835:145;5936:35;;;;;;;;;;;;;;;4822:1348;6051:73;6072:8;6091:11;6117:5;6051:12;:73::i;:::-;;-1:-1:-1;;;6132:31:130;;;;;;;7232:606;7365:7;;;;-1:-1:-1;;;;;7545:7:130;7510:42;7517:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7510:42:130;;:128;;7605:7;7614:13;7629:8;;7510:128;;;7562:7;7571:13;7586:8;;7510:128;7672:65;;;;;;;;;7452:186;;-1:-1:-1;7452:186:130;;-1:-1:-1;7452:186:130;-1:-1:-1;7644:154:130;;7672:65;7678:24;;;;:5;:24;:::i;:::-;-1:-1:-1;;;;;7672:65:130;;;;;7712:10;-1:-1:-1;;;;;7672:65:130;;;;;7725:11;7672:65;;;7754:11;7786:5;7644:12;:154::i;:::-;-1:-1:-1;;;;7804:29:130;7232:606;-1:-1:-1;;;;;;7232:606:130:o;5061:145:5:-;5145:4;5164:37;5178:5;5185:7;5194:6;5164:13;:37::i;9710:164:99:-;9783:44;;-1:-1:-1;;;9783:44:99;;9807:4;9783:44;;;13748:34:131;-1:-1:-1;;;;;9822:3:99;13818:15:131;;13798:18;;;13791:43;-1:-1:-1;;9783:15:99;;;;;;13683:18:131;;9783:44:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;9775:94;;;;-1:-1:-1;;;9775:94:99;;19643:2:131;9775:94:99;;;19625:21:131;19682:2;19662:18;;;19655:30;19721:34;19701:18;;;19694:62;-1:-1:-1;;;19772:18:131;;;19765:31;19813:19;;9775:94:99;19441:397:131;4213:929:12;4297:13;4312:8;-1:-1:-1;;;;;4354:10:12;:29;;4346:73;;;;-1:-1:-1;;;4346:73:12;;20045:2:131;4346:73:12;;;20027:21:131;20084:2;20064:18;;;20057:30;20123:33;20103:18;;;20096:61;20174:18;;4346:73:12;19843:355:131;4346:73:12;-1:-1:-1;;;;;4435:11:12;:30;;4427:75;;;;-1:-1:-1;;;4427:75:12;;20405:2:131;4427:75:12;;;20387:21:131;;;20424:18;;;20417:30;20483:34;20463:18;;;20456:62;20535:18;;4427:75:12;20203:356:131;4427:75:12;4514:11;4529:1;4514:16;4510:181;;-1:-1:-1;2606:39:7;;-1:-1:-1;2676:1:7;4542:47:12;;4510:181;4608:10;4622:1;4608:15;4604:87;;-1:-1:-1;2496:39:7;;-1:-1:-1;2566:3:7;4635:47:12;;4604:87;4698:10;4743:11;2898:3:7;4712:10:12;:27;;4711:43;;;;;:::i;:::-;;4698:56;;4763:9;4775:17;4786:5;1891:66:6;-1:-1:-1;;;1333:34:6;1330:41;-1:-1:-1;1327:1:6;1323:49;1288:9;;1285:1;1281:17;;;1317:56;;;;1427:9;;;1407:18;1404:33;1401:1;1397:41;1391:48;1485:9;;;1473:10;1470:25;1467:1;1463:33;1457:40;1582:9;;;1619:1;1615:9;;;1609:16;1653:1;1649:9;;;1643:16;1687:1;1683:9;;;1677:16;1717:9;;;;1711:16;1755:2;1751:10;;;1745:17;1844:28;1839:3;1835:38;1830:128;1824:135;;1169:806;4775:17:12;4763:29;;4808:5;4817:1;4808:10;4800:52;;;;-1:-1:-1;;;4800:52:12;;20766:2:131;4800:52:12;;;20748:21:131;20805:2;20785:18;;;20778:30;20844:32;20824:18;;;20817:60;20894:18;;4800:52:12;20564:354:131;4800:52:12;2943:3:7;4864:4:12;:30;4860:272;;;-1:-1:-1;;4918:30:12;;4966:13;;;;;-1:-1:-1;2898:3:7;4981:20:12;2943:3:7;4981:20:12;;-1:-1:-1;4958:44:12;;4860:272;2943:3:7;5039:30:12;5087:13;;;;-1:-1:-1;2898:3:7;5102:20:12;;-1:-1:-1;4213:929:12;;;;;;:::o;6335:3839::-;6416:9;6437:63;6445:8;6455:3;2496:39:7;2566:3;6437:7:12;:63::i;:::-;6433:118;;;6510:34;;-1:-1:-1;;;6510:34:12;;21125:2:131;6510:34:12;;;21107:21:131;21164:2;21144:18;;;21137:30;21203:26;21183:18;;;21176:54;21247:18;;6510:34:12;20923:348:131;6433:118:12;6560:63;2606:39:7;2676:1;6609:8:12;6619:3;6560:7;:63::i;:::-;6556:119;;;6633:35;;-1:-1:-1;;;6633:35:12;;21478:2:131;6633:35:12;;;21460:21:131;21517:2;21497:18;;;21490:30;21556:27;21536:18;;;21529:55;21601:18;;6633:35:12;21276:349:131;6556:119:12;6680:13;6739:2;6696:39;6731:3;2943::7;6696:39:12;:::i;:::-;:45;;;-1:-1:-1;6747:9:12;6771:29;6797:3;;6771:29;:::i;:::-;6759:41;;;7441:15;;7527:16;;;;;;7513:31;;;;7436:3;7432:25;;;7479:14;;;;7559:18;7602:15;;7684:16;;;;;;7670:31;;;;7593:25;;;7636:14;;;7716:18;;;;7759:15;;7841:16;;;;;;7827:31;;;;7750:25;;;7793:14;;;7873:18;;;;7916:15;;7998:16;;;;;;7984:31;;;;7907:25;;;7950:14;;;8030:18;;;;8073:15;;8155:16;;;;;;8141:31;;;;8064:25;;;8107:14;;;8187:18;;;;8230:15;;8312:16;;;;;;8298:31;;;;8221:25;;;8264:14;;;8344:18;;;;8387:15;;8469:16;;;;;;8455:31;;;;8378:25;;;8421:14;;;8501:18;;;;8544:15;;8626:16;;;;;;8612:31;;;;8535:25;;;8578:14;;;8658:18;;;;8701:15;;8783:16;;;;;;8769:31;;;;8692:25;;;8735:14;;;8815:18;;;;8858:15;;8940:16;;;;;;8926:31;;;;8849:25;;;8892:14;;;8972:18;;;;9015:15;;9097:16;;;;;;9083:31;;;;9006:25;;;9049:14;;;9129:18;;;;9172:15;;9254:16;;;;;;9240:31;;;;9163:25;;;9206:14;;;;9286:18;;;;9329:15;;9411:16;;;;;;9397:31;;;;;9320:25;;;-1:-1:-1;9574:16:12;9593:36;9397:31;9605:24;9593:36;:::i;:::-;9574:55;-1:-1:-1;9677:11:12;9753:3;9696:52;9711:37;9574:55;9696:52;:::i;:::-;9695:61;;;-1:-1:-1;9805:12:12;9884:3;9825:54;:12;9840:39;9825:54;:::i;:::-;9824:63;;9805:83;;9896:17;9915:12;9931:34;9955:8;9931:13;:34::i;:::-;9895:70;;;;9972:16;9991:45;9999:8;10009:3;10014:12;10028:7;9991;:45::i;:::-;9972:64;;10057:8;10046:7;:19;:34;;;;10069:11;10046:34;10042:128;;;10107:7;10090:25;;10042:128;;;10154:8;10137:26;;10042:128;6427:3747;;;;;;;;6335:3839;;;;:::o;6144:656:106:-;6278:7;6295:22;6320:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;6320:8:106;6295:33;-1:-1:-1;;;;;;6338:20:106;;;6334:367;;6393:15;;;6406:1;6393:15;;;;;;;;6368:22;;6393:15;;;;;;;;;;-1:-1:-1;;6368:40:106;-1:-1:-1;6435:24:106;;;;:5;:24;:::i;:::-;6416:6;6423:1;6416:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6416:44:106;;;:9;;;;;;;;;;:44;6590:23;;;;;;;;;:::i;:::-;6571:6;6578:1;6571:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6571:43:106;;;:9;;;;;;;;;:43;6661:33;;-1:-1:-1;;;6661:33:106;;:13;;;;;;:33;;6675:6;;6683:10;;6661:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6360:341;6334:367;6752:43;6778:5;6785:9;6752:25;:43::i;14189:212:99:-;14278:13;;14324:38;14346:16;;;;-1:-1:-1;;;;;14324:11:99;;;;5058:66:56;;;14324:38:99;:::i;:::-;14313:49;-1:-1:-1;14378:11:99;;;;1421:23:56;4674:37;4717:15;4670:63;14368:28:99;;14189:212;;;:::o;501:124:11:-;552:4;571:49;5058:66:56;;;;-1:-1:-1;;;;;5058:66:56;571:12:11;:5;1421:23:56;4674:37;4717:15;4670:63;;4573:168;571:12:11;:34;;:49::i;3116:389:106:-;3202:14;3228:3;-1:-1:-1;;;;;3228:21:106;;3257:4;:9;;;3268:4;:10;;;3280:4;:9;;;3291:4;:10;;;3303:4;:11;;;3316:4;:13;;;3331:7;3228:111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:277;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3433:4;:13;;;3448:6;3425:30;;;;;-1:-1:-1;;;3425:30:106;;;;;;;;:::i;:::-;-1:-1:-1;3472:22:106;3486:6;3472:22;:::i;3224:277::-;-1:-1:-1;;;;3116:389:106;;;;:::o;4155:623:5:-;4637:63;;;-1:-1:-1;;;;;23896:32:131;;;4637:63:5;;;23878:51:131;23945:18;;;;23938:34;;;4637:63:5;;;;;;;;;;23851:18:131;;;;4637:63:5;;;;;;;-1:-1:-1;;;;;4637:63:5;-1:-1:-1;;;4637:63:5;;;4617:84;;-1:-1:-1;;;;;;4617:19:5;;;;:84;;4637:63;4617:84;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4575:126;;;;4715:7;:57;;;;-1:-1:-1;4727:11:5;;:16;;:44;;;4758:4;4747:24;;;;;;;;;;;;:::i;:::-;4707:66;4155:623;-1:-1:-1;;;;;;4155:623:5:o;16515:373:12:-;16613:4;16830:5;16822;:13;:60;;;;16849:5;16840;:14;:41;;;;-1:-1:-1;;;16858:23:12;;;;16814:69;-1:-1:-1;16515:373:12:o;10423:815::-;10480:8;10490;10537:32;10564:4;10537:26;:32::i;:::-;10524:45;;-1:-1:-1;10524:45:12;-1:-1:-1;5056:3:7;10595:33:12;;;10577:15;10777:12;10830:30;;;10826:37;-1:-1:-1;10760:30:12;;;10812:52;;-1:-1:-1;;10890:18:12;;;:47;;10949:8;;10945:177;;;11047:17;;;;10945:177;;;11108:4;11107:5;;11095:3;:18;;11089:24;;10945:177;11217:9;2943:3:7;11188:38:12;11177:50;;10506:728;;;10423:815;;;:::o;15478:1256:99:-;15599:12;15659:13;15674:12;15690:25;15709:5;15690:18;:25::i;:::-;15658:57;;;;16266:8;16278:1;16266:13;:59;;;-1:-1:-1;16283:37:99;:7;16311:8;16283:27;:37::i;:::-;:42;16266:59;16262:100;;;-1:-1:-1;;;16335:20:99;;;;;;16262:100;16394:228;;;;;;;;;16374:275;;16394:228;;;;;;;;16421:5;16394:228;:::i;:::-;;;;;;;;;;;;;;;;;16498:17;;;;5160:74:57;;;;16394:228:99;;;;16544:17;;;;6080:78:57;;;;16394:228:99;;16612:1;16394:228;;;;16592:4;16394:228;;;;;16630:13;;;;16374:12;:275::i;:::-;16367:282;;16690:39;16706:5;16713:9;16724:4;16690:15;:39::i;2339:210:12:-;2422:4;2453:8;2463;2475:19;2489:4;2475:13;:19::i;:::-;2452:42;;;;2509:29;2522:11;2518:3;:15;2534:3;16295:1;16286:8;;-1:-1:-1;;16282:15:12;16276:22;;16273:28;;16324:4;;;16323:12;;15797:549;11962:2858;12032:8;12042;12058:12;12093:1;12085:4;12073:21;:74;;12141:4;12073:74;;;12102:18;12115:4;12102:18;:::i;:::-;12058:89;;2296:6:7;12161:7:12;:25;;12153:61;;;;-1:-1:-1;;;12153:61:12;;24618:2:131;12153:61:12;;;24600:21:131;24657:2;24637:18;;;24630:30;24696:25;24676:18;;;24669:53;24739:18;;12153:61:12;24416:347:131;12153:61:12;12221:15;12256:3;12246:13;;:18;12242:141;;12280:34;12274:40;;12242:141;;;-1:-1:-1;;;12335:41:12;;12242:141;12402:3;12392:13;;:18;12388:94;;12472:3;12427:40;:3;12433:34;12427:40;:::i;:::-;12426:49;;12420:55;;12388:94;12501:3;12491:13;;:18;12487:94;;12571:3;12526:40;:3;12532:34;12526:40;:::i;:::-;12525:49;;12519:55;;12487:94;12600:3;12590:13;;:18;12586:94;;12670:3;12625:40;:3;12631:34;12625:40;:::i;:::-;12624:49;;12618:55;;12586:94;12699:4;12689:14;;:19;12685:95;;12770:3;12725:40;:3;12731:34;12725:40;:::i;:::-;12724:49;;12718:55;;12685:95;12799:4;12789:14;;:19;12785:95;;12870:3;12825:40;:3;12831:34;12825:40;:::i;:::-;12824:49;;12818:55;;12785:95;12899:4;12889:14;;:19;12885:95;;12970:3;12925:40;:3;12931:34;12925:40;:::i;:::-;12924:49;;12918:55;;12885:95;12999:4;12989:14;;:19;12985:95;;13070:3;13025:40;:3;13031:34;13025:40;:::i;:::-;13024:49;;13018:55;;12985:95;13099:5;13089:15;;:20;13085:96;;13171:3;13126:40;:3;13132:34;13126:40;:::i;:::-;13125:49;;13119:55;;13085:96;13200:5;13190:15;;:20;13186:96;;13272:3;13227:40;:3;13233:34;13227:40;:::i;:::-;13226:49;;13220:55;;13186:96;13301:5;13291:15;;:20;13287:96;;13373:3;13328:40;:3;13334:34;13328:40;:::i;:::-;13327:49;;13321:55;;13287:96;13402:5;13392:15;;:20;13388:96;;13474:3;13429:40;:3;13435:34;13429:40;:::i;:::-;13428:49;;13422:55;;13388:96;13503:6;13493:16;;:21;13489:97;;13576:3;13531:40;:3;13537:34;13531:40;:::i;:::-;13530:49;;13524:55;;13489:97;13605:6;13595:16;;:21;13591:121;;13678:3;13633:40;:3;13639:34;13633:40;:::i;:::-;13632:49;;;-1:-1:-1;13689:16:12;13704:1;13689:16;;:::i;:::-;;;13591:121;13731:6;13721:16;;:21;13717:121;;13804:3;13759:40;:3;13765:34;13759:40;:::i;:::-;13758:49;;;-1:-1:-1;13815:16:12;13830:1;13815:16;;:::i;:::-;;;13717:121;13857:6;13847:16;;:21;13843:121;;13930:3;13885:40;:3;13891:34;13885:40;:::i;:::-;13884:49;;;-1:-1:-1;13941:16:12;13956:1;13941:16;;:::i;:::-;;;13843:121;13983:7;13973:17;;:22;13969:122;;14057:3;14012:40;:3;14018:34;14012:40;:::i;:::-;14011:49;;;-1:-1:-1;14068:16:12;14083:1;14068:16;;:::i;:::-;;;13969:122;14110:7;14100:17;;:22;14096:123;;14184:3;14139:40;:3;14145:34;14139:40;:::i;:::-;14138:49;;;-1:-1:-1;14195:17:12;14210:2;14195:17;;:::i;:::-;;;14096:123;14238:7;14228:17;;:22;14224:123;;14312:3;14267:40;:3;14273:34;14267:40;:::i;:::-;14266:49;;;-1:-1:-1;14323:17:12;14338:2;14323:17;;:::i;:::-;;;14224:123;14366:7;14356:17;;:22;14352:123;;14440:3;14395:40;:3;14401:34;14395:40;:::i;:::-;14394:49;;;-1:-1:-1;14451:17:12;14466:2;14451:17;;:::i;:::-;;;14352:123;14504:1;14496:4;14484:21;14480:300;;;14730:1;14724:3;14718;14715:1;14711:11;14707:21;14703:29;14696:36;;14762:11;14761:12;;;:::i;:::-;14747:26;;14480:300;14796:17;14802:11;14796:3;:17;:::i;:::-;14785:29;;12052:2768;;11962:2858;;;:::o;2156:179::-;2237:4;2250:8;2260;2272:19;2286:4;2272:13;:19::i;:::-;2249:42;;-1:-1:-1;2249:42:12;-1:-1:-1;2249:42:12;2305:17;2311:11;2249:42;2305:17;:::i;:::-;2304:26;;;2156:179;-1:-1:-1;;;;;2156:179:12:o;6902:576:99:-;-1:-1:-1;;;7166:12:99;:29;:63;;;;-1:-1:-1;;;7199:12:99;:30;7166:63;:114;;;;7233:12;:47;;7166:114;7155:319;;;6902:576;;;:::o;7155:319::-;7428:13;;;;7408:18;:16;;;;;;;7428:5;7408:16;:::i;:18::-;7396:71;;;1511:25:131;;;1567:2;1552:18;;1545:34;;;7396:71:99;;1484:18:131;7396:71:99;;;;;;;6902:576;;;:::o;14:628:131:-;113:6;121;174:2;162:9;153:7;149:23;145:32;142:52;;;190:1;187;180:12;142:52;230:9;217:23;259:18;300:2;292:6;289:14;286:34;;;316:1;313;306:12;286:34;354:6;343:9;339:22;329:32;;399:7;392:4;388:2;384:13;380:27;370:55;;421:1;418;411:12;370:55;461:2;448:16;487:2;479:6;476:14;473:34;;;503:1;500;493:12;473:34;556:7;551:2;541:6;538:1;534:14;530:2;526:23;522:32;519:45;516:65;;;577:1;574;567:12;516:65;608:2;600:11;;;;;630:6;;-1:-1:-1;14:628:131;;-1:-1:-1;;;;14:628:131:o;647:118::-;733:5;726:13;719:21;712:5;709:32;699:60;;755:1;752;745:12;770:241;826:6;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;934:9;921:23;953:28;975:5;953:28;:::i;1016:316::-;1093:6;1101;1109;1162:2;1150:9;1141:7;1137:23;1133:32;1130:52;;;1178:1;1175;1168:12;1130:52;-1:-1:-1;;1201:23:131;;;1271:2;1256:18;;1243:32;;-1:-1:-1;1322:2:131;1307:18;;;1294:32;;1016:316;-1:-1:-1;1016:316:131:o;1590:160::-;1654:5;1699:3;1690:6;1685:3;1681:16;1677:26;1674:46;;;1716:1;1713;1706:12;1755:248;1846:6;1899:3;1887:9;1878:7;1874:23;1870:33;1867:53;;;1916:1;1913;1906:12;1867:53;1939:58;1989:7;1978:9;1939:58;:::i;2775:346::-;2885:2;2866:13;;-1:-1:-1;;2862:27:131;2850:40;;2920:18;2905:34;;2941:22;;;2902:62;2899:185;;;3006:10;3001:3;2997:20;2994:1;2987:31;3041:4;3038:1;3031:15;3069:4;3066:1;3059:15;2899:185;3100:2;3093:22;-1:-1:-1;;2775:346:131:o;3126:131::-;-1:-1:-1;;;;;3201:31:131;;3191:42;;3181:70;;3247:1;3244;3237:12;3262:779;3314:5;3362:4;3350:9;3345:3;3341:19;3337:30;3334:50;;;3380:1;3377;3370:12;3334:50;3413:2;3407:9;3455:4;3447:6;3443:17;3526:6;3514:10;3511:22;3490:18;3478:10;3475:34;3472:62;3469:185;;;3576:10;3571:3;3567:20;3564:1;3557:31;3611:4;3608:1;3601:15;3639:4;3636:1;3629:15;3469:185;3670:2;3663:22;3703:6;-1:-1:-1;3703:6:131;3733:23;;3765:33;3733:23;3765:33;:::i;:::-;3807:23;;3882:2;3867:18;;3854:32;3895:33;3854:32;3895:33;:::i;:::-;3956:2;3944:15;;3937:32;4030:2;4015:18;;;4002:32;3985:15;;3978:57;;;;3262:779;;-1:-1:-1;3262:779:131:o;4046:423::-;4144:6;4152;4160;4213:3;4201:9;4192:7;4188:23;4184:33;4181:53;;;4230:1;4227;4220:12;4181:53;4253:43;4288:7;4277:9;4253:43;:::i;:::-;4243:53;;4343:2;4332:9;4328:18;4315:32;4305:42;;4397:3;4386:9;4382:19;4369:33;4411:28;4433:5;4411:28;:::i;:::-;4458:5;4448:15;;;4046:423;;;;;:::o;4656:247::-;4715:6;4768:2;4756:9;4747:7;4743:23;4739:32;4736:52;;;4784:1;4781;4774:12;4736:52;4823:9;4810:23;4842:31;4867:5;4842:31;:::i;4908:323::-;4984:6;4992;5045:2;5033:9;5024:7;5020:23;5016:32;5013:52;;;5061:1;5058;5051:12;5013:52;5097:9;5084:23;5074:33;;5157:2;5146:9;5142:18;5129:32;5170:31;5195:5;5170:31;:::i;:::-;5220:5;5210:15;;;4908:323;;;;;:::o;5236:401::-;5317:6;5325;5378:2;5366:9;5357:7;5353:23;5349:32;5346:52;;;5394:1;5391;5384:12;5346:52;5433:9;5420:23;5452:31;5477:5;5452:31;:::i;:::-;5502:5;-1:-1:-1;5559:2:131;5544:18;;5531:32;5572:33;5531:32;5572:33;:::i;5877:293::-;5969:6;5977;6030:3;6018:9;6009:7;6005:23;6001:33;5998:53;;;6047:1;6044;6037:12;5998:53;6070:43;6105:7;6094:9;6070:43;:::i;:::-;6060:53;6160:2;6145:18;;;;6132:32;;-1:-1:-1;;;5877:293:131:o;6451:411::-;6583:6;6591;6635:9;6626:7;6622:23;6665:3;6661:2;6657:12;6654:32;;;6682:1;6679;6672:12;6654:32;6705:58;6755:7;6744:9;6705:58;:::i;:::-;6695:68;-1:-1:-1;6798:2:131;-1:-1:-1;;6779:17:131;;6775:26;6772:46;;;6814:1;6811;6804:12;6772:46;;6852:3;6841:9;6837:19;6827:29;;6451:411;;;;;:::o;6867:469::-;6957:6;6965;6973;7026:2;7014:9;7005:7;7001:23;6997:32;6994:52;;;7042:1;7039;7032:12;6994:52;7081:9;7068:23;7100:31;7125:5;7100:31;:::i;:::-;7150:5;-1:-1:-1;7207:2:131;7192:18;;7179:32;7220:33;7179:32;7220:33;:::i;:::-;6867:469;;7272:7;;-1:-1:-1;;;7326:2:131;7311:18;;;;7298:32;;6867:469::o;7741:127::-;7802:10;7797:3;7793:20;7790:1;7783:31;7833:4;7830:1;7823:15;7857:4;7854:1;7847:15;8138:127;8199:10;8194:3;8190:20;8187:1;8180:31;8230:4;8227:1;8220:15;8254:4;8251:1;8244:15;8270:135;8309:3;8330:17;;;8327:43;;8350:18;;:::i;:::-;-1:-1:-1;8397:1:131;8386:13;;8270:135::o;8410:125::-;8475:9;;;8496:10;;;8493:36;;;8509:18;;:::i;8540:245::-;8607:6;8660:2;8648:9;8639:7;8635:23;8631:32;8628:52;;;8676:1;8673;8666:12;8628:52;8708:9;8702:16;8727:28;8749:5;8727:28;:::i;9705:348::-;9907:2;9889:21;;;9946:2;9926:18;;;9919:30;9985:26;9980:2;9965:18;;9958:54;10044:2;10029:18;;9705:348::o;10058:258::-;10171:12;;-1:-1:-1;;;;;10167:21:131;;;10155:34;;10242:4;10231:16;;;10225:23;10221:32;;;10205:14;;;10198:56;10303:4;10292:16;;;10286:23;10270:14;;10263:47;10058:258::o;10321:314::-;10531:3;10516:19;;10544:42;10520:9;10568:6;10544:42;:::i;:::-;10622:6;10617:2;10606:9;10602:18;10595:34;10321:314;;;;;:::o;10640:211::-;10737:6;10790:2;10778:9;10769:7;10765:23;10761:32;10758:52;;;10806:1;10803;10796:12;10758:52;-1:-1:-1;10829:16:131;;10640:211;-1:-1:-1;10640:211:131:o;13845:224::-;13928:6;13981:2;13969:9;13960:7;13956:23;13952:32;13949:52;;;13997:1;13994;13987:12;13949:52;14020:43;14055:7;14044:9;14020:43;:::i;14679:554::-;14997:3;14982:19;;15010:42;14986:9;15034:6;15010:42;:::i;:::-;15088:6;15083:2;15072:9;15068:18;15061:34;15132:6;15126:3;15115:9;15111:19;15104:35;15176:6;15170:3;15159:9;15155:19;15148:35;15220:6;15214:3;15203:9;15199:19;15192:35;14679:554;;;;;;;;:::o;15238:179::-;15273:3;15315:1;15297:16;15294:23;15291:120;;;15361:1;15358;15355;15340:23;-1:-1:-1;15398:1:131;15392:8;15387:3;15383:18;15291:120;15238:179;:::o;15422:671::-;15461:3;15503:4;15485:16;15482:26;15479:39;;;15422:671;:::o;15479:39::-;15545:2;15539:9;-1:-1:-1;;15610:16:131;15606:25;;15603:1;15539:9;15582:50;15661:4;15655:11;15685:16;15720:18;15791:2;15784:4;15776:6;15772:17;15769:25;15764:2;15756:6;15753:14;15750:45;15747:58;;;15798:5;;;;;15422:671;:::o;15747:58::-;15835:6;15829:4;15825:17;15814:28;;15871:3;15865:10;15898:2;15890:6;15887:14;15884:27;;;15904:5;;;;;;15422:671;:::o;15884:27::-;15988:2;15969:16;15963:4;15959:27;15955:36;15948:4;15939:6;15934:3;15930:16;15926:27;15923:69;15920:82;;;15995:5;;;;;;15422:671;:::o;15920:82::-;16011:57;16062:4;16053:6;16045;16041:19;16037:30;16031:4;16011:57;:::i;:::-;-1:-1:-1;16084:3:131;;15422:671;-1:-1:-1;;;;;15422:671:131:o;16098:250::-;16183:1;16193:113;16207:6;16204:1;16201:13;16193:113;;;16283:11;;;16277:18;16264:11;;;16257:39;16229:2;16222:10;16193:113;;;-1:-1:-1;;16340:1:131;16322:16;;16315:27;16098:250::o;16353:396::-;16502:2;16491:9;16484:21;16465:4;16534:6;16528:13;16577:6;16572:2;16561:9;16557:18;16550:34;16593:79;16665:6;16660:2;16649:9;16645:18;16640:2;16632:6;16628:15;16593:79;:::i;:::-;16733:2;16712:15;-1:-1:-1;;16708:29:131;16693:45;;;;16740:2;16689:54;;16353:396;-1:-1:-1;;16353:396:131:o;16754:297::-;16872:12;;16919:4;16908:16;;;16902:23;;16872:12;16937:16;;16934:111;;;-1:-1:-1;;17011:4:131;17007:17;;;;17004:1;17000:25;16996:38;16985:50;;16754:297;-1:-1:-1;16754:297:131:o;17056:128::-;17123:9;;;17144:11;;;17141:37;;;17158:18;;:::i;18377:396::-;18609:3;18594:19;;18622:42;18598:9;18646:6;18622:42;:::i;:::-;18700:6;18695:2;18684:9;18680:18;18673:34;18758:6;18751:14;18744:22;18738:3;18727:9;18723:19;18716:51;18377:396;;;;;;:::o;19000:127::-;19061:10;19056:3;19052:20;19049:1;19042:31;19092:4;19089:1;19082:15;19116:4;19113:1;19106:15;21630:200;21696:9;;;21669:4;21724:9;;21752:10;;21764:12;;;21748:29;21787:12;;;21779:21;;21745:56;21742:82;;;21804:18;;:::i;21835:237::-;21907:9;;;21874:7;21932:9;;-1:-1:-1;;;21943:18:131;;21928:34;21925:60;;;21965:18;;:::i;:::-;22038:1;22029:7;22024:16;22021:1;22018:23;22014:1;22007:9;22004:38;21994:72;;22046:18;;:::i;22077:216::-;22141:9;;;22169:11;;;22116:3;22199:9;;22227:10;;22223:19;;22252:10;;22244:19;;22220:44;22217:70;;;22267:18;;:::i;22298:770::-;22529:2;22541:21;;;22611:13;;22514:18;;;22633:22;;;22481:4;;22708;;22686:2;22671:18;;;22735:15;;;22481:4;22778:195;22792:6;22789:1;22786:13;22778:195;;;22857:13;;-1:-1:-1;;;;;22853:39:131;22841:52;;22913:12;;;;22948:15;;;;22889:1;22807:9;22778:195;;;-1:-1:-1;;;;;;;;23029:32:131;;;;23009:18;;23002:60;;;;-1:-1:-1;22990:3:131;22298:770;-1:-1:-1;22298:770:131:o;23073:626::-;23419:3;23404:19;;23432:42;23408:9;23456:6;23432:42;:::i;:::-;23505:2;23490:18;;23483:34;;;;23548:3;23533:19;;23526:35;;;;23592:3;23577:19;;23570:35;;;;23636:3;23621:19;;23614:35;23680:3;23665:19;;;23658:35;23073:626;;-1:-1:-1;23073:626:131:o;23983:287::-;24112:3;24150:6;24144:13;24166:66;24225:6;24220:3;24213:4;24205:6;24201:17;24166:66;:::i;:::-;24248:16;;;;;23983:287;-1:-1:-1;;23983:287:131:o;24275:136::-;24310:3;-1:-1:-1;;;24331:22:131;;24328:48;;24356:18;;:::i;:::-;-1:-1:-1;24396:1:131;24392:13;;24275:136::o;24768:168::-;24841:9;;;24872;;24889:15;;;24883:22;;24869:37;24859:71;;24910:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "81625": [
        {
          "start": 910,
          "length": 32
        },
        {
          "start": 4700,
          "length": 32
        },
        {
          "start": 4746,
          "length": 32
        }
      ],
      "81629": [
        {
          "start": 858,
          "length": 32
        },
        {
          "start": 1806,
          "length": 32
        },
        {
          "start": 2214,
          "length": 32
        },
        {
          "start": 2596,
          "length": 32
        },
        {
          "start": 3365,
          "length": 32
        },
        {
          "start": 3657,
          "length": 32
        },
        {
          "start": 4054,
          "length": 32
        },
        {
          "start": 4194,
          "length": 32
        },
        {
          "start": 4934,
          "length": 32
        },
        {
          "start": 5535,
          "length": 32
        },
        {
          "start": 6300,
          "length": 32
        },
        {
          "start": 6640,
          "length": 32
        },
        {
          "start": 6777,
          "length": 32
        },
        {
          "start": 7360,
          "length": 32
        },
        {
          "start": 7507,
          "length": 32
        },
        {
          "start": 8336,
          "length": 32
        },
        {
          "start": 10320,
          "length": 32
        }
      ],
      "84656": [
        {
          "start": 1343,
          "length": 32
        },
        {
          "start": 5397,
          "length": 32
        },
        {
          "start": 6100,
          "length": 32
        },
        {
          "start": 10123,
          "length": 32
        }
      ],
      "91203": [
        {
          "start": 1231,
          "length": 32
        },
        {
          "start": 1474,
          "length": 32
        },
        {
          "start": 1629,
          "length": 32
        },
        {
          "start": 2272,
          "length": 32
        },
        {
          "start": 2654,
          "length": 32
        },
        {
          "start": 2932,
          "length": 32
        },
        {
          "start": 3156,
          "length": 32
        }
      ],
      "91206": [
        {
          "start": 581,
          "length": 32
        },
        {
          "start": 1521,
          "length": 32
        },
        {
          "start": 2319,
          "length": 32
        },
        {
          "start": 2979,
          "length": 32
        },
        {
          "start": 6997,
          "length": 32
        },
        {
          "start": 7100,
          "length": 32
        },
        {
          "start": 7975,
          "length": 32
        },
        {
          "start": 8039,
          "length": 32
        }
      ],
      "91209": [
        {
          "start": 678,
          "length": 32
        },
        {
          "start": 1676,
          "length": 32
        },
        {
          "start": 2701,
          "length": 32
        },
        {
          "start": 3203,
          "length": 32
        },
        {
          "start": 7230,
          "length": 32
        },
        {
          "start": 8113,
          "length": 32
        }
      ],
      "91211": [
        {
          "start": 1179,
          "length": 32
        },
        {
          "start": 1568,
          "length": 32
        },
        {
          "start": 2366,
          "length": 32
        },
        {
          "start": 3026,
          "length": 32
        },
        {
          "start": 7147,
          "length": 32
        },
        {
          "start": 8072,
          "length": 32
        }
      ],
      "91213": [
        {
          "start": 994,
          "length": 32
        },
        {
          "start": 1723,
          "length": 32
        },
        {
          "start": 2748,
          "length": 32
        },
        {
          "start": 3250,
          "length": 32
        },
        {
          "start": 7277,
          "length": 32
        },
        {
          "start": 8146,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BASE()": "ec342ad0",
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "RESERVE_ID()": "fbc7d10b",
    "STABLE1()": "5450af30",
    "STABLE2()": "6a7ee749",
    "TICK_SPACING1()": "eafb6141",
    "TICK_SPACING2()": "bbce228e",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "checkList(address[])": "03eb17e2",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "newAmplifiedOffers(uint256,uint256,uint256)": "15986e4a",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "retractOffer((address,address,uint256),uint256,bool)": "6e7a5cb8",
    "retractOffers(bool)": "150957c7",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setRouter(address)": "c0d78655",
    "withdrawFromMangrove(uint256,address)": "7144df24"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"base\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"stable1\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"stable2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing2\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"SetReserveId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLE1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STABLE2\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TICK_SPACING1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TICK_SPACING2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wants1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wants2\",\"type\":\"uint256\"}],\"name\":\"newAmplifiedOffers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deprovision\",\"type\":\"bool\"}],\"name\":\"retractOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"freeWei\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"deprovision\",\"type\":\"bool\"}],\"name\":\"retractOffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetReserveId(address)\":{\"params\":{\"reserveId\":\"identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"newAmplifiedOffers(uint256,uint256,uint256)\":{\"details\":\"these offer's provision must be in msg.value`reserve(admin())` must have approved base for `this` contract transfer prior to calling this function\",\"params\":{\"gives\":\"in BASE decimals\",\"wants1\":\"in STABLE1 decimals\",\"wants2\":\"in STABLE2 decimals\"},\"returns\":{\"_0\":\"(offerid for STABLE1, offerid for STABLE2)\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetReserveId(address)\":{\"notice\":\"`reserveId` is set in the constructorby emitting this event, an indexer will be able to keep track of what reserve is used.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"}},\"kind\":\"user\",\"methods\":{\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"RESERVE_ID()\":{\"notice\":\"identifier of this contract's reserve when using a router\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/toy_strategies/offer_maker/Amplifier.sol\":\"Amplifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol\":{\"keccak256\":\"0x60f2462f860db516f3da0ae805b0e09bc986705f90304cd1e5bff61b6f5ae80d\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://541dd0a15bd39414a57a6b73117b21ac0057f2e258c5a516335887ea5fd3d9b2\",\"dweb:/ipfs/QmVtWJRw2DJ6cdhwqm7sRJkjnGPZz1cwWsEzd6j1JDAyxR\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol\":{\"keccak256\":\"0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066\",\"dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/toy_strategies/offer_maker/Amplifier.sol\":{\"keccak256\":\"0x0a6462766252b61d5d73657ae7b1f0e9b74a8ce8744e55dd28dcec809bc71631\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://759b996cbc62e1f170b49030d1b3684764735f3dafcb8888fc618daea95a615b\",\"dweb:/ipfs/QmUictx244gFYnYVhfjC2sXkNiJYVvCCZvEK9QLpBX6CRN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "base",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "stable1",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "stable2",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing2",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "admin",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetReserveId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RESERVE_ID",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STABLE1",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STABLE2",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TICK_SPACING1",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TICK_SPACING2",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "wants2",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "newAmplifiedOffers",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "deprovision",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "freeWei",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "deprovision",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "newAmplifiedOffers(uint256,uint256,uint256)": {
            "details": "these offer's provision must be in msg.value`reserve(admin())` must have approved base for `this` contract transfer prior to calling this function",
            "params": {
              "gives": "in BASE decimals",
              "wants1": "in STABLE1 decimals",
              "wants2": "in STABLE2 decimals"
            },
            "returns": {
              "_0": "(offerid for STABLE1, offerid for STABLE2)"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "RESERVE_ID()": {
            "notice": "identifier of this contract's reserve when using a router"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/toy_strategies/offer_maker/Amplifier.sol": "Amplifier"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol": {
        "keccak256": "0x60f2462f860db516f3da0ae805b0e09bc986705f90304cd1e5bff61b6f5ae80d",
        "urls": [
          "bzz-raw://541dd0a15bd39414a57a6b73117b21ac0057f2e258c5a516335887ea5fd3d9b2",
          "dweb:/ipfs/QmVtWJRw2DJ6cdhwqm7sRJkjnGPZz1cwWsEzd6j1JDAyxR"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol": {
        "keccak256": "0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5",
        "urls": [
          "bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066",
          "dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/toy_strategies/offer_maker/Amplifier.sol": {
        "keccak256": "0x0a6462766252b61d5d73657ae7b1f0e9b74a8ce8744e55dd28dcec809bc71631",
        "urls": [
          "bzz-raw://759b996cbc62e1f170b49030d1b3684764735f3dafcb8888fc618daea95a615b",
          "dweb:/ipfs/QmUictx244gFYnYVhfjC2sXkNiJYVvCCZvEK9QLpBX6CRN"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/toy_strategies/offer_maker/Amplifier.sol",
    "id": 91737,
    "exportedSymbols": {
      "AbstractRouter": [
        88623
      ],
      "Amplifier": [
        91736
      ],
      "Direct": [
        85066
      ],
      "IERC20": [
        88
      ],
      "IMangrove": [
        54127
      ],
      "IOfferLogic": [
        83578
      ],
      "MangroveOffer": [
        82367
      ],
      "MgvLib": [
        55985
      ],
      "MonoRouter": [
        88662
      ],
      "OLKey": [
        55875
      ],
      "Offer": [
        66949
      ],
      "OfferDetail": [
        67755
      ],
      "SimpleRouter": [
        88231
      ],
      "Tick": [
        5280
      ],
      "TickLib": [
        6401
      ],
      "TransferLib": [
        4306
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:7800:130",
    "nodes": [
      {
        "id": 91189,
        "nodeType": "PragmaDirective",
        "src": "41:24:130",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 91190,
        "nodeType": "ImportDirective",
        "src": "67:68:130",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol",
        "file": "@mgv-strats/src/strategies/offer_maker/abstract/Direct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91737,
        "sourceUnit": 85067,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91191,
        "nodeType": "ImportDirective",
        "src": "136:61:130",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol",
        "file": "@mgv-strats/src/strategies/routers/SimpleRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91737,
        "sourceUnit": 88232,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 91195,
        "nodeType": "ImportDirective",
        "src": "198:68:130",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91737,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91192,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55985,
              "src": "206:6:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 91193,
              "name": "Offer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66949,
              "src": "214:5:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 91194,
              "name": "OfferDetail",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67755,
              "src": "221:11:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91198,
        "nodeType": "ImportDirective",
        "src": "267:56:130",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol",
        "file": "@mgv/lib/core/TickLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 91737,
        "sourceUnit": 6402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 91196,
              "name": "TickLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6401,
              "src": "275:7:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 91197,
              "name": "Tick",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5280,
              "src": "284:4:130",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 91736,
        "nodeType": "ContractDefinition",
        "src": "325:7515:130",
        "nodes": [
          {
            "id": 91203,
            "nodeType": "VariableDeclaration",
            "src": "358:28:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec342ad0",
            "mutability": "immutable",
            "name": "BASE",
            "nameLocation": "382:4:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$88",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 91202,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91201,
                "name": "IERC20",
                "nameLocations": [
                  "358:6:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88,
                "src": "358:6:130"
              },
              "referencedDeclaration": 88,
              "src": "358:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$88",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91206,
            "nodeType": "VariableDeclaration",
            "src": "390:31:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "5450af30",
            "mutability": "immutable",
            "name": "STABLE1",
            "nameLocation": "414:7:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$88",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 91205,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91204,
                "name": "IERC20",
                "nameLocations": [
                  "390:6:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88,
                "src": "390:6:130"
              },
              "referencedDeclaration": 88,
              "src": "390:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$88",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91209,
            "nodeType": "VariableDeclaration",
            "src": "425:31:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "6a7ee749",
            "mutability": "immutable",
            "name": "STABLE2",
            "nameLocation": "449:7:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$88",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 91208,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 91207,
                "name": "IERC20",
                "nameLocations": [
                  "425:6:130"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88,
                "src": "425:6:130"
              },
              "referencedDeclaration": 88,
              "src": "425:6:130",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$88",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91211,
            "nodeType": "VariableDeclaration",
            "src": "460:35:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "eafb6141",
            "mutability": "immutable",
            "name": "TICK_SPACING1",
            "nameLocation": "482:13:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91210,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "460:4:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91213,
            "nodeType": "VariableDeclaration",
            "src": "499:35:130",
            "nodes": [],
            "constant": false,
            "functionSelector": "bbce228e",
            "mutability": "immutable",
            "name": "TICK_SPACING2",
            "nameLocation": "521:13:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91212,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "499:4:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 91216,
            "nodeType": "VariableDeclaration",
            "src": "617:13:130",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 91214,
              "nodeType": "StructuredDocumentation",
              "src": "539:75:130",
              "text": "mapping(IERC20 => mapping(IERC20 => uint)) // base -> stable -> offerid"
            },
            "mutability": "mutable",
            "name": "offerId1",
            "nameLocation": "622:8:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91215,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "617:4:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 91218,
            "nodeType": "VariableDeclaration",
            "src": "665:13:130",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "offerId2",
            "nameLocation": "670:8:130",
            "scope": 91736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 91217,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "665:4:130",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 91297,
            "nodeType": "FunctionDefinition",
            "src": "937:720:130",
            "nodes": [],
            "body": {
              "id": 91296,
              "nodeType": "Block",
              "src": "1133:524:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 91247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91245,
                      "name": "STABLE1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91206,
                      "src": "1214:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91246,
                      "name": "stable1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91227,
                      "src": "1224:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1214:17:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 91248,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:17:130"
                },
                {
                  "expression": {
                    "id": 91251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91249,
                      "name": "STABLE2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91209,
                      "src": "1237:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91250,
                      "name": "stable2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91230,
                      "src": "1247:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1237:17:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 91252,
                  "nodeType": "ExpressionStatement",
                  "src": "1237:17:130"
                },
                {
                  "expression": {
                    "id": 91255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91253,
                      "name": "TICK_SPACING1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91211,
                      "src": "1260:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91254,
                      "name": "tickSpacing1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91232,
                      "src": "1276:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1260:28:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91256,
                  "nodeType": "ExpressionStatement",
                  "src": "1260:28:130"
                },
                {
                  "expression": {
                    "id": 91259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91257,
                      "name": "TICK_SPACING2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91213,
                      "src": "1294:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91258,
                      "name": "tickSpacing2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91234,
                      "src": "1310:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1294:28:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91260,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:28:130"
                },
                {
                  "expression": {
                    "id": 91263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91261,
                      "name": "BASE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91203,
                      "src": "1328:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 91262,
                      "name": "base",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91224,
                      "src": "1335:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1328:11:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 91264,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:11:130"
                },
                {
                  "assignments": [
                    91267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91267,
                      "mutability": "mutable",
                      "name": "router_",
                      "nameLocation": "1360:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91296,
                      "src": "1345:22:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      },
                      "typeName": {
                        "id": 91266,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91265,
                          "name": "AbstractRouter",
                          "nameLocations": [
                            "1345:14:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88623,
                          "src": "1345:14:130"
                        },
                        "referencedDeclaration": 88623,
                        "src": "1345:14:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91272,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 91270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1370:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleRouter_$88231_$",
                        "typeString": "function () returns (contract SimpleRouter)"
                      },
                      "typeName": {
                        "id": 91269,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91268,
                          "name": "SimpleRouter",
                          "nameLocations": [
                            "1374:12:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88231,
                          "src": "1374:12:130"
                        },
                        "referencedDeclaration": 88231,
                        "src": "1374:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SimpleRouter_$88231",
                          "typeString": "contract SimpleRouter"
                        }
                      }
                    },
                    "id": 91271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:18:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleRouter_$88231",
                      "typeString": "contract SimpleRouter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1345:43:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91274,
                        "name": "router_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91267,
                        "src": "1404:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      ],
                      "id": 91273,
                      "name": "setRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81922,
                      "src": "1394:9:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_AbstractRouter_$88623_$returns$__$",
                        "typeString": "function (contract AbstractRouter)"
                      }
                    },
                    "id": 91275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1394:18:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91276,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:18:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 91282,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1596:4:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Amplifier_$91736",
                              "typeString": "contract Amplifier"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Amplifier_$91736",
                              "typeString": "contract Amplifier"
                            }
                          ],
                          "id": 91281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1588:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 91280,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1588:7:130",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 91283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1588:13:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91277,
                        "name": "router_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91267,
                        "src": "1575:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 91279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1583:4:130",
                      "memberName": "bind",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88498,
                      "src": "1575:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:27:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91285,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:27:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91289,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91236,
                        "src": "1625:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 91286,
                        "name": "router_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91267,
                        "src": "1608:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "id": 91288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1616:8:130",
                      "memberName": "setAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89840,
                      "src": "1608:16:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 91290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1608:23:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91291,
                  "nodeType": "ExpressionStatement",
                  "src": "1608:23:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91293,
                        "name": "admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91236,
                        "src": "1646:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 91292,
                      "name": "setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89840,
                      "src": "1637:8:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 91294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1637:15:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91295,
                  "nodeType": "ExpressionStatement",
                  "src": "1637:15:130"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 91239,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91221,
                    "src": "1101:3:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "id": 91240,
                    "name": "NO_ROUTER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81639,
                    "src": "1106:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    }
                  },
                  {
                    "hexValue": "3230305f303030",
                    "id": 91241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1117:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000_by_1",
                      "typeString": "int_const 200000"
                    },
                    "value": "200_000"
                  },
                  {
                    "id": 91242,
                    "name": "admin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 91236,
                    "src": "1126:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 91243,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 91238,
                  "name": "Direct",
                  "nameLocations": [
                    "1094:6:130"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85066,
                  "src": "1094:6:130"
                },
                "nodeType": "ModifierInvocation",
                "src": "1094:38:130"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 91237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91221,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "964:3:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "954:13:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 91220,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91219,
                      "name": "IMangrove",
                      "nameLocations": [
                        "954:9:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "954:9:130"
                    },
                    "referencedDeclaration": 54127,
                    "src": "954:9:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91224,
                  "mutability": "mutable",
                  "name": "base",
                  "nameLocation": "980:4:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "973:11:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 91223,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91222,
                      "name": "IERC20",
                      "nameLocations": [
                        "973:6:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "973:6:130"
                    },
                    "referencedDeclaration": 88,
                    "src": "973:6:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91227,
                  "mutability": "mutable",
                  "name": "stable1",
                  "nameLocation": "997:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "990:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 91226,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91225,
                      "name": "IERC20",
                      "nameLocations": [
                        "990:6:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "990:6:130"
                    },
                    "referencedDeclaration": 88,
                    "src": "990:6:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91230,
                  "mutability": "mutable",
                  "name": "stable2",
                  "nameLocation": "1017:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "1010:14:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 91229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91228,
                      "name": "IERC20",
                      "nameLocations": [
                        "1010:6:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "1010:6:130"
                    },
                    "referencedDeclaration": 88,
                    "src": "1010:6:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91232,
                  "mutability": "mutable",
                  "name": "tickSpacing1",
                  "nameLocation": "1035:12:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "1030:17:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91234,
                  "mutability": "mutable",
                  "name": "tickSpacing2",
                  "nameLocation": "1058:12:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "1053:17:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91233,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91236,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1084:5:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91297,
                  "src": "1076:13:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:7:130",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "948:145:130"
            },
            "returnParameters": {
              "id": 91244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:130"
            },
            "scope": 91736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91432,
            "nodeType": "FunctionDefinition",
            "src": "2010:1900:130",
            "nodes": [],
            "body": {
              "id": 91431,
              "nodeType": "Block",
              "src": "2176:1734:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2725:85:130",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 91319,
                                          "name": "BASE",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 91203,
                                          "src": "2751:4:130",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 91318,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2743:7:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 91317,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2743:7:130",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 91320,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2743:13:130",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 91323,
                                          "name": "STABLE1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 91206,
                                          "src": "2766:7:130",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 91322,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2758:7:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 91321,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2758:7:130",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 91324,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2758:16:130",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 91325,
                                      "name": "TICK_SPACING1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91211,
                                      "src": "2776:13:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 91316,
                                    "name": "OLKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55875,
                                    "src": "2737:5:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                                      "typeString": "type(struct OLKey storage pointer)"
                                    }
                                  },
                                  "id": 91326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2737:53:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  }
                                },
                                {
                                  "id": 91327,
                                  "name": "offerId1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91216,
                                  "src": "2792:8:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 91314,
                                  "name": "MGV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81629,
                                  "src": "2726:3:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                                    "typeString": "contract IMangrove"
                                  }
                                },
                                "id": 91315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2730:6:130",
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53887,
                                "src": "2726:10:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                                  "typeString": "function (struct OLKey memory,uint256) view external returns (Offer)"
                                }
                              },
                              "id": 91328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2726:75:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                "typeString": "Offer"
                              }
                            },
                            "id": 91329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2802:6:130",
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5181,
                            "src": "2726:82:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                              "typeString": "function (Offer) pure returns (bool)"
                            }
                          },
                          "id": 91330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2726:84:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d706c69666965722f6f6666657231416c7265616479416374697665",
                        "id": 91332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2818:31:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_178fe736934a616a8ef59ff96380fa7b7701fb20aff4fbd2c17b13ac7e804eeb",
                          "typeString": "literal_string \"Amplifier/offer1AlreadyActive\""
                        },
                        "value": "Amplifier/offer1AlreadyActive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_178fe736934a616a8ef59ff96380fa7b7701fb20aff4fbd2c17b13ac7e804eeb",
                          "typeString": "literal_string \"Amplifier/offer1AlreadyActive\""
                        }
                      ],
                      "id": 91313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2710:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2710:145:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91334,
                  "nodeType": "ExpressionStatement",
                  "src": "2710:145:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2876:85:130",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 91341,
                                          "name": "BASE",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 91203,
                                          "src": "2902:4:130",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 91340,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2894:7:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 91339,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2894:7:130",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 91342,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2894:13:130",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 91345,
                                          "name": "STABLE2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 91209,
                                          "src": "2917:7:130",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 91344,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2909:7:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 91343,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2909:7:130",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 91346,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2909:16:130",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 91347,
                                      "name": "TICK_SPACING2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91213,
                                      "src": "2927:13:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 91338,
                                    "name": "OLKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 55875,
                                    "src": "2888:5:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                                      "typeString": "type(struct OLKey storage pointer)"
                                    }
                                  },
                                  "id": 91348,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2888:53:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  }
                                },
                                {
                                  "id": 91349,
                                  "name": "offerId2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91218,
                                  "src": "2943:8:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 91336,
                                  "name": "MGV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81629,
                                  "src": "2877:3:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                                    "typeString": "contract IMangrove"
                                  }
                                },
                                "id": 91337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2881:6:130",
                                "memberName": "offers",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53887,
                                "src": "2877:10:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                                  "typeString": "function (struct OLKey memory,uint256) view external returns (Offer)"
                                }
                              },
                              "id": 91350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2877:75:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                "typeString": "Offer"
                              }
                            },
                            "id": 91351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2953:6:130",
                            "memberName": "isLive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5181,
                            "src": "2877:82:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_bool_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                              "typeString": "function (Offer) pure returns (bool)"
                            }
                          },
                          "id": 91352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2877:84:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d706c69666965722f6f6666657232416c7265616479416374697665",
                        "id": 91354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2969:31:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_acb4da49271a54daa4ed8f32079b410ca147448eb9d6f2a6f71cab30182156a5",
                          "typeString": "literal_string \"Amplifier/offer2AlreadyActive\""
                        },
                        "value": "Amplifier/offer2AlreadyActive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_acb4da49271a54daa4ed8f32079b410ca147448eb9d6f2a6f71cab30182156a5",
                          "typeString": "literal_string \"Amplifier/offer2AlreadyActive\""
                        }
                      ],
                      "id": 91335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2861:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 91355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:145:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91356,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:145:130"
                },
                {
                  "assignments": [
                    91359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91359,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "3130:4:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91431,
                      "src": "3125:9:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      },
                      "typeName": {
                        "id": 91358,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91357,
                          "name": "Tick",
                          "nameLocations": [
                            "3125:4:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5280,
                          "src": "3125:4:130"
                        },
                        "referencedDeclaration": 5280,
                        "src": "3125:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91365,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 91362,
                        "name": "wants1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91302,
                        "src": "3161:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91363,
                        "name": "gives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91300,
                        "src": "3169:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 91360,
                        "name": "TickLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6401,
                        "src": "3137:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TickLib_$6401_$",
                          "typeString": "type(library TickLib)"
                        }
                      },
                      "id": 91361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3145:15:130",
                      "memberName": "tickFromVolumes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5597,
                      "src": "3137:23:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_Tick_$5280_$",
                        "typeString": "function (uint256,uint256) pure returns (Tick)"
                      }
                    },
                    "id": 91364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3137:38:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3125:50:130"
                },
                {
                  "expression": {
                    "id": 91391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 91366,
                          "name": "offerId1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91216,
                          "src": "3183:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 91367,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3182:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 91373,
                                      "name": "BASE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91203,
                                      "src": "3254:4:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 91372,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3246:7:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 91371,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3246:7:130",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 91374,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3246:13:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 91377,
                                      "name": "STABLE1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91206,
                                      "src": "3269:7:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 91376,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3261:7:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 91375,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3261:7:130",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 91378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3261:16:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 91379,
                                  "name": "TICK_SPACING1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91211,
                                  "src": "3279:13:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 91370,
                                "name": "OLKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55875,
                                "src": "3240:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                                  "typeString": "type(struct OLKey storage pointer)"
                                }
                              },
                              "id": 91380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3240:53:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              }
                            },
                            {
                              "id": 91381,
                              "name": "tick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91359,
                              "src": "3309:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              }
                            },
                            {
                              "id": 91382,
                              "name": "gives",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91300,
                              "src": "3330:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 91383,
                                "name": "offerGasreq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  81733,
                                  81767
                                ],
                                "referencedDeclaration": 81733,
                                "src": "3353:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 91384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3353:13:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 91385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3386:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "expression": {
                                "id": 91386,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3403:3:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 91387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3407:5:130",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "3403:9:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 91388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3432:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              },
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 91369,
                            "name": "OfferArgs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83563,
                            "src": "3213:9:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OfferArgs_$83563_storage_ptr_$",
                              "typeString": "type(struct IOfferLogic.OfferArgs storage pointer)"
                            }
                          },
                          "id": 91389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "3233:5:130",
                            "3303:4:130",
                            "3323:5:130",
                            "3345:6:130",
                            "3376:8:130",
                            "3397:4:130",
                            "3422:8:130"
                          ],
                          "names": [
                            "olKey",
                            "tick",
                            "gives",
                            "gasreq",
                            "gasprice",
                            "fund",
                            "noRevert"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3213:233:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        ],
                        "id": 91368,
                        "name": "_newOffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84770,
                        "src": "3196:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
                          "typeString": "function (struct IOfferLogic.OfferArgs memory) returns (uint256,bytes32)"
                        }
                      },
                      "id": 91390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3196:256:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
                        "typeString": "tuple(uint256,bytes32)"
                      }
                    },
                    "src": "3182:270:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91392,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:270:130"
                },
                {
                  "expression": {
                    "id": 91399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91393,
                      "name": "tick",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91359,
                      "src": "3557:4:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 91396,
                          "name": "wants2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91304,
                          "src": "3588:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 91397,
                          "name": "gives",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91300,
                          "src": "3596:5:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 91394,
                          "name": "TickLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6401,
                          "src": "3564:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TickLib_$6401_$",
                            "typeString": "type(library TickLib)"
                          }
                        },
                        "id": 91395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3572:15:130",
                        "memberName": "tickFromVolumes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5597,
                        "src": "3564:23:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_Tick_$5280_$",
                          "typeString": "function (uint256,uint256) pure returns (Tick)"
                        }
                      },
                      "id": 91398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3564:38:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      }
                    },
                    "src": "3557:45:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "id": 91400,
                  "nodeType": "ExpressionStatement",
                  "src": "3557:45:130"
                },
                {
                  "expression": {
                    "id": 91425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 91401,
                          "name": "offerId2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91218,
                          "src": "3610:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null
                      ],
                      "id": 91402,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3609:11:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$__$",
                        "typeString": "tuple(uint256,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 91408,
                                      "name": "BASE",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91203,
                                      "src": "3681:4:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 91407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3673:7:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 91406,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3673:7:130",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 91409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3673:13:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 91412,
                                      "name": "STABLE2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91209,
                                      "src": "3696:7:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$88",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 91411,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3688:7:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 91410,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3688:7:130",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 91413,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3688:16:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 91414,
                                  "name": "TICK_SPACING2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91213,
                                  "src": "3706:13:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 91405,
                                "name": "OLKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55875,
                                "src": "3667:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                                  "typeString": "type(struct OLKey storage pointer)"
                                }
                              },
                              "id": 91415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3667:53:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              }
                            },
                            {
                              "id": 91416,
                              "name": "tick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91359,
                              "src": "3736:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              }
                            },
                            {
                              "id": 91417,
                              "name": "gives",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91300,
                              "src": "3757:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 91418,
                                "name": "offerGasreq",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  81733,
                                  81767
                                ],
                                "referencedDeclaration": 81733,
                                "src": "3780:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 91419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3780:13:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 91420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3813:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "30",
                              "id": 91421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3830:1:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 91422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3851:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              },
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 91404,
                            "name": "OfferArgs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83563,
                            "src": "3640:9:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OfferArgs_$83563_storage_ptr_$",
                              "typeString": "type(struct IOfferLogic.OfferArgs storage pointer)"
                            }
                          },
                          "id": 91423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "3660:5:130",
                            "3730:4:130",
                            "3750:5:130",
                            "3772:6:130",
                            "3803:8:130",
                            "3824:4:130",
                            "3841:8:130"
                          ],
                          "names": [
                            "olKey",
                            "tick",
                            "gives",
                            "gasreq",
                            "gasprice",
                            "fund",
                            "noRevert"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "3640:225:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        ],
                        "id": 91403,
                        "name": "_newOffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84770,
                        "src": "3623:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
                          "typeString": "function (struct IOfferLogic.OfferArgs memory) returns (uint256,bytes32)"
                        }
                      },
                      "id": 91424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3623:248:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
                        "typeString": "tuple(uint256,bytes32)"
                      }
                    },
                    "src": "3609:262:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91426,
                  "nodeType": "ExpressionStatement",
                  "src": "3609:262:130"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 91427,
                        "name": "offerId1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91216,
                        "src": "3886:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91428,
                        "name": "offerId2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91218,
                        "src": "3896:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 91429,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3885:20:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 91312,
                  "id": 91430,
                  "nodeType": "Return",
                  "src": "3878:27:130"
                }
              ]
            },
            "documentation": {
              "id": 91298,
              "nodeType": "StructuredDocumentation",
              "src": "1661:346:130",
              "text": " @param gives in BASE decimals\n @param wants1 in STABLE1 decimals\n @param wants2 in STABLE2 decimals\n @return (offerid for STABLE1, offerid for STABLE2)\n @dev these offer's provision must be in msg.value\n @dev `reserve(admin())` must have approved base for `this` contract transfer prior to calling this function"
            },
            "functionSelector": "15986e4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 91307,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91306,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "2145:9:130"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "2145:9:130"
                },
                "nodeType": "ModifierInvocation",
                "src": "2145:9:130"
              }
            ],
            "name": "newAmplifiedOffers",
            "nameLocation": "2019:18:130",
            "parameters": {
              "id": 91305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91300,
                  "mutability": "mutable",
                  "name": "gives",
                  "nameLocation": "2084:5:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91432,
                  "src": "2079:10:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91299,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91302,
                  "mutability": "mutable",
                  "name": "wants1",
                  "nameLocation": "2100:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91432,
                  "src": "2095:11:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91301,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2095:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91304,
                  "mutability": "mutable",
                  "name": "wants2",
                  "nameLocation": "2117:6:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91432,
                  "src": "2112:11:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91303,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2037:90:130"
            },
            "returnParameters": {
              "id": 91312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91432,
                  "src": "2164:4:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91308,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2164:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91432,
                  "src": "2170:4:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91310,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2163:12:130"
            },
            "scope": 91736,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91586,
            "nodeType": "FunctionDefinition",
            "src": "4093:2081:130",
            "nodes": [],
            "body": {
              "id": 91585,
              "nodeType": "Block",
              "src": "4226:1948:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    91445
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91445,
                      "mutability": "mutable",
                      "name": "repost_status",
                      "nameLocation": "4291:13:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91585,
                      "src": "4283:21:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 91444,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4283:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91451,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 91448,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91436,
                        "src": "4333:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      },
                      {
                        "id": 91449,
                        "name": "makerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91438,
                        "src": "4340:9:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 91446,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4307:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Amplifier_$91736_$",
                          "typeString": "type(contract super Amplifier)"
                        }
                      },
                      "id": 91447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4313:19:130",
                      "memberName": "__posthookSuccess__",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85037,
                      "src": "4307:25:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 91450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4307:43:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4283:67:130"
                },
                {
                  "assignments": [
                    91454,
                    91456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91454,
                      "mutability": "mutable",
                      "name": "altOlKey",
                      "nameLocation": "4574:8:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91585,
                      "src": "4561:21:130",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey"
                      },
                      "typeName": {
                        "id": 91453,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91452,
                          "name": "OLKey",
                          "nameLocations": [
                            "4561:5:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55875,
                          "src": "4561:5:130"
                        },
                        "referencedDeclaration": 55875,
                        "src": "4561:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                          "typeString": "struct OLKey"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 91456,
                      "mutability": "mutable",
                      "name": "alt_offerId",
                      "nameLocation": "4589:11:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91585,
                      "src": "4584:16:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91455,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4584:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91489,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      },
                      "id": 91463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91458,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91436,
                                "src": "4611:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              "id": 91459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4617:5:130",
                              "memberName": "olKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55950,
                              "src": "4611:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                "typeString": "struct OLKey calldata"
                              }
                            },
                            "id": 91460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4623:11:130",
                            "memberName": "inbound_tkn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55872,
                            "src": "4611:23:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91457,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "4604:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 91461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4604:31:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 91462,
                        "name": "STABLE1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91206,
                        "src": "4639:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "4604:42:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 91477,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91436,
                                  "src": "4747:5:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                    "typeString": "struct MgvLib.SingleOrder calldata"
                                  }
                                },
                                "id": 91478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4753:5:130",
                                "memberName": "olKey",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55950,
                                "src": "4747:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                  "typeString": "struct OLKey calldata"
                                }
                              },
                              "id": 91479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4759:12:130",
                              "memberName": "outbound_tkn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55870,
                              "src": "4747:24:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 91482,
                                  "name": "STABLE1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91206,
                                  "src": "4781:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 91481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4773:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91480,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4773:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4773:16:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 91484,
                              "name": "TICK_SPACING1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91211,
                              "src": "4791:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91476,
                            "name": "OLKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55875,
                            "src": "4741:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                              "typeString": "type(struct OLKey storage pointer)"
                            }
                          },
                          "id": 91485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4741:64:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "id": 91486,
                          "name": "offerId1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91216,
                          "src": "4807:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 91487,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4740:76:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$",
                        "typeString": "tuple(struct OLKey memory,uint256)"
                      }
                    },
                    "id": 91488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4604:212:130",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "expression": {
                                  "id": 91465,
                                  "name": "order",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91436,
                                  "src": "4662:5:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                    "typeString": "struct MgvLib.SingleOrder calldata"
                                  }
                                },
                                "id": 91466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4668:5:130",
                                "memberName": "olKey",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55950,
                                "src": "4662:11:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                  "typeString": "struct OLKey calldata"
                                }
                              },
                              "id": 91467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4674:12:130",
                              "memberName": "outbound_tkn",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55870,
                              "src": "4662:24:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 91470,
                                  "name": "STABLE2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91209,
                                  "src": "4696:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 91469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4688:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91468,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4688:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4688:16:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 91472,
                              "name": "TICK_SPACING2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91213,
                              "src": "4706:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91464,
                            "name": "OLKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55875,
                            "src": "4656:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                              "typeString": "type(struct OLKey storage pointer)"
                            }
                          },
                          "id": 91473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4656:64:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "id": 91474,
                          "name": "offerId2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91218,
                          "src": "4722:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 91475,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4655:76:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$",
                        "typeString": "tuple(struct OLKey memory,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(struct OLKey memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4560:256:130"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 91492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 91490,
                      "name": "repost_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91445,
                      "src": "4826:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 91491,
                      "name": "REPOST_SUCCESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81647,
                      "src": "4843:14:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "4826:31:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 91583,
                    "nodeType": "Block",
                    "src": "5992:178:130",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 91576,
                              "name": "altOlKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91454,
                              "src": "6072:8:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              }
                            },
                            {
                              "id": 91577,
                              "name": "alt_offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91456,
                              "src": "6091:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 91578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6117:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 91575,
                            "name": "retractOffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91611,
                            "src": "6051:12:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                              "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                            }
                          },
                          "id": 91579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "6065:5:130",
                            "6082:7:130",
                            "6104:11:130"
                          ],
                          "names": [
                            "olKey",
                            "offerId",
                            "deprovision"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "6051:73:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 91580,
                        "nodeType": "ExpressionStatement",
                        "src": "6051:73:130"
                      },
                      {
                        "expression": {
                          "hexValue": "706f7374686f6f6b2f626f7468526574726163746564",
                          "id": 91581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6139:24:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_55a323eec71a41f1ebbf493629dc7187b53a0297fda3dc994b54c80ddc82326c",
                            "typeString": "literal_string \"posthook/bothRetracted\""
                          },
                          "value": "posthook/bothRetracted"
                        },
                        "functionReturnParameters": 91443,
                        "id": 91582,
                        "nodeType": "Return",
                        "src": "6132:31:130"
                      }
                    ]
                  },
                  "id": 91584,
                  "nodeType": "IfStatement",
                  "src": "4822:1348:130",
                  "trueBody": {
                    "id": 91574,
                    "nodeType": "Block",
                    "src": "4859:1127:130",
                    "statements": [
                      {
                        "assignments": [
                          91494,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91494,
                            "mutability": "mutable",
                            "name": "new_alt_gives",
                            "nameLocation": "4873:13:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "4868:18:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 91493,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4868:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 91498,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 91496,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91436,
                              "src": "4910:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                "typeString": "struct MgvLib.SingleOrder calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                "typeString": "struct MgvLib.SingleOrder calldata"
                              }
                            ],
                            "id": 91495,
                            "name": "__residualValues__",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82242,
                            "src": "4891:18:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$returns$_t_uint256_$_t_userDefinedValueType$_Tick_$5280_$",
                              "typeString": "function (struct MgvLib.SingleOrder calldata) returns (uint256,Tick)"
                            }
                          },
                          "id": 91497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4891:25:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_userDefinedValueType$_Tick_$5280_$",
                            "typeString": "tuple(uint256,Tick)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4867:49:130"
                      },
                      {
                        "assignments": [
                          91501
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91501,
                            "mutability": "mutable",
                            "name": "alt_offer",
                            "nameLocation": "4947:9:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "4941:15:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                              "typeString": "Offer"
                            },
                            "typeName": {
                              "id": 91500,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 91499,
                                "name": "Offer",
                                "nameLocations": [
                                  "4941:5:130"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66949,
                                "src": "4941:5:130"
                              },
                              "referencedDeclaration": 66949,
                              "src": "4941:5:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                "typeString": "Offer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91507,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 91504,
                              "name": "altOlKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91454,
                              "src": "4970:8:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              }
                            },
                            {
                              "id": 91505,
                              "name": "alt_offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91456,
                              "src": "4980:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 91502,
                              "name": "MGV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81629,
                              "src": "4959:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMangrove_$54127",
                                "typeString": "contract IMangrove"
                              }
                            },
                            "id": 91503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4963:6:130",
                            "memberName": "offers",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53887,
                            "src": "4959:10:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                              "typeString": "function (struct OLKey memory,uint256) view external returns (Offer)"
                            }
                          },
                          "id": 91506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4959:33:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                            "typeString": "Offer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4941:51:130"
                      },
                      {
                        "assignments": [
                          91510
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91510,
                            "mutability": "mutable",
                            "name": "alt_detail",
                            "nameLocation": "5012:10:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "5000:22:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                              "typeString": "OfferDetail"
                            },
                            "typeName": {
                              "id": 91509,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 91508,
                                "name": "OfferDetail",
                                "nameLocations": [
                                  "5000:11:130"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 67755,
                                "src": "5000:11:130"
                              },
                              "referencedDeclaration": 67755,
                              "src": "5000:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                                "typeString": "OfferDetail"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91516,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 91513,
                              "name": "altOlKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91454,
                              "src": "5042:8:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              }
                            },
                            {
                              "id": 91514,
                              "name": "alt_offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91456,
                              "src": "5052:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 91511,
                              "name": "MGV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81629,
                              "src": "5025:3:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMangrove_$54127",
                                "typeString": "contract IMangrove"
                              }
                            },
                            "id": 91512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5029:12:130",
                            "memberName": "offerDetails",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53899,
                            "src": "5025:16:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_OfferDetail_$67755_$",
                              "typeString": "function (struct OLKey memory,uint256) view external returns (OfferDetail)"
                            }
                          },
                          "id": 91515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5025:39:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                            "typeString": "OfferDetail"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5000:64:130"
                      },
                      {
                        "assignments": [
                          91518
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91518,
                            "mutability": "mutable",
                            "name": "old_alt_wants",
                            "nameLocation": "5078:13:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "5073:18:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 91517,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5073:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91522,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 91519,
                              "name": "alt_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91501,
                              "src": "5094:9:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                "typeString": "Offer"
                              }
                            },
                            "id": 91520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5104:5:130",
                            "memberName": "wants",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5165,
                            "src": "5094:15:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                              "typeString": "function (Offer) pure returns (uint256)"
                            }
                          },
                          "id": 91521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5094:17:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5073:38:130"
                      },
                      {
                        "assignments": [
                          91524
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91524,
                            "mutability": "mutable",
                            "name": "old_alt_gives",
                            "nameLocation": "5165:13:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "5160:18:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 91523,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5160:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91529,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 91525,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91436,
                                "src": "5181:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              "id": 91526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5187:5:130",
                              "memberName": "offer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55955,
                              "src": "5181:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                "typeString": "Offer"
                              }
                            },
                            "id": 91527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5193:5:130",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67519,
                            "src": "5181:17:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                              "typeString": "function (Offer) pure returns (uint256)"
                            }
                          },
                          "id": 91528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5181:19:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5160:40:130"
                      },
                      {
                        "assignments": [
                          91531
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91531,
                            "mutability": "mutable",
                            "name": "new_alt_wants",
                            "nameLocation": "5344:13:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "5339:18:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 91530,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5339:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91532,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5339:18:130"
                      },
                      {
                        "id": 91542,
                        "nodeType": "UncheckedBlock",
                        "src": "5365:92:130",
                        "statements": [
                          {
                            "expression": {
                              "id": 91540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 91533,
                                "name": "new_alt_wants",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91531,
                                "src": "5385:13:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 91539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 91536,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 91534,
                                        "name": "old_alt_wants",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91518,
                                        "src": "5402:13:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 91535,
                                        "name": "new_alt_gives",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 91494,
                                        "src": "5418:13:130",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5402:29:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 91537,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5401:31:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 91538,
                                  "name": "old_alt_gives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91524,
                                  "src": "5435:13:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5401:47:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5385:63:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 91541,
                            "nodeType": "ExpressionStatement",
                            "src": "5385:63:130"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          91544
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91544,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "5509:6:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91574,
                            "src": "5501:14:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 91543,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5501:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 91563,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91547,
                                  "name": "altOlKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91454,
                                  "src": "5569:8:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  }
                                },
                                {
                                  "id": 91548,
                                  "name": "new_alt_gives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91494,
                                  "src": "5596:13:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 91551,
                                      "name": "new_alt_wants",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91531,
                                      "src": "5651:13:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 91552,
                                      "name": "new_alt_gives",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91494,
                                      "src": "5666:13:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 91549,
                                      "name": "TickLib",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6401,
                                      "src": "5627:7:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_TickLib_$6401_$",
                                        "typeString": "type(library TickLib)"
                                      }
                                    },
                                    "id": 91550,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5635:15:130",
                                    "memberName": "tickFromVolumes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 5597,
                                    "src": "5627:23:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_Tick_$5280_$",
                                      "typeString": "function (uint256,uint256) pure returns (Tick)"
                                    }
                                  },
                                  "id": 91553,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5627:53:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                    "typeString": "Tick"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 91554,
                                      "name": "alt_detail",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 91510,
                                      "src": "5700:10:130",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                                        "typeString": "OfferDetail"
                                      }
                                    },
                                    "id": 91555,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5711:6:130",
                                    "memberName": "gasreq",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 68200,
                                    "src": "5700:17:130",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_OfferDetail_$67755_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_OfferDetail_$67755_$",
                                      "typeString": "function (OfferDetail) pure returns (uint256)"
                                    }
                                  },
                                  "id": 91556,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5700:19:130",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 91557,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5741:1:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "30",
                                  "id": 91558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5760:1:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                {
                                  "hexValue": "74727565",
                                  "id": 91559,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5783:4:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                    "typeString": "Tick"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 91546,
                                "name": "OfferArgs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83563,
                                "src": "5540:9:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_OfferArgs_$83563_storage_ptr_$",
                                  "typeString": "type(struct IOfferLogic.OfferArgs storage pointer)"
                                }
                              },
                              "id": 91560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "5562:5:130",
                                "5589:5:130",
                                "5621:4:130",
                                "5692:6:130",
                                "5731:8:130",
                                "5754:4:130",
                                "5773:8:130"
                              ],
                              "names": [
                                "olKey",
                                "gives",
                                "tick",
                                "gasreq",
                                "gasprice",
                                "fund",
                                "noRevert"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "5540:258:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            {
                              "id": 91561,
                              "name": "alt_offerId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91456,
                              "src": "5808:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91545,
                            "name": "_updateOffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              84828
                            ],
                            "referencedDeclaration": 84828,
                            "src": "5518:12:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (struct IOfferLogic.OfferArgs memory,uint256) returns (bytes32)"
                            }
                          },
                          "id": 91562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5518:309:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5501:326:130"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 91566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 91564,
                            "name": "reason",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91544,
                            "src": "5839:6:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 91565,
                            "name": "REPOST_SUCCESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81647,
                            "src": "5849:14:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5839:24:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 91572,
                          "nodeType": "Block",
                          "src": "5926:54:130",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "706f7374686f6f6b2f626f74684f666665725265706f73746564",
                                "id": 91570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5943:28:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bb0936293cc615efa125cad6cdf5ad69e990bd56d8bd32886cb95e0ca8536c9b",
                                  "typeString": "literal_string \"posthook/bothOfferReposted\""
                                },
                                "value": "posthook/bothOfferReposted"
                              },
                              "functionReturnParameters": 91443,
                              "id": 91571,
                              "nodeType": "Return",
                              "src": "5936:35:130"
                            }
                          ]
                        },
                        "id": 91573,
                        "nodeType": "IfStatement",
                        "src": "5835:145:130",
                        "trueBody": {
                          "id": 91569,
                          "nodeType": "Block",
                          "src": "5865:55:130",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "706f7374686f6f6b2f616c744f666665725265706f73744661696c",
                                "id": 91567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5882:29:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7a0e89a66301a5f3ef4e012a996015866214b3f03d8a29a8959b78fcc1122876",
                                  "typeString": "literal_string \"posthook/altOfferRepostFail\""
                                },
                                "value": "posthook/altOfferRepostFail"
                              },
                              "functionReturnParameters": 91443,
                              "id": 91568,
                              "nodeType": "Return",
                              "src": "5875:36:130"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              85037
            ],
            "documentation": {
              "id": 91433,
              "nodeType": "StructuredDocumentation",
              "src": "3914:176:130",
              "text": "FIXME a possibility is to update the alt offer during makerExecute\n to do this we can override `__lastLook__` which is a hook called at the beginning of `makerExecute`"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__posthookSuccess__",
            "nameLocation": "4102:19:130",
            "overrides": {
              "id": 91440,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4193:8:130"
            },
            "parameters": {
              "id": 91439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91436,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4150:5:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91586,
                  "src": "4122:33:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 91435,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91434,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "4122:6:130",
                        "4129:11:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "4122:18:130"
                    },
                    "referencedDeclaration": 55969,
                    "src": "4122:18:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91438,
                  "mutability": "mutable",
                  "name": "makerData",
                  "nameLocation": "4165:9:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91586,
                  "src": "4157:17:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91437,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4157:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4121:54:130"
            },
            "returnParameters": {
              "id": 91443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91586,
                  "src": "4215:7:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91441,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4215:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4214:9:130"
            },
            "scope": 91736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 91611,
            "nodeType": "FunctionDefinition",
            "src": "6178:206:130",
            "nodes": [],
            "body": {
              "id": 91610,
              "nodeType": "Block",
              "src": "6324:60:130",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91605,
                        "name": "olKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91589,
                        "src": "6351:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "id": 91606,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91591,
                        "src": "6358:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91607,
                        "name": "deprovision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91593,
                        "src": "6367:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 91604,
                      "name": "_retractOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84851,
                      "src": "6337:13:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 91608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6337:42:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 91603,
                  "id": 91609,
                  "nodeType": "Return",
                  "src": "6330:49:130"
                }
              ]
            },
            "functionSelector": "6e7a5cb8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "id": 91598,
                        "name": "MGV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81629,
                        "src": "6289:3:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$54127",
                          "typeString": "contract IMangrove"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IMangrove_$54127",
                          "typeString": "contract IMangrove"
                        }
                      ],
                      "id": 91597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6281:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 91596,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6281:7:130",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 91599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6281:12:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 91600,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 91595,
                  "name": "adminOrCaller",
                  "nameLocations": [
                    "6267:13:130"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89804,
                  "src": "6267:13:130"
                },
                "nodeType": "ModifierInvocation",
                "src": "6267:27:130"
              }
            ],
            "name": "retractOffer",
            "nameLocation": "6187:12:130",
            "parameters": {
              "id": 91594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91589,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "6213:5:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91611,
                  "src": "6200:18:130",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 91588,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91587,
                      "name": "OLKey",
                      "nameLocations": [
                        "6200:5:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "6200:5:130"
                    },
                    "referencedDeclaration": 55875,
                    "src": "6200:5:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91591,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "6225:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91611,
                  "src": "6220:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91590,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6220:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91593,
                  "mutability": "mutable",
                  "name": "deprovision",
                  "nameLocation": "6239:11:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91611,
                  "src": "6234:16:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91592,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6234:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6199:52:130"
            },
            "returnParameters": {
              "id": 91603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91602,
                  "mutability": "mutable",
                  "name": "freeWei",
                  "nameLocation": "6313:7:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91611,
                  "src": "6308:12:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 91601,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6308:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6307:14:130"
            },
            "scope": 91736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 91681,
            "nodeType": "FunctionDefinition",
            "src": "6388:840:130",
            "nodes": [],
            "body": {
              "id": 91680,
              "nodeType": "Block",
              "src": "6438:790:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    91617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91617,
                      "mutability": "mutable",
                      "name": "freeWei",
                      "nameLocation": "6449:7:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91680,
                      "src": "6444:12:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91616,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6444:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91633,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 91622,
                                "name": "BASE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91203,
                                "src": "6501:4:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 91621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6493:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91620,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6493:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6493:13:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 91626,
                                "name": "STABLE1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91206,
                                "src": "6516:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 91625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6508:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91624,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6508:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6508:16:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 91628,
                            "name": "TICK_SPACING1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91211,
                            "src": "6526:13:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 91619,
                          "name": "OLKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55875,
                          "src": "6487:5:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                            "typeString": "type(struct OLKey storage pointer)"
                          }
                        },
                        "id": 91629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6487:53:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "id": 91630,
                        "name": "offerId1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91216,
                        "src": "6557:8:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 91631,
                        "name": "deprovision",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91613,
                        "src": "6586:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 91618,
                      "name": "retractOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91611,
                      "src": "6459:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 91632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6480:5:130",
                      "6548:7:130",
                      "6573:11:130"
                    ],
                    "names": [
                      "olKey",
                      "offerId",
                      "deprovision"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6459:145:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6444:160:130"
                },
                {
                  "expression": {
                    "id": 91650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91634,
                      "name": "freeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91617,
                      "src": "6610:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91639,
                                  "name": "BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91203,
                                  "src": "6663:4:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 91638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6655:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91637,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6655:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6655:13:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 91643,
                                  "name": "STABLE2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91209,
                                  "src": "6678:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 91642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6670:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91641,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6670:7:130",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 91644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6670:16:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 91645,
                              "name": "TICK_SPACING2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91213,
                              "src": "6688:13:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 91636,
                            "name": "OLKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 55875,
                            "src": "6649:5:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                              "typeString": "type(struct OLKey storage pointer)"
                            }
                          },
                          "id": 91646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6649:53:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "id": 91647,
                          "name": "offerId2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91218,
                          "src": "6719:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 91648,
                          "name": "deprovision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91613,
                          "src": "6748:11:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 91635,
                        "name": "retractOffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91611,
                        "src": "6621:12:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                        }
                      },
                      "id": 91649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "6642:5:130",
                        "6710:7:130",
                        "6735:11:130"
                      ],
                      "names": [
                        "olKey",
                        "offerId",
                        "deprovision"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6621:145:130",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6610:156:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91651,
                  "nodeType": "ExpressionStatement",
                  "src": "6610:156:130"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 91652,
                      "name": "freeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91617,
                      "src": "6776:7:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 91653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6786:1:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6776:11:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 91679,
                  "nodeType": "IfStatement",
                  "src": "6772:452:130",
                  "trueBody": {
                    "id": 91678,
                    "nodeType": "Block",
                    "src": "6789:435:130",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 91658,
                                  "name": "freeWei",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 91617,
                                  "src": "6818:7:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 91656,
                                  "name": "MGV",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 81629,
                                  "src": "6805:3:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                                    "typeString": "contract IMangrove"
                                  }
                                },
                                "id": 91657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6809:8:130",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 53727,
                                "src": "6805:12:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) external returns (bool)"
                                }
                              },
                              "id": 91659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6805:21:130",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d706c69666965722f77697468647261774661696c",
                              "id": 91660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6828:24:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7996ef5d4db7ff075d3d4b6b0165fe63f4a72f12066df6351f3be496ae63357b",
                                "typeString": "literal_string \"Amplifier/withdrawFail\""
                              },
                              "value": "Amplifier/withdrawFail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7996ef5d4db7ff075d3d4b6b0165fe63f4a72f12066df6351f3be496ae63357b",
                                "typeString": "literal_string \"Amplifier/withdrawFail\""
                              }
                            ],
                            "id": 91655,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6797:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 91661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6797:56:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91662,
                        "nodeType": "ExpressionStatement",
                        "src": "6797:56:130"
                      },
                      {
                        "assignments": [
                          91664,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 91664,
                            "mutability": "mutable",
                            "name": "noRevert",
                            "nameLocation": "7118:8:130",
                            "nodeType": "VariableDeclaration",
                            "scope": 91678,
                            "src": "7113:13:130",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 91663,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7113:4:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 91672,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 91670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7160:2:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 91665,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89813,
                                  "src": "7131:5:130",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 91666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7131:7:130",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 91667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7139:4:130",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "7131:12:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 91669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 91668,
                                "name": "freeWei",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91617,
                                "src": "7151:7:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "7131:28:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 91671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7131:32:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7112:51:130"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 91674,
                              "name": "noRevert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 91664,
                              "src": "7179:8:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d706c69666965722f7765695472616e736665724661696c",
                              "id": 91675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7189:27:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9f07e4d45d4194490dda92f5302ed24ba6906d7ce470d2068f1b9bb88690cd24",
                                "typeString": "literal_string \"Amplifier/weiTransferFail\""
                              },
                              "value": "Amplifier/weiTransferFail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9f07e4d45d4194490dda92f5302ed24ba6906d7ce470d2068f1b9bb88690cd24",
                                "typeString": "literal_string \"Amplifier/weiTransferFail\""
                              }
                            ],
                            "id": 91673,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7171:7:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 91676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7171:46:130",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91677,
                        "nodeType": "ExpressionStatement",
                        "src": "7171:46:130"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "150957c7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOffers",
            "nameLocation": "6397:13:130",
            "parameters": {
              "id": 91614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91613,
                  "mutability": "mutable",
                  "name": "deprovision",
                  "nameLocation": "6416:11:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91681,
                  "src": "6411:16:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 91612,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6411:4:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6410:18:130"
            },
            "returnParameters": {
              "id": 91615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6438:0:130"
            },
            "scope": 91736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 91735,
            "nodeType": "FunctionDefinition",
            "src": "7232:606:130",
            "nodes": [],
            "body": {
              "id": 91734,
              "nodeType": "Block",
              "src": "7376:462:130",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    91695,
                    91697,
                    91699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 91695,
                      "mutability": "mutable",
                      "name": "alt_stable",
                      "nameLocation": "7460:10:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91734,
                      "src": "7453:17:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 91694,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 91693,
                          "name": "IERC20",
                          "nameLocations": [
                            "7453:6:130"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88,
                          "src": "7453:6:130"
                        },
                        "referencedDeclaration": 88,
                        "src": "7453:6:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 91697,
                      "mutability": "mutable",
                      "name": "tickSpacing",
                      "nameLocation": "7477:11:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91734,
                      "src": "7472:16:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91696,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7472:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 91699,
                      "mutability": "mutable",
                      "name": "alt_offerId",
                      "nameLocation": "7495:11:130",
                      "nodeType": "VariableDeclaration",
                      "scope": 91734,
                      "src": "7490:16:130",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91698,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7490:4:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 91716,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      },
                      "id": 91706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91701,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91684,
                                "src": "7517:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              "id": 91702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7523:5:130",
                              "memberName": "olKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55950,
                              "src": "7517:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                "typeString": "struct OLKey calldata"
                              }
                            },
                            "id": 91703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7529:11:130",
                            "memberName": "inbound_tkn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55872,
                            "src": "7517:23:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 91700,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "7510:6:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 91704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7510:31:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 91705,
                        "name": "STABLE1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91206,
                        "src": "7545:7:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "src": "7510:42:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 91711,
                          "name": "STABLE1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91206,
                          "src": "7605:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 91712,
                          "name": "TICK_SPACING1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91211,
                          "src": "7614:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 91713,
                          "name": "offerId1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91216,
                          "src": "7629:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 91714,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7604:34:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_IERC20_$88_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(contract IERC20,uint256,uint256)"
                      }
                    },
                    "id": 91715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "7510:128:130",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 91707,
                          "name": "STABLE2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91209,
                          "src": "7562:7:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 91708,
                          "name": "TICK_SPACING2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91213,
                          "src": "7571:13:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 91709,
                          "name": "offerId2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91218,
                          "src": "7586:8:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 91710,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7561:34:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_contract$_IERC20_$88_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(contract IERC20,uint256,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$88_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7452:186:130"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 91719,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91684,
                                "src": "7678:5:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              "id": 91720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7684:5:130",
                              "memberName": "olKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55950,
                              "src": "7678:11:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                "typeString": "struct OLKey calldata"
                              }
                            },
                            "id": 91721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7690:12:130",
                            "memberName": "outbound_tkn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55870,
                            "src": "7678:24:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 91724,
                                "name": "alt_stable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 91695,
                                "src": "7712:10:130",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "id": 91723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7704:7:130",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 91722,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7704:7:130",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 91725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7704:19:130",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 91726,
                            "name": "tickSpacing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 91697,
                            "src": "7725:11:130",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 91718,
                          "name": "OLKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55875,
                          "src": "7672:5:130",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                            "typeString": "type(struct OLKey storage pointer)"
                          }
                        },
                        "id": 91727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7672:65:130",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "id": 91728,
                        "name": "alt_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91699,
                        "src": "7754:11:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 91729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7786:5:130",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 91717,
                      "name": "retractOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91611,
                      "src": "7644:12:130",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                      }
                    },
                    "id": 91730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "7665:5:130",
                      "7745:7:130",
                      "7773:11:130"
                    ],
                    "names": [
                      "olKey",
                      "offerId",
                      "deprovision"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "7644:154:130",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91731,
                  "nodeType": "ExpressionStatement",
                  "src": "7644:154:130"
                },
                {
                  "expression": {
                    "hexValue": "706f7374686f6f6b2f626f74684661696c696e67",
                    "id": 91732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7811:22:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7a23ace443cf542b734416eb406ee44e68812962c04fca70494da8e7eb07c5ef",
                      "typeString": "literal_string \"posthook/bothFailing\""
                    },
                    "value": "posthook/bothFailing"
                  },
                  "functionReturnParameters": 91692,
                  "id": 91733,
                  "nodeType": "Return",
                  "src": "7804:29:130"
                }
              ]
            },
            "baseFunctions": [
              82212
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__posthookFallback__",
            "nameLocation": "7241:20:130",
            "overrides": {
              "id": 91689,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7343:8:130"
            },
            "parameters": {
              "id": 91688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91684,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "7290:5:130",
                  "nodeType": "VariableDeclaration",
                  "scope": 91735,
                  "src": "7262:33:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 91683,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91682,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "7262:6:130",
                        "7269:11:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "7262:18:130"
                    },
                    "referencedDeclaration": 55969,
                    "src": "7262:18:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91735,
                  "src": "7297:27:130",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OrderResult_$55974_calldata_ptr",
                    "typeString": "struct MgvLib.OrderResult"
                  },
                  "typeName": {
                    "id": 91686,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 91685,
                      "name": "MgvLib.OrderResult",
                      "nameLocations": [
                        "7297:6:130",
                        "7304:11:130"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55974,
                      "src": "7297:18:130"
                    },
                    "referencedDeclaration": 55974,
                    "src": "7297:18:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OrderResult_$55974_storage_ptr",
                      "typeString": "struct MgvLib.OrderResult"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7261:64:130"
            },
            "returnParameters": {
              "id": 91692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91691,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 91735,
                  "src": "7365:7:130",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 91690,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7365:7:130",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7364:9:130"
            },
            "scope": 91736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 91199,
              "name": "Direct",
              "nameLocations": [
                "347:6:130"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 85066,
              "src": "347:6:130"
            },
            "id": 91200,
            "nodeType": "InheritanceSpecifier",
            "src": "347:6:130"
          }
        ],
        "canonicalName": "Amplifier",
        "contractDependencies": [
          88231
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          91736,
          85066,
          82367,
          83578,
          56211,
          89841
        ],
        "name": "Amplifier",
        "nameLocation": "334:9:130",
        "scope": 91737,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83467,
          83473,
          84653,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 130
}