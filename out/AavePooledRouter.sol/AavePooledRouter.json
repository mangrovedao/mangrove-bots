{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addressesProvider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "overhead",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "aaveReason",
          "type": "bytes32"
        }
      ],
      "name": "AaveIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "MakerBind",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "MakerUnbind",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "SetAaveManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADDRESS_PROVIDER",
      "outputs": [
        {
          "internalType": "contract IPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OFFSET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POOL",
      "outputs": [
        {
          "internalType": "contract IPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROUTER_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "aaveManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "balanceOfReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "makerContract",
          "type": "address"
        }
      ],
      "name": "bind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "checkAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "assets",
          "type": "address[]"
        }
      ],
      "name": "claimRewards",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "rewardList",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "claimedAmounts",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "enterMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "exitMarket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "flush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "noRevert",
          "type": "bool"
        }
      ],
      "name": "flushBuffer",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "reason",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mkr",
          "type": "address"
        }
      ],
      "name": "isBound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "asset",
          "type": "address"
        }
      ],
      "name": "overlying",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "aToken",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "strict",
          "type": "bool"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pulled",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pushed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "token1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "pushAndSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pushed0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pushed1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "revokeLenderApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "routerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "overhead",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "aaveManager_",
          "type": "address"
        }
      ],
      "name": "setAaveManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "sharesOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "total",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unbind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "makerContract",
          "type": "address"
        }
      ],
      "name": "unbind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b5060405162002cf738038062002cf78339810160408190526200003491620002ea565b80338380806001600160a01b031660a0816001600160a01b0316815250506000816001600160a01b031663026b1d5f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000093573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b9919062000319565b90506001600160a01b038116620001175760405162461bcd60e51b815260206004820152601360248201527f4161766556334c656e6465722f3078506f6f6c0000000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b03908116608052831691506200017990505760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016200010e565b600080546001600160a01b0319166001600160a01b039290921691909117905560c052620001a733620001af565b50506200033e565b6000546001600160a01b0316331480620001d357506002546001600160a01b031633145b620002215760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c6964000000000000000060448201526064016200010e565b6001600160a01b038116620002795760405162461bcd60e51b815260206004820152601f60248201527f41617665506f6f6c6564526573657276652f3078416176654d616e616765720060448201526064016200010e565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fb6ba5fc5ae0a94b812b11dfa751771f5462efbe2bae48a93a63e2669873f6bb69060200160405180910390a150565b80516001600160a01b0381168114620002e557600080fd5b919050565b60008060408385031215620002fe57600080fd5b6200030983620002cd565b9150602083015190509250929050565b6000602082840312156200032c57600080fd5b6200033782620002cd565b9392505050565b60805160a05160c05161294a620003ad60003960008181610311015261071a01526000818161027b01526116cd0152600081816103ac0152818161060c015281816110ce01528181611200015281816112cb01528181611372015281816116300152611b00015261294a6000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80637535d2461161010f578063cf5e7bd3116100a2578063f850a81c11610071578063f850a81c1461049f578063f851a440146104b2578063f9f031df146104c3578063fe380db5146104e457600080fd5b8063cf5e7bd314610453578063d94bff1314610466578063d9caed1214610479578063ede4edd01461048c57600080fd5b8063a01dccd8116100de578063a01dccd814610407578063b6b257421461041a578063bf6b874e14610422578063ce665dd81461044b57600080fd5b80637535d246146103a75780637cc4fc05146103ce57806381bac14f146103e157806394d4d058146103f457600080fd5b80632f37b624116101875780635383dba4116101565780635383dba4146103465780636eacd398146103595780636f9a302f1461036c578063704b6c021461039457600080fd5b80632f37b624146102d6578063333dbb0d146102f95780633871cb3f1461030c57806351ef65931461033357600080fd5b80631848effa116101c35780631848effa146102765780631c5a9d9c1461029d57806326e8eda2146102b05780632876fb4e146102c357600080fd5b806304e02903146101ea5780630a7292f5146101ff5780630efc8fd21461024b575b600080fd5b6101fd6101f8366004611edf565b6104f7565b005b61023861020d366004611efc565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6040519081526020015b60405180910390f35b61025e610259366004611edf565b6105ea565b6040516001600160a01b039091168152602001610242565b61025e7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6102ab366004611edf565b610685565b6102386102be366004611f35565b6106ca565b6102386102d1366004611efc565b610716565b6102e96102e4366004611edf565b610743565b6040519015158152602001610242565b610238610307366004611f84565b610761565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b60025461025e906001600160a01b031681565b610238610354366004611fd7565b6107b7565b610238610367366004611edf565b610866565b61037f61037a366004612005565b61087a565b60408051928352602083019190915201610242565b6101fd6103a2366004611edf565b6109ad565b61025e7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6103dc3660046120b0565b610a7b565b6101fd6103ef366004611edf565b610ab5565b6101fd610402366004611edf565b610b2e565b6101fd610415366004611efc565b610b68565b6101fd610c8f565b610238610430366004611edf565b6001600160a01b031660009081526003602052604090205490565b610238601381565b6101fd610461366004611edf565b610cbf565b6102e9610474366004611edf565b610cf2565b6101fd610487366004611f35565b610d10565b6101fd61049a366004611edf565b610d94565b6101fd6104ad3660046120f2565b610dc8565b6000546001600160a01b031661025e565b6104d66104d13660046120b0565b610f1d565b604051610242929190612149565b6102386104f2366004611efc565b610f65565b6000546001600160a01b031633148061051a57506002546001600160a01b031633145b61053f5760405162461bcd60e51b8152600401610536906121cd565b60405180910390fd5b6001600160a01b0381166105955760405162461bcd60e51b815260206004820152601f60248201527f41617665506f6f6c6564526573657276652f3078416176654d616e61676572006044820152606401610536565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fb6ba5fc5ae0a94b812b11dfa751771f5462efbe2bae48a93a63e2669873f6bb6906020015b60405180910390a150565b6040516335ea6a7560e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a919061230a565b610100015192915050565b6000546001600160a01b03163314806106a257506106a233610743565b6106be5760405162461bcd60e51b8152600401610536906121cd565b6106c781610f7a565b50565b60006106d533610743565b6106f15760405162461bcd60e51b8152600401610536906121cd565b816000036107015750600061070f565b61070c848484610f86565b90505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000005b90505b92915050565b6001600160a01b031660009081526001602052604090205460ff1690565b600061076c33610743565b6107885760405162461bcd60e51b8152600401610536906121cd565b818015610793575082155b156107a0575060006107af565b6107ac85858585610ffd565b90505b949350505050565b600080546001600160a01b03163314806107d557506107d533610743565b6107f15760405162461bcd60e51b8152600401610536906121cd565b6040516370a0823160e01b815230600482015261073a9084906001600160a01b038216906370a0823190602401602060405180830381865afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f919061242d565b3085611087565b6000610870611e95565b61070f83826111d3565b60008061088633610743565b6108a25760405162461bcd60e51b8152600401610536906121cd565b85156108b6576108b3878488610f86565b91505b83156108ca576108c7858486610f86565b90505b60006108d78860016107b7565b9050801561093757836001600160a01b0316336001600160a01b0316896001600160a01b03167f10d8f655f7655a590b4e052b7187565b54bca0cd5cd9521f153c3da722d72f4f8460405161092e91815260200190565b60405180910390a45b6109428660016107b7565b905080156109a257836001600160a01b0316336001600160a01b0316876001600160a01b03167f10d8f655f7655a590b4e052b7187565b54bca0cd5cd9521f153c3da722d72f4f8460405161099991815260200190565b60405180910390a45b509550959350505050565b6000546001600160a01b031633146109d75760405162461bcd60e51b8152600401610536906121cd565b6001600160a01b038116610a2d5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610536565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020016105df565b6002546001600160a01b0316338114610aa65760405162461bcd60e51b8152600401610536906121cd565b610ab083836111f3565b505050565b6000546001600160a01b03163314610adf5760405162461bcd60e51b8152600401610536906121cd565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fecac69b9e48a248381b74f2e1cf855cc6afc2f410751325703374c70351035bc9190a250565b6002546001600160a01b0316338114610b595760405162461bcd60e51b8152600401610536906121cd565b610b648260006112c5565b5050565b610b7133610743565b610bbd5760405162461bcd60e51b815260206004820152601f60248201527f526f757465722f63616c6c657249734e6f74426f756e64546f526f75746572006044820152606401610536565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e919061242d565b11610c855760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b6064820152608401610536565b610b6482826112f0565b610c9833610743565b610cb45760405162461bcd60e51b8152600401610536906121cd565b610cbd33611442565b565b6000546001600160a01b03163314610ce95760405162461bcd60e51b8152600401610536906121cd565b6106c781611442565b600080610cfe836105ea565b6001600160a01b031615159392505050565b610d1933610743565b610d355760405162461bcd60e51b8152600401610536906121cd565b610d3d611e95565b6000198203610d5457610d5184848361148b565b91505b6000610d608583611500565b90506000838211610d7a57610d75828561245c565b610d7d565b60005b9050610d8c868686848761158d565b505050505050565b6002546001600160a01b0316338114610dbf5760405162461bcd60e51b8152600401610536906121cd565b610b648261160a565b610dd133610743565b610ded5760405162461bcd60e51b8152600401610536906121cd565b60005b82811015610f17576000848483818110610e0c57610e0c61246f565b9050602002016020810190610e219190611edf565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610e67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8b919061242d565b90508015610f065780610ec5868685818110610ea957610ea961246f565b9050602002016020810190610ebe9190611edf565b8584610f86565b14610f065760405162461bcd60e51b81526020600482015260116024820152701c9bdd5d195c8bdc1d5cda11985a5b1959607a1b6044820152606401610536565b50610f1081612485565b9050610df0565b50505050565b60025460609081906001600160a01b0316338114610f4d5760405162461bcd60e51b8152600401610536906121cd565b610f58858533611688565b925092505b509250929050565b6000610f6f611e95565b6107af84848361148b565b6106c7816000196112c5565b6000610f90611e95565b610f9c858585846117bf565b610fa885333086611841565b610ff45760405162461bcd60e51b815260206004820152601b60248201527f41617665506f6f6c6564526f757465722f707573684661696c656400000000006044820152606401610536565b50909392505050565b600080600061100a611e95565b60006110168983611500565b905060006110258a8a8561148b565b90508782101561104f576110398a84611910565b9450866110465780611048565b875b935061106c565b86611067578082116110615781611069565b80611069565b875b93505b6110798a8a86888761158d565b509198975050505050505050565b600083600003611099575060006107af565b60405163617ba03760e01b81526001600160a01b038681166004830152602482018690528481166044830152600060648301527f0000000000000000000000000000000000000000000000000000000000000000169063617ba03790608401600060405180830381600087803b15801561111257600080fd5b505af1925050508015611123575060015b6111cb5761112f61249e565b806308c379a00361117f57506111436124ba565b8061114e5750611181565b808361116d5760405162461bcd60e51b81526004016105369190612568565b506111778161259b565b9150506107af565b505b816111b95760405162461bcd60e51b81526020600482015260086024820152673737a932b0b9b7b760c11b6044820152606401610536565b50673737a932b0b9b7b760c11b6107af565b5060006107af565b60006111df8383611910565b6111e98484611500565b61073a91906125c2565b60005b81811015610ab0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a3b74b984848481811061123f5761123f61246f565b90506020020160208101906112549190611edf565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561129c57600080fd5b505af11580156112b0573d6000803e3d6000fd5b50505050806112be90612485565b90506111f6565b610ab0827f0000000000000000000000000000000000000000000000000000000000000000836119d0565b6112f982610cf2565b6113555760405162461bcd60e51b815260206004820152602760248201527f41617665506f6f6c6564526f757465722f746f6b656e4e6f744c656e6461626c604482015266654f6e4161766560c81b6064820152608401610536565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919084169063dd62ed3e90604401602060405180830381865afa1580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e9919061242d565b11610b645760405162461bcd60e51b815260206004820152602360248201527f41617665506f6f6c6564526f757465722f6861734e6f74417070726f766564506044820152621bdbdb60ea1b6064820152608401610536565b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30a4a29afb6d28e62264c8b7cd43fe3a5edce91f4b9c8591b23a99b3838686b59190a250565b6001600160a01b03831660009081526003602052604081205480156114f457806114b586856111d3565b6001600160a01b038088166000908152600460209081526040808320938a16835292905220546114e591906125d5565b6114ef91906125ec565b6114f7565b60005b95945050505050565b60008160200151156115145750805161073d565b600160208301526040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611583919061242d565b808352905061073d565b611599858585846119dd565b81156115ac576115aa858330611aca565b505b6115b7853385611b7c565b6116035760405162461bcd60e51b815260206004820152601f60248201527f41617665506f6f6c6564526f757465722f77697468647261774661696c6564006044820152606401610536565b5050505050565b604051635a3b74b960e01b81526001600160a01b038281166004830152600060248301527f00000000000000000000000000000000000000000000000000000000000000001690635a3b74b990604401600060405180830381600087803b15801561167457600080fd5b505af1158015611603573d6000803e3d6000fd5b6040516321f8a72160e01b81527f703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532600482015260609081906000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906321f8a72190602401602060405180830381865afa158015611714573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611738919061260e565b60405163bb492bf560e01b81529091506001600160a01b0382169063bb492bf59061176b9089908990899060040161262b565b6000604051808303816000875af115801561178a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117b29190810190612723565b9097909650945050505050565b60006117cc858484611c1f565b6001600160a01b0380871660009081526004602090815260408083209389168352929052908120805492935083929091906118089084906125c2565b90915550506001600160a01b038516600090815260036020526040812080548392906118359084906125c2565b90915550505050505050565b600081600003611853575060016107af565b826001600160a01b0316846001600160a01b0316036118e2576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa1580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d9919061242d565b101590506107af565b306001600160a01b03851603611904576118fd858484611c5e565b90506107af565b6107ac85858585611d44565b60008160600151156119275750604081015161073d565b60016060830152600061193a8484611e21565b90506001600160a01b03811661195657600060408401526119c4565b6040516370a0823160e01b81523060048201526001600160a01b038216906370a0823190602401602060405180830381865afa15801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119be919061242d565b60408401525b5050604081015161073d565b600061070c848484611e5f565b60006119ea858484611c1f565b6001600160a01b0380871660009081526004602090815260408083209389168352929052205490915080821115611a6e5760405162461bcd60e51b815260206004820152602260248201527f41617665506f6f6c6564526f757465722f696e73756666696369656e7446756e604482015261647360f01b6064820152608401610536565b611a78828261245c565b6001600160a01b038088166000818152600460209081526040808320948b16835293815283822094909455908152600390925281208054849290611abd90849061245c565b9091555050505050505050565b60008215611b7257604051631a4ca37b60e21b81526001600160a01b0385811660048301526024820185905283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec906064016020604051808303816000875af1158015611b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6d919061242d565b61070c565b6000949350505050565b600081600003611b8e5750600161070f565b306001600160a01b03841603611c14576040516370a0823160e01b81526001600160a01b0384811660048301528391908616906370a0823190602401602060405180830381865afa158015611be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0b919061242d565b1015905061070f565b61070c848484611c5e565b6001600160a01b0383166000908152600360205260408120548015611c5257611c4885846111d3565b6114e585836125d5565b6114f76013600a6128cf565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611cce91906128db565b6000604051808303816000865af19150503d8060008114611d0b576040519150601f19603f3d011682016040523d82523d6000602084013e611d10565b606091505b5091509150818015611d3a575080511580611d3a575080806020019051810190611d3a91906128f7565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691611daa91906128db565b6000604051808303816000865af19150503d8060008114611de7576040519150601f19603f3d011682016040523d82523d6000602084013e611dec565b606091505b5091509150818015611e16575080511580611e16575080806020019051810190611e1691906128f7565b979650505050505050565b60008160a0015115611e385750608081015161073d565b600160a0830152611e48836105ea565b6001600160a01b031660808301819052905061073d565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063095ea7b360e01b90606401611c90565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6001600160a01b03811681146106c757600080fd5b600060208284031215611ef157600080fd5b813561070f81611eca565b60008060408385031215611f0f57600080fd5b8235611f1a81611eca565b91506020830135611f2a81611eca565b809150509250929050565b600080600060608486031215611f4a57600080fd5b8335611f5581611eca565b92506020840135611f6581611eca565b929592945050506040919091013590565b80151581146106c757600080fd5b60008060008060808587031215611f9a57600080fd5b8435611fa581611eca565b93506020850135611fb581611eca565b9250604085013591506060850135611fcc81611f76565b939692955090935050565b60008060408385031215611fea57600080fd5b8235611ff581611eca565b91506020830135611f2a81611f76565b600080600080600060a0868803121561201d57600080fd5b853561202881611eca565b945060208601359350604086013561203f81611eca565b925060608601359150608086013561205681611eca565b809150509295509295909350565b60008083601f84011261207657600080fd5b50813567ffffffffffffffff81111561208e57600080fd5b6020830191508360208260051b85010111156120a957600080fd5b9250929050565b600080602083850312156120c357600080fd5b823567ffffffffffffffff8111156120da57600080fd5b6120e685828601612064565b90969095509350505050565b60008060006040848603121561210757600080fd5b833567ffffffffffffffff81111561211e57600080fd5b61212a86828701612064565b909450925050602084013561213e81611eca565b809150509250925092565b604080825283519082018190526000906020906060840190828701845b8281101561218b5781516001600160a01b031684529284019290840190600101612166565b5050508381038285015284518082528583019183019060005b818110156121c0578351835292840192918401916001016121a4565b5090979650505050505050565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561224057612240612204565b6040525050565b6040516101e0810167ffffffffffffffff8111828210171561226b5761226b612204565b60405290565b60006020828403121561228357600080fd5b6040516020810181811067ffffffffffffffff821117156122a6576122a6612204565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff811681146122d357600080fd5b919050565b805164ffffffffff811681146122d357600080fd5b805161ffff811681146122d357600080fd5b80516122d381611eca565b60006101e0828403121561231d57600080fd5b612325612247565b61232f8484612271565b815261233d602084016122b3565b602082015261234e604084016122b3565b604082015261235f606084016122b3565b6060820152612370608084016122b3565b608082015261238160a084016122b3565b60a082015261239260c084016122d8565b60c08201526123a360e084016122ed565b60e08201526101006123b68185016122ff565b908201526101206123c88482016122ff565b908201526101406123da8482016122ff565b908201526101606123ec8482016122ff565b908201526101806123fe8482016122b3565b908201526101a06124108482016122b3565b908201526101c06124228482016122b3565b908201529392505050565b60006020828403121561243f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073d5761073d612446565b634e487b7160e01b600052603260045260246000fd5b60006001820161249757612497612446565b5060010190565b600060033d11156124b75760046000803e5060005160e01c5b90565b600060443d10156124c85790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156124f857505050505090565b82850191508151818111156125105750505050505090565b843d870101602082850101111561252a5750505050505090565b6125396020828601018761221a565b509095945050505050565b60005b8381101561255f578181015183820152602001612547565b50506000910152565b6020815260008251806020840152612587816040850160208701612544565b601f01601f19169190910160400192915050565b805160208083015191908110156125bc576000198160200360031b1b821691505b50919050565b8082018082111561073d5761073d612446565b808202811582820484141761073d5761073d612446565b60008261260957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561262057600080fd5b815161070f81611eca565b6040808252810183905260008460608301825b8681101561266e57823561265181611eca565b6001600160a01b031682526020928301929091019060010161263e565b506001600160a01b03949094166020939093019290925250909392505050565b600067ffffffffffffffff8211156126a8576126a8612204565b5060051b60200190565b600082601f8301126126c357600080fd5b815160206126d08261268e565b6040516126dd828261221a565b83815260059390931b85018201928281019150868411156126fd57600080fd5b8286015b848110156127185780518352918301918301612701565b509695505050505050565b6000806040838503121561273657600080fd5b825167ffffffffffffffff8082111561274e57600080fd5b818501915085601f83011261276257600080fd5b8151602061276f8261268e565b60405161277c828261221a565b83815260059390931b850182019282810191508984111561279c57600080fd5b948201945b838610156127c35785516127b481611eca565b825294820194908201906127a1565b918801519196509093505050808211156127dc57600080fd5b506127e9858286016126b2565b9150509250929050565b600181815b80851115610f5d57816000190482111561281457612814612446565b8085161561282157918102915b93841c93908002906127f8565b60008261283d5750600161073d565b8161284a5750600061073d565b8160018114612860576002811461286a57612886565b600191505061073d565b60ff84111561287b5761287b612446565b50506001821b61073d565b5060208310610133831016604e8410600b84101617156128a9575081810a61073d565b6128b383836127f3565b80600019048211156128c7576128c7612446565b029392505050565b600061073a838361282e565b600082516128ed818460208701612544565b9190910192915050565b60006020828403121561290957600080fd5b815161070f81611f7656fea264697066735822122089774d68c1e273218e80614482aa0c6aef67a296f481109040e5047c6b5a63f864736f6c63430008140033",
    "sourceMap": "2268:17828:121:-:0;;;5246:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5353:8;355:10:119;5323:17:121;1184::122;917::101;-1:-1:-1;;;;;875:60:101;;;-1:-1:-1;;;;;875:60:101;;;;;942:19;987:17;-1:-1:-1;;;;;964:49:101;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;942:73;-1:-1:-1;;;;;;1029:25:101;;1021:57;;;;-1:-1:-1;;;1021:57:101;;885:2:131;1021:57:101;;;867:21:131;924:2;904:18;;;897:30;963:21;943:18;;;936:49;1002:18;;1021:57:101;;;;;;;;;-1:-1:-1;;;;;1085:25:101;;;;;985:20:123;;;-1:-1:-1;977:57:123;;-1:-1:-1;977:57:123;;;-1:-1:-1;;;977:57:123;;1233:2:131;977:57:123;;;1215:21:131;1272:2;1252:18;;;1245:30;1311:26;1291:18;;;1284:54;1355:18;;977:57:123;1031:348:131;977:57:123;1040:6;:15;;-1:-1:-1;;;;;;1040:15:123;-1:-1:-1;;;;;1040:15:123;;;;;;;;;;602:29:120;;5369:26:121::2;5384:10;5369:14;:26::i;:::-;5246:154:::0;;2268:17828;;19796:298;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;19863:10:121;:21;;:50;;-1:-1:-1;19902:11:121;;-1:-1:-1;;;;;19902:11:121;19888:10;:25;19863:50;19855:87;;;;-1:-1:-1;;;19855:87:121;;1586:2:131;19855:87:121;;;1568:21:131;1625:2;1605:18;;;1598:30;1664:26;1644:18;;;1637:54;1708:18;;19855:87:121;1384:348:131;19855:87:121;-1:-1:-1;;;;;19956:26:121;;19948:70;;;;-1:-1:-1;;;19948:70:121;;1939:2:131;19948:70:121;;;1921:21:131;1978:2;1958:18;;;1951:30;2017:33;1997:18;;;1990:61;2068:18;;19948:70:121;1737:355:131;19948:70:121;20024:11;:26;;-1:-1:-1;;;;;;20024:26:121;-1:-1:-1;;;;;20024:26:121;;;;;;;;20061:28;;2243:51:131;;;20061:28:121;;2231:2:131;2216:18;20061:28:121;;;;;;;19796:298;:::o;14:177:131:-;93:13;;-1:-1:-1;;;;;135:31:131;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:269::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;455:2;444:9;440:18;434:25;424:35;;196:269;;;;;:::o;470:208::-;540:6;593:2;581:9;572:7;568:23;564:32;561:52;;;609:1;606;599:12;561:52;632:40;662:9;632:40;:::i;:::-;622:50;470:208;-1:-1:-1;;;470:208:131:o;2097:203::-;2268:17828:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80637535d2461161010f578063cf5e7bd3116100a2578063f850a81c11610071578063f850a81c1461049f578063f851a440146104b2578063f9f031df146104c3578063fe380db5146104e457600080fd5b8063cf5e7bd314610453578063d94bff1314610466578063d9caed1214610479578063ede4edd01461048c57600080fd5b8063a01dccd8116100de578063a01dccd814610407578063b6b257421461041a578063bf6b874e14610422578063ce665dd81461044b57600080fd5b80637535d246146103a75780637cc4fc05146103ce57806381bac14f146103e157806394d4d058146103f457600080fd5b80632f37b624116101875780635383dba4116101565780635383dba4146103465780636eacd398146103595780636f9a302f1461036c578063704b6c021461039457600080fd5b80632f37b624146102d6578063333dbb0d146102f95780633871cb3f1461030c57806351ef65931461033357600080fd5b80631848effa116101c35780631848effa146102765780631c5a9d9c1461029d57806326e8eda2146102b05780632876fb4e146102c357600080fd5b806304e02903146101ea5780630a7292f5146101ff5780630efc8fd21461024b575b600080fd5b6101fd6101f8366004611edf565b6104f7565b005b61023861020d366004611efc565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b6040519081526020015b60405180910390f35b61025e610259366004611edf565b6105ea565b6040516001600160a01b039091168152602001610242565b61025e7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6102ab366004611edf565b610685565b6102386102be366004611f35565b6106ca565b6102386102d1366004611efc565b610716565b6102e96102e4366004611edf565b610743565b6040519015158152602001610242565b610238610307366004611f84565b610761565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b60025461025e906001600160a01b031681565b610238610354366004611fd7565b6107b7565b610238610367366004611edf565b610866565b61037f61037a366004612005565b61087a565b60408051928352602083019190915201610242565b6101fd6103a2366004611edf565b6109ad565b61025e7f000000000000000000000000000000000000000000000000000000000000000081565b6101fd6103dc3660046120b0565b610a7b565b6101fd6103ef366004611edf565b610ab5565b6101fd610402366004611edf565b610b2e565b6101fd610415366004611efc565b610b68565b6101fd610c8f565b610238610430366004611edf565b6001600160a01b031660009081526003602052604090205490565b610238601381565b6101fd610461366004611edf565b610cbf565b6102e9610474366004611edf565b610cf2565b6101fd610487366004611f35565b610d10565b6101fd61049a366004611edf565b610d94565b6101fd6104ad3660046120f2565b610dc8565b6000546001600160a01b031661025e565b6104d66104d13660046120b0565b610f1d565b604051610242929190612149565b6102386104f2366004611efc565b610f65565b6000546001600160a01b031633148061051a57506002546001600160a01b031633145b61053f5760405162461bcd60e51b8152600401610536906121cd565b60405180910390fd5b6001600160a01b0381166105955760405162461bcd60e51b815260206004820152601f60248201527f41617665506f6f6c6564526573657276652f3078416176654d616e61676572006044820152606401610536565b600280546001600160a01b0319166001600160a01b0383169081179091556040519081527fb6ba5fc5ae0a94b812b11dfa751771f5462efbe2bae48a93a63e2669873f6bb6906020015b60405180910390a150565b6040516335ea6a7560e01b81526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906335ea6a75906024016101e060405180830381865afa158015610656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067a919061230a565b610100015192915050565b6000546001600160a01b03163314806106a257506106a233610743565b6106be5760405162461bcd60e51b8152600401610536906121cd565b6106c781610f7a565b50565b60006106d533610743565b6106f15760405162461bcd60e51b8152600401610536906121cd565b816000036107015750600061070f565b61070c848484610f86565b90505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000005b90505b92915050565b6001600160a01b031660009081526001602052604090205460ff1690565b600061076c33610743565b6107885760405162461bcd60e51b8152600401610536906121cd565b818015610793575082155b156107a0575060006107af565b6107ac85858585610ffd565b90505b949350505050565b600080546001600160a01b03163314806107d557506107d533610743565b6107f15760405162461bcd60e51b8152600401610536906121cd565b6040516370a0823160e01b815230600482015261073a9084906001600160a01b038216906370a0823190602401602060405180830381865afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f919061242d565b3085611087565b6000610870611e95565b61070f83826111d3565b60008061088633610743565b6108a25760405162461bcd60e51b8152600401610536906121cd565b85156108b6576108b3878488610f86565b91505b83156108ca576108c7858486610f86565b90505b60006108d78860016107b7565b9050801561093757836001600160a01b0316336001600160a01b0316896001600160a01b03167f10d8f655f7655a590b4e052b7187565b54bca0cd5cd9521f153c3da722d72f4f8460405161092e91815260200190565b60405180910390a45b6109428660016107b7565b905080156109a257836001600160a01b0316336001600160a01b0316876001600160a01b03167f10d8f655f7655a590b4e052b7187565b54bca0cd5cd9521f153c3da722d72f4f8460405161099991815260200190565b60405180910390a45b509550959350505050565b6000546001600160a01b031633146109d75760405162461bcd60e51b8152600401610536906121cd565b6001600160a01b038116610a2d5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610536565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020016105df565b6002546001600160a01b0316338114610aa65760405162461bcd60e51b8152600401610536906121cd565b610ab083836111f3565b505050565b6000546001600160a01b03163314610adf5760405162461bcd60e51b8152600401610536906121cd565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fecac69b9e48a248381b74f2e1cf855cc6afc2f410751325703374c70351035bc9190a250565b6002546001600160a01b0316338114610b595760405162461bcd60e51b8152600401610536906121cd565b610b648260006112c5565b5050565b610b7133610743565b610bbd5760405162461bcd60e51b815260206004820152601f60248201527f526f757465722f63616c6c657249734e6f74426f756e64546f526f75746572006044820152606401610536565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa158015610c0a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2e919061242d565b11610c855760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b6064820152608401610536565b610b6482826112f0565b610c9833610743565b610cb45760405162461bcd60e51b8152600401610536906121cd565b610cbd33611442565b565b6000546001600160a01b03163314610ce95760405162461bcd60e51b8152600401610536906121cd565b6106c781611442565b600080610cfe836105ea565b6001600160a01b031615159392505050565b610d1933610743565b610d355760405162461bcd60e51b8152600401610536906121cd565b610d3d611e95565b6000198203610d5457610d5184848361148b565b91505b6000610d608583611500565b90506000838211610d7a57610d75828561245c565b610d7d565b60005b9050610d8c868686848761158d565b505050505050565b6002546001600160a01b0316338114610dbf5760405162461bcd60e51b8152600401610536906121cd565b610b648261160a565b610dd133610743565b610ded5760405162461bcd60e51b8152600401610536906121cd565b60005b82811015610f17576000848483818110610e0c57610e0c61246f565b9050602002016020810190610e219190611edf565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610e67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8b919061242d565b90508015610f065780610ec5868685818110610ea957610ea961246f565b9050602002016020810190610ebe9190611edf565b8584610f86565b14610f065760405162461bcd60e51b81526020600482015260116024820152701c9bdd5d195c8bdc1d5cda11985a5b1959607a1b6044820152606401610536565b50610f1081612485565b9050610df0565b50505050565b60025460609081906001600160a01b0316338114610f4d5760405162461bcd60e51b8152600401610536906121cd565b610f58858533611688565b925092505b509250929050565b6000610f6f611e95565b6107af84848361148b565b6106c7816000196112c5565b6000610f90611e95565b610f9c858585846117bf565b610fa885333086611841565b610ff45760405162461bcd60e51b815260206004820152601b60248201527f41617665506f6f6c6564526f757465722f707573684661696c656400000000006044820152606401610536565b50909392505050565b600080600061100a611e95565b60006110168983611500565b905060006110258a8a8561148b565b90508782101561104f576110398a84611910565b9450866110465780611048565b875b935061106c565b86611067578082116110615781611069565b80611069565b875b93505b6110798a8a86888761158d565b509198975050505050505050565b600083600003611099575060006107af565b60405163617ba03760e01b81526001600160a01b038681166004830152602482018690528481166044830152600060648301527f0000000000000000000000000000000000000000000000000000000000000000169063617ba03790608401600060405180830381600087803b15801561111257600080fd5b505af1925050508015611123575060015b6111cb5761112f61249e565b806308c379a00361117f57506111436124ba565b8061114e5750611181565b808361116d5760405162461bcd60e51b81526004016105369190612568565b506111778161259b565b9150506107af565b505b816111b95760405162461bcd60e51b81526020600482015260086024820152673737a932b0b9b7b760c11b6044820152606401610536565b50673737a932b0b9b7b760c11b6107af565b5060006107af565b60006111df8383611910565b6111e98484611500565b61073a91906125c2565b60005b81811015610ab0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635a3b74b984848481811061123f5761123f61246f565b90506020020160208101906112549190611edf565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260016024820152604401600060405180830381600087803b15801561129c57600080fd5b505af11580156112b0573d6000803e3d6000fd5b50505050806112be90612485565b90506111f6565b610ab0827f0000000000000000000000000000000000000000000000000000000000000000836119d0565b6112f982610cf2565b6113555760405162461bcd60e51b815260206004820152602760248201527f41617665506f6f6c6564526f757465722f746f6b656e4e6f744c656e6461626c604482015266654f6e4161766560c81b6064820152608401610536565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919084169063dd62ed3e90604401602060405180830381865afa1580156113c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e9919061242d565b11610b645760405162461bcd60e51b815260206004820152602360248201527f41617665506f6f6c6564526f757465722f6861734e6f74417070726f766564506044820152621bdbdb60ea1b6064820152608401610536565b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30a4a29afb6d28e62264c8b7cd43fe3a5edce91f4b9c8591b23a99b3838686b59190a250565b6001600160a01b03831660009081526003602052604081205480156114f457806114b586856111d3565b6001600160a01b038088166000908152600460209081526040808320938a16835292905220546114e591906125d5565b6114ef91906125ec565b6114f7565b60005b95945050505050565b60008160200151156115145750805161073d565b600160208301526040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561155f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611583919061242d565b808352905061073d565b611599858585846119dd565b81156115ac576115aa858330611aca565b505b6115b7853385611b7c565b6116035760405162461bcd60e51b815260206004820152601f60248201527f41617665506f6f6c6564526f757465722f77697468647261774661696c6564006044820152606401610536565b5050505050565b604051635a3b74b960e01b81526001600160a01b038281166004830152600060248301527f00000000000000000000000000000000000000000000000000000000000000001690635a3b74b990604401600060405180830381600087803b15801561167457600080fd5b505af1158015611603573d6000803e3d6000fd5b6040516321f8a72160e01b81527f703c2c8634bed68d98c029c18f310e7f7ec0e5d6342c590190b3cb8b3ba54532600482015260609081906000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906321f8a72190602401602060405180830381865afa158015611714573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611738919061260e565b60405163bb492bf560e01b81529091506001600160a01b0382169063bb492bf59061176b9089908990899060040161262b565b6000604051808303816000875af115801561178a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117b29190810190612723565b9097909650945050505050565b60006117cc858484611c1f565b6001600160a01b0380871660009081526004602090815260408083209389168352929052908120805492935083929091906118089084906125c2565b90915550506001600160a01b038516600090815260036020526040812080548392906118359084906125c2565b90915550505050505050565b600081600003611853575060016107af565b826001600160a01b0316846001600160a01b0316036118e2576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa1580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d9919061242d565b101590506107af565b306001600160a01b03851603611904576118fd858484611c5e565b90506107af565b6107ac85858585611d44565b60008160600151156119275750604081015161073d565b60016060830152600061193a8484611e21565b90506001600160a01b03811661195657600060408401526119c4565b6040516370a0823160e01b81523060048201526001600160a01b038216906370a0823190602401602060405180830381865afa15801561199a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119be919061242d565b60408401525b5050604081015161073d565b600061070c848484611e5f565b60006119ea858484611c1f565b6001600160a01b0380871660009081526004602090815260408083209389168352929052205490915080821115611a6e5760405162461bcd60e51b815260206004820152602260248201527f41617665506f6f6c6564526f757465722f696e73756666696369656e7446756e604482015261647360f01b6064820152608401610536565b611a78828261245c565b6001600160a01b038088166000818152600460209081526040808320948b16835293815283822094909455908152600390925281208054849290611abd90849061245c565b9091555050505050505050565b60008215611b7257604051631a4ca37b60e21b81526001600160a01b0385811660048301526024820185905283811660448301527f000000000000000000000000000000000000000000000000000000000000000016906369328dec906064016020604051808303816000875af1158015611b49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6d919061242d565b61070c565b6000949350505050565b600081600003611b8e5750600161070f565b306001600160a01b03841603611c14576040516370a0823160e01b81526001600160a01b0384811660048301528391908616906370a0823190602401602060405180830381865afa158015611be7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0b919061242d565b1015905061070f565b61070c848484611c5e565b6001600160a01b0383166000908152600360205260408120548015611c5257611c4885846111d3565b6114e585836125d5565b6114f76013600a6128cf565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611cce91906128db565b6000604051808303816000865af19150503d8060008114611d0b576040519150601f19603f3d011682016040523d82523d6000602084013e611d10565b606091505b5091509150818015611d3a575080511580611d3a575080806020019051810190611d3a91906128f7565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691611daa91906128db565b6000604051808303816000865af19150503d8060008114611de7576040519150601f19603f3d011682016040523d82523d6000602084013e611dec565b606091505b5091509150818015611e16575080511580611e16575080806020019051810190611e1691906128f7565b979650505050505050565b60008160a0015115611e385750608081015161073d565b600160a0830152611e48836105ea565b6001600160a01b031660808301819052905061073d565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063095ea7b360e01b90606401611c90565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915290565b6001600160a01b03811681146106c757600080fd5b600060208284031215611ef157600080fd5b813561070f81611eca565b60008060408385031215611f0f57600080fd5b8235611f1a81611eca565b91506020830135611f2a81611eca565b809150509250929050565b600080600060608486031215611f4a57600080fd5b8335611f5581611eca565b92506020840135611f6581611eca565b929592945050506040919091013590565b80151581146106c757600080fd5b60008060008060808587031215611f9a57600080fd5b8435611fa581611eca565b93506020850135611fb581611eca565b9250604085013591506060850135611fcc81611f76565b939692955090935050565b60008060408385031215611fea57600080fd5b8235611ff581611eca565b91506020830135611f2a81611f76565b600080600080600060a0868803121561201d57600080fd5b853561202881611eca565b945060208601359350604086013561203f81611eca565b925060608601359150608086013561205681611eca565b809150509295509295909350565b60008083601f84011261207657600080fd5b50813567ffffffffffffffff81111561208e57600080fd5b6020830191508360208260051b85010111156120a957600080fd5b9250929050565b600080602083850312156120c357600080fd5b823567ffffffffffffffff8111156120da57600080fd5b6120e685828601612064565b90969095509350505050565b60008060006040848603121561210757600080fd5b833567ffffffffffffffff81111561211e57600080fd5b61212a86828701612064565b909450925050602084013561213e81611eca565b809150509250925092565b604080825283519082018190526000906020906060840190828701845b8281101561218b5781516001600160a01b031684529284019290840190600101612166565b5050508381038285015284518082528583019183019060005b818110156121c0578351835292840192918401916001016121a4565b5090979650505050505050565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561224057612240612204565b6040525050565b6040516101e0810167ffffffffffffffff8111828210171561226b5761226b612204565b60405290565b60006020828403121561228357600080fd5b6040516020810181811067ffffffffffffffff821117156122a6576122a6612204565b6040529151825250919050565b80516fffffffffffffffffffffffffffffffff811681146122d357600080fd5b919050565b805164ffffffffff811681146122d357600080fd5b805161ffff811681146122d357600080fd5b80516122d381611eca565b60006101e0828403121561231d57600080fd5b612325612247565b61232f8484612271565b815261233d602084016122b3565b602082015261234e604084016122b3565b604082015261235f606084016122b3565b6060820152612370608084016122b3565b608082015261238160a084016122b3565b60a082015261239260c084016122d8565b60c08201526123a360e084016122ed565b60e08201526101006123b68185016122ff565b908201526101206123c88482016122ff565b908201526101406123da8482016122ff565b908201526101606123ec8482016122ff565b908201526101806123fe8482016122b3565b908201526101a06124108482016122b3565b908201526101c06124228482016122b3565b908201529392505050565b60006020828403121561243f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561073d5761073d612446565b634e487b7160e01b600052603260045260246000fd5b60006001820161249757612497612446565b5060010190565b600060033d11156124b75760046000803e5060005160e01c5b90565b600060443d10156124c85790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156124f857505050505090565b82850191508151818111156125105750505050505090565b843d870101602082850101111561252a5750505050505090565b6125396020828601018761221a565b509095945050505050565b60005b8381101561255f578181015183820152602001612547565b50506000910152565b6020815260008251806020840152612587816040850160208701612544565b601f01601f19169190910160400192915050565b805160208083015191908110156125bc576000198160200360031b1b821691505b50919050565b8082018082111561073d5761073d612446565b808202811582820484141761073d5761073d612446565b60008261260957634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561262057600080fd5b815161070f81611eca565b6040808252810183905260008460608301825b8681101561266e57823561265181611eca565b6001600160a01b031682526020928301929091019060010161263e565b506001600160a01b03949094166020939093019290925250909392505050565b600067ffffffffffffffff8211156126a8576126a8612204565b5060051b60200190565b600082601f8301126126c357600080fd5b815160206126d08261268e565b6040516126dd828261221a565b83815260059390931b85018201928281019150868411156126fd57600080fd5b8286015b848110156127185780518352918301918301612701565b509695505050505050565b6000806040838503121561273657600080fd5b825167ffffffffffffffff8082111561274e57600080fd5b818501915085601f83011261276257600080fd5b8151602061276f8261268e565b60405161277c828261221a565b83815260059390931b850182019282810191508984111561279c57600080fd5b948201945b838610156127c35785516127b481611eca565b825294820194908201906127a1565b918801519196509093505050808211156127dc57600080fd5b506127e9858286016126b2565b9150509250929050565b600181815b80851115610f5d57816000190482111561281457612814612446565b8085161561282157918102915b93841c93908002906127f8565b60008261283d5750600161073d565b8161284a5750600061073d565b8160018114612860576002811461286a57612886565b600191505061073d565b60ff84111561287b5761287b612446565b50506001821b61073d565b5060208310610133831016604e8410600b84101617156128a9575081810a61073d565b6128b383836127f3565b80600019048211156128c7576128c7612446565b029392505050565b600061073a838361282e565b600082516128ed818460208701612544565b9190910192915050565b60006020828403121561290957600080fd5b815161070f81611f7656fea264697066735822122089774d68c1e273218e80614482aa0c6aef67a296f481109040e5047c6b5a63f864736f6c63430008140033",
    "sourceMap": "2268:17828:121:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19796:298;;;;;;:::i;:::-;;:::i;:::-;;5793:132;;;;;;:::i;:::-;-1:-1:-1;;;;;5893:16:121;;;5865:11;5893:16;;;:9;:16;;;;;;;;:27;;;;;;;;;;;;;5793:132;;;;954:25:131;;;942:2;927:18;5793:132:121;;;;;;;;2590:146:101;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1432:32:131;;;1414:51;;1402:2;1387:18;2590:146:101;1255:216:131;666:56:101;;;;;8025:84:119;;;;;;:::i;:::-;;:::i;4481:228::-;;;;;;:::i;:::-;;:::i;2141:143::-;;;;;;:::i;:::-;;:::i;1710:99::-;;;;;;:::i;:::-;;:::i;:::-;;;2355:14:131;;2348:22;2330:41;;2318:2;2303:18;1710:99:119;2190:187:131;3264:267:119;;;;;;:::i;:::-;;:::i;437:35:120:-;;;;;2401:26:121;;;;;-1:-1:-1;;;;;2401:26:121;;;11366:184;;;;;;:::i;:::-;;:::i;6608:158::-;;;;;;:::i;:::-;;:::i;12631:1077::-;;;;;;:::i;:::-;;:::i;:::-;;;;4777:25:131;;;4833:2;4818:18;;4811:34;;;;4750:18;12631:1077:121;4603:248:131;2221:167:123;;;;;;:::i;:::-;;:::i;590:27:101:-;;;;;18899:112:121;;;;;;:::i;:::-;;:::i;5922:141:119:-;;;;;;:::i;:::-;;:::i;18393:112:121:-;;;;;;:::i;:::-;;:::i;7091:498:119:-;;;;;;:::i;:::-;;:::i;6421:67::-;;;:::i;6126:106:121:-;;;;;;:::i;:::-;-1:-1:-1;;;;;6208:19:121;6182:10;6208:19;;;:12;:19;;;;;;;6126:106;4071:32;;4101:2;4071:32;;6621:91:119;;;;;;:::i;:::-;;:::i;4882:146:101:-;;;;;;:::i;:::-;;:::i;17096:403:121:-;;;;;;:::i;:::-;;:::i;18625:96::-;;;;;;:::i;:::-;;:::i;5344:310:119:-;;;;;;:::i;:::-;;:::i;1989:79:123:-;2027:15;2057:6;-1:-1:-1;;;;;2057:6:123;1989:79;;19386:215:121;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;7430:195::-;;;;;;:::i;:::-;;:::i;19796:298::-;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;19863:10:121;:21;;:50;;-1:-1:-1;19902:11:121;;-1:-1:-1;;;;;19902:11:121;19888:10;:25;19863:50;19855:87;;;;-1:-1:-1;;;19855:87:121;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;19956:26:121;;19948:70;;;;-1:-1:-1;;;19948:70:121;;8708:2:131;19948:70:121;;;8690:21:131;8747:2;8727:18;;;8720:30;8786:33;8766:18;;;8759:61;8837:18;;19948:70:121;8506:355:131;19948:70:121;20024:11;:26;;-1:-1:-1;;;;;;20024:26:121;-1:-1:-1;;;;;20024:26:121;;;;;;;;20061:28;;1414:51:131;;;20061:28:121;;1402:2:131;1387:18;20061:28:121;;;;;;;;19796:298;:::o;2590:146:101:-;2681:35;;-1:-1:-1;;;2681:35:101;;-1:-1:-1;;;;;1432:32:131;;;2681:35:101;;;1414:51:131;2644:13:101;;2681:4;:19;;;;;;1387:18:131;;2681:35:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;;;2590:146;-1:-1:-1;;2590:146:101:o;8025:84:119:-;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;836:10:119;:21;;:44;;;861:19;869:10;861:7;:19::i;:::-;828:81;;;;-1:-1:-1;;;828:81:119;;;;;;;:::i;:::-;8085:19:::1;8098:5;8085:12;:19::i;:::-;8025:84:::0;:::o;4481:228::-;4569:11;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;4592:6:::1;4602:1;4592:11:::0;4588:40:::1;;-1:-1:-1::0;4620:1:119::1;4613:8;;4588:40;4642:62;4659:5;4677:9;4696:6;4642:8;:62::i;:::-;4633:71;;684:1;4481:228:::0;;;;;:::o;2141:143::-;2217:13;766::120;2245:34:119;2238:41;;2141:143;;;;;:::o;1710:99::-;-1:-1:-1;;;;;1780:24:119;1761:4;1780:24;;;:19;:24;;;;;;;;;1710:99::o;3264:267::-;3365:11;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;3388:6:::1;:21;;;;-1:-1:-1::0;3398:11:119;;3388:21:::1;3384:50;;;-1:-1:-1::0;3426:1:119::1;3419:8;;3384:50;3448:78;3465:5;3483:9;3502:6;3518;3448:8;:78::i;:::-;3439:87;;684:1;3264:267:::0;;;;;;:::o;11366:184:121:-;11445:14;2057:6:123;;-1:-1:-1;;;;;2057:6:123;836:10:119;:21;;:44;;;861:19;869:10;861:7;:19::i;:::-;828:81;;;;-1:-1:-1;;;828:81:119;;;;;;;:::i;:::-;11489:30:121::1;::::0;-1:-1:-1;;;11489:30:121;;11513:4:::1;11489:30;::::0;::::1;1414:51:131::0;11474:71:121::1;::::0;11482:5;;-1:-1:-1;;;;;11489:15:121;::::1;::::0;::::1;::::0;1387:18:131;;11489:30:121::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11529:4;11536:8;11474:7;:71::i;6608:158::-:0;6667:12;6687:31;;:::i;:::-;6731:30;6745:5;6752:8;6731:13;:30::i;12631:1077::-;12771:12;12785;630:19:119;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;12998:11:121;;12994:78:::1;;13029:36;13038:6;13046:9;13057:7;13029:8;:36::i;:::-;13019:46;;12994:78;13081:11:::0;;13077:78:::1;;13112:36;13121:6;13129:9;13140:7;13112:8;:36::i;:::-;13102:46;;13077:78;13405:16;13424:25;13436:6;13444:4;13424:11;:25::i;:::-;13405:44:::0;-1:-1:-1;13459:22:121;;13455:101:::1;;13529:9;-1:-1:-1::0;;;;;13496:53:121::1;13517:10;-1:-1:-1::0;;;;;13496:53:121::1;13509:6;-1:-1:-1::0;;;;;13496:53:121::1;;13540:8;13496:53;;;;954:25:131::0;;942:2;927:18;;808:177;13496:53:121::1;;;;;;;;13455:101;13572:25;13584:6;13592:4;13572:11;:25::i;:::-;13561:36:::0;-1:-1:-1;13607:22:121;;13603:101:::1;;13677:9;-1:-1:-1::0;;;;;13644:53:121::1;13665:10;-1:-1:-1::0;;;;;13644:53:121::1;13657:6;-1:-1:-1::0;;;;;13644:53:121::1;;13688:8;13644:53;;;;954:25:131::0;;942:2;927:18;;808:177;13644:53:121::1;;;;;;;;13603:101;12801:907;12631:1077:::0;;;;;;;;:::o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;12660:2:131;2278:57:123::1;::::0;::::1;12642:21:131::0;12699:2;12679:18;;;12672:30;12738:26;12718:18;;;12711:54;12782:18;;2278:57:123::1;12458:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;1414:51:131;;;2367:16:123::1;::::0;1402:2:131;1387:18;2367:16:123::1;1255:216:131::0;18899:112:121;18966:11;;-1:-1:-1;;;;;18966:11:121;1459:10:123;:20;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;18985:21:121::1;18999:6;;18985:13;:21::i;:::-;18899:112:::0;;;:::o;5922:141:119:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;5982:34:119;::::1;;::::0;;;6019:4:::1;5982:34;::::0;;;;;;;:41;;-1:-1:-1;;5982:41:119::1;::::0;;::::1;::::0;;;6034:24;::::1;::::0;5982:34;6034:24:::1;5922:141:::0;:::o;18393:112:121:-;18457:11;;-1:-1:-1;;;;;18457:11:121;1459:10:123;:20;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;18476:24:121::1;18491:5;18498:1;18476:14;:24::i;:::-;18393:112:::0;;:::o;7091:498:119:-;7171:19;7179:10;7171:7;:19::i;:::-;7163:63;;;;-1:-1:-1;;;7163:63:119;;13013:2:131;7163:63:119;;;12995:21:131;13052:2;13032:18;;;13025:30;13091:33;13071:18;;;13064:61;13142:18;;7163:63:119;12811:355:131;7163:63:119;7338:42;;-1:-1:-1;;;7338:42:119;;7354:10;7338:42;;;13383:34:131;7374:4:119;13433:18:131;;;13426:43;7383:1:119;;-1:-1:-1;;;;;7338:15:119;;;;;13318:18:131;;7338:42:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;7330:92;;;;-1:-1:-1;;;7330:92:119;;13682:2:131;7330:92:119;;;13664:21:131;13721:2;13701:18;;;13694:30;13760:34;13740:18;;;13733:62;-1:-1:-1;;;13811:18:131;;;13804:31;13852:19;;7330:92:119;13480:397:131;7330:92:119;7553:31;7567:5;7574:9;7553:13;:31::i;6421:67::-;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;6464:19:::1;6472:10;6464:7;:19::i;:::-;6421:67::o:0;6621:91::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;6685:22:119::1;6693:13;6685:7;:22::i;4882:146:101:-:0;4937:4;4949:13;4965:16;4975:5;4965:9;:16::i;:::-;-1:-1:-1;;;;;4994:29:101;;;;4882:146;-1:-1:-1;;;4882:146:101:o;17096:403:121:-;630:19:119;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;17185:31:121::1;;:::i;:::-;-1:-1:-1::0;;17226:6:121::1;:24:::0;17222:99:::1;;17269:45;17287:5;17294:9;17305:8;17269:17;:45::i;:::-;17260:54;;17222:99;17326:11;17340:26;17350:5;17357:8;17340:9;:26::i;:::-;17326:40;;17372:13;17397:6;17388;:15;:37;;17410:15;17419:6:::0;17410;:15:::1;:::i;:::-;17388:37;;;17406:1;17388:37;17372:53;;17431:63;17449:5;17456:9;17467:6;17475:8;17485;17431:17;:63::i;:::-;17179:320;;;17096:403:::0;;;:::o;18625:96::-;18679:11;;-1:-1:-1;;;;;18679:11:121;1459:10:123;:20;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;18698:18:121::1;18710:5;18698:11;:18::i;5344:310:119:-:0;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;5434:6:::1;5429:221;5446:17:::0;;::::1;5429:221;;;5478:11;5492:6;;5499:1;5492:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:31;::::0;-1:-1:-1;;;5492:31:119;;5512:10:::1;5492:31;::::0;::::1;1414:51:131::0;-1:-1:-1;;;;;5492:19:119;;;::::1;::::0;::::1;::::0;1387:18:131;;5492:31:119::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5478:45:::0;-1:-1:-1;5535:10:119;;5531:113:::1;;5607:6;5565:38;5574:6;;5581:1;5574:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5585;5596:6;5565:8;:38::i;:::-;:48;5557:78;;;::::0;-1:-1:-1;;;5557:78:119;;14481:2:131;5557:78:119::1;::::0;::::1;14463:21:131::0;14520:2;14500:18;;;14493:30;-1:-1:-1;;;14539:18:131;;;14532:47;14596:18;;5557:78:119::1;14279:341:131::0;5557:78:119::1;-1:-1:-1::0;5465:3:119::1;::::0;::::1;:::i;:::-;;;5429:221;;;;5344:310:::0;;;:::o;19386:215:121:-;19463:11;;19489:27;;;;-1:-1:-1;;;;;19463:11:121;1459:10:123;:20;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;19563:33:121::1;19577:6;;19585:10;19563:13;:33::i;:::-;19556:40;;;;1514:1:123;19386:215:121::0;;;;;;:::o;7430:195::-;7519:4;7531:31;;:::i;:::-;7575:45;7593:5;7600:9;7611:8;7575:17;:45::i;18089:110::-;18157:37;18172:5;-1:-1:-1;;18157:14:121;:37::i;10754:396::-;10845:4;10857:31;;:::i;:::-;10894:47;10906:5;10913:9;10924:6;10932:8;10894:11;:47::i;:::-;11023:71;11053:5;11060:10;11080:4;11087:6;11023:29;:71::i;:::-;11015:111;;;;-1:-1:-1;;;11015:111:121;;14967:2:131;11015:111:121;;;14949:21:131;15006:2;14986:18;;;14979:30;15045:29;15025:18;;;15018:57;15092:18;;11015:111:121;14765:351:131;11015:111:121;-1:-1:-1;11139:6:121;;10754:396;-1:-1:-1;;;10754:396:121:o;14118:1477::-;14222:4;14272:13;14351:12;14369:31;;:::i;:::-;14514:11;14528:26;14538:5;14545:8;14528:9;:26::i;:::-;14514:40;;14560:19;14582:45;14600:5;14607:9;14618:8;14582:17;:45::i;:::-;14560:67;;14646:6;14637;:15;14633:868;;;15048:35;15067:5;15074:8;15048:18;:35::i;:::-;15037:46;;15101:6;:32;;15119:14;15101:32;;;15110:6;15101:32;15091:42;;14633:868;;;15425:6;:69;;15453:14;15444:6;:23;:49;;15487:6;15425:69;;15444:49;15470:14;15425:69;;;15434:6;15425:69;15415:79;;14633:868;15506:64;15524:5;15531:9;15542:7;15551:8;15561;15506:17;:64::i;:::-;-1:-1:-1;15583:7:121;;14118:1477;-1:-1:-1;;;;;;;;14118:1477:121:o;3570:472:101:-;3665:7;3684:6;3694:1;3684:11;3680:358;;-1:-1:-1;3720:1:101;3705:17;;3680:358;3747:48;;-1:-1:-1;;;3747:48:101;;-1:-1:-1;;;;;15415:15:131;;;3747:48:101;;;15397:34:131;15447:18;;;15440:34;;;15510:15;;;15490:18;;;15483:43;3793:1:101;15542:18:131;;;15535:47;3747:4:101;:11;;;;15331:19:131;;3747:48:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3743:289;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3895:6;3885:8;3877:25;;;;-1:-1:-1;;;3877:25:101;;;;;;;;:::i;:::-;-1:-1:-1;3919:22:101;3933:6;3919:22;:::i;:::-;3912:29;;;;;3743:289;;;3975:8;3967:29;;;;-1:-1:-1;;;3967:29:101;;17613:2:131;3967:29:101;;;17595:21:131;17652:1;17632:18;;;17625:29;-1:-1:-1;;;17670:18:131;;;17663:38;17718:18;;3967:29:101;17411:331:131;3967:29:101;-1:-1:-1;;;;4006:17:101;;3743:289;-1:-1:-1;3821:1:101;3806:17;;6956:192:121;7049:12;7108:35;7127:5;7134:8;7108:18;:35::i;:::-;7079:26;7089:5;7096:8;7079:9;:26::i;:::-;:64;;;;:::i;2230:199:101:-;2304:6;2299:126;2316:22;;;2299:126;;;2353:4;-1:-1:-1;;;;;2353:34:101;;2396:11;;2408:1;2396:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2353:65;;-1:-1:-1;;;;;;2353:65:101;;;;;;;-1:-1:-1;;;;;18063:32:131;;;2353:65:101;;;18045:51:131;2413:4:101;18112:18:131;;;18105:50;18018:18;;2353:65:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2340:3;;;;:::i;:::-;;;2299:126;;1426:125;1492:54;1517:5;1532:4;1539:6;1492:24;:54::i;17535:518:121:-;17831:17;17842:5;17831:10;:17::i;:::-;17823:69;;;;-1:-1:-1;;;17823:69:121;;18368:2:131;17823:69:121;;;18350:21:131;18407:2;18387:18;;;18380:30;18446:34;18426:18;;;18419:62;-1:-1:-1;;;18497:18:131;;;18490:37;18544:19;;17823:69:121;18166:403:131;17823:69:121;17959:45;;-1:-1:-1;;;17959:45:121;;17983:4;17959:45;;;13383:34:131;-1:-1:-1;;;;;17998:4:121;13453:15:131;;13433:18;;;13426:43;-1:-1:-1;;17959:15:121;;;;;;13318:18:131;;17959:45:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;17898:150;;;;-1:-1:-1;;;17898:150:121;;18776:2:131;17898:150:121;;;18758:21:131;18815:2;18795:18;;;18788:30;18854:34;18834:18;;;18827:62;-1:-1:-1;;;18905:18:131;;;18898:33;18948:19;;17898:150:121;18574:399:131;6205:139:119;-1:-1:-1;;;;;6260:34:119;;6297:5;6260:34;;;:19;:34;;;;;;:42;;-1:-1:-1;;6260:42:119;;;6313:26;;;6297:5;6313:26;6205:139;:::o;7922:307:121:-;-1:-1:-1;;;;;6208:19:121;;8050:12;6208:19;;;:12;:19;;;;;;8126:17;;:98;;8212:12;8179:30;8193:5;8200:8;8179:13;:30::i;:::-;-1:-1:-1;;;;;5893:16:121;;;5865:11;5893:16;;;:9;:16;;;;;;;;:27;;;;;;;;;;8150:59;;;;:::i;:::-;:74;;;;:::i;:::-;8126:98;;;8146:1;8126:98;8116:108;7922:307;-1:-1:-1;;;;;7922:307:121:o;2582:323:122:-;2671:4;2687:8;:26;;;2683:218;;;-1:-1:-1;2730:18:122;;2723:25;;2683:218;2798:4;2769:26;;;:33;2831:30;;-1:-1:-1;;;2831:30:122;;2855:4;2831:30;;;1414:51:131;-1:-1:-1;;;;;2831:15:122;;;;;1387:18:131;;2831:30:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2810:51;;;;-1:-1:-1;2869:25:122;;15983:822:121;16159:57;16171:5;16178:9;16189:16;16207:8;16159:11;:57::i;:::-;16369:18;;16365:145;;16458:45;16466:5;16473:14;16497:4;16458:7;:45::i;:::-;;16365:145;16702:62;16728:5;16735:10;16747:16;16702:25;:62::i;:::-;16694:106;;;;-1:-1:-1;;;16694:106:121;;19575:2:131;16694:106:121;;;19557:21:131;19614:2;19594:18;;;19587:30;19653:33;19633:18;;;19626:61;19704:18;;16694:106:121;19373:355:131;16694:106:121;15983:822;;;;;:::o;1812:122:101:-;1867:62;;-1:-1:-1;;;1867:62:101;;-1:-1:-1;;;;;18063:32:131;;;1867:62:101;;;18045:51:131;1923:5:101;18112:18:131;;;18105:50;1867:4:101;:34;;;;18018:18:131;;1867:62:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4336:378;4562:63;;-1:-1:-1;;;4562:63:101;;4590:34;4562:63;;;954:25:131;4424:28:101;;;;4492:39;;-1:-1:-1;;;;;4562:16:101;:27;;;;927:18:131;;4562:63:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4664:45;;-1:-1:-1;;;4664:45:101;;4492:134;;-1:-1:-1;;;;;;4664:33:101;;;;;:45;;4698:6;;;;4706:2;;4664:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4664:45:101;;;;;;;;;;;;:::i;:::-;4632:77;;;;-1:-1:-1;4336:378:101;-1:-1:-1;;;;;4336:378:101:o;9069:332:121:-;9246:17;9266:40;9282:5;9289:6;9297:8;9266:15;:40::i;:::-;-1:-1:-1;;;;;9312:16:121;;;;;;;:9;:16;;;;;;;;:27;;;;;;;;;;;:43;;9246:60;;-1:-1:-1;9246:60:121;;9312:27;;:16;:43;;9246:60;;9312:43;:::i;:::-;;;;-1:-1:-1;;;;;;;9361:19:121;;;;;;:12;:19;;;;;:35;;9384:12;;9361:19;:35;;9384:12;;9361:35;:::i;:::-;;;;-1:-1:-1;;;;;;;9069:332:121:o;2297:483:5:-;2405:4;2421:6;2431:1;2421:11;2417:43;;-1:-1:-1;2449:4:5;2442:11;;2417:43;2480:9;-1:-1:-1;;;;;2469:20:5;:7;-1:-1:-1;;;;;2469:20:5;;2465:82;;2506:24;;-1:-1:-1;;;2506:24:5;;-1:-1:-1;;;;;1432:32:131;;;2506:24:5;;;1414:51:131;2534:6:5;;2506:15;;;;;;1387:18:131;;2506:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;2499:41;;;;2465:82;2641:4;-1:-1:-1;;;;;2622:24:5;;;2618:92;;2663:40;2678:5;2685:9;2696:6;2663:14;:40::i;:::-;2656:47;;;;2618:92;2722:53;2741:5;2748:7;2757:9;2768:6;2722:18;:53::i;1900:536:122:-;1998:4;2014:8;:35;;;2010:422;;;-1:-1:-1;2066:27:122;;;;2059:34;;2010:422;2152:4;2114:35;;;:42;;2180:26;2190:5;2114:8;2180:9;:26::i;:::-;2164:42;-1:-1:-1;;;;;;2218:28:122;;2214:170;;2288:1;2258:27;;;:31;2214:170;;;2344:31;;-1:-1:-1;;;2344:31:122;;2369:4;2344:31;;;1414:51:131;-1:-1:-1;;;;;2344:16:122;;;;;1387:18:131;;2344:31:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2314:27;;;:61;2214:170;-1:-1:-1;;2398:27:122;;;;2391:34;;5061:145:5;5145:4;5164:37;5178:5;5185:7;5194:6;5164:13;:37::i;9955:635:121:-;10139:17;10159:40;10175:5;10182:6;10190:8;10159:15;:40::i;:::-;-1:-1:-1;;;;;10224:16:121;;;10205;10224;;;:9;:16;;;;;;;;:27;;;;;;;;;;10139:60;;-1:-1:-1;10265:27:121;;;;10257:74;;;;-1:-1:-1;;;10257:74:121;;23196:2:131;10257:74:121;;;23178:21:131;23235:2;23215:18;;;23208:30;23274:34;23254:18;;;23247:62;-1:-1:-1;;;23325:18:131;;;23318:32;23367:19;;10257:74:121;22994:398:131;10257:74:121;10408:26;10422:12;10408:11;:26;:::i;:::-;-1:-1:-1;;;;;10378:16:121;;;;;;;:9;:16;;;;;;;;:27;;;;;;;;;;;:56;;;;10550:19;;;:12;:19;;;;;:35;;10573:12;;10378:16;10550:35;;10573:12;;10550:35;:::i;:::-;;;;-1:-1:-1;;;;;;;;9955:635:121:o;3033:172:101:-;3107:13;3140:11;;3139:61;;3159:41;;-1:-1:-1;;;3159:41:101;;-1:-1:-1;;;;;23655:15:131;;;3159:41:101;;;23637:34:131;23687:18;;;23680:34;;;23750:15;;;23730:18;;;23723:43;3159:4:101;:13;;;;23572:18:131;;3159:41:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3139:61;;;3155:1;3128:72;3033:172;-1:-1:-1;;;;3033:172:101:o;634:294:5:-;721:4;737:6;747:1;737:11;733:43;;-1:-1:-1;765:4:5;758:11;;733:43;806:4;-1:-1:-1;;;;;785:26:5;;;781:90;;828:26;;-1:-1:-1;;;828:26:5;;-1:-1:-1;;;;;1432:32:131;;;828:26:5;;;1414:51:131;858:6:5;;828:15;;;;;;1387:18:131;;828:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;821:43;;;;781:90;883:40;898:5;905:9;916:6;883:14;:40::i;8465:285:121:-;-1:-1:-1;;;;;6208:19:121;;8585:11;6208:19;;;:12;:19;;;;;;8659:17;;:86;;8715:30;8729:5;8736:8;8715:13;:30::i;:::-;8691:21;8706:6;8691:12;:21;:::i;8659:86::-;4183:12;4101:2;4183;:12;:::i;1241:629:5:-;1726:66;;-1:-1:-1;;;;;25343:32:131;;;1726:66:5;;;25325:51:131;25392:18;;;25385:34;;;1328:4:5;;;;;;1706:19;;;;-1:-1:-1;;;1749:23:5;25298:18:131;;1726:66:5;;;;-1:-1:-1;;1726:66:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1726:66:5;-1:-1:-1;;;;;;1726:66:5;;;;;;;;;;1706:87;;;;1726:66;1706:87;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:129;;;;1807:7;:57;;;;-1:-1:-1;1819:11:5;;:16;;:44;;;1850:4;1839:24;;;;;;;;;;;;:::i;:::-;1799:66;1241:629;-1:-1:-1;;;;;;1241:629:5:o;3207:665::-;3715:79;;;-1:-1:-1;;;;;26230:15:131;;;3715:79:5;;;26212:34:131;26282:15;;;26262:18;;;26255:43;26314:18;;;;26307:34;;;3715:79:5;;;;;;;;;;26147:18:131;;;;3715:79:5;;;;;;;-1:-1:-1;;;;;3715:79:5;-1:-1:-1;;;3715:79:5;;;3695:100;;-1:-1:-1;;;;;;3695:19:5;;;;:100;;3715:79;3695:100;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:142;;;;3809:7;:57;;;;-1:-1:-1;3821:11:5;;:16;;:44;;;3852:4;3841:24;;;;;;;;;;;;:::i;:::-;3801:66;3207:665;-1:-1:-1;;;;;;;3207:665:5:o;1358:311:122:-;1447:6;1465:8;:26;;;1461:204;;;-1:-1:-1;1508:18:122;;;;1501:25;;1461:204;1576:4;1547:26;;;:33;1609:16;1619:5;1609:9;:16::i;:::-;-1:-1:-1;;;;;1588:37:122;:18;;;:37;;;;-1:-1:-1;1633:25:122;;4155:623:5;4637:63;;-1:-1:-1;;;;;25343:32:131;;;4637:63:5;;;25325:51:131;25392:18;;;25385:34;;;4239:4:5;;;;;;4617:19;;;;-1:-1:-1;;;4660:22:5;25298:18:131;;4637:63:5;25151:274:131;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:131:-;-1:-1:-1;;;;;89:31:131;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;402:401::-;483:6;491;544:2;532:9;523:7;519:23;515:32;512:52;;;560:1;557;550:12;512:52;599:9;586:23;618:31;643:5;618:31;:::i;:::-;668:5;-1:-1:-1;725:2:131;710:18;;697:32;738:33;697:32;738:33;:::i;:::-;790:7;780:17;;;402:401;;;;;:::o;1716:469::-;1806:6;1814;1822;1875:2;1863:9;1854:7;1850:23;1846:32;1843:52;;;1891:1;1888;1881:12;1843:52;1930:9;1917:23;1949:31;1974:5;1949:31;:::i;:::-;1999:5;-1:-1:-1;2056:2:131;2041:18;;2028:32;2069:33;2028:32;2069:33;:::i;:::-;1716:469;;2121:7;;-1:-1:-1;;;2175:2:131;2160:18;;;;2147:32;;1716:469::o;2382:118::-;2468:5;2461:13;2454:21;2447:5;2444:32;2434:60;;2490:1;2487;2480:12;2505:605;2601:6;2609;2617;2625;2678:3;2666:9;2657:7;2653:23;2649:33;2646:53;;;2695:1;2692;2685:12;2646:53;2734:9;2721:23;2753:31;2778:5;2753:31;:::i;:::-;2803:5;-1:-1:-1;2860:2:131;2845:18;;2832:32;2873:33;2832:32;2873:33;:::i;:::-;2925:7;-1:-1:-1;2979:2:131;2964:18;;2951:32;;-1:-1:-1;3035:2:131;3020:18;;3007:32;3048:30;3007:32;3048:30;:::i;:::-;2505:605;;;;-1:-1:-1;2505:605:131;;-1:-1:-1;;2505:605:131:o;3323:395::-;3401:6;3409;3462:2;3450:9;3441:7;3437:23;3433:32;3430:52;;;3478:1;3475;3468:12;3430:52;3517:9;3504:23;3536:31;3561:5;3536:31;:::i;:::-;3586:5;-1:-1:-1;3643:2:131;3628:18;;3615:32;3656:30;3615:32;3656:30;:::i;3905:693::-;4026:6;4034;4042;4050;4058;4111:3;4099:9;4090:7;4086:23;4082:33;4079:53;;;4128:1;4125;4118:12;4079:53;4167:9;4154:23;4186:31;4211:5;4186:31;:::i;:::-;4236:5;-1:-1:-1;4288:2:131;4273:18;;4260:32;;-1:-1:-1;4344:2:131;4329:18;;4316:32;4357:33;4316:32;4357:33;:::i;:::-;4409:7;-1:-1:-1;4463:2:131;4448:18;;4435:32;;-1:-1:-1;4519:3:131;4504:19;;4491:33;4533;4491;4533;:::i;:::-;4585:7;4575:17;;;3905:693;;;;;;;;:::o;5079:375::-;5150:8;5160:6;5214:3;5207:4;5199:6;5195:17;5191:27;5181:55;;5232:1;5229;5222:12;5181:55;-1:-1:-1;5255:20:131;;5298:18;5287:30;;5284:50;;;5330:1;5327;5320:12;5284:50;5367:4;5359:6;5355:17;5343:29;;5427:3;5420:4;5410:6;5407:1;5403:14;5395:6;5391:27;5387:38;5384:47;5381:67;;;5444:1;5441;5434:12;5381:67;5079:375;;;;;:::o;5459:458::-;5558:6;5566;5619:2;5607:9;5598:7;5594:23;5590:32;5587:52;;;5635:1;5632;5625:12;5587:52;5675:9;5662:23;5708:18;5700:6;5697:30;5694:50;;;5740:1;5737;5730:12;5694:50;5779:78;5849:7;5840:6;5829:9;5825:22;5779:78;:::i;:::-;5876:8;;5753:104;;-1:-1:-1;5459:458:131;-1:-1:-1;;;;5459:458:131:o;5922:593::-;6030:6;6038;6046;6099:2;6087:9;6078:7;6074:23;6070:32;6067:52;;;6115:1;6112;6105:12;6067:52;6155:9;6142:23;6188:18;6180:6;6177:30;6174:50;;;6220:1;6217;6210:12;6174:50;6259:78;6329:7;6320:6;6309:9;6305:22;6259:78;:::i;:::-;6356:8;;-1:-1:-1;6233:104:131;-1:-1:-1;;6441:2:131;6426:18;;6413:32;6454:31;6413:32;6454:31;:::i;:::-;6504:5;6494:15;;;5922:593;;;;;:::o;6970:1178::-;7238:2;7250:21;;;7320:13;;7223:18;;;7342:22;;;7190:4;;7417;;7395:2;7380:18;;;7444:15;;;7190:4;7487:195;7501:6;7498:1;7495:13;7487:195;;;7566:13;;-1:-1:-1;;;;;7562:39:131;7550:52;;7622:12;;;;7657:15;;;;7598:1;7516:9;7487:195;;;-1:-1:-1;;;7718:19:131;;;7698:18;;;7691:47;7788:13;;7810:21;;;7886:15;;;;7849:12;;;7921:1;7931:189;7947:8;7942:3;7939:17;7931:189;;;8016:15;;8002:30;;8093:17;;;;8054:14;;;;7975:1;7966:11;7931:189;;;-1:-1:-1;8137:5:131;;6970:1178;-1:-1:-1;;;;;;;6970:1178:131:o;8153:348::-;8355:2;8337:21;;;8394:2;8374:18;;;8367:30;8433:26;8428:2;8413:18;;8406:54;8492:2;8477:18;;8153:348::o;8866:127::-;8927:10;8922:3;8918:20;8915:1;8908:31;8958:4;8955:1;8948:15;8982:4;8979:1;8972:15;8998:249;9108:2;9089:13;;-1:-1:-1;;9085:27:131;9073:40;;9143:18;9128:34;;9164:22;;;9125:62;9122:88;;;9190:18;;:::i;:::-;9226:2;9219:22;-1:-1:-1;;8998:249:131:o;9252:247::-;9319:2;9313:9;9361:3;9349:16;;9395:18;9380:34;;9416:22;;;9377:62;9374:88;;;9442:18;;:::i;:::-;9478:2;9471:22;9252:247;:::o;9504:426::-;9585:5;9633:4;9621:9;9616:3;9612:19;9608:30;9605:50;;;9651:1;9648;9641:12;9605:50;9684:2;9678:9;9726:4;9718:6;9714:17;9797:6;9785:10;9782:22;9761:18;9749:10;9746:34;9743:62;9740:88;;;9808:18;;:::i;:::-;9844:2;9837:22;9907:16;;9892:32;;-1:-1:-1;9877:6:131;9504:426;-1:-1:-1;9504:426:131:o;9935:192::-;10014:13;;10067:34;10056:46;;10046:57;;10036:85;;10117:1;10114;10107:12;10036:85;9935:192;;;:::o;10132:169::-;10210:13;;10263:12;10252:24;;10242:35;;10232:63;;10291:1;10288;10281:12;10306:163;10384:13;;10437:6;10426:18;;10416:29;;10406:57;;10459:1;10456;10449:12;10474:138;10553:13;;10575:31;10553:13;10575:31;:::i;10617:1647::-;10717:6;10770:3;10758:9;10749:7;10745:23;10741:33;10738:53;;;10787:1;10784;10777:12;10738:53;10813:17;;:::i;:::-;10853:72;10917:7;10906:9;10853:72;:::i;:::-;10846:5;10839:87;10958:49;11003:2;10992:9;10988:18;10958:49;:::i;:::-;10953:2;10946:5;10942:14;10935:73;11040:49;11085:2;11074:9;11070:18;11040:49;:::i;:::-;11035:2;11028:5;11024:14;11017:73;11122:49;11167:2;11156:9;11152:18;11122:49;:::i;:::-;11117:2;11110:5;11106:14;11099:73;11205:50;11250:3;11239:9;11235:19;11205:50;:::i;:::-;11199:3;11192:5;11188:15;11181:75;11289:50;11334:3;11323:9;11319:19;11289:50;:::i;:::-;11283:3;11276:5;11272:15;11265:75;11373:49;11417:3;11406:9;11402:19;11373:49;:::i;:::-;11367:3;11360:5;11356:15;11349:74;11456:49;11500:3;11489:9;11485:19;11456:49;:::i;:::-;11450:3;11443:5;11439:15;11432:74;11525:3;11560:49;11605:2;11594:9;11590:18;11560:49;:::i;:::-;11544:14;;;11537:73;11629:3;11664:49;11694:18;;;11664:49;:::i;:::-;11648:14;;;11641:73;11733:3;11768:49;11798:18;;;11768:49;:::i;:::-;11752:14;;;11745:73;11837:3;11872:49;11902:18;;;11872:49;:::i;:::-;11856:14;;;11849:73;11941:3;11976:49;12006:18;;;11976:49;:::i;:::-;11960:14;;;11953:73;12045:3;12080:49;12110:18;;;12080:49;:::i;:::-;12064:14;;;12057:73;12149:3;12184:49;12214:18;;;12184:49;:::i;:::-;12168:14;;;12161:73;12172:5;10617:1647;-1:-1:-1;;;10617:1647:131:o;12269:184::-;12339:6;12392:2;12380:9;12371:7;12367:23;12363:32;12360:52;;;12408:1;12405;12398:12;12360:52;-1:-1:-1;12431:16:131;;12269:184;-1:-1:-1;12269:184:131:o;13882:127::-;13943:10;13938:3;13934:20;13931:1;13924:31;13974:4;13971:1;13964:15;13998:4;13995:1;13988:15;14014:128;14081:9;;;14102:11;;;14099:37;;;14116:18;;:::i;14147:127::-;14208:10;14203:3;14199:20;14196:1;14189:31;14239:4;14236:1;14229:15;14263:4;14260:1;14253:15;14625:135;14664:3;14685:17;;;14682:43;;14705:18;;:::i;:::-;-1:-1:-1;14752:1:131;14741:13;;14625:135::o;15593:179::-;15628:3;15670:1;15652:16;15649:23;15646:120;;;15716:1;15713;15710;15695:23;-1:-1:-1;15753:1:131;15747:8;15742:3;15738:18;15646:120;15593:179;:::o;15777:671::-;15816:3;15858:4;15840:16;15837:26;15834:39;;;15777:671;:::o;15834:39::-;15900:2;15894:9;-1:-1:-1;;15965:16:131;15961:25;;15958:1;15894:9;15937:50;16016:4;16010:11;16040:16;16075:18;16146:2;16139:4;16131:6;16127:17;16124:25;16119:2;16111:6;16108:14;16105:45;16102:58;;;16153:5;;;;;15777:671;:::o;16102:58::-;16190:6;16184:4;16180:17;16169:28;;16226:3;16220:10;16253:2;16245:6;16242:14;16239:27;;;16259:5;;;;;;15777:671;:::o;16239:27::-;16343:2;16324:16;16318:4;16314:27;16310:36;16303:4;16294:6;16289:3;16285:16;16281:27;16278:69;16275:82;;;16350:5;;;;;;15777:671;:::o;16275:82::-;16366:57;16417:4;16408:6;16400;16396:19;16392:30;16386:4;16366:57;:::i;:::-;-1:-1:-1;16439:3:131;;15777:671;-1:-1:-1;;;;;15777:671:131:o;16453:250::-;16538:1;16548:113;16562:6;16559:1;16556:13;16548:113;;;16638:11;;;16632:18;16619:11;;;16612:39;16584:2;16577:10;16548:113;;;-1:-1:-1;;16695:1:131;16677:16;;16670:27;16453:250::o;16708:396::-;16857:2;16846:9;16839:21;16820:4;16889:6;16883:13;16932:6;16927:2;16916:9;16912:18;16905:34;16948:79;17020:6;17015:2;17004:9;17000:18;16995:2;16987:6;16983:15;16948:79;:::i;:::-;17088:2;17067:15;-1:-1:-1;;17063:29:131;17048:45;;;;17095:2;17044:54;;16708:396;-1:-1:-1;;16708:396:131:o;17109:297::-;17227:12;;17274:4;17263:16;;;17257:23;;17227:12;17292:16;;17289:111;;;17386:1;17382:6;17372;17366:4;17362:17;17359:1;17355:25;17351:38;17344:5;17340:50;17331:59;;17289:111;;17109:297;;;:::o;17747:125::-;17812:9;;;17833:10;;;17830:36;;;17846:18;;:::i;18978:168::-;19051:9;;;19082;;19099:15;;;19093:22;;19079:37;19069:71;;19120:18;;:::i;19151:217::-;19191:1;19217;19207:132;;19261:10;19256:3;19252:20;19249:1;19242:31;19296:4;19293:1;19286:15;19324:4;19321:1;19314:15;19207:132;-1:-1:-1;19353:9:131;;19151:217::o;19733:251::-;19803:6;19856:2;19844:9;19835:7;19831:23;19827:32;19824:52;;;19872:1;19869;19862:12;19824:52;19904:9;19898:16;19923:31;19948:5;19923:31;:::i;19989:810::-;20217:2;20229:21;;;20202:18;;20285:22;;;20169:4;20364:6;20338:2;20323:18;;20169:4;20398:304;20412:6;20409:1;20406:13;20398:304;;;20487:6;20474:20;20507:31;20532:5;20507:31;:::i;:::-;-1:-1:-1;;;;;20563:31:131;20551:44;;20618:4;20677:15;;;;20642:12;;;;20591:1;20427:9;20398:304;;;-1:-1:-1;;;;;;20760:32:131;;;;20753:4;20738:20;;;;20731:62;;;;-1:-1:-1;20719:3:131;;19989:810;-1:-1:-1;;;19989:810:131:o;20804:183::-;20864:4;20897:18;20889:6;20886:30;20883:56;;;20919:18;;:::i;:::-;-1:-1:-1;20964:1:131;20960:14;20976:4;20956:25;;20804:183::o;20992:721::-;21057:5;21110:3;21103:4;21095:6;21091:17;21087:27;21077:55;;21128:1;21125;21118:12;21077:55;21157:6;21151:13;21183:4;21206:43;21246:2;21206:43;:::i;:::-;21278:2;21272:9;21290:31;21318:2;21310:6;21290:31;:::i;:::-;21356:18;;;21448:1;21444:10;;;;21432:23;;21428:32;;;21390:15;;;;-1:-1:-1;21472:15:131;;;21469:35;;;21500:1;21497;21490:12;21469:35;21536:2;21528:6;21524:15;21548:135;21564:6;21559:3;21556:15;21548:135;;;21630:10;;21618:23;;21661:12;;;;21581;;21548:135;;;-1:-1:-1;21701:6:131;20992:721;-1:-1:-1;;;;;;20992:721:131:o;21718:1271::-;21847:6;21855;21908:2;21896:9;21887:7;21883:23;21879:32;21876:52;;;21924:1;21921;21914:12;21876:52;21957:9;21951:16;21986:18;22027:2;22019:6;22016:14;22013:34;;;22043:1;22040;22033:12;22013:34;22081:6;22070:9;22066:22;22056:32;;22126:7;22119:4;22115:2;22111:13;22107:27;22097:55;;22148:1;22145;22138:12;22097:55;22177:2;22171:9;22199:4;22222:43;22262:2;22222:43;:::i;:::-;22294:2;22288:9;22306:31;22334:2;22326:6;22306:31;:::i;:::-;22372:18;;;22460:1;22456:10;;;;22448:19;;22444:28;;;22406:15;;;;-1:-1:-1;22484:19:131;;;22481:39;;;22516:1;22513;22506:12;22481:39;22540:11;;;;22560:210;22576:6;22571:3;22568:15;22560:210;;;22649:3;22643:10;22666:31;22691:5;22666:31;:::i;:::-;22710:18;;22593:12;;;;22748;;;;22560:210;;;22826:18;;;22820:25;22789:6;;-1:-1:-1;22820:25:131;;-1:-1:-1;;;22857:16:131;;;22854:36;;;22886:1;22883;22876:12;22854:36;;22909:74;22975:7;22964:8;22953:9;22949:24;22909:74;:::i;:::-;22899:84;;;21718:1271;;;;;:::o;23777:422::-;23866:1;23909:5;23866:1;23923:270;23944:7;23934:8;23931:21;23923:270;;;24003:4;23999:1;23995:6;23991:17;23985:4;23982:27;23979:53;;;24012:18;;:::i;:::-;24062:7;24052:8;24048:22;24045:55;;;24082:16;;;;24045:55;24161:22;;;;24121:15;;;;23923:270;;24204:806;24253:5;24283:8;24273:80;;-1:-1:-1;24324:1:131;24338:5;;24273:80;24372:4;24362:76;;-1:-1:-1;24409:1:131;24423:5;;24362:76;24454:4;24472:1;24467:59;;;;24540:1;24535:130;;;;24447:218;;24467:59;24497:1;24488:10;;24511:5;;;24535:130;24572:3;24562:8;24559:17;24556:43;;;24579:18;;:::i;:::-;-1:-1:-1;;24635:1:131;24621:16;;24650:5;;24447:218;;24749:2;24739:8;24736:16;24730:3;24724:4;24721:13;24717:36;24711:2;24701:8;24698:16;24693:2;24687:4;24684:12;24680:35;24677:77;24674:159;;;-1:-1:-1;24786:19:131;;;24818:5;;24674:159;24865:34;24890:8;24884:4;24865:34;:::i;:::-;24935:6;24931:1;24927:6;24923:19;24914:7;24911:32;24908:58;;;24946:18;;:::i;:::-;24984:20;;24204:806;-1:-1:-1;;;24204:806:131:o;25015:131::-;25075:5;25104:36;25131:8;25125:4;25104:36;:::i;25430:287::-;25559:3;25597:6;25591:13;25613:66;25672:6;25667:3;25660:4;25652:6;25648:17;25613:66;:::i;:::-;25695:16;;;;;25430:287;-1:-1:-1;;25430:287:131:o;25722:245::-;25789:6;25842:2;25830:9;25821:7;25817:23;25813:32;25810:52;;;25858:1;25855;25848:12;25810:52;25890:9;25884:16;25909:28;25931:5;25909:28;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "83098": [
        {
          "start": 940,
          "length": 32
        },
        {
          "start": 1548,
          "length": 32
        },
        {
          "start": 4302,
          "length": 32
        },
        {
          "start": 4608,
          "length": 32
        },
        {
          "start": 4811,
          "length": 32
        },
        {
          "start": 4978,
          "length": 32
        },
        {
          "start": 5680,
          "length": 32
        },
        {
          "start": 6912,
          "length": 32
        }
      ],
      "83102": [
        {
          "start": 635,
          "length": 32
        },
        {
          "start": 5837,
          "length": 32
        }
      ],
      "88635": [
        {
          "start": 785,
          "length": 32
        },
        {
          "start": 1818,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADDRESS_PROVIDER()": "1848effa",
    "OFFSET()": "ce665dd8",
    "POOL()": "7535d246",
    "ROUTER_GASREQ()": "3871cb3f",
    "aaveManager()": "51ef6593",
    "activate(address)": "1c5a9d9c",
    "admin()": "f851a440",
    "balanceOfReserve(address,address)": "fe380db5",
    "bind(address)": "81bac14f",
    "checkAsset(address)": "d94bff13",
    "checkList(address,address)": "a01dccd8",
    "claimRewards(address[])": "f9f031df",
    "enterMarket(address[])": "7cc4fc05",
    "exitMarket(address)": "ede4edd0",
    "flush(address[],address)": "f850a81c",
    "flushBuffer(address,bool)": "5383dba4",
    "isBound(address)": "2f37b624",
    "overlying(address)": "0efc8fd2",
    "pull(address,address,uint256,bool)": "333dbb0d",
    "push(address,address,uint256)": "26e8eda2",
    "pushAndSupply(address,uint256,address,uint256,address)": "6f9a302f",
    "revokeLenderApproval(address)": "94d4d058",
    "routerGasreq(address,address)": "2876fb4e",
    "setAaveManager(address)": "04e02903",
    "setAdmin(address)": "704b6c02",
    "sharesOf(address,address)": "0a7292f5",
    "totalBalance(address)": "6eacd398",
    "totalShares(address)": "bf6b874e",
    "unbind()": "b6b25742",
    "unbind(address)": "cf5e7bd3",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addressesProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"overhead\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"aaveReason\",\"type\":\"bytes32\"}],\"name\":\"AaveIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"MakerBind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"MakerUnbind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"SetAaveManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESS_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUTER_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aaveManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"balanceOfReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"makerContract\",\"type\":\"address\"}],\"name\":\"bind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"checkAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"rewardList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"claimedAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"enterMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"exitMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"noRevert\",\"type\":\"bool\"}],\"name\":\"flushBuffer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"reason\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mkr\",\"type\":\"address\"}],\"name\":\"isBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"overlying\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"aToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"strict\",\"type\":\"bool\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pulled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pushed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"pushAndSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pushed0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pushed1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"revokeLenderApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"routerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"overhead\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aaveManager_\",\"type\":\"address\"}],\"name\":\"setAaveManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"sharesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"makerContract\",\"type\":\"address\"}],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"deposit is made via `pushAndSupply`, and withdraw is made via `pull` with `strict=true`.this router ensures an optimal gas cost complexity when the following strategy is used: * on the offer logic side:    * in `makerExecute`, check whether logic is the first caller to the router. This is done by checking whether the balance of outbound tokens of the router is below the required amount. If so the logic should return a special bytes32 (say `\\\"firstCaller\\\"`) to makerPosthook.    * in `__put__`  the logic stores incoming liquidity on the strat balance    * in `__get__` the logic pulls liquidity from the router in a non strict manner    * in __posthookSuccess|Fallback__ the logic pushes both inbound and outbound tokens to the router. If message from makerExecute is `\\\"firstCaller\\\"`, the logic additionally asks the router to supply all its outbound and inbound tokens to AAVE. This can be done is a single step by calling `pushAndSupply` * on the router side:    * `__pull__`  checks whether local balance of token is below required amount. If so it pulls all its funds from AAVE (this includes funds that do not belong to the owner of the calling contract) and sends to caller all the owner's reserve (according to the shares attributed to the owner - except in case of liquidity sharing where only requested amount is transferred). This router then decreases owner's shares accordingly. (note that if AAVE has no liquidity crisis, then the owner's shares will be temporarily 0)    * `__push__` transfers the requested amount of tokens from the calling maker contract and increases owner's shares, but does not supply on AAVE\",\"events\":{\"AaveIncident(address,address,address,bytes32)\":{\"params\":{\"aaveReason\":\"the reason from AAVE.\",\"maker\":\"the maker contract that was calling `pushAndSupply`. This is indexed so that RPC calls can filter on it.\",\"reserveId\":\"the reserve identifier that was calling `pushAndSupply`. This is indexed so that RPC calls can filter on it.\",\"token\":\"the deposited token. This is indexed so that RPC calls can filter on it.\"}},\"MakerBind(address)\":{\"params\":{\"maker\":\"the maker address. This is indexed, so that RPC calls can filter on it.\"}},\"MakerUnbind(address)\":{\"params\":{\"maker\":\"the maker address. This is indexed, so that RPC calls can filter on it.\"}},\"SetAaveManager(address)\":{\"params\":{\"manager\":\"the new manager.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address)\":{\"params\":{\"token\":\"the asset one wishes to use the router for\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"balanceOfReserve(address,address)\":{\"params\":{\"reserveId\":\"the identifier of the reserve whose balance is queried\",\"token\":\"the asset one wants to know the balance of\"},\"returns\":{\"_0\":\"available funds for the reserve\"}},\"bind(address)\":{\"details\":\"this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address\",\"params\":{\"makerContract\":\"the maker contract address\"}},\"checkAsset(address)\":{\"params\":{\"asset\":\"the asset one wants to lend\"},\"returns\":{\"_0\":\"true if the asset can be supplied on pool\"}},\"checkList(address,address)\":{\"details\":\"`checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.\",\"params\":{\"reserveId\":\"of the tokens that are being pulled\",\"token\":\"is the asset (and possibly its overlyings) whose approval must be checked\"}},\"claimRewards(address[])\":{\"details\":\"if some rewards are eligible they are sent to `aaveManager`\",\"params\":{\"assets\":\"the list of overlyings (aToken, debtToken) whose rewards should be claimed\"},\"returns\":{\"claimedAmounts\":\"the amount of claimed rewards\",\"rewardList\":\"the addresses of the claimed rewards\"}},\"constructor\":{\"params\":{\"addressesProvider\":\"address of AAVE's address provider\",\"overhead\":\"is the amount of gas that is required for this router to be able to perform a `pull` and a `push`.\"}},\"enterMarket(address[])\":{\"details\":\"market is automatically entered at first deposit\",\"params\":{\"tokens\":\"the asset addresses\"}},\"exitMarket(address)\":{\"params\":{\"token\":\"the asset address\"}},\"flush(address[],address)\":{\"params\":{\"reserveId\":\"determines the location of the reserve (router implementation dependent).\",\"tokens\":\"to flush\"}},\"flushBuffer(address,bool)\":{\"params\":{\"noRevert\":\"does not revert if supplies throws\",\"token\":\"the address of the asset\"},\"returns\":{\"reason\":\"for revert from Aave.\"}},\"isBound(address)\":{\"params\":{\"mkr\":\"the address of a maker contract\"},\"returns\":{\"_0\":\"true if `mkr` is authorized to call this router.\"}},\"overlying(address)\":{\"params\":{\"asset\":\"the underlying asset\"},\"returns\":{\"aToken\":\"the overlying asset\"}},\"pull(address,address,uint256,bool)\":{\"params\":{\"amount\":\"of `token` the maker contract wishes to pull from its reserve\",\"reserveId\":\"identifies the fund owner (router implementation dependent).\",\"strict\":\"when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)\",\"token\":\"is the ERC20 managing the pulled asset\"},\"returns\":{\"pulled\":\"the amount that was successfully pulled.\"}},\"push(address,address,uint256)\":{\"params\":{\"amount\":\"is the amount of asset that should be transferred from the calling maker contract\",\"reserveId\":\"determines the location of the reserve (router implementation dependent).\",\"token\":\"is the asset the maker is pushing\"},\"returns\":{\"pushed\":\"fraction of `amount` that was successfully pushed to reserve.\"}},\"pushAndSupply(address,uint256,address,uint256,address)\":{\"details\":\"an offer logic should call this instead of `flush` when it is the last posthook to be executedthis can be determined by checking during __lastLook__ whether the logic will trigger a withdraw from AAVE (this is the case if router's balance of token is empty)this call be performed even for tokens with 0 amount for the offer logic, since the logic can be the first in a chain and router needs to flush allthis function is also to be used when user deposits funds on the maker contract\",\"params\":{\"amount0\":\"the amount of `token0` to deposit\",\"amount1\":\"the amount of `token1` to deposit\",\"reserveId\":\"the reserve whose shares should be increased\",\"token0\":\"the first token to deposit\",\"token1\":\"the second token to deposit\"},\"returns\":{\"pushed0\":\"the amount of token0 that were successfully pushed\",\"pushed1\":\"the amount of token1 that were successfully pushed\"}},\"revokeLenderApproval(address)\":{\"params\":{\"token\":\"the address of the asset whose approval must be revoked.\"}},\"routerGasreq(address,address)\":{\"params\":{\"reserveId\":\"that should be considered if a reserve specific route is defined.\",\"token\":\"that should be considered if a token specific route is defined.\"},\"returns\":{\"overhead\":\"the added (overapproximated) gas cost of `push` and `pull` for the routing strategy.\"}},\"setAaveManager(address)\":{\"details\":\"if any reward is active for pure lenders, `aaveManager` will be able to claim them\",\"params\":{\"aaveManager_\":\"the new address of the AAVE manager\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"sharesOf(address,address)\":{\"details\":\"`sharesOf(token,id)/totalShares(token)` represent the portion of this contract's balance of `token`s that the `reserveId` can claim\",\"params\":{\"reserveId\":\"the reserve identifier\",\"token\":\"the address of the asset\"},\"returns\":{\"shares\":\"the amount of shares attributed to `reserveId`.\"}},\"totalBalance(address)\":{\"details\":\"this function relies on the AAVE promise that aToken are in one-to-one correspondence with claimable underlying and use the same decimals\",\"params\":{\"token\":\"the asset whose balance is required\"},\"returns\":{\"balance\":\"of the asset\"}},\"totalShares(address)\":{\"params\":{\"token\":\"the address of the asset\"},\"returns\":{\"total\":\"the total amount of shares\"}},\"unbind(address)\":{\"params\":{\"makerContract\":\"the maker contract address\"}},\"withdraw(address,address,uint256)\":{\"params\":{\"amount\":\"the amount to withdraw. Use type(uint).max to require withdrawal of the total balance of the caller\",\"reserveId\":\"the identifier of the share holder\",\"token\":\"the asset to withdraw\"}}},\"stateVariables\":{\"OFFSET\":{\"details\":\"this amount must be big enough to avoid minting 0 shares via \\\"donation\\\" see https://github.com/code-423n4/2022-09-y2k-finance-findings/issues/449 mitigation proposed here: https://ethereum-magicians.org/t/address-eip-4626-inflation-attacks-with-virtual-shares-and-assets/12677\"}},\"title\":\"Router acting as a liquidity reserve on AAVE for multiple depositors (possibly coming from different maker contracts).\",\"version\":1},\"userdoc\":{\"events\":{\"AaveIncident(address,address,address,bytes32)\":{\"notice\":\"An error occurred during deposit to AAVE.By emitting this data, an indexer will be able to keep track of what incidents that has happened.\"},\"MakerBind(address)\":{\"notice\":\"logging bound maker contractby emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router.\"},\"MakerUnbind(address)\":{\"notice\":\"logging unbound maker contractby emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router.\"},\"SetAaveManager(address)\":{\"notice\":\"The `aaveManager` has been set.By emitting this data, an indexer will be able to keep track of what manager is used.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"}},\"kind\":\"user\",\"methods\":{\"ADDRESS_PROVIDER()\":{\"notice\":\"The AAVE pool address provider.\"},\"OFFSET()\":{\"notice\":\"offset for initial shares to be minted\"},\"POOL()\":{\"notice\":\"The AAVE pool retrieved from the pool provider.\"},\"ROUTER_GASREQ()\":{\"notice\":\"the router specific gas requirement\"},\"aaveManager()\":{\"notice\":\"the manager which controls which pools are allowed.\"},\"activate(address)\":{\"notice\":\"performs necessary approval to activate router function on a particular asset\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"balanceOfReserve(address,address)\":{\"notice\":\"computes available funds (modulo available liquidity on AAVE) for a given reserve\"},\"bind(address)\":{\"notice\":\"adds a maker contract address to the allowed makers of this router\"},\"checkAsset(address)\":{\"notice\":\"verifies whether an asset can be supplied on pool\"},\"checkList(address,address)\":{\"notice\":\"allows a makerContract to verify it is ready to use `this` router for a particular reserve\"},\"claimRewards(address[])\":{\"notice\":\"allows AAVE manager to claim the rewards attributed to this router by AAVE\"},\"constructor\":{\"notice\":\"contract's constructor\"},\"enterMarket(address[])\":{\"notice\":\"re-allows AAVE to use certain assets as collateral for lending\"},\"exitMarket(address)\":{\"notice\":\"prevents AAVE from using a certain asset as collateral for lending\"},\"flush(address[],address)\":{\"notice\":\"iterative `push` for the whole balance in a single call\"},\"flushBuffer(address,bool)\":{\"notice\":\"deposit router-local balance of an asset on the AAVE pool\"},\"isBound(address)\":{\"notice\":\"getter for the `makers: addr => bool` mapping\"},\"overlying(address)\":{\"notice\":\"convenience function to obtain the overlying of a given asset\"},\"pull(address,address,uint256,bool)\":{\"notice\":\"pulls liquidity from the reserve and sends it to the calling maker contract.\"},\"push(address,address,uint256)\":{\"notice\":\"pushes assets from calling's maker contract to a reserve\"},\"pushAndSupply(address,uint256,address,uint256,address)\":{\"notice\":\"pushes each given token from the calling maker contract to this router, then supplies the whole router-local balance to AAVE\"},\"revokeLenderApproval(address)\":{\"notice\":\"revokes pool approval for a certain asset. This router will no longer be able to deposit on AAVE Pool\"},\"routerGasreq(address,address)\":{\"notice\":\"view for gas overhead of this router.\"},\"setAaveManager(address)\":{\"notice\":\"sets a new AAVE manager\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"sharesOf(address,address)\":{\"notice\":\"returns the shares of this router that are attributed to a particular reserve\"},\"totalBalance(address)\":{\"notice\":\"theoretically available funds to this router either in overlying or in tokens (part of it may not be redeemable from AAVE)\"},\"totalShares(address)\":{\"notice\":\"returns the total shares one would need to possess in order to claim the entire pool of tokens\"},\"unbind()\":{\"notice\":\"removes `msg.sender` from the allowed makers of this router\"},\"unbind(address)\":{\"notice\":\"removes a makerContract from the allowed makers of this router\"},\"withdraw(address,address,uint256)\":{\"notice\":\"withdraw funds from the pool on behalf of some reserve id\"}},\"notice\":\"maker contracts deposit/withdraw their user(s) fund(s) on this router, which maintains an accounting of shares attributed to each depositor\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol\":\"AavePooledRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/integrations/AaveV3Lender.sol\":{\"keccak256\":\"0x65c1d71a127fec7fdf05944089c5199201bc93ca1e5027ed08302984f67ab31c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://253877f6572d8601c115f40f22bea85522d11b1fd0a62e3c441a6c82bdfa7ba1\",\"dweb:/ipfs/QmPGJb4VmwXsX24zs2m4sxpv7UYXKs95uHpJ7gYVJhZwPJ\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol\":{\"keccak256\":\"0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066\",\"dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol\":{\"keccak256\":\"0x2c3da5585b1baace5d0f7f769beace104ebff7bded77812f67e17b54329da270\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://48d1e2a0b57d8de56a7d6adb0755dace4e594996fcba1c5235b6bba22008309e\",\"dweb:/ipfs/QmUs8bXDL9sbi2uGGfCU62noGCffh5YysjdagPdnxfZgbL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/HasAaveBalanceMemoizer.sol\":{\"keccak256\":\"0xa4a742f5eabf48824fffe0964e492c8ca30ade52489b70ebb953a7d128d75642\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0da6001867bd2b0439e27411a8fdf552e70da7cc9abd1d69f8113357c7bd89ab\",\"dweb:/ipfs/QmZxDy1osTChe6G4iUFUDk5XcBKEieaQ1YbKGvY5Y7uGca\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/DataTypes.sol\":{\"keccak256\":\"0x775020af3bbcf63aef55c874e3d27917f3c44da0d385d517f042a0098f18c73e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b76490e8120d2c263b469225d856a7877461468ca2155e62a10440cd3e0d2e5\",\"dweb:/ipfs/QmTpuDqndYBysHtCAoN8r3Ep8ia9yPiF5r1c7DWz25THjH\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPool.sol\":{\"keccak256\":\"0x782b82cf3ecb497600a70b8e7b116b310d1b5c2d56cf7b4148c4d58fe340aa31\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4b1d7437c36656463add0b99c8ad81d8dff35ce09f6bbb9620ec7e5bda9ed562\",\"dweb:/ipfs/QmbWYNTHFQpUPuWswmSFvyuNgMeqeA3xcqrDBiz3woPkc7\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x8406a64ea84a30724906cc2d3753ec4de384838eadaf7b502fa459304f338fb9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3e4dbfdb5a653794fde64501ffbe0d28febe5b97f5b2b061ce341c4e63f235dc\",\"dweb:/ipfs/QmeoseiHXJ2uGpJKfpPfzhfq4Vpcj3YfmWRHcR9C4trpC5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IRewardsControllerIsh.sol\":{\"keccak256\":\"0x80fa787b6bace14b44e4856939452c4bf32f7866cfcc302cf192d0576287ff55\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a65bd5a79a1757dc72ff918d544cb08c846d5d6a2a5f3e6153cd0f4874e5f960\",\"dweb:/ipfs/QmQmBnSAPAPRERisyvV6V4ATt7d4JskvEEZ35MUkx9qvFv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addressesProvider",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "overhead",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "aaveReason",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AaveIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MakerBind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MakerUnbind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "manager",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAaveManager",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADDRESS_PROVIDER",
          "outputs": [
            {
              "internalType": "contract IPoolAddressesProvider",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OFFSET",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POOL",
          "outputs": [
            {
              "internalType": "contract IPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROUTER_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "aaveManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfReserve",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "makerContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bind"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkAsset",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "assets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "rewardList",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "claimedAmounts",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enterMarket"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exitMarket"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flush"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "noRevert",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flushBuffer",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "reason",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mkr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBound",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "asset",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "overlying",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "aToken",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "strict",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pulled",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pushed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token0",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount0",
              "type": "uint256"
            },
            {
              "internalType": "contract IERC20",
              "name": "token1",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount1",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pushAndSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pushed0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pushed1",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeLenderApproval"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "routerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "overhead",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "aaveManager_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAaveManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "total",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbind"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "makerContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbind"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address)": {
            "params": {
              "token": "the asset one wishes to use the router for"
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "balanceOfReserve(address,address)": {
            "params": {
              "reserveId": "the identifier of the reserve whose balance is queried",
              "token": "the asset one wants to know the balance of"
            },
            "returns": {
              "_0": "available funds for the reserve"
            }
          },
          "bind(address)": {
            "details": "this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address",
            "params": {
              "makerContract": "the maker contract address"
            }
          },
          "checkAsset(address)": {
            "params": {
              "asset": "the asset one wants to lend"
            },
            "returns": {
              "_0": "true if the asset can be supplied on pool"
            }
          },
          "checkList(address,address)": {
            "details": "`checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.",
            "params": {
              "reserveId": "of the tokens that are being pulled",
              "token": "is the asset (and possibly its overlyings) whose approval must be checked"
            }
          },
          "claimRewards(address[])": {
            "details": "if some rewards are eligible they are sent to `aaveManager`",
            "params": {
              "assets": "the list of overlyings (aToken, debtToken) whose rewards should be claimed"
            },
            "returns": {
              "claimedAmounts": "the amount of claimed rewards",
              "rewardList": "the addresses of the claimed rewards"
            }
          },
          "constructor": {
            "params": {
              "addressesProvider": "address of AAVE's address provider",
              "overhead": "is the amount of gas that is required for this router to be able to perform a `pull` and a `push`."
            }
          },
          "enterMarket(address[])": {
            "details": "market is automatically entered at first deposit",
            "params": {
              "tokens": "the asset addresses"
            }
          },
          "exitMarket(address)": {
            "params": {
              "token": "the asset address"
            }
          },
          "flush(address[],address)": {
            "params": {
              "reserveId": "determines the location of the reserve (router implementation dependent).",
              "tokens": "to flush"
            }
          },
          "flushBuffer(address,bool)": {
            "params": {
              "noRevert": "does not revert if supplies throws",
              "token": "the address of the asset"
            },
            "returns": {
              "reason": "for revert from Aave."
            }
          },
          "isBound(address)": {
            "params": {
              "mkr": "the address of a maker contract"
            },
            "returns": {
              "_0": "true if `mkr` is authorized to call this router."
            }
          },
          "overlying(address)": {
            "params": {
              "asset": "the underlying asset"
            },
            "returns": {
              "aToken": "the overlying asset"
            }
          },
          "pull(address,address,uint256,bool)": {
            "params": {
              "amount": "of `token` the maker contract wishes to pull from its reserve",
              "reserveId": "identifies the fund owner (router implementation dependent).",
              "strict": "when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)",
              "token": "is the ERC20 managing the pulled asset"
            },
            "returns": {
              "pulled": "the amount that was successfully pulled."
            }
          },
          "push(address,address,uint256)": {
            "params": {
              "amount": "is the amount of asset that should be transferred from the calling maker contract",
              "reserveId": "determines the location of the reserve (router implementation dependent).",
              "token": "is the asset the maker is pushing"
            },
            "returns": {
              "pushed": "fraction of `amount` that was successfully pushed to reserve."
            }
          },
          "pushAndSupply(address,uint256,address,uint256,address)": {
            "details": "an offer logic should call this instead of `flush` when it is the last posthook to be executedthis can be determined by checking during __lastLook__ whether the logic will trigger a withdraw from AAVE (this is the case if router's balance of token is empty)this call be performed even for tokens with 0 amount for the offer logic, since the logic can be the first in a chain and router needs to flush allthis function is also to be used when user deposits funds on the maker contract",
            "params": {
              "amount0": "the amount of `token0` to deposit",
              "amount1": "the amount of `token1` to deposit",
              "reserveId": "the reserve whose shares should be increased",
              "token0": "the first token to deposit",
              "token1": "the second token to deposit"
            },
            "returns": {
              "pushed0": "the amount of token0 that were successfully pushed",
              "pushed1": "the amount of token1 that were successfully pushed"
            }
          },
          "revokeLenderApproval(address)": {
            "params": {
              "token": "the address of the asset whose approval must be revoked."
            }
          },
          "routerGasreq(address,address)": {
            "params": {
              "reserveId": "that should be considered if a reserve specific route is defined.",
              "token": "that should be considered if a token specific route is defined."
            },
            "returns": {
              "overhead": "the added (overapproximated) gas cost of `push` and `pull` for the routing strategy."
            }
          },
          "setAaveManager(address)": {
            "details": "if any reward is active for pure lenders, `aaveManager` will be able to claim them",
            "params": {
              "aaveManager_": "the new address of the AAVE manager"
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "sharesOf(address,address)": {
            "details": "`sharesOf(token,id)/totalShares(token)` represent the portion of this contract's balance of `token`s that the `reserveId` can claim",
            "params": {
              "reserveId": "the reserve identifier",
              "token": "the address of the asset"
            },
            "returns": {
              "shares": "the amount of shares attributed to `reserveId`."
            }
          },
          "totalBalance(address)": {
            "details": "this function relies on the AAVE promise that aToken are in one-to-one correspondence with claimable underlying and use the same decimals",
            "params": {
              "token": "the asset whose balance is required"
            },
            "returns": {
              "balance": "of the asset"
            }
          },
          "totalShares(address)": {
            "params": {
              "token": "the address of the asset"
            },
            "returns": {
              "total": "the total amount of shares"
            }
          },
          "unbind(address)": {
            "params": {
              "makerContract": "the maker contract address"
            }
          },
          "withdraw(address,address,uint256)": {
            "params": {
              "amount": "the amount to withdraw. Use type(uint).max to require withdrawal of the total balance of the caller",
              "reserveId": "the identifier of the share holder",
              "token": "the asset to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ADDRESS_PROVIDER()": {
            "notice": "The AAVE pool address provider."
          },
          "OFFSET()": {
            "notice": "offset for initial shares to be minted"
          },
          "POOL()": {
            "notice": "The AAVE pool retrieved from the pool provider."
          },
          "ROUTER_GASREQ()": {
            "notice": "the router specific gas requirement"
          },
          "aaveManager()": {
            "notice": "the manager which controls which pools are allowed."
          },
          "activate(address)": {
            "notice": "performs necessary approval to activate router function on a particular asset"
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "balanceOfReserve(address,address)": {
            "notice": "computes available funds (modulo available liquidity on AAVE) for a given reserve"
          },
          "bind(address)": {
            "notice": "adds a maker contract address to the allowed makers of this router"
          },
          "checkAsset(address)": {
            "notice": "verifies whether an asset can be supplied on pool"
          },
          "checkList(address,address)": {
            "notice": "allows a makerContract to verify it is ready to use `this` router for a particular reserve"
          },
          "claimRewards(address[])": {
            "notice": "allows AAVE manager to claim the rewards attributed to this router by AAVE"
          },
          "constructor": {
            "notice": "contract's constructor"
          },
          "enterMarket(address[])": {
            "notice": "re-allows AAVE to use certain assets as collateral for lending"
          },
          "exitMarket(address)": {
            "notice": "prevents AAVE from using a certain asset as collateral for lending"
          },
          "flush(address[],address)": {
            "notice": "iterative `push` for the whole balance in a single call"
          },
          "flushBuffer(address,bool)": {
            "notice": "deposit router-local balance of an asset on the AAVE pool"
          },
          "isBound(address)": {
            "notice": "getter for the `makers: addr => bool` mapping"
          },
          "overlying(address)": {
            "notice": "convenience function to obtain the overlying of a given asset"
          },
          "pull(address,address,uint256,bool)": {
            "notice": "pulls liquidity from the reserve and sends it to the calling maker contract."
          },
          "push(address,address,uint256)": {
            "notice": "pushes assets from calling's maker contract to a reserve"
          },
          "pushAndSupply(address,uint256,address,uint256,address)": {
            "notice": "pushes each given token from the calling maker contract to this router, then supplies the whole router-local balance to AAVE"
          },
          "revokeLenderApproval(address)": {
            "notice": "revokes pool approval for a certain asset. This router will no longer be able to deposit on AAVE Pool"
          },
          "routerGasreq(address,address)": {
            "notice": "view for gas overhead of this router."
          },
          "setAaveManager(address)": {
            "notice": "sets a new AAVE manager"
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "sharesOf(address,address)": {
            "notice": "returns the shares of this router that are attributed to a particular reserve"
          },
          "totalBalance(address)": {
            "notice": "theoretically available funds to this router either in overlying or in tokens (part of it may not be redeemable from AAVE)"
          },
          "totalShares(address)": {
            "notice": "returns the total shares one would need to possess in order to claim the entire pool of tokens"
          },
          "unbind()": {
            "notice": "removes `msg.sender` from the allowed makers of this router"
          },
          "unbind(address)": {
            "notice": "removes a makerContract from the allowed makers of this router"
          },
          "withdraw(address,address,uint256)": {
            "notice": "withdraw funds from the pool on behalf of some reserve id"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol": "AavePooledRouter"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/integrations/AaveV3Lender.sol": {
        "keccak256": "0x65c1d71a127fec7fdf05944089c5199201bc93ca1e5027ed08302984f67ab31c",
        "urls": [
          "bzz-raw://253877f6572d8601c115f40f22bea85522d11b1fd0a62e3c441a6c82bdfa7ba1",
          "dweb:/ipfs/QmPGJb4VmwXsX24zs2m4sxpv7UYXKs95uHpJ7gYVJhZwPJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol": {
        "keccak256": "0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5",
        "urls": [
          "bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066",
          "dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol": {
        "keccak256": "0x2c3da5585b1baace5d0f7f769beace104ebff7bded77812f67e17b54329da270",
        "urls": [
          "bzz-raw://48d1e2a0b57d8de56a7d6adb0755dace4e594996fcba1c5235b6bba22008309e",
          "dweb:/ipfs/QmUs8bXDL9sbi2uGGfCU62noGCffh5YysjdagPdnxfZgbL"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/HasAaveBalanceMemoizer.sol": {
        "keccak256": "0xa4a742f5eabf48824fffe0964e492c8ca30ade52489b70ebb953a7d128d75642",
        "urls": [
          "bzz-raw://0da6001867bd2b0439e27411a8fdf552e70da7cc9abd1d69f8113357c7bd89ab",
          "dweb:/ipfs/QmZxDy1osTChe6G4iUFUDk5XcBKEieaQ1YbKGvY5Y7uGca"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/DataTypes.sol": {
        "keccak256": "0x775020af3bbcf63aef55c874e3d27917f3c44da0d385d517f042a0098f18c73e",
        "urls": [
          "bzz-raw://5b76490e8120d2c263b469225d856a7877461468ca2155e62a10440cd3e0d2e5",
          "dweb:/ipfs/QmTpuDqndYBysHtCAoN8r3Ep8ia9yPiF5r1c7DWz25THjH"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPool.sol": {
        "keccak256": "0x782b82cf3ecb497600a70b8e7b116b310d1b5c2d56cf7b4148c4d58fe340aa31",
        "urls": [
          "bzz-raw://4b1d7437c36656463add0b99c8ad81d8dff35ce09f6bbb9620ec7e5bda9ed562",
          "dweb:/ipfs/QmbWYNTHFQpUPuWswmSFvyuNgMeqeA3xcqrDBiz3woPkc7"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPoolAddressesProvider.sol": {
        "keccak256": "0x8406a64ea84a30724906cc2d3753ec4de384838eadaf7b502fa459304f338fb9",
        "urls": [
          "bzz-raw://3e4dbfdb5a653794fde64501ffbe0d28febe5b97f5b2b061ce341c4e63f235dc",
          "dweb:/ipfs/QmeoseiHXJ2uGpJKfpPfzhfq4Vpcj3YfmWRHcR9C4trpC5"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IRewardsControllerIsh.sol": {
        "keccak256": "0x80fa787b6bace14b44e4856939452c4bf32f7866cfcc302cf192d0576287ff55",
        "urls": [
          "bzz-raw://a65bd5a79a1757dc72ff918d544cb08c846d5d6a2a5f3e6153cd0f4874e5f960",
          "dweb:/ipfs/QmQmBnSAPAPRERisyvV6V4ATt7d4JskvEEZ35MUkx9qvFv"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol",
    "id": 89542,
    "exportedSymbols": {
      "AavePooledRouter": [
        89541
      ],
      "AbstractRouter": [
        88623
      ],
      "HasAaveBalanceMemoizer": [
        89724
      ],
      "IERC20": [
        88
      ],
      "MonoRouter": [
        88662
      ],
      "TransferLib": [
        4306
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:20056:121",
    "nodes": [
      {
        "id": 88664,
        "nodeType": "PragmaDirective",
        "src": "41:24:121",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 88667,
        "nodeType": "ImportDirective",
        "src": "67:70:121",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol",
        "file": "../abstract/MonoRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89542,
        "sourceUnit": 88663,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88665,
              "name": "AbstractRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88623,
              "src": "75:14:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 88666,
              "name": "MonoRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88662,
              "src": "91:10:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88669,
        "nodeType": "ImportDirective",
        "src": "138:53:121",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol",
        "file": "@mgv/lib/TransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89542,
        "sourceUnit": 4307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88668,
              "name": "TransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4306,
              "src": "146:11:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88671,
        "nodeType": "ImportDirective",
        "src": "192:68:121",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/HasAaveBalanceMemoizer.sol",
        "file": "./HasAaveBalanceMemoizer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89542,
        "sourceUnit": 89725,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88670,
              "name": "HasAaveBalanceMemoizer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89724,
              "src": "200:22:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88673,
        "nodeType": "ImportDirective",
        "src": "261:43:121",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89542,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88672,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "269:6:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 89541,
        "nodeType": "ContractDefinition",
        "src": "2268:17828:121",
        "nodes": [
          {
            "id": 88681,
            "nodeType": "VariableDeclaration",
            "src": "2401:26:121",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 88679,
              "nodeType": "StructuredDocumentation",
              "src": "2336:62:121",
              "text": "@notice the manager which controls which pools are allowed."
            },
            "functionSelector": "51ef6593",
            "mutability": "mutable",
            "name": "aaveManager",
            "nameLocation": "2416:11:121",
            "scope": 89541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 88680,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2401:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 88686,
            "nodeType": "EventDefinition",
            "src": "2613:38:121",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 88682,
              "nodeType": "StructuredDocumentation",
              "src": "2432:178:121",
              "text": "@notice The `aaveManager` has been set.\n@param manager the new manager.\n@notice By emitting this data, an indexer will be able to keep track of what manager is used."
            },
            "eventSelector": "b6ba5fc5ae0a94b812b11dfa751771f5462efbe2bae48a93a63e2669873f6bb6",
            "name": "SetAaveManager",
            "nameLocation": "2619:14:121",
            "parameters": {
              "id": 88685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88684,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "manager",
                  "nameLocation": "2642:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88686,
                  "src": "2634:15:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2634:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2633:17:121"
            }
          },
          {
            "id": 88698,
            "nodeType": "EventDefinition",
            "src": "3211:111:121",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 88687,
              "nodeType": "StructuredDocumentation",
              "src": "2655:553:121",
              "text": "@notice An error occurred during deposit to AAVE.\n@param token the deposited token. This is indexed so that RPC calls can filter on it.\n@param maker the maker contract that was calling `pushAndSupply`. This is indexed so that RPC calls can filter on it.\n@param reserveId the reserve identifier that was calling `pushAndSupply`. This is indexed so that RPC calls can filter on it.\n@param aaveReason the reason from AAVE.\n@notice By emitting this data, an indexer will be able to keep track of what incidents that has happened."
            },
            "eventSelector": "10d8f655f7655a590b4e052b7187565b54bca0cd5cd9521f153c3da722d72f4f",
            "name": "AaveIncident",
            "nameLocation": "3217:12:121",
            "parameters": {
              "id": 88697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88690,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3245:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88698,
                  "src": "3230:20:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88689,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88688,
                      "name": "IERC20",
                      "nameLocations": [
                        "3230:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "3230:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "3230:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88692,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "3268:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88698,
                  "src": "3252:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88694,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "3291:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88698,
                  "src": "3275:25:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3275:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88696,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aaveReason",
                  "nameLocation": "3310:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88698,
                  "src": "3302:18:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 88695,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3229:92:121"
            }
          },
          {
            "id": 88704,
            "nodeType": "VariableDeclaration",
            "src": "3465:45:121",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 88699,
              "nodeType": "StructuredDocumentation",
              "src": "3326:136:121",
              "text": "@notice the total shares for each token, i.e. the total shares one would need to possess in order to claim the entire pool of tokens."
            },
            "mutability": "mutable",
            "name": "_totalShares",
            "nameLocation": "3498:12:121",
            "scope": 89541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 88703,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 88701,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88700,
                  "name": "IERC20",
                  "nameLocations": [
                    "3473:6:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "3473:6:121"
                },
                "referencedDeclaration": 88,
                "src": "3473:6:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$88",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "3465:23:121",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 88702,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3483:4:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88712,
            "nodeType": "VariableDeclaration",
            "src": "3652:62:121",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 88705,
              "nodeType": "StructuredDocumentation",
              "src": "3515:134:121",
              "text": "@notice the number of shares for a reserve for a token, i.e. the shares of this router that are attributed to a particular reserve."
            },
            "mutability": "mutable",
            "name": "_sharesOf",
            "nameLocation": "3705:9:121",
            "scope": 89541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 88711,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 88707,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 88706,
                  "name": "IERC20",
                  "nameLocations": [
                    "3660:6:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88,
                  "src": "3660:6:121"
                },
                "referencedDeclaration": 88,
                "src": "3660:6:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$88",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "3652:43:121",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 88710,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 88708,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3678:7:121",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3670:24:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 88709,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3689:4:121",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88716,
            "nodeType": "VariableDeclaration",
            "src": "4071:32:121",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 88713,
              "nodeType": "StructuredDocumentation",
              "src": "3719:349:121",
              "text": "@notice offset for initial shares to be minted\n@dev this amount must be big enough to avoid minting 0 shares via \"donation\"\n see https://github.com/code-423n4/2022-09-y2k-finance-findings/issues/449\n mitigation proposed here: https://ethereum-magicians.org/t/address-eip-4626-inflation-attacks-with-virtual-shares-and-assets/12677"
            },
            "functionSelector": "ce665dd8",
            "mutability": "constant",
            "name": "OFFSET",
            "nameLocation": "4092:6:121",
            "scope": 89541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88714,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4071:4:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3139",
              "id": 88715,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4101:2:121",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_19_by_1",
                "typeString": "int_const 19"
              },
              "value": "19"
            },
            "visibility": "public"
          },
          {
            "id": 88722,
            "nodeType": "VariableDeclaration",
            "src": "4148:47:121",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 88717,
              "nodeType": "StructuredDocumentation",
              "src": "4107:38:121",
              "text": "@notice initial shares to be minted"
            },
            "mutability": "constant",
            "name": "INIT_MINT",
            "nameLocation": "4171:9:121",
            "scope": 89541,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 88718,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4148:4:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 88721,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3130",
                "id": 88719,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4183:2:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "id": 88720,
                "name": "OFFSET",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 88716,
                "src": "4189:6:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "4183:12:121",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88742,
            "nodeType": "FunctionDefinition",
            "src": "5246:154:121",
            "nodes": [],
            "body": {
              "id": 88741,
              "nodeType": "Block",
              "src": "5363:37:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 88737,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5384:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5388:6:121",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5384:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88736,
                      "name": "setAaveManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89540,
                      "src": "5369:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 88739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5369:26:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88740,
                  "nodeType": "ExpressionStatement",
                  "src": "5369:26:121"
                }
              ]
            },
            "documentation": {
              "id": 88723,
              "nodeType": "StructuredDocumentation",
              "src": "5025:218:121",
              "text": "@notice contract's constructor\n@param addressesProvider address of AAVE's address provider\n@param overhead is the amount of gas that is required for this router to be able to perform a `pull` and a `push`."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 88730,
                    "name": "addressesProvider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88725,
                    "src": "5323:17:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 88731,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 88729,
                  "name": "HasAaveBalanceMemoizer",
                  "nameLocations": [
                    "5300:22:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89724,
                  "src": "5300:22:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "5300:41:121"
              },
              {
                "arguments": [
                  {
                    "id": 88733,
                    "name": "overhead",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88727,
                    "src": "5353:8:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 88734,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 88732,
                  "name": "MonoRouter",
                  "nameLocations": [
                    "5342:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88662,
                  "src": "5342:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "5342:20:121"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 88728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88725,
                  "mutability": "mutable",
                  "name": "addressesProvider",
                  "nameLocation": "5266:17:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88742,
                  "src": "5258:25:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88724,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5258:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88727,
                  "mutability": "mutable",
                  "name": "overhead",
                  "nameLocation": "5290:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88742,
                  "src": "5285:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88726,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5285:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5257:42:121"
            },
            "returnParameters": {
              "id": 88735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5363:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88762,
            "nodeType": "FunctionDefinition",
            "src": "5793:132:121",
            "nodes": [],
            "body": {
              "id": 88761,
              "nodeType": "Block",
              "src": "5878:47:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88753,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88751,
                      "src": "5884:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 88754,
                          "name": "_sharesOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88712,
                          "src": "5893:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 88756,
                        "indexExpression": {
                          "id": 88755,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88746,
                          "src": "5903:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5893:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 88758,
                      "indexExpression": {
                        "id": 88757,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88748,
                        "src": "5910:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5893:27:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5884:36:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88760,
                  "nodeType": "ExpressionStatement",
                  "src": "5884:36:121"
                }
              ]
            },
            "documentation": {
              "id": 88743,
              "nodeType": "StructuredDocumentation",
              "src": "5404:386:121",
              "text": "@notice returns the shares of this router that are attributed to a particular reserve\n@param token the address of the asset\n@param reserveId the reserve identifier\n@return shares the amount of shares attributed to `reserveId`.\n@dev `sharesOf(token,id)/totalShares(token)` represent the portion of this contract's balance of `token`s that the `reserveId` can claim"
            },
            "functionSelector": "0a7292f5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesOf",
            "nameLocation": "5802:8:121",
            "parameters": {
              "id": 88749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88746,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5818:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88762,
                  "src": "5811:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88745,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88744,
                      "name": "IERC20",
                      "nameLocations": [
                        "5811:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "5811:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "5811:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88748,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "5833:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88762,
                  "src": "5825:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5825:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5810:33:121"
            },
            "returnParameters": {
              "id": 88752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88751,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5870:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88762,
                  "src": "5865:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5865:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5864:13:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88778,
            "nodeType": "FunctionDefinition",
            "src": "6126:106:121",
            "nodes": [],
            "body": {
              "id": 88777,
              "nodeType": "Block",
              "src": "6194:38:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88771,
                      "name": "total",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88769,
                      "src": "6200:5:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "baseExpression": {
                        "id": 88772,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88704,
                        "src": "6208:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 88774,
                      "indexExpression": {
                        "id": 88773,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88766,
                        "src": "6221:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6208:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6200:27:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88776,
                  "nodeType": "ExpressionStatement",
                  "src": "6200:27:121"
                }
              ]
            },
            "documentation": {
              "id": 88763,
              "nodeType": "StructuredDocumentation",
              "src": "5929:194:121",
              "text": "@notice returns the total shares one would need to possess in order to claim the entire pool of tokens\n@param token the address of the asset\n@return total the total amount of shares"
            },
            "functionSelector": "bf6b874e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalShares",
            "nameLocation": "6135:11:121",
            "parameters": {
              "id": 88767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88766,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6154:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88778,
                  "src": "6147:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88765,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88764,
                      "name": "IERC20",
                      "nameLocations": [
                        "6147:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "6147:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "6147:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6146:14:121"
            },
            "returnParameters": {
              "id": 88770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88769,
                  "mutability": "mutable",
                  "name": "total",
                  "nameLocation": "6187:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88778,
                  "src": "6182:10:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88768,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6182:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6181:12:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88797,
            "nodeType": "FunctionDefinition",
            "src": "6608:158:121",
            "nodes": [],
            "body": {
              "id": 88796,
              "nodeType": "Block",
              "src": "6681:85:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88789,
                      "mutability": "mutable",
                      "name": "memoizer",
                      "nameLocation": "6710:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 88796,
                      "src": "6687:31:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                        "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                      },
                      "typeName": {
                        "id": 88788,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88787,
                          "name": "BalanceMemoizer",
                          "nameLocations": [
                            "6687:15:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89565,
                          "src": "6687:15:121"
                        },
                        "referencedDeclaration": 89565,
                        "src": "6687:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88790,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6687:31:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88792,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88782,
                        "src": "6745:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88793,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88789,
                        "src": "6752:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 88791,
                      "name": "_totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88822,
                      "src": "6731:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 88794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6731:30:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 88786,
                  "id": 88795,
                  "nodeType": "Return",
                  "src": "6724:37:121"
                }
              ]
            },
            "documentation": {
              "id": 88779,
              "nodeType": "StructuredDocumentation",
              "src": "6236:369:121",
              "text": "@notice theoretically available funds to this router either in overlying or in tokens (part of it may not be redeemable from AAVE)\n@param token the asset whose balance is required\n@return balance of the asset\n@dev this function relies on the AAVE promise that aToken are in one-to-one correspondence with claimable underlying and use the same decimals"
            },
            "functionSelector": "6eacd398",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalBalance",
            "nameLocation": "6617:12:121",
            "parameters": {
              "id": 88783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88782,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6637:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88797,
                  "src": "6630:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88781,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88780,
                      "name": "IERC20",
                      "nameLocations": [
                        "6630:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "6630:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "6630:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6629:14:121"
            },
            "returnParameters": {
              "id": 88786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88785,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "6672:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88797,
                  "src": "6667:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6666:14:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88822,
            "nodeType": "FunctionDefinition",
            "src": "6956:192:121",
            "nodes": [],
            "body": {
              "id": 88821,
              "nodeType": "Block",
              "src": "7063:85:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88809,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88807,
                      "src": "7069:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 88818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 88811,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88801,
                            "src": "7089:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 88812,
                            "name": "memoizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88804,
                            "src": "7096:8:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                              "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                              "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                            }
                          ],
                          "id": 88810,
                          "name": "balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89723,
                          "src": "7079:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                          }
                        },
                        "id": 88813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7079:26:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 88815,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88801,
                            "src": "7127:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 88816,
                            "name": "memoizer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88804,
                            "src": "7134:8:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                              "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                              "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                            }
                          ],
                          "id": 88814,
                          "name": "balanceOfOverlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89681,
                          "src": "7108:18:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                          }
                        },
                        "id": 88817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7108:35:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7079:64:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7069:74:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88820,
                  "nodeType": "ExpressionStatement",
                  "src": "7069:74:121"
                }
              ]
            },
            "documentation": {
              "id": 88798,
              "nodeType": "StructuredDocumentation",
              "src": "6770:183:121",
              "text": "@notice `totalBalance` with memoization of balance queries\n@param token the asset whose balance is required\n@param memoizer the memoizer\n@return balance of the asset"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_totalBalance",
            "nameLocation": "6965:13:121",
            "parameters": {
              "id": 88805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88801,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6986:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88822,
                  "src": "6979:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88799,
                      "name": "IERC20",
                      "nameLocations": [
                        "6979:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "6979:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "6979:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88804,
                  "mutability": "mutable",
                  "name": "memoizer",
                  "nameLocation": "7016:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88822,
                  "src": "6993:31:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                    "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                  },
                  "typeName": {
                    "id": 88803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88802,
                      "name": "BalanceMemoizer",
                      "nameLocations": [
                        "6993:15:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89565,
                      "src": "6993:15:121"
                    },
                    "referencedDeclaration": 89565,
                    "src": "6993:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                      "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6978:47:121"
            },
            "returnParameters": {
              "id": 88808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88807,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "7054:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88822,
                  "src": "7049:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88806,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7049:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7048:14:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88845,
            "nodeType": "FunctionDefinition",
            "src": "7430:195:121",
            "nodes": [],
            "body": {
              "id": 88844,
              "nodeType": "Block",
              "src": "7525:100:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88836,
                      "mutability": "mutable",
                      "name": "memoizer",
                      "nameLocation": "7554:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 88844,
                      "src": "7531:31:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                        "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                      },
                      "typeName": {
                        "id": 88835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88834,
                          "name": "BalanceMemoizer",
                          "nameLocations": [
                            "7531:15:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89565,
                          "src": "7531:15:121"
                        },
                        "referencedDeclaration": 89565,
                        "src": "7531:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88837,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7531:31:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88839,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88826,
                        "src": "7593:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88840,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88828,
                        "src": "7600:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88841,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88836,
                        "src": "7611:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 88838,
                      "name": "_balanceOfReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88885,
                      "src": "7575:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_address_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 88842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7575:45:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 88833,
                  "id": 88843,
                  "nodeType": "Return",
                  "src": "7568:52:121"
                }
              ]
            },
            "baseFunctions": [
              88622
            ],
            "documentation": {
              "id": 88823,
              "nodeType": "StructuredDocumentation",
              "src": "7152:275:121",
              "text": "@notice computes available funds (modulo available liquidity on AAVE) for a given reserve\n@param token the asset one wants to know the balance of\n@param reserveId the identifier of the reserve whose balance is queried\n@return available funds for the reserve"
            },
            "functionSelector": "fe380db5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfReserve",
            "nameLocation": "7439:16:121",
            "overrides": {
              "id": 88830,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7501:8:121"
            },
            "parameters": {
              "id": 88829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88826,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7463:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88845,
                  "src": "7456:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88825,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88824,
                      "name": "IERC20",
                      "nameLocations": [
                        "7456:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "7456:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "7456:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88828,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "7478:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88845,
                  "src": "7470:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7470:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7455:33:121"
            },
            "returnParameters": {
              "id": 88833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88845,
                  "src": "7519:4:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88831,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7519:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7518:6:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88885,
            "nodeType": "FunctionDefinition",
            "src": "7922:307:121",
            "nodes": [],
            "body": {
              "id": 88884,
              "nodeType": "Block",
              "src": "8066:163:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88860,
                      "mutability": "mutable",
                      "name": "totalShares_",
                      "nameLocation": "8077:12:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 88884,
                      "src": "8072:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88859,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8072:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88864,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88862,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88849,
                        "src": "8104:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 88861,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88778,
                      "src": "8092:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20) view returns (uint256)"
                      }
                    },
                    "id": 88863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8092:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8072:38:121"
                },
                {
                  "expression": {
                    "id": 88882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88865,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88857,
                      "src": "8116:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88866,
                          "name": "totalShares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88860,
                          "src": "8126:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 88867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8142:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8126:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 88871,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88849,
                                "src": "8159:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 88872,
                                "name": "reserveId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88851,
                                "src": "8166:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 88870,
                              "name": "sharesOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88762,
                              "src": "8150:8:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,address) view returns (uint256)"
                              }
                            },
                            "id": 88873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8150:26:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 88875,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88849,
                                "src": "8193:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 88876,
                                "name": "memoizer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88854,
                                "src": "8200:8:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                  "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                  "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                                }
                              ],
                              "id": 88874,
                              "name": "_totalBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88822,
                              "src": "8179:13:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                              }
                            },
                            "id": 88877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8179:30:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8150:59:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 88879,
                          "name": "totalShares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88860,
                          "src": "8212:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8150:74:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 88881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "8126:98:121",
                      "trueExpression": {
                        "hexValue": "30",
                        "id": 88869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8146:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8116:108:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88883,
                  "nodeType": "ExpressionStatement",
                  "src": "8116:108:121"
                }
              ]
            },
            "documentation": {
              "id": 88846,
              "nodeType": "StructuredDocumentation",
              "src": "7629:290:121",
              "text": "@notice `balanceOfReserve` with memoization of balance queries\n@param token the asset one wants to know the balance of\n@param reserveId the identifier of the reserve whose balance is queried\n@return balance available funds for the reserve\n@param memoizer the memoizer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balanceOfReserve",
            "nameLocation": "7931:17:121",
            "parameters": {
              "id": 88855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88849,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7956:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88885,
                  "src": "7949:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88848,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88847,
                      "name": "IERC20",
                      "nameLocations": [
                        "7949:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "7949:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "7949:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88851,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "7971:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88885,
                  "src": "7963:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7963:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88854,
                  "mutability": "mutable",
                  "name": "memoizer",
                  "nameLocation": "8005:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88885,
                  "src": "7982:31:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                    "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                  },
                  "typeName": {
                    "id": 88853,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88852,
                      "name": "BalanceMemoizer",
                      "nameLocations": [
                        "7982:15:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89565,
                      "src": "7982:15:121"
                    },
                    "referencedDeclaration": 89565,
                    "src": "7982:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                      "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7948:66:121"
            },
            "returnParameters": {
              "id": 88858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88857,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "8055:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88885,
                  "src": "8050:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88856,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8050:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8049:14:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88922,
            "nodeType": "FunctionDefinition",
            "src": "8465:285:121",
            "nodes": [],
            "body": {
              "id": 88921,
              "nodeType": "Block",
              "src": "8600:150:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88900
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88900,
                      "mutability": "mutable",
                      "name": "totalShares_",
                      "nameLocation": "8611:12:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 88921,
                      "src": "8606:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88899,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8606:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88904,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88902,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88889,
                        "src": "8638:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 88901,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88778,
                      "src": "8626:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20) view returns (uint256)"
                      }
                    },
                    "id": 88903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8626:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8606:38:121"
                },
                {
                  "expression": {
                    "id": 88919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88905,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88897,
                      "src": "8650:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88906,
                          "name": "totalShares_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88900,
                          "src": "8659:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 88907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8675:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8659:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 88910,
                            "name": "totalShares_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88900,
                            "src": "8691:12:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 88911,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88891,
                            "src": "8706:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8691:21:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 88914,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88889,
                              "src": "8729:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 88915,
                              "name": "memoizer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88894,
                              "src": "8736:8:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                              }
                            ],
                            "id": 88913,
                            "name": "_totalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88822,
                            "src": "8715:13:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                            }
                          },
                          "id": 88916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8715:30:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8691:54:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 88918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "8659:86:121",
                      "trueExpression": {
                        "id": 88909,
                        "name": "INIT_MINT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88722,
                        "src": "8679:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8650:95:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88920,
                  "nodeType": "ExpressionStatement",
                  "src": "8650:95:121"
                }
              ]
            },
            "documentation": {
              "id": 88886,
              "nodeType": "StructuredDocumentation",
              "src": "8233:229:121",
              "text": "@notice computes how many shares an amount of tokens represents\n@param token the address of the asset\n@param amount of tokens\n@param memoizer the memoizer\n@return shares the shares that correspond to amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sharesOfAmount",
            "nameLocation": "8474:15:121",
            "parameters": {
              "id": 88895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88889,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8497:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88922,
                  "src": "8490:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88888,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88887,
                      "name": "IERC20",
                      "nameLocations": [
                        "8490:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "8490:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "8490:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88891,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8509:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88922,
                  "src": "8504:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88890,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8504:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88894,
                  "mutability": "mutable",
                  "name": "memoizer",
                  "nameLocation": "8540:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88922,
                  "src": "8517:31:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                    "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                  },
                  "typeName": {
                    "id": 88893,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88892,
                      "name": "BalanceMemoizer",
                      "nameLocations": [
                        "8517:15:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89565,
                      "src": "8517:15:121"
                    },
                    "referencedDeclaration": 89565,
                    "src": "8517:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                      "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8489:60:121"
            },
            "returnParameters": {
              "id": 88898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88897,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "8590:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88922,
                  "src": "8585:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88896,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8585:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8584:13:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88959,
            "nodeType": "FunctionDefinition",
            "src": "9069:332:121",
            "nodes": [],
            "body": {
              "id": 88958,
              "nodeType": "Block",
              "src": "9178:223:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88937
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88937,
                      "mutability": "mutable",
                      "name": "sharesToMint",
                      "nameLocation": "9251:12:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 88958,
                      "src": "9246:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88936,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9246:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88943,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88939,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88926,
                        "src": "9282:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88940,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88930,
                        "src": "9289:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88941,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88933,
                        "src": "9297:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 88938,
                      "name": "_sharesOfAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88922,
                      "src": "9266:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_uint256_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,uint256,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 88942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9266:40:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9246:60:121"
                },
                {
                  "expression": {
                    "id": 88950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 88944,
                          "name": "_sharesOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88712,
                          "src": "9312:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 88947,
                        "indexExpression": {
                          "id": 88945,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88926,
                          "src": "9322:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9312:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 88948,
                      "indexExpression": {
                        "id": 88946,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88928,
                        "src": "9329:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9312:27:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 88949,
                      "name": "sharesToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88937,
                      "src": "9343:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9312:43:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88951,
                  "nodeType": "ExpressionStatement",
                  "src": "9312:43:121"
                },
                {
                  "expression": {
                    "id": 88956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88952,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88704,
                        "src": "9361:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 88954,
                      "indexExpression": {
                        "id": 88953,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88926,
                        "src": "9374:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9361:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 88955,
                      "name": "sharesToMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88937,
                      "src": "9384:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9361:35:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88957,
                  "nodeType": "ExpressionStatement",
                  "src": "9361:35:121"
                }
              ]
            },
            "documentation": {
              "id": 88923,
              "nodeType": "StructuredDocumentation",
              "src": "8754:312:121",
              "text": "@notice mints a certain quantity of shares for a given asset and assigns them to a reserve\n@param token the address of the asset\n@param reserveId the address of the reserve who will be assigned new shares\n@param amount the amount of assets added to the reserve\n@param memoizer the memoizer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintShares",
            "nameLocation": "9078:11:121",
            "parameters": {
              "id": 88934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88926,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9097:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88959,
                  "src": "9090:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88925,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88924,
                      "name": "IERC20",
                      "nameLocations": [
                        "9090:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "9090:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "9090:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88928,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "9112:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88959,
                  "src": "9104:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9104:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88930,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9128:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88959,
                  "src": "9123:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88929,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9123:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88933,
                  "mutability": "mutable",
                  "name": "memoizer",
                  "nameLocation": "9159:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 88959,
                  "src": "9136:31:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                    "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                  },
                  "typeName": {
                    "id": 88932,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88931,
                      "name": "BalanceMemoizer",
                      "nameLocations": [
                        "9136:15:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89565,
                      "src": "9136:15:121"
                    },
                    "referencedDeclaration": 89565,
                    "src": "9136:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                      "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9089:79:121"
            },
            "returnParameters": {
              "id": 88935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9178:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89013,
            "nodeType": "FunctionDefinition",
            "src": "9955:635:121",
            "nodes": [],
            "body": {
              "id": 89012,
              "nodeType": "Block",
              "src": "10064:526:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88974,
                      "mutability": "mutable",
                      "name": "sharesToBurn",
                      "nameLocation": "10144:12:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89012,
                      "src": "10139:17:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88973,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10139:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88980,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88976,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88963,
                        "src": "10175:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88977,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88967,
                        "src": "10182:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88978,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88970,
                        "src": "10190:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 88975,
                      "name": "_sharesOfAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88922,
                      "src": "10159:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_uint256_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,uint256,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 88979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10159:40:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10139:60:121"
                },
                {
                  "assignments": [
                    88982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88982,
                      "mutability": "mutable",
                      "name": "ownerShares",
                      "nameLocation": "10210:11:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89012,
                      "src": "10205:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88981,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10205:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88988,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 88983,
                        "name": "_sharesOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88712,
                        "src": "10224:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                        }
                      },
                      "id": 88985,
                      "indexExpression": {
                        "id": 88984,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88963,
                        "src": "10234:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10224:16:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 88987,
                    "indexExpression": {
                      "id": 88986,
                      "name": "reserveId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88965,
                      "src": "10241:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10224:27:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10205:46:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88990,
                          "name": "sharesToBurn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88974,
                          "src": "10265:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 88991,
                          "name": "ownerShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88982,
                          "src": "10281:11:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10265:27:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41617665506f6f6c6564526f757465722f696e73756666696369656e7446756e6473",
                        "id": 88993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10294:36:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e047846878dfcdb2258515a5fb1692acf4bc222c357e795e0a45aa12616c6e67",
                          "typeString": "literal_string \"AavePooledRouter/insufficientFunds\""
                        },
                        "value": "AavePooledRouter/insufficientFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e047846878dfcdb2258515a5fb1692acf4bc222c357e795e0a45aa12616c6e67",
                          "typeString": "literal_string \"AavePooledRouter/insufficientFunds\""
                        }
                      ],
                      "id": 88989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10257:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10257:74:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88995,
                  "nodeType": "ExpressionStatement",
                  "src": "10257:74:121"
                },
                {
                  "expression": {
                    "id": 89004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 88996,
                          "name": "_sharesOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88712,
                          "src": "10378:9:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(contract IERC20 => mapping(address => uint256))"
                          }
                        },
                        "id": 88999,
                        "indexExpression": {
                          "id": 88997,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88963,
                          "src": "10388:5:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10378:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 89000,
                      "indexExpression": {
                        "id": 88998,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88965,
                        "src": "10395:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10378:27:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89001,
                        "name": "ownerShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88982,
                        "src": "10408:11:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 89002,
                        "name": "sharesToBurn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88974,
                        "src": "10422:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10408:26:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10378:56:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89005,
                  "nodeType": "ExpressionStatement",
                  "src": "10378:56:121"
                },
                {
                  "expression": {
                    "id": 89010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 89006,
                        "name": "_totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88704,
                        "src": "10550:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$88_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 89008,
                      "indexExpression": {
                        "id": 89007,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88963,
                        "src": "10563:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10550:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 89009,
                      "name": "sharesToBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88974,
                      "src": "10573:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10550:35:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89011,
                  "nodeType": "ExpressionStatement",
                  "src": "10550:35:121"
                }
              ]
            },
            "documentation": {
              "id": 88960,
              "nodeType": "StructuredDocumentation",
              "src": "9405:547:121",
              "text": "@notice burns a certain quantity of reserve's shares for a given asset\n@param token the address of the asset\n@param reserveId the address of the reserve who will have shares burnt\n@param amount the amount of assets withdrawn from reserve\n@param memoizer the memoizer\n@dev if one is trying to burn shares from a pool that doesn't have any, the call to `_sharesOfAmount` will return `INIT_MINT`\n@dev and thus this contract will throw with \"AavePooledRouter/insufficientFunds\", even if one is trying to burn 0 shares."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnShares",
            "nameLocation": "9964:11:121",
            "parameters": {
              "id": 88971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88963,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "9983:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89013,
                  "src": "9976:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88962,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88961,
                      "name": "IERC20",
                      "nameLocations": [
                        "9976:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "9976:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "9976:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88965,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "9998:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89013,
                  "src": "9990:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88964,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9990:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88967,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10014:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89013,
                  "src": "10009:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88966,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10009:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88970,
                  "mutability": "mutable",
                  "name": "memoizer",
                  "nameLocation": "10045:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89013,
                  "src": "10022:31:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                    "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                  },
                  "typeName": {
                    "id": 88969,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88968,
                      "name": "BalanceMemoizer",
                      "nameLocations": [
                        "10022:15:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89565,
                      "src": "10022:15:121"
                    },
                    "referencedDeclaration": 89565,
                    "src": "10022:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                      "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9975:79:121"
            },
            "returnParameters": {
              "id": 88972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10064:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89056,
            "nodeType": "FunctionDefinition",
            "src": "10754:396:121",
            "nodes": [],
            "body": {
              "id": 89055,
              "nodeType": "Block",
              "src": "10851:299:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89029,
                      "mutability": "mutable",
                      "name": "memoizer",
                      "nameLocation": "10880:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89055,
                      "src": "10857:31:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                        "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                      },
                      "typeName": {
                        "id": 89028,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89027,
                          "name": "BalanceMemoizer",
                          "nameLocations": [
                            "10857:15:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89565,
                          "src": "10857:15:121"
                        },
                        "referencedDeclaration": 89565,
                        "src": "10857:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89030,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10857:31:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89032,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89017,
                        "src": "10906:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89033,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89019,
                        "src": "10913:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89034,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89021,
                        "src": "10924:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89035,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89029,
                        "src": "10932:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89031,
                      "name": "_mintShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88959,
                      "src": "10894:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,struct HasAaveBalanceMemoizer.BalanceMemoizer memory)"
                      }
                    },
                    "id": 89036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10894:47:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89037,
                  "nodeType": "ExpressionStatement",
                  "src": "10894:47:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89041,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89017,
                            "src": "11053:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "expression": {
                              "id": 89042,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11060:3:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 89043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11064:6:121",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11060:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 89046,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11080:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                  "typeString": "contract AavePooledRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                  "typeString": "contract AavePooledRouter"
                                }
                              ],
                              "id": 89045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11072:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 89044,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11072:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11072:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 89048,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89021,
                            "src": "11087:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 89039,
                            "name": "TransferLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "11023:11:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                              "typeString": "type(library TransferLib)"
                            }
                          },
                          "id": 89040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11035:17:121",
                          "memberName": "transferTokenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4182,
                          "src": "11023:29:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20,address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 89049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11023:71:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41617665506f6f6c6564526f757465722f707573684661696c6564",
                        "id": 89050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11096:29:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56c3628eb51b7dde92333573b9db8fc6e1fd712b95cf796dbcdb223bad16a44a",
                          "typeString": "literal_string \"AavePooledRouter/pushFailed\""
                        },
                        "value": "AavePooledRouter/pushFailed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56c3628eb51b7dde92333573b9db8fc6e1fd712b95cf796dbcdb223bad16a44a",
                          "typeString": "literal_string \"AavePooledRouter/pushFailed\""
                        }
                      ],
                      "id": 89038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11015:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11015:111:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89052,
                  "nodeType": "ExpressionStatement",
                  "src": "11015:111:121"
                },
                {
                  "expression": {
                    "id": 89053,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89021,
                    "src": "11139:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 89026,
                  "id": 89054,
                  "nodeType": "Return",
                  "src": "11132:13:121"
                }
              ]
            },
            "baseFunctions": [
              88425
            ],
            "documentation": {
              "id": 89014,
              "nodeType": "StructuredDocumentation",
              "src": "10594:157:121",
              "text": "@notice Deposit funds on this router from the calling maker contract\n@dev no transfer to AAVE is done at that moment.\n@inheritdoc AbstractRouter"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__push__",
            "nameLocation": "10763:8:121",
            "overrides": {
              "id": 89023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10827:8:121"
            },
            "parameters": {
              "id": 89022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89017,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10779:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89056,
                  "src": "10772:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89016,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89015,
                      "name": "IERC20",
                      "nameLocations": [
                        "10772:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "10772:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "10772:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89019,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "10794:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89056,
                  "src": "10786:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10786:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89021,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10810:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89056,
                  "src": "10805:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89020,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10805:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10771:46:121"
            },
            "returnParameters": {
              "id": 89026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89056,
                  "src": "10845:4:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89024,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10845:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10844:6:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89086,
            "nodeType": "FunctionDefinition",
            "src": "11366:184:121",
            "nodes": [],
            "body": {
              "id": 89085,
              "nodeType": "Block",
              "src": "11461:89:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89070,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89060,
                        "src": "11482:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 89075,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11513:4:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                  "typeString": "contract AavePooledRouter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                  "typeString": "contract AavePooledRouter"
                                }
                              ],
                              "id": 89074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11505:7:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 89073,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11505:7:121",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11505:13:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89071,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89060,
                            "src": "11489:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 89072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11495:9:121",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "11489:15:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 89077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11489:30:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89080,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11529:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                              "typeString": "contract AavePooledRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                              "typeString": "contract AavePooledRouter"
                            }
                          ],
                          "id": 89079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11521:7:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89078,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11521:7:121",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11521:13:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89082,
                        "name": "noRevert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89062,
                        "src": "11536:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89069,
                      "name": "_supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83340,
                      "src": "11474:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$_t_bool_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,uint256,address,bool) returns (bytes32)"
                      }
                    },
                    "id": 89083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11474:71:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 89068,
                  "id": 89084,
                  "nodeType": "Return",
                  "src": "11467:78:121"
                }
              ]
            },
            "documentation": {
              "id": 89057,
              "nodeType": "StructuredDocumentation",
              "src": "11154:209:121",
              "text": "@notice deposit router-local balance of an asset on the AAVE pool\n@param token the address of the asset\n@param noRevert does not revert if supplies throws\n@return reason for revert from Aave."
            },
            "functionSelector": "5383dba4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 89065,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89064,
                  "name": "boundOrAdmin",
                  "nameLocations": [
                    "11423:12:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88279,
                  "src": "11423:12:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "11423:12:121"
              }
            ],
            "name": "flushBuffer",
            "nameLocation": "11375:11:121",
            "parameters": {
              "id": 89063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89060,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "11394:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89086,
                  "src": "11387:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89059,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89058,
                      "name": "IERC20",
                      "nameLocations": [
                        "11387:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "11387:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "11387:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89062,
                  "mutability": "mutable",
                  "name": "noRevert",
                  "nameLocation": "11406:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89086,
                  "src": "11401:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89061,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11401:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11386:29:121"
            },
            "returnParameters": {
              "id": 89068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89067,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "11453:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89086,
                  "src": "11445:14:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 89066,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11445:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11444:16:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 89181,
            "nodeType": "FunctionDefinition",
            "src": "12631:1077:121",
            "nodes": [],
            "body": {
              "id": 89180,
              "nodeType": "Block",
              "src": "12801:907:121",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89108,
                      "name": "amount0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89092,
                      "src": "12998:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 89109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13008:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12998:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89120,
                  "nodeType": "IfStatement",
                  "src": "12994:78:121",
                  "trueBody": {
                    "id": 89119,
                    "nodeType": "Block",
                    "src": "13011:61:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 89117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 89111,
                            "name": "pushed0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89104,
                            "src": "13019:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 89113,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89090,
                                "src": "13038:6:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 89114,
                                "name": "reserveId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89099,
                                "src": "13046:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 89115,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89092,
                                "src": "13057:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 89112,
                              "name": "__push__",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                89056
                              ],
                              "referencedDeclaration": 89056,
                              "src": "13029:8:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,address,uint256) returns (uint256)"
                              }
                            },
                            "id": 89116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13029:36:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13019:46:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89118,
                        "nodeType": "ExpressionStatement",
                        "src": "13019:46:121"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89121,
                      "name": "amount1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89097,
                      "src": "13081:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 89122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13091:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13081:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89133,
                  "nodeType": "IfStatement",
                  "src": "13077:78:121",
                  "trueBody": {
                    "id": 89132,
                    "nodeType": "Block",
                    "src": "13094:61:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 89130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 89124,
                            "name": "pushed1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89106,
                            "src": "13102:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 89126,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89095,
                                "src": "13121:6:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 89127,
                                "name": "reserveId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89099,
                                "src": "13129:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 89128,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89097,
                                "src": "13140:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 89125,
                              "name": "__push__",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                89056
                              ],
                              "referencedDeclaration": 89056,
                              "src": "13112:8:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,address,uint256) returns (uint256)"
                              }
                            },
                            "id": 89129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13112:36:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13102:46:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89131,
                        "nodeType": "ExpressionStatement",
                        "src": "13102:46:121"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    89135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89135,
                      "mutability": "mutable",
                      "name": "aaveData",
                      "nameLocation": "13413:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89180,
                      "src": "13405:16:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 89134,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13405:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89140,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89137,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89090,
                        "src": "13436:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 89138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13444:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 89136,
                      "name": "flushBuffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89086,
                      "src": "13424:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_bool_$returns$_t_bytes32_$",
                        "typeString": "function (contract IERC20,bool) returns (bytes32)"
                      }
                    },
                    "id": 89139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13424:25:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13405:44:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 89146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89141,
                      "name": "aaveData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89135,
                      "src": "13459:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 89144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13479:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 89143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13471:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 89142,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13471:7:121",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13471:10:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13459:22:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89156,
                  "nodeType": "IfStatement",
                  "src": "13455:101:121",
                  "trueBody": {
                    "id": 89155,
                    "nodeType": "Block",
                    "src": "13483:73:121",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 89148,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89090,
                              "src": "13509:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 89149,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13517:3:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 89150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13521:6:121",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13517:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 89151,
                              "name": "reserveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89099,
                              "src": "13529:9:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 89152,
                              "name": "aaveData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89135,
                              "src": "13540:8:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 89147,
                            "name": "AaveIncident",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88698,
                            "src": "13496:12:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,bytes32)"
                            }
                          },
                          "id": 89153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13496:53:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89154,
                        "nodeType": "EmitStatement",
                        "src": "13491:58:121"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 89162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89157,
                      "name": "aaveData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89135,
                      "src": "13561:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 89159,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89095,
                          "src": "13584:6:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 89160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13592:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 89158,
                        "name": "flushBuffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89086,
                        "src": "13572:11:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_bool_$returns$_t_bytes32_$",
                          "typeString": "function (contract IERC20,bool) returns (bytes32)"
                        }
                      },
                      "id": 89161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13572:25:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13561:36:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 89163,
                  "nodeType": "ExpressionStatement",
                  "src": "13561:36:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 89169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89164,
                      "name": "aaveData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89135,
                      "src": "13607:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 89167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13627:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 89166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13619:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 89165,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13619:7:121",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 89168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13619:10:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13607:22:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89179,
                  "nodeType": "IfStatement",
                  "src": "13603:101:121",
                  "trueBody": {
                    "id": 89178,
                    "nodeType": "Block",
                    "src": "13631:73:121",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 89171,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89095,
                              "src": "13657:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 89172,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "13665:3:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 89173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13669:6:121",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "13665:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 89174,
                              "name": "reserveId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89099,
                              "src": "13677:9:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 89175,
                              "name": "aaveData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89135,
                              "src": "13688:8:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 89170,
                            "name": "AaveIncident",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88698,
                            "src": "13644:12:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (contract IERC20,address,address,bytes32)"
                            }
                          },
                          "id": 89176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13644:53:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 89177,
                        "nodeType": "EmitStatement",
                        "src": "13639:58:121"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 89087,
              "nodeType": "StructuredDocumentation",
              "src": "11554:1074:121",
              "text": "@notice pushes each given token from the calling maker contract to this router, then supplies the whole router-local balance to AAVE\n@param token0 the first token to deposit\n@param amount0 the amount of `token0` to deposit\n@param token1 the second token to deposit\n@param amount1 the amount of `token1` to deposit\n@param reserveId the reserve whose shares should be increased\n@return pushed0 the amount of token0 that were successfully pushed\n@return pushed1 the amount of token1 that were successfully pushed\n@dev an offer logic should call this instead of `flush` when it is the last posthook to be executed\n@dev this can be determined by checking during __lastLook__ whether the logic will trigger a withdraw from AAVE (this is the case if router's balance of token is empty)\n@dev this call be performed even for tokens with 0 amount for the offer logic, since the logic can be the first in a chain and router needs to flush all\n@dev this function is also to be used when user deposits funds on the maker contract"
            },
            "functionSelector": "6f9a302f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 89102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89101,
                  "name": "onlyBound",
                  "nameLocations": [
                    "12748:9:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88260,
                  "src": "12748:9:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "12748:9:121"
              }
            ],
            "name": "pushAndSupply",
            "nameLocation": "12640:13:121",
            "parameters": {
              "id": 89100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89090,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "12661:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12654:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89089,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89088,
                      "name": "IERC20",
                      "nameLocations": [
                        "12654:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "12654:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "12654:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89092,
                  "mutability": "mutable",
                  "name": "amount0",
                  "nameLocation": "12674:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12669:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89091,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12669:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89095,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "12690:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12683:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89094,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89093,
                      "name": "IERC20",
                      "nameLocations": [
                        "12683:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "12683:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "12683:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89097,
                  "mutability": "mutable",
                  "name": "amount1",
                  "nameLocation": "12703:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12698:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89096,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12698:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89099,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "12720:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12712:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12712:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12653:77:121"
            },
            "returnParameters": {
              "id": 89107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89104,
                  "mutability": "mutable",
                  "name": "pushed0",
                  "nameLocation": "12776:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12771:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12771:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89106,
                  "mutability": "mutable",
                  "name": "pushed1",
                  "nameLocation": "12790:7:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89181,
                  "src": "12785:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89105,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12785:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12770:28:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89266,
            "nodeType": "FunctionDefinition",
            "src": "14118:1477:121",
            "nodes": [],
            "body": {
              "id": 89265,
              "nodeType": "Block",
              "src": "14228:1367:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89198,
                      "mutability": "mutable",
                      "name": "toRedeem",
                      "nameLocation": "14277:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89265,
                      "src": "14272:13:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89197,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14272:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89199,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14272:13:121"
                },
                {
                  "assignments": [
                    89201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89201,
                      "mutability": "mutable",
                      "name": "amount_",
                      "nameLocation": "14356:7:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89265,
                      "src": "14351:12:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89200,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14351:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89202,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14351:12:121"
                },
                {
                  "assignments": [
                    89205
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89205,
                      "mutability": "mutable",
                      "name": "memoizer",
                      "nameLocation": "14392:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89265,
                      "src": "14369:31:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                        "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                      },
                      "typeName": {
                        "id": 89204,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89203,
                          "name": "BalanceMemoizer",
                          "nameLocations": [
                            "14369:15:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89565,
                          "src": "14369:15:121"
                        },
                        "referencedDeclaration": 89565,
                        "src": "14369:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89206,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14369:31:121"
                },
                {
                  "assignments": [
                    89208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89208,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "14519:6:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89265,
                      "src": "14514:11:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89207,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14514:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89213,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89210,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89185,
                        "src": "14538:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89211,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89205,
                        "src": "14545:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89209,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89723,
                      "src": "14528:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 89212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14528:26:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14514:40:121"
                },
                {
                  "assignments": [
                    89215
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89215,
                      "mutability": "mutable",
                      "name": "reserveBalance",
                      "nameLocation": "14565:14:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89265,
                      "src": "14560:19:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89214,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14560:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89221,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89217,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89185,
                        "src": "14600:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89218,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89187,
                        "src": "14607:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89219,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89205,
                        "src": "14618:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89216,
                      "name": "_balanceOfReserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88885,
                      "src": "14582:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_address_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 89220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14582:45:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14560:67:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89222,
                      "name": "buffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89208,
                      "src": "14637:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 89223,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89189,
                      "src": "14646:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14637:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 89253,
                    "nodeType": "Block",
                    "src": "15146:355:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 89251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 89240,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89201,
                            "src": "15415:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "id": 89241,
                              "name": "strict",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89191,
                              "src": "15425:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "components": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 89245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 89243,
                                      "name": "buffer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 89208,
                                      "src": "15444:6:121",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">",
                                    "rightExpression": {
                                      "id": 89244,
                                      "name": "reserveBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 89215,
                                      "src": "15453:14:121",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "15444:23:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseExpression": {
                                    "id": 89247,
                                    "name": "buffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89208,
                                    "src": "15487:6:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 89248,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "Conditional",
                                  "src": "15444:49:121",
                                  "trueExpression": {
                                    "id": 89246,
                                    "name": "reserveBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 89215,
                                    "src": "15470:14:121",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 89249,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15443:51:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 89250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "15425:69:121",
                            "trueExpression": {
                              "id": 89242,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89189,
                              "src": "15434:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15415:79:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89252,
                        "nodeType": "ExpressionStatement",
                        "src": "15415:79:121"
                      }
                    ]
                  },
                  "id": 89254,
                  "nodeType": "IfStatement",
                  "src": "14633:868:121",
                  "trueBody": {
                    "id": 89239,
                    "nodeType": "Block",
                    "src": "14654:486:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 89230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 89225,
                            "name": "toRedeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89198,
                            "src": "15037:8:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 89227,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89185,
                                "src": "15067:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 89228,
                                "name": "memoizer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89205,
                                "src": "15074:8:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                  "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                  "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                                }
                              ],
                              "id": 89226,
                              "name": "balanceOfOverlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89681,
                              "src": "15048:18:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                              }
                            },
                            "id": 89229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15048:35:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15037:46:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89231,
                        "nodeType": "ExpressionStatement",
                        "src": "15037:46:121"
                      },
                      {
                        "expression": {
                          "id": 89237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 89232,
                            "name": "amount_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89201,
                            "src": "15091:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "condition": {
                              "id": 89233,
                              "name": "strict",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89191,
                              "src": "15101:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseExpression": {
                              "id": 89235,
                              "name": "reserveBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89215,
                              "src": "15119:14:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 89236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "Conditional",
                            "src": "15101:32:121",
                            "trueExpression": {
                              "id": 89234,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89189,
                              "src": "15110:6:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15091:42:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89238,
                        "nodeType": "ExpressionStatement",
                        "src": "15091:42:121"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89256,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89185,
                        "src": "15524:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89257,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89187,
                        "src": "15531:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89258,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89201,
                        "src": "15542:7:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89259,
                        "name": "toRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89198,
                        "src": "15551:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89260,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89205,
                        "src": "15561:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89255,
                      "name": "redeemAndTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89315,
                      "src": "15506:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,struct HasAaveBalanceMemoizer.BalanceMemoizer memory)"
                      }
                    },
                    "id": 89261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15506:64:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89262,
                  "nodeType": "ExpressionStatement",
                  "src": "15506:64:121"
                },
                {
                  "expression": {
                    "id": 89263,
                    "name": "amount_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89201,
                    "src": "15583:7:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 89196,
                  "id": 89264,
                  "nodeType": "Return",
                  "src": "15576:14:121"
                }
              ]
            },
            "baseFunctions": [
              88381
            ],
            "documentation": {
              "id": 89182,
              "nodeType": "StructuredDocumentation",
              "src": "13712:403:121",
              "text": "@inheritdoc AbstractRouter\n@dev outside a market order (i.e if `__pull__` is not called during offer logic's execution) the `token` balance of this router should be empty.\n This may not be the case when a \"donation\" occurred to this contract or if the maker posthook failed to push funds back to AAVE\n If the donation is large enough to cover the pull request we use the donation funds"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__pull__",
            "nameLocation": "14127:8:121",
            "overrides": {
              "id": 89193,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "14204:8:121"
            },
            "parameters": {
              "id": 89192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89185,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "14143:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89266,
                  "src": "14136:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89184,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89183,
                      "name": "IERC20",
                      "nameLocations": [
                        "14136:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "14136:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "14136:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89187,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "14158:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89266,
                  "src": "14150:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14150:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89189,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14174:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89266,
                  "src": "14169:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89188,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14169:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89191,
                  "mutability": "mutable",
                  "name": "strict",
                  "nameLocation": "14187:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89266,
                  "src": "14182:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 89190,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14182:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14135:59:121"
            },
            "returnParameters": {
              "id": 89196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89195,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 89266,
                  "src": "14222:4:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89194,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14222:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14221:6:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89315,
            "nodeType": "FunctionDefinition",
            "src": "15983:822:121",
            "nodes": [],
            "body": {
              "id": 89314,
              "nodeType": "Block",
              "src": "16153:652:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89283,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89270,
                        "src": "16171:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89284,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89272,
                        "src": "16178:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89285,
                        "name": "amountToTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89274,
                        "src": "16189:16:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89286,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89279,
                        "src": "16207:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89282,
                      "name": "_burnShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89013,
                      "src": "16159:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,struct HasAaveBalanceMemoizer.BalanceMemoizer memory)"
                      }
                    },
                    "id": 89287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16159:57:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89288,
                  "nodeType": "ExpressionStatement",
                  "src": "16159:57:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89289,
                      "name": "amountToRedeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89276,
                      "src": "16369:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 89290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16386:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16369:18:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89302,
                  "nodeType": "IfStatement",
                  "src": "16365:145:121",
                  "trueBody": {
                    "id": 89301,
                    "nodeType": "Block",
                    "src": "16389:121:121",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 89293,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89270,
                              "src": "16466:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 89294,
                              "name": "amountToRedeem",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89276,
                              "src": "16473:14:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 89297,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16497:4:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                    "typeString": "contract AavePooledRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                    "typeString": "contract AavePooledRouter"
                                  }
                                ],
                                "id": 89296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16489:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 89295,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16489:7:121",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 89298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16489:13:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 89292,
                            "name": "_redeem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83268,
                            "src": "16458:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256,address) returns (uint256)"
                            }
                          },
                          "id": 89299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16458:45:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89300,
                        "nodeType": "ExpressionStatement",
                        "src": "16458:45:121"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89306,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89270,
                            "src": "16728:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "expression": {
                              "id": 89307,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "16735:3:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 89308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16739:6:121",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "16735:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 89309,
                            "name": "amountToTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89274,
                            "src": "16747:16:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 89304,
                            "name": "TransferLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "16702:11:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                              "typeString": "type(library TransferLib)"
                            }
                          },
                          "id": 89305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16714:13:121",
                          "memberName": "transferToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4076,
                          "src": "16702:25:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20,address,uint256) returns (bool)"
                          }
                        },
                        "id": 89310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16702:62:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41617665506f6f6c6564526f757465722f77697468647261774661696c6564",
                        "id": 89311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16766:33:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca6cc63c3fca2cf82fa8521afb629fb9c012d37e6692d4fd430ff7353054f770",
                          "typeString": "literal_string \"AavePooledRouter/withdrawFailed\""
                        },
                        "value": "AavePooledRouter/withdrawFailed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca6cc63c3fca2cf82fa8521afb629fb9c012d37e6692d4fd430ff7353054f770",
                          "typeString": "literal_string \"AavePooledRouter/withdrawFailed\""
                        }
                      ],
                      "id": 89303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16694:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16694:106:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89313,
                  "nodeType": "ExpressionStatement",
                  "src": "16694:106:121"
                }
              ]
            },
            "documentation": {
              "id": 89267,
              "nodeType": "StructuredDocumentation",
              "src": "15599:381:121",
              "text": "@notice redeems some funds from AAVE pool and transfer some amount to msg.sender.\n@param token the asset to transfer\n@param reserveId the shares on which funds are being drawn\n@param amountToTransfer final amount of asset to transfer\n@param amountToRedeem funds that need to be pulled from AAVE for final transfer to succeed\n@param memoizer the memoizer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemAndTransfer",
            "nameLocation": "15992:17:121",
            "parameters": {
              "id": 89280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89270,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "16022:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89315,
                  "src": "16015:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89269,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89268,
                      "name": "IERC20",
                      "nameLocations": [
                        "16015:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "16015:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "16015:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89272,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "16041:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89315,
                  "src": "16033:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16033:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89274,
                  "mutability": "mutable",
                  "name": "amountToTransfer",
                  "nameLocation": "16061:16:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89315,
                  "src": "16056:21:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89273,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16056:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89276,
                  "mutability": "mutable",
                  "name": "amountToRedeem",
                  "nameLocation": "16088:14:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89315,
                  "src": "16083:19:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16083:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89279,
                  "mutability": "mutable",
                  "name": "memoizer",
                  "nameLocation": "16131:8:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89315,
                  "src": "16108:31:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                    "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                  },
                  "typeName": {
                    "id": 89278,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89277,
                      "name": "BalanceMemoizer",
                      "nameLocations": [
                        "16108:15:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89565,
                      "src": "16108:15:121"
                    },
                    "referencedDeclaration": 89565,
                    "src": "16108:15:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                      "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16009:134:121"
            },
            "returnParameters": {
              "id": 89281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16153:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89376,
            "nodeType": "FunctionDefinition",
            "src": "17096:403:121",
            "nodes": [],
            "body": {
              "id": 89375,
              "nodeType": "Block",
              "src": "17179:320:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    89330
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89330,
                      "mutability": "mutable",
                      "name": "memoizer",
                      "nameLocation": "17208:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89375,
                      "src": "17185:31:121",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                        "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                      },
                      "typeName": {
                        "id": 89329,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89328,
                          "name": "BalanceMemoizer",
                          "nameLocations": [
                            "17185:15:121"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 89565,
                          "src": "17185:15:121"
                        },
                        "referencedDeclaration": 89565,
                        "src": "17185:15:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_storage_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89331,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17185:31:121"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 89332,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89323,
                      "src": "17226:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 89335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17241:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 89334,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17241:4:121",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 89333,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "17236:4:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 89336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17236:10:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 89337,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "17247:3:121",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "17236:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17226:24:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 89348,
                  "nodeType": "IfStatement",
                  "src": "17222:99:121",
                  "trueBody": {
                    "id": 89347,
                    "nodeType": "Block",
                    "src": "17252:69:121",
                    "statements": [
                      {
                        "expression": {
                          "id": 89345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 89339,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89323,
                            "src": "17260:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 89341,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89319,
                                "src": "17287:5:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 89342,
                                "name": "reserveId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89321,
                                "src": "17294:9:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 89343,
                                "name": "memoizer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 89330,
                                "src": "17305:8:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                  "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                                  "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                                }
                              ],
                              "id": 89340,
                              "name": "_balanceOfReserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88885,
                              "src": "17269:17:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_address_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (contract IERC20,address,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                              }
                            },
                            "id": 89344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17269:45:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17260:54:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 89346,
                        "nodeType": "ExpressionStatement",
                        "src": "17260:54:121"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    89350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89350,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "17331:6:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89375,
                      "src": "17326:11:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89349,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17326:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89355,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 89352,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89319,
                        "src": "17350:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89353,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89330,
                        "src": "17357:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89351,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89723,
                      "src": "17340:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,struct HasAaveBalanceMemoizer.BalanceMemoizer memory) view returns (uint256)"
                      }
                    },
                    "id": 89354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17340:26:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17326:40:121"
                },
                {
                  "assignments": [
                    89357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89357,
                      "mutability": "mutable",
                      "name": "toRedeem",
                      "nameLocation": "17377:8:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 89375,
                      "src": "17372:13:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89356,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17372:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89366,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89358,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89350,
                        "src": "17388:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 89359,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89323,
                        "src": "17397:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17388:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 89362,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89323,
                        "src": "17410:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 89363,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89350,
                        "src": "17419:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "17410:15:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "17388:37:121",
                    "trueExpression": {
                      "hexValue": "30",
                      "id": 89361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17406:1:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17372:53:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89368,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89319,
                        "src": "17449:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 89369,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89321,
                        "src": "17456:9:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89370,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89323,
                        "src": "17467:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89371,
                        "name": "toRedeem",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89357,
                        "src": "17475:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 89372,
                        "name": "memoizer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89330,
                        "src": "17485:8:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_BalanceMemoizer_$89565_memory_ptr",
                          "typeString": "struct HasAaveBalanceMemoizer.BalanceMemoizer memory"
                        }
                      ],
                      "id": 89367,
                      "name": "redeemAndTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89315,
                      "src": "17431:17:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_uint256_$_t_struct$_BalanceMemoizer_$89565_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,address,uint256,uint256,struct HasAaveBalanceMemoizer.BalanceMemoizer memory)"
                      }
                    },
                    "id": 89373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17431:63:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89374,
                  "nodeType": "ExpressionStatement",
                  "src": "17431:63:121"
                }
              ]
            },
            "documentation": {
              "id": 89316,
              "nodeType": "StructuredDocumentation",
              "src": "16809:284:121",
              "text": "@notice withdraw funds from the pool on behalf of some reserve id\n@param token the asset to withdraw\n@param reserveId the identifier of the share holder\n@param amount the amount to withdraw. Use type(uint).max to require withdrawal of the total balance of the caller"
            },
            "functionSelector": "d9caed12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 89326,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89325,
                  "name": "onlyBound",
                  "nameLocations": [
                    "17169:9:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88260,
                  "src": "17169:9:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "17169:9:121"
              }
            ],
            "name": "withdraw",
            "nameLocation": "17105:8:121",
            "parameters": {
              "id": 89324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89319,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17121:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89376,
                  "src": "17114:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89318,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89317,
                      "name": "IERC20",
                      "nameLocations": [
                        "17114:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "17114:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "17114:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89321,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "17136:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89376,
                  "src": "17128:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17128:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89323,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17152:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89376,
                  "src": "17147:11:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89322,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17147:4:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17113:46:121"
            },
            "returnParameters": {
              "id": 89327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17179:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89413,
            "nodeType": "FunctionDefinition",
            "src": "17535:518:121",
            "nodes": [],
            "body": {
              "id": 89412,
              "nodeType": "Block",
              "src": "17614:439:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 89386,
                    "name": "reserveId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 89382,
                    "src": "17761:9:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89387,
                  "nodeType": "ExpressionStatement",
                  "src": "17761:9:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89390,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89380,
                            "src": "17842:5:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 89389,
                          "name": "checkAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83405,
                          "src": "17831:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20) view returns (bool)"
                          }
                        },
                        "id": 89391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17831:17:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41617665506f6f6c6564526f757465722f746f6b656e4e6f744c656e6461626c654f6e41617665",
                        "id": 89392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17850:41:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c1a796019cbc9feb347f525f7397d48e3acbc169c969c492bbabc18d94439cf4",
                          "typeString": "literal_string \"AavePooledRouter/tokenNotLendableOnAave\""
                        },
                        "value": "AavePooledRouter/tokenNotLendableOnAave"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c1a796019cbc9feb347f525f7397d48e3acbc169c969c492bbabc18d94439cf4",
                          "typeString": "literal_string \"AavePooledRouter/tokenNotLendableOnAave\""
                        }
                      ],
                      "id": 89388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17823:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17823:69:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89394,
                  "nodeType": "ExpressionStatement",
                  "src": "17823:69:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 89400,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17983:4:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                    "typeString": "contract AavePooledRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                    "typeString": "contract AavePooledRouter"
                                  }
                                ],
                                "id": 89399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17975:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 89398,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17975:7:121",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 89401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17975:13:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 89404,
                                  "name": "POOL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 83098,
                                  "src": "17998:4:121",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IPool_$90850",
                                    "typeString": "contract IPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IPool_$90850",
                                    "typeString": "contract IPool"
                                  }
                                ],
                                "id": 89403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17990:7:121",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 89402,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17990:7:121",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 89405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17990:13:121",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 89396,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89380,
                              "src": "17959:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 89397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17965:9:121",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "17959:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 89406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17959:45:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 89407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18007:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "17959:49:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41617665506f6f6c6564526f757465722f6861734e6f74417070726f766564506f6f6c",
                        "id": 89409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18010:37:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5f0941851676be7aca3a1813c92ee76e0601d3c3b9b8b7e89ea1a1d7865f0af",
                          "typeString": "literal_string \"AavePooledRouter/hasNotApprovedPool\""
                        },
                        "value": "AavePooledRouter/hasNotApprovedPool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5f0941851676be7aca3a1813c92ee76e0601d3c3b9b8b7e89ea1a1d7865f0af",
                          "typeString": "literal_string \"AavePooledRouter/hasNotApprovedPool\""
                        }
                      ],
                      "id": 89395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17898:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17898:150:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89411,
                  "nodeType": "ExpressionStatement",
                  "src": "17898:150:121"
                }
              ]
            },
            "baseFunctions": [
              88587
            ],
            "documentation": {
              "id": 89377,
              "nodeType": "StructuredDocumentation",
              "src": "17503:29:121",
              "text": "@inheritdoc AbstractRouter"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__checkList__",
            "nameLocation": "17544:13:121",
            "overrides": {
              "id": 89384,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17605:8:121"
            },
            "parameters": {
              "id": 89383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89380,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "17565:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89413,
                  "src": "17558:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89378,
                      "name": "IERC20",
                      "nameLocations": [
                        "17558:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "17558:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "17558:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89382,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "17580:9:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89413,
                  "src": "17572:17:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89381,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17572:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17557:33:121"
            },
            "returnParameters": {
              "id": 89385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17614:0:121"
            },
            "scope": 89541,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 89431,
            "nodeType": "FunctionDefinition",
            "src": "18089:110:121",
            "nodes": [],
            "body": {
              "id": 89430,
              "nodeType": "Block",
              "src": "18151:48:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89422,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89417,
                        "src": "18172:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 89425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18184:4:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 89424,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "18184:4:121",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 89423,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "18179:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 89426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18179:10:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 89427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "18190:3:121",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "18179:14:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 89421,
                      "name": "_approveLender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83160,
                      "src": "18157:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256)"
                      }
                    },
                    "id": 89428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18157:37:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89429,
                  "nodeType": "ExpressionStatement",
                  "src": "18157:37:121"
                }
              ]
            },
            "baseFunctions": [
              88611
            ],
            "documentation": {
              "id": 89414,
              "nodeType": "StructuredDocumentation",
              "src": "18057:29:121",
              "text": "@inheritdoc AbstractRouter"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__activate__",
            "nameLocation": "18098:12:121",
            "overrides": {
              "id": 89419,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18142:8:121"
            },
            "parameters": {
              "id": 89418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89417,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "18118:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89431,
                  "src": "18111:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89416,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89415,
                      "name": "IERC20",
                      "nameLocations": [
                        "18111:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "18111:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "18111:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18110:14:121"
            },
            "returnParameters": {
              "id": 89420,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18151:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 89447,
            "nodeType": "FunctionDefinition",
            "src": "18393:112:121",
            "nodes": [],
            "body": {
              "id": 89446,
              "nodeType": "Block",
              "src": "18470:35:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89442,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89435,
                        "src": "18491:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 89443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18498:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 89441,
                      "name": "_approveLender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83160,
                      "src": "18476:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256)"
                      }
                    },
                    "id": 89444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18476:24:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89445,
                  "nodeType": "ExpressionStatement",
                  "src": "18476:24:121"
                }
              ]
            },
            "documentation": {
              "id": 89432,
              "nodeType": "StructuredDocumentation",
              "src": "18203:187:121",
              "text": "@notice revokes pool approval for a certain asset. This router will no longer be able to deposit on AAVE Pool\n@param token the address of the asset whose approval must be revoked."
            },
            "functionSelector": "94d4d058",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 89438,
                    "name": "aaveManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88681,
                    "src": "18457:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 89439,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89437,
                  "name": "onlyCaller",
                  "nameLocations": [
                    "18446:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89784,
                  "src": "18446:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "18446:23:121"
              }
            ],
            "name": "revokeLenderApproval",
            "nameLocation": "18402:20:121",
            "parameters": {
              "id": 89436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89435,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "18430:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89447,
                  "src": "18423:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89434,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89433,
                      "name": "IERC20",
                      "nameLocations": [
                        "18423:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "18423:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "18423:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18422:14:121"
            },
            "returnParameters": {
              "id": 89440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18470:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89462,
            "nodeType": "FunctionDefinition",
            "src": "18625:96:121",
            "nodes": [],
            "body": {
              "id": 89461,
              "nodeType": "Block",
              "src": "18692:29:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89458,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89451,
                        "src": "18710:5:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 89457,
                      "name": "_exitMarket",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83178,
                      "src": "18698:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 89459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18698:18:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89460,
                  "nodeType": "ExpressionStatement",
                  "src": "18698:18:121"
                }
              ]
            },
            "documentation": {
              "id": 89448,
              "nodeType": "StructuredDocumentation",
              "src": "18509:113:121",
              "text": "@notice prevents AAVE from using a certain asset as collateral for lending\n@param token the asset address"
            },
            "functionSelector": "ede4edd0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 89454,
                    "name": "aaveManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88681,
                    "src": "18679:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 89455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89453,
                  "name": "onlyCaller",
                  "nameLocations": [
                    "18668:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89784,
                  "src": "18668:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "18668:23:121"
              }
            ],
            "name": "exitMarket",
            "nameLocation": "18634:10:121",
            "parameters": {
              "id": 89452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89451,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "18652:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89462,
                  "src": "18645:12:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 89450,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 89449,
                      "name": "IERC20",
                      "nameLocations": [
                        "18645:6:121"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "18645:6:121"
                    },
                    "referencedDeclaration": 88,
                    "src": "18645:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18644:14:121"
            },
            "returnParameters": {
              "id": 89456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18692:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89478,
            "nodeType": "FunctionDefinition",
            "src": "18899:112:121",
            "nodes": [],
            "body": {
              "id": 89477,
              "nodeType": "Block",
              "src": "18979:32:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89474,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89467,
                        "src": "18999:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      ],
                      "id": 89473,
                      "name": "_enterMarkets",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83212,
                      "src": "18985:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr_$returns$__$",
                        "typeString": "function (contract IERC20[] calldata)"
                      }
                    },
                    "id": 89475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18985:21:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89476,
                  "nodeType": "ExpressionStatement",
                  "src": "18985:21:121"
                }
              ]
            },
            "documentation": {
              "id": 89463,
              "nodeType": "StructuredDocumentation",
              "src": "18725:171:121",
              "text": "@notice re-allows AAVE to use certain assets as collateral for lending\n@dev market is automatically entered at first deposit\n@param tokens the asset addresses"
            },
            "functionSelector": "7cc4fc05",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 89470,
                    "name": "aaveManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88681,
                    "src": "18966:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 89471,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89469,
                  "name": "onlyCaller",
                  "nameLocations": [
                    "18955:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89784,
                  "src": "18955:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "18955:23:121"
              }
            ],
            "name": "enterMarket",
            "nameLocation": "18908:11:121",
            "parameters": {
              "id": 89468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89467,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "18938:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89478,
                  "src": "18920:24:121",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89465,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 89464,
                        "name": "IERC20",
                        "nameLocations": [
                          "18920:6:121"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 88,
                        "src": "18920:6:121"
                      },
                      "referencedDeclaration": 88,
                      "src": "18920:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 89466,
                    "nodeType": "ArrayTypeName",
                    "src": "18920:8:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18919:26:121"
            },
            "returnParameters": {
              "id": 89472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18979:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89501,
            "nodeType": "FunctionDefinition",
            "src": "19386:215:121",
            "nodes": [],
            "body": {
              "id": 89500,
              "nodeType": "Block",
              "src": "19550:51:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89495,
                        "name": "assets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89482,
                        "src": "19577:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 89496,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19585:3:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 89497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19589:6:121",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19585:10:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89494,
                      "name": "_claimRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83378,
                      "src": "19563:13:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address[] calldata,address) returns (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 89498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19563:33:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 89493,
                  "id": 89499,
                  "nodeType": "Return",
                  "src": "19556:40:121"
                }
              ]
            },
            "documentation": {
              "id": 89479,
              "nodeType": "StructuredDocumentation",
              "src": "19015:368:121",
              "text": "@notice allows AAVE manager to claim the rewards attributed to this router by AAVE\n@param assets the list of overlyings (aToken, debtToken) whose rewards should be claimed\n@dev if some rewards are eligible they are sent to `aaveManager`\n@return rewardList the addresses of the claimed rewards\n@return claimedAmounts the amount of claimed rewards"
            },
            "functionSelector": "f9f031df",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 89485,
                    "name": "aaveManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88681,
                    "src": "19463:11:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 89486,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 89484,
                  "name": "onlyCaller",
                  "nameLocations": [
                    "19452:10:121"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89784,
                  "src": "19452:10:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "19452:23:121"
              }
            ],
            "name": "claimRewards",
            "nameLocation": "19395:12:121",
            "parameters": {
              "id": 89483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89482,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "19427:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89501,
                  "src": "19408:25:121",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89480,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19408:7:121",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 89481,
                    "nodeType": "ArrayTypeName",
                    "src": "19408:9:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19407:27:121"
            },
            "returnParameters": {
              "id": 89493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89489,
                  "mutability": "mutable",
                  "name": "rewardList",
                  "nameLocation": "19506:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89501,
                  "src": "19489:27:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89487,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "19489:7:121",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 89488,
                    "nodeType": "ArrayTypeName",
                    "src": "19489:9:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89492,
                  "mutability": "mutable",
                  "name": "claimedAmounts",
                  "nameLocation": "19532:14:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89501,
                  "src": "19518:28:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 89490,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "19518:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 89491,
                    "nodeType": "ArrayTypeName",
                    "src": "19518:6:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19488:59:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89540,
            "nodeType": "FunctionDefinition",
            "src": "19796:298:121",
            "nodes": [],
            "body": {
              "id": 89539,
              "nodeType": "Block",
              "src": "19849:245:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 89517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 89512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 89508,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "19863:3:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 89509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19867:6:121",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "19863:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 89510,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89813,
                              "src": "19877:5:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 89511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19877:7:121",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19863:21:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 89516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 89513,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "19888:3:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 89514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19892:6:121",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "19888:10:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 89515,
                            "name": "aaveManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88681,
                            "src": "19902:11:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19888:25:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "19863:50:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c6c65642f496e76616c6964",
                        "id": 89518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19915:26:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                          "typeString": "literal_string \"AccessControlled/Invalid\""
                        },
                        "value": "AccessControlled/Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                          "typeString": "literal_string \"AccessControlled/Invalid\""
                        }
                      ],
                      "id": 89507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19855:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19855:87:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89520,
                  "nodeType": "ExpressionStatement",
                  "src": "19855:87:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 89527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89522,
                          "name": "aaveManager_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89504,
                          "src": "19956:12:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 89525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19980:1:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 89524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19972:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89523,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19972:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19972:10:121",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19956:26:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41617665506f6f6c6564526573657276652f3078416176654d616e61676572",
                        "id": 89528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19984:33:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93e32f741418381de07cee8a0153e90bd89e5503ac7db3796c38a6b491a29e75",
                          "typeString": "literal_string \"AavePooledReserve/0xAaveManager\""
                        },
                        "value": "AavePooledReserve/0xAaveManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93e32f741418381de07cee8a0153e90bd89e5503ac7db3796c38a6b491a29e75",
                          "typeString": "literal_string \"AavePooledReserve/0xAaveManager\""
                        }
                      ],
                      "id": 89521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19948:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 89529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19948:70:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89530,
                  "nodeType": "ExpressionStatement",
                  "src": "19948:70:121"
                },
                {
                  "expression": {
                    "id": 89533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89531,
                      "name": "aaveManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88681,
                      "src": "20024:11:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89532,
                      "name": "aaveManager_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89504,
                      "src": "20038:12:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "20024:26:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 89534,
                  "nodeType": "ExpressionStatement",
                  "src": "20024:26:121"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 89536,
                        "name": "aaveManager_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89504,
                        "src": "20076:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89535,
                      "name": "SetAaveManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88686,
                      "src": "20061:14:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 89537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20061:28:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89538,
                  "nodeType": "EmitStatement",
                  "src": "20056:33:121"
                }
              ]
            },
            "documentation": {
              "id": 89502,
              "nodeType": "StructuredDocumentation",
              "src": "19605:188:121",
              "text": "@notice sets a new AAVE manager\n@param aaveManager_ the new address of the AAVE manager\n@dev if any reward is active for pure lenders, `aaveManager` will be able to claim them"
            },
            "functionSelector": "04e02903",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAaveManager",
            "nameLocation": "19805:14:121",
            "parameters": {
              "id": 89505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89504,
                  "mutability": "mutable",
                  "name": "aaveManager_",
                  "nameLocation": "19828:12:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 89540,
                  "src": "19820:20:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 89503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19820:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19819:22:121"
            },
            "returnParameters": {
              "id": 89506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19849:0:121"
            },
            "scope": 89541,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88675,
              "name": "HasAaveBalanceMemoizer",
              "nameLocations": [
                "2297:22:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89724,
              "src": "2297:22:121"
            },
            "id": 88676,
            "nodeType": "InheritanceSpecifier",
            "src": "2297:22:121"
          },
          {
            "baseName": {
              "id": 88677,
              "name": "MonoRouter",
              "nameLocations": [
                "2321:10:121"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88662,
              "src": "2321:10:121"
            },
            "id": 88678,
            "nodeType": "InheritanceSpecifier",
            "src": "2321:10:121"
          }
        ],
        "canonicalName": "AavePooledRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 88674,
          "nodeType": "StructuredDocumentation",
          "src": "306:1961:121",
          "text": "@title Router acting as a liquidity reserve on AAVE for multiple depositors (possibly coming from different maker contracts).\n@notice maker contracts deposit/withdraw their user(s) fund(s) on this router, which maintains an accounting of shares attributed to each depositor\n@dev deposit is made via `pushAndSupply`, and withdraw is made via `pull` with `strict=true`.\n@dev this router ensures an optimal gas cost complexity when the following strategy is used:\n * on the offer logic side:\n    * in `makerExecute`, check whether logic is the first caller to the router. This is done by checking whether the balance of outbound tokens of the router is below the required amount. If so the logic should return a special bytes32 (say `\"firstCaller\"`) to makerPosthook.\n    * in `__put__`  the logic stores incoming liquidity on the strat balance\n    * in `__get__` the logic pulls liquidity from the router in a non strict manner\n    * in __posthookSuccess|Fallback__ the logic pushes both inbound and outbound tokens to the router. If message from makerExecute is `\"firstCaller\"`, the logic additionally asks the router to supply all its outbound and inbound tokens to AAVE. This can be done is a single step by calling `pushAndSupply`\n * on the router side:\n    * `__pull__`  checks whether local balance of token is below required amount. If so it pulls all its funds from AAVE (this includes funds that do not belong to the owner of the calling contract) and sends to caller all the owner's reserve (according to the shares attributed to the owner - except in case of liquidity sharing where only requested amount is transferred). This router then decreases owner's shares accordingly. (note that if AAVE has no liquidity crisis, then the owner's shares will be temporarily 0)\n    * `__push__` transfers the requested amount of tokens from the calling maker contract and increases owner's shares, but does not supply on AAVE"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89541,
          88662,
          88623,
          89841,
          89724,
          83406
        ],
        "name": "AavePooledRouter",
        "nameLocation": "2277:16:121",
        "scope": 89542,
        "usedErrors": [],
        "usedEvents": [
          88284,
          88289,
          88686,
          88698,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 121
}