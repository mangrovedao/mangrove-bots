{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "SetIndexMapping",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetLength",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "SetReserveId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE_ID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "Offer",
          "name": "offer",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "indexOfOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "offerIdOfIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "offeredVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "volume",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "retractOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "RESERVE_ID()": "fbc7d10b",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "checkList(address[])": "03eb17e2",
    "getOffer(uint8,uint256)": "7692c328",
    "indexOfOfferId(uint8,uint256)": "ea0f394d",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "offerIdOfIndex(uint8,uint256)": "bfc353f9",
    "offeredVolume(uint8)": "d2e498fe",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "retractOffers(uint256,uint256)": "a2e241af",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setRouter(address)": "c0d78655",
    "withdrawFromMangrove(uint256,address)": "7144df24"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"SetIndexMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetLength\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"SetReserveId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"indexOfOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"offerIdOfIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"offeredVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"retractOffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetIndexMapping(uint8,uint256,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\",\"offerId\":\"the Mangrove offer id.\"}},\"SetLength(uint256)\":{\"params\":{\"value\":\"the length.\"}},\"SetReserveId(address)\":{\"params\":{\"reserveId\":\"identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"constructor\":{\"params\":{\"gasreq\":\"the gasreq to use for offers\",\"mgv\":\"The Mangrove deployment.\",\"reserveId\":\"identifier of this contract's reserve when using a router.\"}},\"getOffer(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type.\",\"index\":\"the index.\"},\"returns\":{\"offer\":\"the Mangrove offer.\"}},\"indexOfOfferId(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"offerId\":\"the Mangrove offer id.\"},\"returns\":{\"index\":\"the index.\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"offerIdOfIndex(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\"},\"returns\":{\"offerId\":\"the Mangrove offer id.\"}},\"offeredVolume(uint8)\":{\"details\":\"function is very gas costly, for external calls only.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"volume\":\"the total gives of all offers of the offer type.\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"retractOffers(uint256,uint256)\":{\"details\":\"use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.\",\"params\":{\"from\":\"the start index.\",\"to\":\"the end index.\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}}},\"title\":\"`Direct` strat with an indexed collection of bids and asks which can be populated according to a desired base and quote distribution for gives and wants.\",\"version\":1},\"userdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"PopulateEnd()\":{\"notice\":\"logs the end of a call to populateBy emitting this, an indexer will know that the previous PopulateStart event is over.\"},\"PopulateStart()\":{\"notice\":\"logs the start of a call to populateBy emitting this, an indexer will be able to know that the following events are in the context of populate.\"},\"RetractEnd()\":{\"notice\":\"logs the end of a call to retractOffersBy emitting this, an indexer will know that the previous RetractStart event is over.\"},\"RetractStart()\":{\"notice\":\"logs the start of a call to retractOffersBy emitting this, an indexer will be able to know that the following events are in the context of retract.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetIndexMapping(uint8,uint256,uint256)\":{\"notice\":\"a new offer of type `ba` with `offerId` was created at price `index`By emitting this data, an indexer will be able to keep track of what offer has what index.\"},\"SetLength(uint256)\":{\"notice\":\"the length of the index has been set.By emitting this data, an indexer will be able to keep track of what length is used.\"},\"SetReserveId(address)\":{\"notice\":\"`reserveId` is set in the constructorby emitting this event, an indexer will be able to keep track of what reserve is used.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"}},\"kind\":\"user\",\"methods\":{\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"RESERVE_ID()\":{\"notice\":\"identifier of this contract's reserve when using a router\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"constructor\":{\"notice\":\"Constructor\"},\"getOffer(uint8,uint256)\":{\"notice\":\"gets the Mangrove offer at the given index for the offer type.\"},\"indexOfOfferId(uint8,uint256)\":{\"notice\":\"Maps an offer type and Mangrove offer id to index.\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"offerIdOfIndex(uint8,uint256)\":{\"notice\":\"maps index of offers to offer id on Mangrove.\"},\"offeredVolume(uint8)\":{\"notice\":\"gets the total gives of all offers of the offer type.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"retractOffers(uint256,uint256)\":{\"notice\":\"retracts and deprovisions offers of the distribution interval `[from, to[`.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol\":\"DirectWithBidsAndAsksDistribution\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol\":{\"keccak256\":\"0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f\",\"dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol\":{\"keccak256\":\"0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510\",\"dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol\":{\"keccak256\":\"0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd\",\"dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateStart",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetIndexMapping",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetLength",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetReserveId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RESERVE_ID",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexOfOfferId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerIdOfIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offeredVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "volume",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "constructor": {
            "params": {
              "gasreq": "the gasreq to use for offers",
              "mgv": "The Mangrove deployment.",
              "reserveId": "identifier of this contract's reserve when using a router."
            }
          },
          "getOffer(uint8,uint256)": {
            "params": {
              "ba": "the offer type.",
              "index": "the index."
            },
            "returns": {
              "offer": "the Mangrove offer."
            }
          },
          "indexOfOfferId(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "offerId": "the Mangrove offer id."
            },
            "returns": {
              "index": "the index."
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "offerIdOfIndex(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "index": "the index"
            },
            "returns": {
              "offerId": "the Mangrove offer id."
            }
          },
          "offeredVolume(uint8)": {
            "details": "function is very gas costly, for external calls only.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "volume": "the total gives of all offers of the offer type."
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "retractOffers(uint256,uint256)": {
            "details": "use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.",
            "params": {
              "from": "the start index.",
              "to": "the end index."
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "RESERVE_ID()": {
            "notice": "identifier of this contract's reserve when using a router"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "getOffer(uint8,uint256)": {
            "notice": "gets the Mangrove offer at the given index for the offer type."
          },
          "indexOfOfferId(uint8,uint256)": {
            "notice": "Maps an offer type and Mangrove offer id to index."
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "offerIdOfIndex(uint8,uint256)": {
            "notice": "maps index of offers to offer id on Mangrove."
          },
          "offeredVolume(uint8)": {
            "notice": "gets the total gives of all offers of the offer type."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "retractOffers(uint256,uint256)": {
            "notice": "retracts and deprovisions offers of the distribution interval `[from, to[`."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol": "DirectWithBidsAndAsksDistribution"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol": {
        "keccak256": "0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1",
        "urls": [
          "bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f",
          "dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol": {
        "keccak256": "0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09",
        "urls": [
          "bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510",
          "dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol": {
        "keccak256": "0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa",
        "urls": [
          "bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd",
          "dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol",
    "id": 87049,
    "exportedSymbols": {
      "Direct": [
        85066
      ],
      "DirectWithBidsAndAsksDistribution": [
        87048
      ],
      "HasIndexedBidsAndAsks": [
        87442
      ],
      "IMangrove": [
        54127
      ],
      "Local": [
        64937
      ],
      "OLKey": [
        55875
      ],
      "Offer": [
        66949
      ],
      "OfferType": [
        87910
      ],
      "Tick": [
        5280
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:8801:113",
    "nodes": [
      {
        "id": 86561,
        "nodeType": "PragmaDirective",
        "src": "41:24:113",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 86563,
        "nodeType": "ImportDirective",
        "src": "67:47:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86562,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "75:5:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86565,
        "nodeType": "ImportDirective",
        "src": "115:82:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol",
        "file": "@mgv-strats/src/strategies/offer_maker/abstract/Direct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 85067,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86564,
              "name": "Direct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85066,
              "src": "123:6:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86567,
        "nodeType": "ImportDirective",
        "src": "198:52:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol",
        "file": "./TradesBaseQuotePair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 88102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86566,
              "name": "OfferType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87910,
              "src": "206:9:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86569,
        "nodeType": "ImportDirective",
        "src": "251:66:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol",
        "file": "./HasIndexedBidsAndAsks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 87443,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86568,
              "name": "HasIndexedBidsAndAsks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87442,
              "src": "259:21:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86571,
        "nodeType": "ImportDirective",
        "src": "318:49:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
        "file": "@mgv/src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 54128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86570,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54127,
              "src": "326:9:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86574,
        "nodeType": "ImportDirective",
        "src": "368:54:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86572,
              "name": "Local",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64937,
              "src": "376:5:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86573,
              "name": "Offer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66949,
              "src": "383:5:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86576,
        "nodeType": "ImportDirective",
        "src": "423:47:113",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol",
        "file": "@mgv/lib/core/TickLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87049,
        "sourceUnit": 6402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86575,
              "name": "Tick",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5280,
              "src": "431:4:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87048,
        "nodeType": "ContractDefinition",
        "src": "636:8205:113",
        "nodes": [
          {
            "id": 86584,
            "nodeType": "EventDefinition",
            "src": "896:22:113",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 86582,
              "nodeType": "StructuredDocumentation",
              "src": "725:168:113",
              "text": "@notice logs the start of a call to populate\n@notice By emitting this, an indexer will be able to know that the following events are in the context of populate."
            },
            "eventSelector": "aab0a16d4cef87072f3977d7f1c066be401e0e6486526674f5f6172d42703db1",
            "name": "PopulateStart",
            "nameLocation": "902:13:113",
            "parameters": {
              "id": 86583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:2:113"
            }
          },
          {
            "id": 86587,
            "nodeType": "EventDefinition",
            "src": "1068:20:113",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 86585,
              "nodeType": "StructuredDocumentation",
              "src": "921:144:113",
              "text": "@notice logs the end of a call to populate\n@notice By emitting this, an indexer will know that the previous PopulateStart event is over."
            },
            "eventSelector": "ac65490b93de6b3189ca1e1653852249eb8680e816c258cff6ccf73d8501d3d0",
            "name": "PopulateEnd",
            "nameLocation": "1074:11:113",
            "parameters": {
              "id": 86586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:2:113"
            }
          },
          {
            "id": 86590,
            "nodeType": "EventDefinition",
            "src": "1267:21:113",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 86588,
              "nodeType": "StructuredDocumentation",
              "src": "1092:172:113",
              "text": "@notice logs the start of a call to retractOffers\n@notice By emitting this, an indexer will be able to know that the following events are in the context of retract."
            },
            "eventSelector": "97714c1c48a0b9a1a347710cb6a62f056f5a811d4006655e3b41959e1e72a409",
            "name": "RetractStart",
            "nameLocation": "1273:12:113",
            "parameters": {
              "id": 86589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1285:2:113"
            }
          },
          {
            "id": 86593,
            "nodeType": "EventDefinition",
            "src": "1442:19:113",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 86591,
              "nodeType": "StructuredDocumentation",
              "src": "1291:148:113",
              "text": "@notice logs the end of a call to retractOffers\n@notice By emitting this, an indexer will know that the previous RetractStart event is over."
            },
            "eventSelector": "a9bc12cd7db30bdfe60fece3ec52cfa7c8d60e396e2ea5df439a7d458f05f9b6",
            "name": "RetractEnd",
            "nameLocation": "1448:10:113",
            "parameters": {
              "id": 86592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1458:2:113"
            }
          },
          {
            "id": 86611,
            "nodeType": "FunctionDefinition",
            "src": "1660:103:113",
            "nodes": [],
            "body": {
              "id": 86610,
              "nodeType": "Block",
              "src": "1761:2:113",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 86594,
              "nodeType": "StructuredDocumentation",
              "src": "1465:192:113",
              "text": "@notice Constructor\n@param mgv The Mangrove deployment.\n@param gasreq the gasreq to use for offers\n@param reserveId identifier of this contract's reserve when using a router."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86604,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86597,
                    "src": "1726:3:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "id": 86605,
                    "name": "NO_ROUTER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 81639,
                    "src": "1731:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    }
                  },
                  {
                    "id": 86606,
                    "name": "gasreq",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86599,
                    "src": "1742:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 86607,
                    "name": "reserveId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86601,
                    "src": "1750:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 86608,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86603,
                  "name": "Direct",
                  "nameLocations": [
                    "1719:6:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 85066,
                  "src": "1719:6:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "1719:41:113"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86597,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "1682:3:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86611,
                  "src": "1672:13:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 86596,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86595,
                      "name": "IMangrove",
                      "nameLocations": [
                        "1672:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "1672:9:113"
                    },
                    "referencedDeclaration": 54127,
                    "src": "1672:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86599,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "1692:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86611,
                  "src": "1687:11:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86598,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86601,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "1708:9:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86611,
                  "src": "1700:17:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:47:113"
            },
            "returnParameters": {
              "id": 86609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1761:0:113"
            },
            "scope": 87048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86620,
            "nodeType": "StructDefinition",
            "src": "2009:77:113",
            "nodes": [],
            "canonicalName": "DirectWithBidsAndAsksDistribution.DistributionOffer",
            "documentation": {
              "id": 86612,
              "nodeType": "StructuredDocumentation",
              "src": "1767:239:113",
              "text": "@param index the index of the offer\n@param tick the tick for the index (the tick price of base per quote for bids and quote per base for asks)\n@param gives the gives for the index (the `quote` for bids and the `base` for asks)"
            },
            "members": [
              {
                "constant": false,
                "id": 86614,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "2045:5:113",
                "nodeType": "VariableDeclaration",
                "scope": 86620,
                "src": "2040:10:113",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86613,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2040:4:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86617,
                "mutability": "mutable",
                "name": "tick",
                "nameLocation": "2061:4:113",
                "nodeType": "VariableDeclaration",
                "scope": 86620,
                "src": "2056:9:113",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                  "typeString": "Tick"
                },
                "typeName": {
                  "id": 86616,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 86615,
                    "name": "Tick",
                    "nameLocations": [
                      "2056:4:113"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 5280,
                    "src": "2056:4:113"
                  },
                  "referencedDeclaration": 5280,
                  "src": "2056:4:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86619,
                "mutability": "mutable",
                "name": "gives",
                "nameLocation": "2076:5:113",
                "nodeType": "VariableDeclaration",
                "scope": 86620,
                "src": "2071:10:113",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 86618,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2071:4:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DistributionOffer",
            "nameLocation": "2016:17:113",
            "scope": 87048,
            "visibility": "public"
          },
          {
            "id": 86630,
            "nodeType": "StructDefinition",
            "src": "2166:85:113",
            "nodes": [],
            "canonicalName": "DirectWithBidsAndAsksDistribution.Distribution",
            "documentation": {
              "id": 86621,
              "nodeType": "StructuredDocumentation",
              "src": "2090:73:113",
              "text": "@param asks the asks to populate\n@param bids the bids to populate"
            },
            "members": [
              {
                "constant": false,
                "id": 86625,
                "mutability": "mutable",
                "name": "asks",
                "nameLocation": "2212:4:113",
                "nodeType": "VariableDeclaration",
                "scope": 86630,
                "src": "2192:24:113",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_storage_$dyn_storage_ptr",
                  "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 86623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86622,
                      "name": "DistributionOffer",
                      "nameLocations": [
                        "2192:17:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86620,
                      "src": "2192:17:113"
                    },
                    "referencedDeclaration": 86620,
                    "src": "2192:17:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionOffer_$86620_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer"
                    }
                  },
                  "id": 86624,
                  "nodeType": "ArrayTypeName",
                  "src": "2192:19:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_storage_$dyn_storage_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86629,
                "mutability": "mutable",
                "name": "bids",
                "nameLocation": "2242:4:113",
                "nodeType": "VariableDeclaration",
                "scope": 86630,
                "src": "2222:24:113",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_storage_$dyn_storage_ptr",
                  "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 86627,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86626,
                      "name": "DistributionOffer",
                      "nameLocations": [
                        "2222:17:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86620,
                      "src": "2222:17:113"
                    },
                    "referencedDeclaration": 86620,
                    "src": "2222:17:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DistributionOffer_$86620_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer"
                    }
                  },
                  "id": 86628,
                  "nodeType": "ArrayTypeName",
                  "src": "2222:19:113",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_storage_$dyn_storage_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Distribution",
            "nameLocation": "2173:12:113",
            "scope": 87048,
            "visibility": "public"
          },
          {
            "id": 86698,
            "nodeType": "FunctionDefinition",
            "src": "2847:682:113",
            "nodes": [],
            "body": {
              "id": 86697,
              "nodeType": "Block",
              "src": "2949:580:113",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86641,
                      "name": "PopulateStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86584,
                      "src": "2960:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2960:15:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86643,
                  "nodeType": "EmitStatement",
                  "src": "2955:20:113"
                },
                {
                  "assignments": [
                    86646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86646,
                      "mutability": "mutable",
                      "name": "args",
                      "nameLocation": "3038:4:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 86697,
                      "src": "3021:21:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                        "typeString": "struct IOfferLogic.OfferArgs"
                      },
                      "typeName": {
                        "id": 86645,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86644,
                          "name": "OfferArgs",
                          "nameLocations": [
                            "3021:9:113"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 83563,
                          "src": "3021:9:113"
                        },
                        "referencedDeclaration": 83563,
                        "src": "3021:9:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86647,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3021:21:113"
                },
                {
                  "expression": {
                    "id": 86652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86648,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86646,
                        "src": "3160:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86650,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3165:6:113",
                      "memberName": "gasreq",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83556,
                      "src": "3160:11:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86651,
                      "name": "gasreq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86636,
                      "src": "3174:6:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3160:20:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86653,
                  "nodeType": "ExpressionStatement",
                  "src": "3160:20:113"
                },
                {
                  "expression": {
                    "id": 86658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86654,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86646,
                        "src": "3186:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86656,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3191:8:113",
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83558,
                      "src": "3186:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86657,
                      "name": "gasprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86638,
                      "src": "3202:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3186:24:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86659,
                  "nodeType": "ExpressionStatement",
                  "src": "3186:24:113"
                },
                {
                  "expression": {
                    "id": 86667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86660,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86646,
                        "src": "3238:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86662,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3243:5:113",
                      "memberName": "olKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83549,
                      "src": "3238:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 86664,
                            "name": "OfferType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87910,
                            "src": "3272:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_OfferType_$87910_$",
                              "typeString": "type(enum OfferType)"
                            }
                          },
                          "id": 86665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3282:3:113",
                          "memberName": "Bid",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87908,
                          "src": "3272:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        ],
                        "id": 86663,
                        "name": "offerListOfOfferType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87921,
                        "src": "3251:20:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_struct$_OLKey_$55875_memory_ptr_$",
                          "typeString": "function (enum OfferType) view returns (struct OLKey memory)"
                        }
                      },
                      "id": 86666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3251:35:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "src": "3238:48:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "id": 86668,
                  "nodeType": "ExpressionStatement",
                  "src": "3238:48:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86670,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86634,
                          "src": "3323:12:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                            "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                          }
                        },
                        "id": 86671,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3336:4:113",
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86629,
                        "src": "3323:17:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 86672,
                          "name": "OfferType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87910,
                          "src": "3342:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OfferType_$87910_$",
                            "typeString": "type(enum OfferType)"
                          }
                        },
                        "id": 86673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3352:3:113",
                        "memberName": "Bid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87908,
                        "src": "3342:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      {
                        "id": 86674,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86646,
                        "src": "3357:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        },
                        {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      ],
                      "id": 86669,
                      "name": "populateOfferListChunkInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86785,
                      "src": "3292:30:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr_$_t_enum$_OfferType_$87910_$_t_struct$_OfferArgs_$83563_memory_ptr_$returns$__$",
                        "typeString": "function (struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory,enum OfferType,struct IOfferLogic.OfferArgs memory)"
                      }
                    },
                    "id": 86675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3292:70:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86676,
                  "nodeType": "ExpressionStatement",
                  "src": "3292:70:113"
                },
                {
                  "expression": {
                    "id": 86684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86677,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86646,
                        "src": "3390:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86679,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3395:5:113",
                      "memberName": "olKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83549,
                      "src": "3390:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "expression": {
                            "id": 86680,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86646,
                            "src": "3403:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                              "typeString": "struct IOfferLogic.OfferArgs memory"
                            }
                          },
                          "id": 86681,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3408:5:113",
                          "memberName": "olKey",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83549,
                          "src": "3403:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        "id": 86682,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3414:7:113",
                        "memberName": "flipped",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55908,
                        "src": "3403:18:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_struct$_OLKey_$55875_memory_ptr_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                          "typeString": "function (struct OLKey memory) pure returns (struct OLKey memory)"
                        }
                      },
                      "id": 86683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3403:20:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "src": "3390:33:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "id": 86685,
                  "nodeType": "ExpressionStatement",
                  "src": "3390:33:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86687,
                          "name": "distribution",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86634,
                          "src": "3460:12:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                            "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                          }
                        },
                        "id": 86688,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3473:4:113",
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86625,
                        "src": "3460:17:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 86689,
                          "name": "OfferType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87910,
                          "src": "3479:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OfferType_$87910_$",
                            "typeString": "type(enum OfferType)"
                          }
                        },
                        "id": 86690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3489:3:113",
                        "memberName": "Ask",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87909,
                        "src": "3479:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      {
                        "id": 86691,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86646,
                        "src": "3494:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        },
                        {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      ],
                      "id": 86686,
                      "name": "populateOfferListChunkInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86785,
                      "src": "3429:30:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr_$_t_enum$_OfferType_$87910_$_t_struct$_OfferArgs_$83563_memory_ptr_$returns$__$",
                        "typeString": "function (struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory,enum OfferType,struct IOfferLogic.OfferArgs memory)"
                      }
                    },
                    "id": 86692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3429:70:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86693,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:70:113"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86694,
                      "name": "PopulateEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86587,
                      "src": "3511:11:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3511:13:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86696,
                  "nodeType": "EmitStatement",
                  "src": "3506:18:113"
                }
              ]
            },
            "documentation": {
              "id": 86631,
              "nodeType": "StructuredDocumentation",
              "src": "2255:589:113",
              "text": "@notice Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For instance, for Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).\n@param distribution the distribution of bids and asks to populate\n@param gasreq the amount of gas units that are required to execute the trade.\n@param gasprice the gasprice used to compute offer's provision.\n@dev Gives of 0 means create/update and then retract offer (but update price, gasreq, gasprice of the offer)"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "populateChunkInternal",
            "nameLocation": "2856:21:113",
            "parameters": {
              "id": 86639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86634,
                  "mutability": "mutable",
                  "name": "distribution",
                  "nameLocation": "2898:12:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86698,
                  "src": "2878:32:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                  },
                  "typeName": {
                    "id": 86633,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86632,
                      "name": "Distribution",
                      "nameLocations": [
                        "2878:12:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86630,
                      "src": "2878:12:113"
                    },
                    "referencedDeclaration": 86630,
                    "src": "2878:12:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$86630_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86636,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "2917:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86698,
                  "src": "2912:11:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86635,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86638,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "2930:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86698,
                  "src": "2925:13:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86637,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2877:62:113"
            },
            "returnParameters": {
              "id": 86640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2949:0:113"
            },
            "scope": 87048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86785,
            "nodeType": "FunctionDefinition",
            "src": "3781:580:113",
            "nodes": [],
            "body": {
              "id": 86784,
              "nodeType": "Block",
              "src": "3908:453:113",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86714,
                      "mutability": "mutable",
                      "name": "local",
                      "nameLocation": "3920:5:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 86784,
                      "src": "3914:11:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                        "typeString": "Local"
                      },
                      "typeName": {
                        "id": 86713,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86712,
                          "name": "Local",
                          "nameLocations": [
                            "3914:5:113"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 64937,
                          "src": "3914:5:113"
                        },
                        "referencedDeclaration": 64937,
                        "src": "3914:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                          "typeString": "Local"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86720,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86717,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86709,
                          "src": "3938:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 86718,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3943:5:113",
                        "memberName": "olKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83549,
                        "src": "3938:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      ],
                      "expression": {
                        "id": 86715,
                        "name": "MGV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81629,
                        "src": "3928:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$54127",
                          "typeString": "contract IMangrove"
                        }
                      },
                      "id": 86716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3932:5:113",
                      "memberName": "local",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53835,
                      "src": "3928:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_userDefinedValueType$_Local_$64937_$",
                        "typeString": "function (struct OLKey memory) view external returns (Local)"
                      }
                    },
                    "id": 86719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3928:21:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                      "typeString": "Local"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3914:35:113"
                },
                {
                  "assignments": [
                    86722
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86722,
                      "mutability": "mutable",
                      "name": "minGives",
                      "nameLocation": "4014:8:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 86784,
                      "src": "4009:13:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86721,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4009:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86734,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 86727,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86709,
                            "src": "4052:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                              "typeString": "struct IOfferLogic.OfferArgs memory"
                            }
                          },
                          "id": 86728,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4057:6:113",
                          "memberName": "gasreq",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83556,
                          "src": "4052:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 86729,
                              "name": "local",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86714,
                              "src": "4066:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                                "typeString": "Local"
                              }
                            },
                            "id": 86730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4072:13:113",
                            "memberName": "offer_gasbase",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4918,
                            "src": "4066:19:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Local_$64937_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Local_$64937_$",
                              "typeString": "function (Local) pure returns (uint256)"
                            }
                          },
                          "id": 86731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4066:21:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4052:35:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 86723,
                            "name": "local",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86714,
                            "src": "4025:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                              "typeString": "Local"
                            }
                          },
                          "id": 86724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4031:7:113",
                          "memberName": "density",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65935,
                          "src": "4025:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Local_$64937_$returns$_t_userDefinedValueType$_Density_$4458_$attached_to$_t_userDefinedValueType$_Local_$64937_$",
                            "typeString": "function (Local) pure returns (Density)"
                          }
                        },
                        "id": 86725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4025:15:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Density_$4458",
                          "typeString": "Density"
                        }
                      },
                      "id": 86726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4041:10:113",
                      "memberName": "multiplyUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4749,
                      "src": "4025:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Density_$4458_$_t_uint256_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Density_$4458_$",
                        "typeString": "function (Density,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 86733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4025:63:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4009:79:113"
                },
                {
                  "body": {
                    "id": 86782,
                    "nodeType": "Block",
                    "src": "4131:226:113",
                    "statements": [
                      {
                        "assignments": [
                          86747
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 86747,
                            "mutability": "mutable",
                            "name": "offer",
                            "nameLocation": "4164:5:113",
                            "nodeType": "VariableDeclaration",
                            "scope": 86782,
                            "src": "4139:30:113",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                              "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer"
                            },
                            "typeName": {
                              "id": 86746,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 86745,
                                "name": "DistributionOffer",
                                "nameLocations": [
                                  "4139:17:113"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 86620,
                                "src": "4139:17:113"
                              },
                              "referencedDeclaration": 86620,
                              "src": "4139:17:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionOffer_$86620_storage_ptr",
                                "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 86751,
                        "initialValue": {
                          "baseExpression": {
                            "id": 86748,
                            "name": "offers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86703,
                            "src": "4172:6:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                            }
                          },
                          "id": 86750,
                          "indexExpression": {
                            "id": 86749,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86736,
                            "src": "4179:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4172:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                            "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4139:42:113"
                      },
                      {
                        "assignments": [
                          86753
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 86753,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "4194:5:113",
                            "nodeType": "VariableDeclaration",
                            "scope": 86782,
                            "src": "4189:10:113",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 86752,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4189:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 86756,
                        "initialValue": {
                          "expression": {
                            "id": 86754,
                            "name": "offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86747,
                            "src": "4202:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                              "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory"
                            }
                          },
                          "id": 86755,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4208:5:113",
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86614,
                          "src": "4202:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4189:24:113"
                      },
                      {
                        "expression": {
                          "id": 86762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 86757,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86709,
                              "src": "4221:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            "id": 86759,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4226:4:113",
                            "memberName": "tick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83552,
                            "src": "4221:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                              "typeString": "Tick"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 86760,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86747,
                              "src": "4233:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                                "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory"
                              }
                            },
                            "id": 86761,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4239:4:113",
                            "memberName": "tick",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86617,
                            "src": "4233:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                              "typeString": "Tick"
                            }
                          },
                          "src": "4221:22:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          }
                        },
                        "id": 86763,
                        "nodeType": "ExpressionStatement",
                        "src": "4221:22:113"
                      },
                      {
                        "expression": {
                          "id": 86769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 86764,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86709,
                              "src": "4251:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            "id": 86766,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4256:5:113",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83554,
                            "src": "4251:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 86767,
                              "name": "offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86747,
                              "src": "4264:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                                "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory"
                              }
                            },
                            "id": 86768,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4270:5:113",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86619,
                            "src": "4264:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4251:24:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 86770,
                        "nodeType": "ExpressionStatement",
                        "src": "4251:24:113"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86772,
                              "name": "ba",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86706,
                              "src": "4297:2:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 86774,
                                  "name": "ba",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86706,
                                  "src": "4316:2:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_OfferType_$87910",
                                    "typeString": "enum OfferType"
                                  }
                                },
                                {
                                  "id": 86775,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86753,
                                  "src": "4320:5:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_OfferType_$87910",
                                    "typeString": "enum OfferType"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 86773,
                                "name": "offerIdOfIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87353,
                                "src": "4301:14:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (enum OfferType,uint256) view returns (uint256)"
                                }
                              },
                              "id": 86776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4301:25:113",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 86777,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86753,
                              "src": "4328:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 86778,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86709,
                              "src": "4335:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            {
                              "id": 86779,
                              "name": "minGives",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86722,
                              "src": "4341:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 86771,
                            "name": "populateIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86896,
                            "src": "4283:13:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_OfferType_$87910_$_t_uint256_$_t_uint256_$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (enum OfferType,uint256,uint256,struct IOfferLogic.OfferArgs memory,uint256)"
                            }
                          },
                          "id": 86780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4283:67:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86781,
                        "nodeType": "ExpressionStatement",
                        "src": "4283:67:113"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86738,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86736,
                      "src": "4107:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 86739,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86703,
                        "src": "4111:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        }
                      },
                      "id": 86740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4118:6:113",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4111:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4107:17:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86783,
                  "initializationExpression": {
                    "assignments": [
                      86736
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 86736,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4104:1:113",
                        "nodeType": "VariableDeclaration",
                        "scope": 86783,
                        "src": "4099:6:113",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86735,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4099:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 86737,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4099:6:113"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 86743,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4126:3:113",
                      "subExpression": {
                        "id": 86742,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86736,
                        "src": "4128:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86744,
                    "nodeType": "ExpressionStatement",
                    "src": "4126:3:113"
                  },
                  "nodeType": "ForStatement",
                  "src": "4094:263:113"
                }
              ]
            },
            "documentation": {
              "id": 86699,
              "nodeType": "StructuredDocumentation",
              "src": "3533:245:113",
              "text": "@notice populates one of the offer lists with the given offers\n@param offers the offers to populate\n@param ba whether to populate bids or asks\n@param args a reused offer creation args structure with defaults passed from caller."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "populateOfferListChunkInternal",
            "nameLocation": "3790:30:113",
            "parameters": {
              "id": 86710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86703,
                  "mutability": "mutable",
                  "name": "offers",
                  "nameLocation": "3848:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86785,
                  "src": "3821:33:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86701,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 86700,
                        "name": "DistributionOffer",
                        "nameLocations": [
                          "3821:17:113"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 86620,
                        "src": "3821:17:113"
                      },
                      "referencedDeclaration": 86620,
                      "src": "3821:17:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DistributionOffer_$86620_storage_ptr",
                        "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer"
                      }
                    },
                    "id": 86702,
                    "nodeType": "ArrayTypeName",
                    "src": "3821:19:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_storage_$dyn_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86706,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "3866:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86785,
                  "src": "3856:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86705,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86704,
                      "name": "OfferType",
                      "nameLocations": [
                        "3856:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "3856:9:113"
                    },
                    "referencedDeclaration": 87910,
                    "src": "3856:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86709,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "3887:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86785,
                  "src": "3870:21:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                    "typeString": "struct IOfferLogic.OfferArgs"
                  },
                  "typeName": {
                    "id": 86708,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86707,
                      "name": "OfferArgs",
                      "nameLocations": [
                        "3870:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83563,
                      "src": "3870:9:113"
                    },
                    "referencedDeclaration": 83563,
                    "src": "3870:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3820:72:113"
            },
            "returnParameters": {
              "id": 86711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3908:0:113"
            },
            "scope": 87048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86896,
            "nodeType": "FunctionDefinition",
            "src": "4846:2079:113",
            "nodes": [],
            "body": {
              "id": 86895,
              "nodeType": "Block",
              "src": "4956:1969:113",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86801,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86791,
                      "src": "5013:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5024:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5013:12:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 86893,
                    "nodeType": "Block",
                    "src": "6025:896:113",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 86857,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86796,
                              "src": "6092:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            "id": 86858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6097:5:113",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83554,
                            "src": "6092:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6106:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6092:15:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 86891,
                          "nodeType": "Block",
                          "src": "6765:150:113",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 86887,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86796,
                                    "src": "6892:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  {
                                    "id": 86888,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86791,
                                    "src": "6898:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 86886,
                                  "name": "_updateOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    84828
                                  ],
                                  "referencedDeclaration": 84828,
                                  "src": "6879:12:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct IOfferLogic.OfferArgs memory,uint256) returns (bytes32)"
                                  }
                                },
                                "id": 86889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6879:27:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 86890,
                              "nodeType": "ExpressionStatement",
                              "src": "6879:27:113"
                            }
                          ]
                        },
                        "id": 86892,
                        "nodeType": "IfStatement",
                        "src": "6088:827:113",
                        "trueBody": {
                          "id": 86885,
                          "nodeType": "Block",
                          "src": "6109:650:113",
                          "statements": [
                            {
                              "expression": {
                                "id": 86865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 86861,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86796,
                                    "src": "6394:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  "id": 86863,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "6399:5:113",
                                  "memberName": "gives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83554,
                                  "src": "6394:10:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 86864,
                                  "name": "minGives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86798,
                                  "src": "6407:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6394:21:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86866,
                              "nodeType": "ExpressionStatement",
                              "src": "6394:21:113"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 86868,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86796,
                                    "src": "6515:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  {
                                    "id": 86869,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86791,
                                    "src": "6521:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 86867,
                                  "name": "_updateOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    84828
                                  ],
                                  "referencedDeclaration": 84828,
                                  "src": "6502:12:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                                    "typeString": "function (struct IOfferLogic.OfferArgs memory,uint256) returns (bytes32)"
                                  }
                                },
                                "id": 86870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6502:27:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 86871,
                              "nodeType": "ExpressionStatement",
                              "src": "6502:27:113"
                            },
                            {
                              "expression": {
                                "id": 86876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 86872,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86796,
                                    "src": "6588:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  "id": 86874,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "6593:5:113",
                                  "memberName": "gives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83554,
                                  "src": "6588:10:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 86875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6601:1:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "6588:14:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86877,
                              "nodeType": "ExpressionStatement",
                              "src": "6588:14:113"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 86879,
                                      "name": "args",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86796,
                                      "src": "6723:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                        "typeString": "struct IOfferLogic.OfferArgs memory"
                                      }
                                    },
                                    "id": 86880,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6728:5:113",
                                    "memberName": "olKey",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83549,
                                    "src": "6723:10:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                      "typeString": "struct OLKey memory"
                                    }
                                  },
                                  {
                                    "id": 86881,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86791,
                                    "src": "6735:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 86882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6744:5:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                      "typeString": "struct OLKey memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 86878,
                                  "name": "_retractOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84851,
                                  "src": "6709:13:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                    "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                                  }
                                },
                                "id": 86883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6709:41:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86884,
                              "nodeType": "ExpressionStatement",
                              "src": "6709:41:113"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 86894,
                  "nodeType": "IfStatement",
                  "src": "5009:1912:113",
                  "trueBody": {
                    "id": 86856,
                    "nodeType": "Block",
                    "src": "5027:963:113",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 86804,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86796,
                              "src": "5073:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            "id": 86805,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5078:5:113",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83554,
                            "src": "5073:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5086:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5073:14:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 86854,
                          "nodeType": "Block",
                          "src": "5285:699:113",
                          "statements": [
                            {
                              "expression": {
                                "id": 86826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 86822,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86796,
                                    "src": "5552:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  "id": 86824,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5557:5:113",
                                  "memberName": "gives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83554,
                                  "src": "5552:10:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 86825,
                                  "name": "minGives",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86798,
                                  "src": "5565:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5552:21:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86827,
                              "nodeType": "ExpressionStatement",
                              "src": "5552:21:113"
                            },
                            {
                              "expression": {
                                "id": 86833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 86828,
                                      "name": "offerId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86791,
                                      "src": "5682:7:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 86829,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "5681:10:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$__$",
                                    "typeString": "tuple(uint256,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 86831,
                                      "name": "args",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86796,
                                      "src": "5704:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                        "typeString": "struct IOfferLogic.OfferArgs memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                        "typeString": "struct IOfferLogic.OfferArgs memory"
                                      }
                                    ],
                                    "id": 86830,
                                    "name": "_newOffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84770,
                                    "src": "5694:9:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
                                      "typeString": "function (struct IOfferLogic.OfferArgs memory) returns (uint256,bytes32)"
                                    }
                                  },
                                  "id": 86832,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5694:15:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
                                    "typeString": "tuple(uint256,bytes32)"
                                  }
                                },
                                "src": "5681:28:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86834,
                              "nodeType": "ExpressionStatement",
                              "src": "5681:28:113"
                            },
                            {
                              "expression": {
                                "id": 86839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 86835,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86796,
                                    "src": "5768:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  "id": 86837,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5773:5:113",
                                  "memberName": "gives",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83554,
                                  "src": "5768:10:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 86838,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5781:1:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5768:14:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86840,
                              "nodeType": "ExpressionStatement",
                              "src": "5768:14:113"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 86842,
                                      "name": "args",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86796,
                                      "src": "5903:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                        "typeString": "struct IOfferLogic.OfferArgs memory"
                                      }
                                    },
                                    "id": 86843,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5908:5:113",
                                    "memberName": "olKey",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 83549,
                                    "src": "5903:10:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                      "typeString": "struct OLKey memory"
                                    }
                                  },
                                  {
                                    "id": 86844,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86791,
                                    "src": "5915:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 86845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5924:5:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                      "typeString": "struct OLKey memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 86841,
                                  "name": "_retractOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84851,
                                  "src": "5889:13:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                    "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                                  }
                                },
                                "id": 86846,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5889:41:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86847,
                              "nodeType": "ExpressionStatement",
                              "src": "5889:41:113"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 86849,
                                    "name": "ba",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86789,
                                    "src": "5956:2:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_OfferType_$87910",
                                      "typeString": "enum OfferType"
                                    }
                                  },
                                  {
                                    "id": 86850,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86793,
                                    "src": "5960:5:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 86851,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86791,
                                    "src": "5967:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_OfferType_$87910",
                                      "typeString": "enum OfferType"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 86848,
                                  "name": "setIndexMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87426,
                                  "src": "5940:15:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_OfferType_$87910_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (enum OfferType,uint256,uint256)"
                                  }
                                },
                                "id": 86852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5940:35:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86853,
                              "nodeType": "ExpressionStatement",
                              "src": "5940:35:113"
                            }
                          ]
                        },
                        "id": 86855,
                        "nodeType": "IfStatement",
                        "src": "5069:915:113",
                        "trueBody": {
                          "id": 86821,
                          "nodeType": "Block",
                          "src": "5089:190:113",
                          "statements": [
                            {
                              "expression": {
                                "id": 86813,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 86808,
                                      "name": "offerId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86791,
                                      "src": "5198:7:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    null
                                  ],
                                  "id": 86809,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "5197:10:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$__$",
                                    "typeString": "tuple(uint256,)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 86811,
                                      "name": "args",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 86796,
                                      "src": "5220:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                        "typeString": "struct IOfferLogic.OfferArgs memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                        "typeString": "struct IOfferLogic.OfferArgs memory"
                                      }
                                    ],
                                    "id": 86810,
                                    "name": "_newOffer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84770,
                                    "src": "5210:9:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
                                      "typeString": "function (struct IOfferLogic.OfferArgs memory) returns (uint256,bytes32)"
                                    }
                                  },
                                  "id": 86812,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5210:15:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
                                    "typeString": "tuple(uint256,bytes32)"
                                  }
                                },
                                "src": "5197:28:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86814,
                              "nodeType": "ExpressionStatement",
                              "src": "5197:28:113"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 86816,
                                    "name": "ba",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86789,
                                    "src": "5251:2:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_OfferType_$87910",
                                      "typeString": "enum OfferType"
                                    }
                                  },
                                  {
                                    "id": 86817,
                                    "name": "index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86793,
                                    "src": "5255:5:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 86818,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86791,
                                    "src": "5262:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_OfferType_$87910",
                                      "typeString": "enum OfferType"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 86815,
                                  "name": "setIndexMapping",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87426,
                                  "src": "5235:15:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_OfferType_$87910_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (enum OfferType,uint256,uint256)"
                                  }
                                },
                                "id": 86819,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5235:35:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 86820,
                              "nodeType": "ExpressionStatement",
                              "src": "5235:35:113"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 86786,
              "nodeType": "StructuredDocumentation",
              "src": "4365:478:113",
              "text": "@notice publishes (by either creating or updating) a bid/ask at a given price index.\n@param ba whether the offer is a bid or an ask.\n@param offerId the Mangrove offer id (0 for a new offer).\n@param index the price index.\n@param args the argument of the offer. `args.gives=0` means offer will be created/updated and then retracted.\n@param minGives the minimum gives to satisfy density requirement - used for creating/updating offers when args.gives=0."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "populateIndex",
            "nameLocation": "4855:13:113",
            "parameters": {
              "id": 86799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86789,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "4879:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86896,
                  "src": "4869:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86788,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86787,
                      "name": "OfferType",
                      "nameLocations": [
                        "4869:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "4869:9:113"
                    },
                    "referencedDeclaration": 87910,
                    "src": "4869:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86791,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "4888:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86896,
                  "src": "4883:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86790,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4883:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86793,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4902:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86896,
                  "src": "4897:10:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86792,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4897:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86796,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "4926:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86896,
                  "src": "4909:21:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                    "typeString": "struct IOfferLogic.OfferArgs"
                  },
                  "typeName": {
                    "id": 86795,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86794,
                      "name": "OfferArgs",
                      "nameLocations": [
                        "4909:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83563,
                      "src": "4909:9:113"
                    },
                    "referencedDeclaration": 83563,
                    "src": "4909:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86798,
                  "mutability": "mutable",
                  "name": "minGives",
                  "nameLocation": "4937:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86896,
                  "src": "4932:13:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4932:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4868:78:113"
            },
            "returnParameters": {
              "id": 86800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4956:0:113"
            },
            "scope": 87048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86927,
            "nodeType": "FunctionDefinition",
            "src": "7186:223:113",
            "nodes": [],
            "body": {
              "id": 86926,
              "nodeType": "Block",
              "src": "7246:163:113",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86906,
                      "name": "RetractStart",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86590,
                      "src": "7257:12:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7257:14:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86908,
                  "nodeType": "EmitStatement",
                  "src": "7252:19:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86910,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86899,
                        "src": "7302:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86911,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86901,
                        "src": "7308:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 86912,
                          "name": "OfferType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87910,
                          "src": "7312:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OfferType_$87910_$",
                            "typeString": "type(enum OfferType)"
                          }
                        },
                        "id": 86913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7322:3:113",
                        "memberName": "Ask",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87909,
                        "src": "7312:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 86909,
                      "name": "retractOffersOnOfferList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86976,
                      "src": "7277:24:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_OfferType_$87910_$returns$__$",
                        "typeString": "function (uint256,uint256,enum OfferType)"
                      }
                    },
                    "id": 86914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7277:49:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86915,
                  "nodeType": "ExpressionStatement",
                  "src": "7277:49:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86917,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86899,
                        "src": "7357:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86918,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86901,
                        "src": "7363:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 86919,
                          "name": "OfferType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87910,
                          "src": "7367:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_OfferType_$87910_$",
                            "typeString": "type(enum OfferType)"
                          }
                        },
                        "id": 86920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "7377:3:113",
                        "memberName": "Bid",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87908,
                        "src": "7367:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 86916,
                      "name": "retractOffersOnOfferList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86976,
                      "src": "7332:24:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_enum$_OfferType_$87910_$returns$__$",
                        "typeString": "function (uint256,uint256,enum OfferType)"
                      }
                    },
                    "id": 86921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7332:49:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86922,
                  "nodeType": "ExpressionStatement",
                  "src": "7332:49:113"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 86923,
                      "name": "RetractEnd",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86593,
                      "src": "7392:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7392:12:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86925,
                  "nodeType": "EmitStatement",
                  "src": "7387:17:113"
                }
              ]
            },
            "documentation": {
              "id": 86897,
              "nodeType": "StructuredDocumentation",
              "src": "6929:254:113",
              "text": "@notice retracts and deprovisions offers of the distribution interval `[from, to[`.\n@param from the start index.\n@param to the end index.\n@dev use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs."
            },
            "functionSelector": "a2e241af",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86904,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86903,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "7236:9:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "7236:9:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "7236:9:113"
              }
            ],
            "name": "retractOffers",
            "nameLocation": "7195:13:113",
            "parameters": {
              "id": 86902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86899,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7214:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86927,
                  "src": "7209:9:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86898,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7209:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86901,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7225:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86927,
                  "src": "7220:7:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86900,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7220:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7208:20:113"
            },
            "returnParameters": {
              "id": 86905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7246:0:113"
            },
            "scope": 87048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86976,
            "nodeType": "FunctionDefinition",
            "src": "7622:377:113",
            "nodes": [],
            "body": {
              "id": 86975,
              "nodeType": "Block",
              "src": "7699:300:113",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86940,
                      "mutability": "mutable",
                      "name": "olKey",
                      "nameLocation": "7718:5:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 86975,
                      "src": "7705:18:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey"
                      },
                      "typeName": {
                        "id": 86939,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86938,
                          "name": "OLKey",
                          "nameLocations": [
                            "7705:5:113"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55875,
                          "src": "7705:5:113"
                        },
                        "referencedDeclaration": 55875,
                        "src": "7705:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                          "typeString": "struct OLKey"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86944,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86942,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86935,
                        "src": "7747:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 86941,
                      "name": "offerListOfOfferType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87921,
                      "src": "7726:20:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_struct$_OLKey_$55875_memory_ptr_$",
                        "typeString": "function (enum OfferType) view returns (struct OLKey memory)"
                      }
                    },
                    "id": 86943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7726:24:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7705:45:113"
                },
                {
                  "body": {
                    "id": 86973,
                    "nodeType": "Block",
                    "src": "7801:194:113",
                    "statements": [
                      {
                        "assignments": [
                          86956
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 86956,
                            "mutability": "mutable",
                            "name": "offerId",
                            "nameLocation": "7874:7:113",
                            "nodeType": "VariableDeclaration",
                            "scope": 86973,
                            "src": "7869:12:113",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 86955,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7869:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 86961,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 86958,
                              "name": "ba",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86935,
                              "src": "7899:2:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            },
                            {
                              "id": 86959,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86946,
                              "src": "7903:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 86957,
                            "name": "offerIdOfIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87353,
                            "src": "7884:14:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (enum OfferType,uint256) view returns (uint256)"
                            }
                          },
                          "id": 86960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7884:25:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7869:40:113"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86962,
                            "name": "offerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86956,
                            "src": "7921:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7932:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7921:12:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86972,
                        "nodeType": "IfStatement",
                        "src": "7917:72:113",
                        "trueBody": {
                          "id": 86971,
                          "nodeType": "Block",
                          "src": "7935:54:113",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 86966,
                                    "name": "olKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86940,
                                    "src": "7959:5:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                      "typeString": "struct OLKey memory"
                                    }
                                  },
                                  {
                                    "id": 86967,
                                    "name": "offerId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 86956,
                                    "src": "7966:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "74727565",
                                    "id": 86968,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7975:4:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                      "typeString": "struct OLKey memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 86965,
                                  "name": "_retractOffer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84851,
                                  "src": "7945:13:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                    "typeString": "function (struct OLKey memory,uint256,bool) returns (uint256)"
                                  }
                                },
                                "id": 86969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7945:35:113",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 86970,
                              "nodeType": "ExpressionStatement",
                              "src": "7945:35:113"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86949,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86946,
                      "src": "7780:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 86950,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86932,
                      "src": "7788:2:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7780:10:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86974,
                  "initializationExpression": {
                    "assignments": [
                      86946
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 86946,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "7766:5:113",
                        "nodeType": "VariableDeclaration",
                        "scope": 86974,
                        "src": "7761:10:113",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86945,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7761:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 86948,
                    "initialValue": {
                      "id": 86947,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86930,
                      "src": "7774:4:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7761:17:113"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 86953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7792:7:113",
                      "subExpression": {
                        "id": 86952,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86946,
                        "src": "7794:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 86954,
                    "nodeType": "ExpressionStatement",
                    "src": "7792:7:113"
                  },
                  "nodeType": "ForStatement",
                  "src": "7756:239:113"
                }
              ]
            },
            "documentation": {
              "id": 86928,
              "nodeType": "StructuredDocumentation",
              "src": "7413:206:113",
              "text": "@notice retracts and deprovisions offers of the distribution interval `[from, to[` for the given offer type.\n@param from the start index.\n@param to the end index.\n@param ba the offer type."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retractOffersOnOfferList",
            "nameLocation": "7631:24:113",
            "parameters": {
              "id": 86936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86930,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7661:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86976,
                  "src": "7656:9:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86929,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7656:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86932,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7672:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86976,
                  "src": "7667:7:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86931,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7667:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86935,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "7686:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86976,
                  "src": "7676:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86934,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86933,
                      "name": "OfferType",
                      "nameLocations": [
                        "7676:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "7676:9:113"
                    },
                    "referencedDeclaration": 87910,
                    "src": "7676:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7655:34:113"
            },
            "returnParameters": {
              "id": 86937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7699:0:113"
            },
            "scope": 87048,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87011,
            "nodeType": "FunctionDefinition",
            "src": "8178:220:113",
            "nodes": [],
            "body": {
              "id": 87010,
              "nodeType": "Block",
              "src": "8256:142:113",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86989,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "8267:7:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87010,
                      "src": "8262:12:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86988,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8262:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86991,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86980,
                        "src": "8292:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      {
                        "id": 86992,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86982,
                        "src": "8296:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86990,
                      "name": "offerIdOfIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87353,
                      "src": "8277:14:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum OfferType,uint256) view returns (uint256)"
                      }
                    },
                    "id": 86993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8277:25:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8262:40:113"
                },
                {
                  "assignments": [
                    86997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86997,
                      "mutability": "mutable",
                      "name": "olKey",
                      "nameLocation": "8321:5:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87010,
                      "src": "8308:18:113",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey"
                      },
                      "typeName": {
                        "id": 86996,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86995,
                          "name": "OLKey",
                          "nameLocations": [
                            "8308:5:113"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55875,
                          "src": "8308:5:113"
                        },
                        "referencedDeclaration": 55875,
                        "src": "8308:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                          "typeString": "struct OLKey"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87001,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86999,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86980,
                        "src": "8350:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 86998,
                      "name": "offerListOfOfferType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87921,
                      "src": "8329:20:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_struct$_OLKey_$55875_memory_ptr_$",
                        "typeString": "function (enum OfferType) view returns (struct OLKey memory)"
                      }
                    },
                    "id": 87000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8329:24:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8308:45:113"
                },
                {
                  "expression": {
                    "id": 87008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87002,
                      "name": "offer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86986,
                      "src": "8359:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                        "typeString": "Offer"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87005,
                          "name": "olKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86997,
                          "src": "8378:5:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "id": 87006,
                          "name": "offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86989,
                          "src": "8385:7:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 87003,
                          "name": "MGV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81629,
                          "src": "8367:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$54127",
                            "typeString": "contract IMangrove"
                          }
                        },
                        "id": 87004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8371:6:113",
                        "memberName": "offers",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53887,
                        "src": "8367:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                          "typeString": "function (struct OLKey memory,uint256) view external returns (Offer)"
                        }
                      },
                      "id": 87007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8367:26:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                        "typeString": "Offer"
                      }
                    },
                    "src": "8359:34:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                      "typeString": "Offer"
                    }
                  },
                  "id": 87009,
                  "nodeType": "ExpressionStatement",
                  "src": "8359:34:113"
                }
              ]
            },
            "documentation": {
              "id": 86977,
              "nodeType": "StructuredDocumentation",
              "src": "8003:172:113",
              "text": "@notice gets the Mangrove offer at the given index for the offer type.\n@param ba the offer type.\n@param index the index.\n@return offer the Mangrove offer."
            },
            "functionSelector": "7692c328",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "8187:8:113",
            "parameters": {
              "id": 86983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86980,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "8206:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87011,
                  "src": "8196:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86979,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86978,
                      "name": "OfferType",
                      "nameLocations": [
                        "8196:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "8196:9:113"
                    },
                    "referencedDeclaration": 87910,
                    "src": "8196:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86982,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "8215:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87011,
                  "src": "8210:10:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86981,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8210:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8195:26:113"
            },
            "returnParameters": {
              "id": 86987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86986,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "8249:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87011,
                  "src": "8243:11:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                    "typeString": "Offer"
                  },
                  "typeName": {
                    "id": 86985,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86984,
                      "name": "Offer",
                      "nameLocations": [
                        "8243:5:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66949,
                      "src": "8243:5:113"
                    },
                    "referencedDeclaration": 66949,
                    "src": "8243:5:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                      "typeString": "Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8242:13:113"
            },
            "scope": 87048,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87047,
            "nodeType": "FunctionDefinition",
            "src": "8633:206:113",
            "nodes": [],
            "body": {
              "id": 87046,
              "nodeType": "Block",
              "src": "8704:135:113",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 87044,
                    "nodeType": "Block",
                    "src": "8756:79:113",
                    "statements": [
                      {
                        "assignments": [
                          87032
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87032,
                            "mutability": "mutable",
                            "name": "offer",
                            "nameLocation": "8770:5:113",
                            "nodeType": "VariableDeclaration",
                            "scope": 87044,
                            "src": "8764:11:113",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                              "typeString": "Offer"
                            },
                            "typeName": {
                              "id": 87031,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87030,
                                "name": "Offer",
                                "nameLocations": [
                                  "8764:5:113"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 66949,
                                "src": "8764:5:113"
                              },
                              "referencedDeclaration": 66949,
                              "src": "8764:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                "typeString": "Offer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87037,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 87034,
                              "name": "ba",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87015,
                              "src": "8787:2:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            },
                            {
                              "id": 87035,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87021,
                              "src": "8791:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 87033,
                            "name": "getOffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87011,
                            "src": "8778:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                              "typeString": "function (enum OfferType,uint256) view returns (Offer)"
                            }
                          },
                          "id": 87036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8778:19:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                            "typeString": "Offer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8764:33:113"
                      },
                      {
                        "expression": {
                          "id": 87042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87038,
                            "name": "volume",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87018,
                            "src": "8805:6:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87039,
                                "name": "offer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87032,
                                "src": "8815:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                                  "typeString": "Offer"
                                }
                              },
                              "id": 87040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8821:5:113",
                              "memberName": "gives",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67519,
                              "src": "8815:11:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                                "typeString": "function (Offer) pure returns (uint256)"
                              }
                            },
                            "id": 87041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8815:13:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8805:23:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 87043,
                        "nodeType": "ExpressionStatement",
                        "src": "8805:23:113"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87024,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87021,
                      "src": "8731:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 87025,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87309,
                      "src": "8739:6:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8731:14:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87045,
                  "initializationExpression": {
                    "assignments": [
                      87021
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 87021,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "8720:5:113",
                        "nodeType": "VariableDeclaration",
                        "scope": 87045,
                        "src": "8715:10:113",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 87020,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8715:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 87023,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 87022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8728:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8715:14:113"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 87028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "8747:7:113",
                      "subExpression": {
                        "id": 87027,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87021,
                        "src": "8749:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 87029,
                    "nodeType": "ExpressionStatement",
                    "src": "8747:7:113"
                  },
                  "nodeType": "ForStatement",
                  "src": "8710:125:113"
                }
              ]
            },
            "documentation": {
              "id": 87012,
              "nodeType": "StructuredDocumentation",
              "src": "8402:228:113",
              "text": "@notice gets the total gives of all offers of the offer type.\n @param ba offer type.\n @return volume the total gives of all offers of the offer type.\n @dev function is very gas costly, for external calls only."
            },
            "functionSelector": "d2e498fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "offeredVolume",
            "nameLocation": "8642:13:113",
            "parameters": {
              "id": 87016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87015,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "8666:2:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87047,
                  "src": "8656:12:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 87014,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87013,
                      "name": "OfferType",
                      "nameLocations": [
                        "8656:9:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "8656:9:113"
                    },
                    "referencedDeclaration": 87910,
                    "src": "8656:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8655:14:113"
            },
            "returnParameters": {
              "id": 87019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87018,
                  "mutability": "mutable",
                  "name": "volume",
                  "nameLocation": "8696:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87047,
                  "src": "8691:11:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87017,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8691:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8690:13:113"
            },
            "scope": 87048,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 86578,
              "name": "Direct",
              "nameLocations": [
                "691:6:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 85066,
              "src": "691:6:113"
            },
            "id": 86579,
            "nodeType": "InheritanceSpecifier",
            "src": "691:6:113"
          },
          {
            "baseName": {
              "id": 86580,
              "name": "HasIndexedBidsAndAsks",
              "nameLocations": [
                "699:21:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87442,
              "src": "699:21:113"
            },
            "id": 86581,
            "nodeType": "InheritanceSpecifier",
            "src": "699:21:113"
          }
        ],
        "canonicalName": "DirectWithBidsAndAsksDistribution",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 86577,
          "nodeType": "StructuredDocumentation",
          "src": "472:164:113",
          "text": "@title `Direct` strat with an indexed collection of bids and asks which can be populated according to a desired base and quote distribution for gives and wants."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          87048,
          87442,
          87942,
          85066,
          82367,
          83578,
          56211,
          89841
        ],
        "name": "DirectWithBidsAndAsksDistribution",
        "nameLocation": "654:33:113",
        "scope": 87049,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83467,
          83473,
          84653,
          86584,
          86587,
          86590,
          86593,
          87296,
          87306,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 113
}