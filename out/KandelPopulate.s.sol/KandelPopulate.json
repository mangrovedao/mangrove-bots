{
  "abi": [
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "broadcast",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "global",
          "type": "bool"
        }
      ],
      "name": "broadcaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "broadcaster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "broadcaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint24",
              "name": "tickOffset",
              "type": "uint24"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ],
              "internalType": "struct CoreKandel.Params",
              "name": "params",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "initQuote",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "volume",
              "type": "uint256"
            },
            {
              "internalType": "contract GeometricKandel",
              "name": "kdl",
              "type": "address"
            },
            {
              "internalType": "contract MgvReader",
              "name": "mgvReader",
              "type": "address"
            }
          ],
          "internalType": "struct KandelPopulate.HeapArgs",
          "name": "args",
          "type": "tuple"
        }
      ],
      "name": "calculateBaseQuote",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "baseAmountRequired",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmountRequired",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "bidding",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "snapshotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastOfferId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            },
            {
              "internalType": "contract MgvReader",
              "name": "mgvReader",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "BASE",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "QUOTE",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "provAsk",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "provBid",
              "type": "uint256"
            }
          ],
          "internalType": "struct KandelPopulate.HeapVars",
          "name": "vars",
          "type": "tuple"
        }
      ],
      "name": "evaluateAmountsRequired",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint24",
              "name": "tickOffset",
              "type": "uint24"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ],
              "internalType": "struct CoreKandel.Params",
              "name": "params",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "initQuote",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "volume",
              "type": "uint256"
            },
            {
              "internalType": "contract GeometricKandel",
              "name": "kdl",
              "type": "address"
            },
            {
              "internalType": "contract MgvReader",
              "name": "mgvReader",
              "type": "address"
            }
          ],
          "internalType": "struct KandelPopulate.HeapArgs",
          "name": "args",
          "type": "tuple"
        }
      ],
      "name": "innerRun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256[]",
          "name": "ints",
          "type": "int256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "uints",
          "type": "uint256[]"
        }
      ],
      "name": "logary",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "run",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "singleton",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "singleton",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBroadcast",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stopBroadcast",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6004805460ff19166001179055600c805460c060405260136080527f4d616e67726f76653a53696e676c65746f6e730000000000000000000000000060a0527463dcb1a6e39e244d89879fe00c389e56dd679053016001600160a81b03199091161790556200006d620007c2565b600d80546001600160a01b0319166001600160a01b0392909216919091178155604080518082019091529081526c4465706c6f7965723a466f726b60981b6020820152620000bb9062000948565b600e80546001600160a01b03929092166001600160a01b0319928316179055600f8054909116620decaf608c1b179055348015620000f857600080fd5b50600e54604080518082018252600d81526c4465706c6f7965723a466f726b60981b602082015290516318caf8e360e31b815260008051602062025fb38339815191529263c657c718926200015c926001600160a01b039092169160040162000f86565b600060405180830381600087803b1580156200017757600080fd5b505af11580156200018c573d6000803e3d6000fd5b5050600f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a60448201526952656d6f746520454e5360b01b606482015260008051602062025fb3833981519152925063c657c7189150608401600060405180830381600087803b1580156200020557600080fd5b505af11580156200021a573d6000803e3d6000fd5b505060408051808201909152600d81526c4465706c6f7965723a466f726b60981b60208201526000925062000250915062000948565b6001600160a01b0316036200050e5746600103620002ba57604051620002769062000eb4565b604051809103906000f08015801562000293573d6000803e3d6000fd5b50600e80546001600160a01b0319166001600160a01b039290921691909117905562000419565b46600503620002d157604051620002769062000ec2565b46608903620002e857604051620002769062000ed0565b4661044d036200030057604051620002769062000ede565b466105a2036200031857604051620002769062000eec565b46617a69036200033057604051620002769062000efa565b4661a4b1036200034857604051620002769062000f08565b4662013881036200036157604051620002769062000f16565b60405163348051d760e11b815246600482015260008051602062025fb383398151915290636900a3ae90602401600060405180830381865afa158015620003ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620003d6919081019062001046565b604051602001620003e8919062001093565b60408051601f198184030181529082905262461bcd60e51b82526200041091600401620010e8565b60405180910390fd5b600f546001600160a01b03163b158015620004525750683635c9adc5dea0000073f39fd6e51aad88f6f4ce6ab8827279cfffb922663110155b15620004625762000462620009ca565b60408051808201909152600d81526c4465706c6f7965723a466f726b60981b6020820152600e546200049e91906001600160a01b031662000dbf565b600e60009054906101000a90046001600160a01b03166001600160a01b0316630a9254e46040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620004ef57600080fd5b505af115801562000504573d6000803e3d6000fd5b505050506200055e565b60408051808201909152600d81526c4465706c6f7965723a466f726b60981b60208201526200053d9062000948565b600e80546001600160a01b0319166001600160a01b03929092169190911790555b604051637ed1ec7d60e01b815260206004820152600c60248201526b57524954455f4445504c4f5960a01b604482015260008051602062025fb383398151915290637ed1ec7d90606401602060405180830381865afa925050508015620005e4575060408051601f3d908101601f19168201909252620005e19181019062001104565b60015b156200060757600f8054911515600160a01b0260ff60a01b199092169190911790555b60408051634777f3cf60e01b81526004810191909152600c60448201526b464f525f4d554c544953494760a01b60648201526000602482015260008051602062025fb383398151915290634777f3cf906084016020604051808303816000875af11580156200067a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006a0919062001104565b60108054911515600160a01b0260ff60a01b1990921691909117905560408051602081018252600080825291516334515cdb60e21b815260008051602062025fb38339815191529163d145736c91620006fd919060040162001128565b6000604051808303816000875af11580156200071d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000747919081019062001046565b9050602081511115620007ad5760405162461bcd60e51b815260206004820152602760248201527f53414c5420656e7620766172206c656e677468206d757374206265203d3c20336044820152663220627974657360c81b606482015260840162000410565b620007b88162001158565b6011555062001253565b600c5460009061010090046001600160a01b03163b81036200094257600c5460405160008051602062025fb38339815191529163b4d6c782916101009091046001600160a01b031690620008169062000f24565b604051809103906000f08015801562000833573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b81526004016200087892919062000f86565b600060405180830381600087803b1580156200089357600080fd5b505af1158015620008a8573d6000803e3d6000fd5b5050600c54604080516318caf8e360e31b81526101009092046001600160a01b031660048301526024820152600d60448201526c53696e676c65746f6e73454e5360981b606482015260008051602062025fb3833981519152925063c657c7189150608401600060405180830381600087803b1580156200092857600080fd5b505af11580156200093d573d6000803e3d6000fd5b505050505b50600090565b600c54604051631ce4db4f60e31b815260009161010090046001600160a01b03169063e726da789062000980908590600401620010e8565b602060405180830381865afa1580156200099e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c4919062001180565b92915050565b60408051600580825260c08201909252600091816020015b6060815260200190600190039081620009e25790505090506040518060400160405280600481526020016318d85cdd60e21b8152508160008151811062000a2d5762000a2d620011ab565b60200260200101819052506040518060400160405280600381526020016272706360e81b8152508160018151811062000a6a5762000a6a620011ab565b60200260200101819052506040518060400160405280600f81526020016e686172646861745f736574436f646560881b8152508160028151811062000ab35762000ab3620011ab565b6020908102919091010152600f54604051632b65311f60e11b81526001600160a01b03909116600482015260008051602062025fb3833981519152906356ca623e90602401600060405180830381865afa15801562000b16573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b40919081019062001046565b8160038151811062000b565762000b56620011ab565b602090810291909101015260405160008051602062025fb3833981519152906371aad10d9062000b869062000f24565b604051809103906000f08015801562000ba3573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518263ffffffff1660e01b815260040162000be79190620010e8565b600060405180830381865afa15801562000c05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c2f919081019062001046565b8160048151811062000c455762000c45620011ab565b6020908102919091010152604051638916046760e01b815260009060008051602062025fb38339815191529063891604679062000c87908590600401620011c1565b6000604051808303816000875af115801562000ca7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cd1919081019062001046565b90507fefbde2c3aee204a69b7696d4b10ff31137fe78e3946306284f806e2dfc68b80581805190602001201462000d7c5762000d0d8162000e2f565b60405162461bcd60e51b815260206004820152603360248201527f556e657870656374656420726573706f6e73652066726f6d206063617374207260448201527f706320686172646861745f736574436f64656000000000000000000000000000606482015260840162000410565b60408051808201909152601681527f4465706c6f7965642072656d6f746520546f79454e5300000000000000000000602082015262000dbb9062000e2f565b5050565b600c5460405163a815ff1560e01b81526101009091046001600160a01b03169063a815ff159062000df7908590859060040162001227565b600060405180830381600087803b15801562000e1257600080fd5b505af115801562000e27573d6000803e3d6000fd5b505050505050565b62000e7a8160405160240162000e469190620010e8565b60408051601f198184030181529190526020810180516001600160e01b0390811663104c13eb60e21b1790915262000e7d16565b50565b62000e7a8162000e9360201b620023691760201c565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b613f8c80620057ed83390190565b613f89806200977983390190565b613f89806200d70283390190565b613f88806201168b83390190565b613f98806201561383390190565b613f8880620195ab83390190565b613f8e806201d53383390190565b613f8d80620214c183390190565b610b65806202544e83390190565b60005b8381101562000f4f57818101518382015260200162000f35565b50506000910152565b6000815180845262000f7281602086016020860162000f32565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062000fac9083018462000f58565b949350505050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111562000fe75762000fe762000fb4565b604051601f8501601f19908116603f0116810190828211818310171562001012576200101262000fb4565b816040528093508581528686860111156200102c57600080fd5b6200103c86602083018762000f32565b5050509392505050565b6000602082840312156200105957600080fd5b81516001600160401b038111156200107057600080fd5b8201601f810184136200108257600080fd5b62000fac8482516020840162000fca565b7002ab735b737bbb71031b430b4b71034b21607d1b815260008251620010c181601185016020870162000f32565b6f161031b0b73737ba103232b83637bc9760811b6011939091019283015250602101919050565b602081526000620010fd602083018462000f58565b9392505050565b6000602082840312156200111757600080fd5b81518015158114620010fd57600080fd5b60408152600460408201526314d0531560e21b6060820152608060208201526000620010fd608083018462000f58565b805160208083015191908110156200117a576000198160200360031b1b821691505b50919050565b6000602082840312156200119357600080fd5b81516001600160a01b0381168114620010fd57600080fd5b634e487b7160e01b600052603260045260246000fd5b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200121a57603f198886030184526200120785835162000f58565b94509285019290850190600101620011e8565b5092979650505050505050565b6040815260006200123c604083018562000f58565b905060018060a01b03831660208301529392505050565b61458a80620012636000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806376eadd3611610097578063b2bac94211610066578063b2bac942146101d6578063b84e3eda146101de578063c0406226146101f1578063f8ccbf47146101f957600080fd5b806376eadd361461019e5780637fb5297f146101a6578063ac019753146101ae578063afc98040146101ce57600080fd5b806343025920116100d35780634302592014610135578063521606d2146101485780635ef5270f1461015b5780636d77c7f71461018b57600080fd5b80630846f3f4146100fa57806310b559131461010f5780631fc7924814610122575b600080fd5b61010d610108366004613563565b610216565b005b61010d61011d3660046136ef565b610275565b61010d610130366004613865565b6102e1565b61010d610143366004613975565b61038e565b61010d610156366004613992565b61039c565b61016e610169366004613a22565b6104dc565b6040516001600160a01b0390911681526020015b60405180910390f35b61010d610199366004613b3e565b610559565b61010d61131d565b61010d611395565b6101c16101bc366004613b3e565b6113f2565b6040516101829190613c54565b61010d61150b565b61016e611523565b61010d6101ec366004613992565b611893565b61010d6119c9565b600c546102069060ff1681565b6040519015158152602001610182565b801561025657610252604051806040016040528060148152602001732232b83637bcb2b91d313937b0b231b0b9ba32b960611b81525083610275565b5050565b601080546001600160a01b0319166001600160a01b0384161790555050565b600c5460405163a815ff1560e01b81526101009091046001600160a01b03169063a815ff15906102ab9085908590600401613cb7565b600060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b505050505050565b60005b8151602001515181101561033a5781516020015180518290811061030a5761030a613ce1565b602002602001015160400151826040018181516103279190613d0d565b90525061033381613d20565b90506102e4565b5060005b815151518110156102525781515180518290811061035e5761035e613ce1565b6020026020010151604001518260200181815161037b9190613d0d565b90525061038781613d20565b905061033e565b610399816001610216565b50565b604080516020810190915260008082525b82518110156104d257817f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316636900a3ae8584815181106103fb576103fb613ce1565b60200260200101516040518263ffffffff1660e01b815260040161042191815260200190565b600060405180830381865afa15801561043e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104669190810190613d39565b604051602001610477929190613da6565b6040516020818303038152906040529150600183516104969190613dd5565b8110156104c057816040516020016104ae9190613de8565b60405160208183030381529060405291505b806104ca81613d20565b9150506103ad565b506102528161238a565b600c54604051631ce4db4f60e31b815260009161010090046001600160a01b03169063e726da7890610512908590600401613e0e565b602060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190613e21565b92915050565b604080516101e08101825260606101a082018181526101c08301829052825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101919091528161010001518161010001906001600160a01b031690816001600160a01b0316815250508160e001516001600160a01b031663ec342ad06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190613e21565b8161012001906001600160a01b031690816001600160a01b0316815250508160e001516001600160a01b0316639c5798396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190613e21565b8161014001906001600160a01b031690816001600160a01b0316815250508160e001516001600160a01b031663cff0ab966040518163ffffffff1660e01b8152600401608060405180830381865afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190613e3e565b8363ffffffff1693508262ffffff1692509050508260e0018360c00182815250828152505050600060405180606001604052808361012001516001600160a01b031681526020018361014001516001600160a01b031681526020018460e001516001600160a01b03166346ca626b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190613e9d565b81525090508161010001516001600160a01b0316636001af26828460c001518560e001516040518463ffffffff1660e01b815260040161086693929190613eb6565b602060405180830381865afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190613e9d565b6101608301526101008201516001600160a01b0316636001af2661090e836040805160608082018352600080835260208084018290529284015282519081018352838201516001600160a01b03908116825284511691810191909152918101519082015290565b8460c001518560e001516040518463ffffffff1660e01b815260040161093693929190613eb6565b602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190613e9d565b6101808301528251602084015160009161099091613dd5565b8361018001518461016001516109a69190613d0d565b6109b09190613ef2565b9050806109bb611523565b6001600160a01b0316311015610a7857610a386040518060800160405280604381526020016144cd60439139610a0d6109f2611523565b610a06906001600160a01b03163185613dd5565b60126123cd565b6040518060400160405280600d81526020016c6e617469766520746f6b656e7360981b8152506123db565b60405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682066756e647360801b60448201526064015b60405180910390fd5b610ab66040518060400160405280601d81526020017f43616c63756c6174696e67206261736520616e642071756f74652e2e2e000000815250612422565b610abf846113f2565b835260408051606081019091526021808252610ae391906144ac6020830139612422565b610aec836102e1565b60008361012001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b559190613f09565b60ff16905060008461014001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc39190613f09565b60ff169050610c0c610bd98660200151846123cd565b610be78760400151846123cd565b604051602001610bf8929190613f2c565b604051602081830303815290604052612422565b606085602001518661012001516001600160a01b03166370a08231610c2f611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c979190613e9d565b1015610ddd57610120860151604051632b65311f60e11b81526001600160a01b03909116600482015260008051602061448c833981519152906356ca623e90602401600060405180830381865afa158015610cf6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d1e9190810190613d39565b610dba8761012001516001600160a01b03166370a08231610d3d611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da59190613e9d565b8860200151610db49190613dd5565b856123cd565b604051602001610dcb929190613f9e565b60405160208183030381529060405290505b85604001518661014001516001600160a01b03166370a08231610dfe611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190613e9d565b1015610fe6576000815111610e8a5760405180602001604052806000815250610eab565b80604051602001610e9b9190614002565b6040516020818303038152906040525b610140870151604051632b65311f60e11b81526001600160a01b03909116600482015260008051602061448c833981519152906356ca623e90602401600060405180830381865afa158015610f04573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f2c9190810190613d39565b610fc28861014001516001600160a01b03166370a08231610f4b611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb39190613e9d565b8960400151610db49190613dd5565b604051602001610fd493929190614028565b60405160208183030381529060405290505b8051156110bb5760008051602061448c8339815191526356ca623e611009611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110759190810190613d39565b816040516020016110879291906140a3565b60405160208183030381529060405290506110a181612422565b8060405162461bcd60e51b8152600401610a6f9190613e0e565b6110f96040518060400160405280601b81526020017f417070726f76696e67206261736520616e642071756f74652e2e2e0000000000815250612422565b61110161150b565b61012086015160e0880151602088015160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118591906140f8565b5061118e61150b565b61014086015160e0880151604080890151905163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af11580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121291906140f8565b5061124a604051806040016040528060168152602001752837b83ab630ba34b7339026b0b733b937bb3297171760511b815250612422565b61125261150b565b8660e001516001600160a01b031663148b7cea8588600001518a608001518a602001518b604001516040518663ffffffff1660e01b81526004016112999493929190614115565b6000604051808303818588803b1580156112b257600080fd5b505af11580156112c6573d6000803e3d6000fd5b50505050506113146112d98560126123cd565b6040518060400160405280601f81526020017f6e617469766520746f6b656e7320757365642061732070726f766973696f6e0081525061244a565b50505050505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137b57600080fd5b505af115801561138f573d6000803e3d6000fd5b50505050565b60008051602061448c833981519152637fec2a8d6113b1611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561137b57600080fd5b6040805180820190915260608082526020820152600061141a8360a001518460c0015161248f565b60e0840151845160208601516060808801516040808a015160c08b015160808c015194850151948301519251633fce15c960e01b8152600481019790975260248701959095526044860188905262ffffff9092166064860152608485019190915260001960a485015260c48401929092526001600160701b031660e48301526001600160581b03166101048201529192506001600160a01b031690633fce15c99061012401600060405180830381865afa1580156114dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115049190810190614208565b9392505050565b60008051602061448c83398151915263e6962cdb6113b15b6010546000906001600160a01b03166118835761156b604051806040016040528060148152602001732232b83637bcb2b91d313937b0b231b0b9ba32b960611b8152506104dc565b601080546001600160a01b0319166001600160a01b03929092169182179055611883576115ba6040518060400160405280600b81526020016a212927a0a221a0a9aa22a960a91b8152506124b5565b1561160c576115eb6040518060400160405280600b81526020016a212927a0a221a0a9aa22a960a91b815250612541565b601080546001600160a01b0319166001600160a01b03929092169190911790555b6010546001600160a01b031661184257601080546001600160a01b0319163290811790915572a329c0648769a73afac7f9381e08fb43dbea72148061166f57506010546001600160a01b0316731804c8ab1f12e6bbf3894d4083f33e07309d1f38145b156118425760006116f9600e60009054906101000a90046001600160a01b03166001600160a01b031663a3f4df7e6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116f49190810190613d39565b612659565b6040516020016117099190614298565b60408051601f198184030181529082905263c1978d1f60e01b8252915060008051602061448c8339815191529063c1978d1f9061174a908490600401613e0e565b602060405180830381865afa925050508015611783575060408051601f3d908101601f1916820190925261178091810190613e9d565b60015b6117ae576117a9604051806080016040528060458152602001614510604591398261244a565b611840565b604051630884001960e21b81526004810182905260008051602061448c833981519152906322100064906024016020604051808303816000875af11580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e9190613e21565b601080546001600160a01b0319166001600160a01b0392909216919091179055505b505b6040805180820190915260148152732232b83637bcb2b91d313937b0b231b0b9ba32b960611b602082015260105461188391906001600160a01b0316610275565b506010546001600160a01b031690565b604080516020810190915260008082525b82518110156104d257817f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316636900a3ae8584815181106118f2576118f2613ce1565b60200260200101516040518263ffffffff1660e01b815260040161191891815260200190565b600060405180830381865afa158015611935573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261195d9190810190613d39565b60405160200161196e929190613da6565b60405160208183030381529060405291506001835161198d9190613dd5565b8110156119b757816040516020016119a59190613de8565b60405160208183030381529060405291505b806119c181613d20565b9150506118a4565b60006119f26040518060400160405280600681526020016512d05391115360d21b815250612541565b6040805160808101825260008082526020820181905291810182905260608101919091529091506000611a476040518060400160405280600b81526020016a151250d2d7d3d19194d15560aa1b8152506124b5565b15611baa5760405163c1978d1f60e01b815260206004820152600b60248201526a151250d2d7d3d19194d15560aa1b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad59190613e9d565b60405163c1978d1f60e01b815260206004820152600b60248201526a151250d2d7d3d19194d15560aa1b604482015290915060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611b3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b619190613e9d565b8162ffffff1614611baa5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908151250d2d7d3d19194d155606a1b6044820152606401610a6f565b611bd060405180604001604052806005815260200164524154494f60d81b8152506124b5565b15611d2c5762ffffff811615611c285760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920524154494f206f72205449434b5f4f4646534554000000000000006044820152606401610a6f565b60405163c1978d1f60e01b8152602060048201526005602482015264524154494f60d81b6044820152600090611ce190620186a09060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb79190613e9d565b611cc990670de0b6b3a7640000613ef2565b611cd391906142de565b670de0b6b3a764000061248f565b9050809150808262ffffff1614611d2a5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726174696f60981b6044820152606401610a6f565b505b60405163c1978d1f60e01b815260206004820152600c60248201526b50524943455f504f494e545360a01b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db69190613e9d565b6001600160701b0316606083015260405163c1978d1f60e01b815260206004820152600c60248201526b50524943455f504f494e545360a01b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4e9190613e9d565b82606001516001600160701b031614611ea05760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642050524943455f504f494e545360601b6044820152606401610a6f565b60405163c1978d1f60e01b8152602060048201526009602482015268535445505f53495a4560b81b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f279190613e9d565b6001600160581b03166040838101919091525163c1978d1f60e01b8152602060048201526009602482015268535445505f53495a4560b81b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbe9190613e9d565b82604001516001600160581b03161461200d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c696420535445505f53495a4560781b6044820152606401610a6f565b6040805161012081019182905263c1978d1f60e01b909152602061012482015260046101448201526346524f4d60e01b610164820152612364908060008051602061448c83398151915263c1978d1f6101848301602060405180830381865afa15801561207e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a29190613e9d565b815260405163c1978d1f60e01b81526020600482018190526002602483015261544f60f01b60448301529091019060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015612106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212a9190613e9d565b815260405163c1978d1f60e01b8152602060048201819052600f60248301526e08c92a4a6a8be82a696be929c888ab608b1b60448301529091019060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa15801561219b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613e9d565b815262ffffff8416602082015260408082018690525163c1978d1f60e01b815260609091019060008051602061448c8339815191529063c1978d1f90612226906004016020808252600a9082015269494e49545f51554f544560b01b604082015260600190565b602060405180830381865afa158015612243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122679190613e9d565b815260405163c1978d1f60e01b81526020600482018190526006602483015265564f4c554d4560d01b60448301529091019060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa1580156122cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f39190613e9d565b8152602001856001600160a01b031681526020016123546040518060400160405280600a81526020016926a3ab2fa922a0a222a960b11b8152506040518060400160405280600981526020016826b3bb2932b0b232b960b91b8152506127ee565b6001600160a01b03169052610559565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103998160405160240161239e9190613e0e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261287f565b60606115048383604e612888565b6123648383836040516024016123f3939291906142f2565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905261287f565b6103996040518060400160405280600a8152602001691b5b33336d2a1b5b306d60b01b815250825b6102528282604051602401612460929190614335565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905261287f565b600080600061249e8585612aeb565b915091506124ac8282612d17565b95945050505050565b60405163f877cb1960e01b815260009060008051602061448c8339815191529063f877cb19906124e9908590600401613e0e565b600060405180830381865afa92505050801561252757506040513d6000823e601f3d908101601f191682016040526125249190810190613d39565b60015b61253357506000919050565b50600192915050565b919050565b60405163350d56bf60e01b815260009060008051602061448c8339815191529063350d56bf90612575908590600401613e0e565b602060405180830381865afa9250505080156125ae575060408051601f3d908101601f191682019092526125ab91810190613e21565b60015b61055357600e5460405163f877cb1960e01b81526001600160a01b039091169063693ec85e9060008051602061448c8339815191529063f877cb19906125f8908790600401613e0e565b600060405180830381865afa158015612615573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261263d9190810190613d39565b6040518263ffffffff1660e01b81526004016105129190613e0e565b805160609082906001600160401b038111156126775761267761359c565b6040519080825280601f01601f1916602001820160405280156126a1576020820181803683370190505b50915060005b81518110156127e75760008282815181106126c4576126c4613ce1565b01602001516001600160f81b03191690506000606160f81b82108015906126f95750603d60f91b6001600160f81b0319831611155b905080806127145750605f60f81b6001600160f81b03198316145b806127465750604160f81b6001600160f81b03198316108015906127465750602d60f91b6001600160f81b0319831611155b61279e5760405162461bcd60e51b815260206004820152602360248201527f73696d706c654361706974616c697a6520696e707574206f7574206f662072616044820152626e676560e81b6064820152608401610a6f565b806127a957816127b4565b60208260f81c0360f81b5b8584815181106127c6576127c6613ce1565b60200101906001600160f81b031916908160001a90535050506001016126a7565b5050919050565b60006127f9836124b5565b1561280e5761280783612541565b9050610553565b600e5460405163349f642f60e11b81526001600160a01b039091169063693ec85e9061283e908590600401613e0e565b602060405180830381865afa15801561285b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115049190613e21565b61039981612369565b604080516101808101825260016101408201818152600360fc1b610160840152825282518084018452818152603160f81b6020828101919091528084019190915283518085018552828152601960f91b818301528385015283518085018552828152603360f81b8183015260608481019190915284518086018652838152600d60fa1b81840152608085015284518086018652838152603560f81b8184015260a085015284518086018652838152601b60f91b8184015260c085015284518086018652838152603760f81b8184015260e085015284518086018652838152600760fb1b818401526101008501528451808601909552918452603960f81b908401526101208201929092526000908190819081905b878510806129aa5750600089115b15612a8c576129ba600a8a61435a565b935081806129c757508315155b915081806129d55750878510155b15612a2e57876129e58689613d0d565b10612a29578084600a81106129fc576129fc613ce1565b602002015186604051602001612a13929190613da6565b6040516020818303038152906040529550612a2e565b600192505b818015612a44575087612a42866001613d0d565b145b15612a6c5785604051602001612a5a919061436e565b60405160208183030381529060405295505b84612a7681613d20565b9550612a859050600a8a6142de565b985061299c565b848810612ab65785604051602001612aa49190614397565b60405160208183030381529060405295505b8215612adf5785604051602001612acd91906143b3565b60405160208183030381529060405295505b50505050509392505050565b60008060016001607f1b03841115612b455760405162461bcd60e51b815260206004820152601f60248201527f6d67762f726174696f46726f6d566f6c2f696e626f756e642f746f6f426967006044820152606401610a6f565b60016001607f1b03831115612b9c5760405162461bcd60e51b815260206004820181905260248201527f6d67762f726174696f46726f6d566f6c2f6f7574626f756e642f746f6f4269676044820152606401610a6f565b82600003612bbf57506ffffb12cdf1087799c03e5a811a7aaa1c90506000612d10565b83600003612be257506f800276a52a62a71c29fc1cc441e523bc905060ff612d10565b600083608086901b81612bf757612bf76142c8565b0490506000612c8f827e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f6307c4acdd60e01b6fffffffffffffffffffffffffffffffff831160071b8315600890811b9190911784811c6001600160401b031060061b1784811c63ffffffff1060051b1793841c600181901c17600281901c17600481901c179081901c17601081901c170260fb1c1a1790565b905081600003612ce15760405162461bcd60e51b815260206004820152601e60248201527f6d67762f726174696f46726f6d566f6c756d65732f7a65726f526174696f00006044820152606401610a6f565b607f811115612d0257607e1981019190911c9250608003607f019050612d10565b607f0390811b925060800190505b9250929050565b6000612d3683836f800276a52a62a71c29fc1cc441e523bc60ff613041565b15612d835760405162461bcd60e51b815260206004820152601860248201527f6d67762f7469636b46726f6d526174696f2f746f6f4c6f7700000000000000006044820152606401610a6f565b612da06ffffb12cdf1087799c03e5a811a7aaa1c60008585613041565b15612ded5760405162461bcd60e51b815260206004820152601960248201527f6d67762f7469636b46726f6d526174696f2f746f6f48696768000000000000006044820152606401610a6f565b60006040612dfc84607f6143da565b901b90506000612e0d607f80613dd5565b85901c800260c081901c6780000000000000001692909217607f83811c60ff94851c1c800260c181901c674000000000000000169290921782821c92851c9290921c800260c281901c672000000000000000169290921782821c92851c9290921c800260c381901c671000000000000000169290921782821c92851c9290921c800260c481901c670800000000000000169290921782821c92851c9290921c800260c581901c670400000000000000169290921782821c92851c9290921c800260c681901c670200000000000000169290921782821c92851c9290921c800260c781901c670100000000000000169290921782821c92851c9290921c800260c881901c6680000000000000169290921782821c92851c9290921c800260c981901c6640000000000000169290921782821c92851c9290921c800260ca81901c6620000000000000169290921782821c92851c9290921c800260cb81901c6610000000000000169290921782821c9290941c9190911c800260cc81901c6608000000000000169390931792901c90506000612fb183691b13d180eb882abba643614401565b905060006080612fd16f0147b240d5bf82739a122ad496972236846143da565b901d905060006080612ff3846fd9e63e52eeeb7875a857348794e73675614431565b901d905060008061300383613060565b9150915060006130158b8b8585613041565b9050838514806130225750805b1561302f57849850613033565b8398505b505050505050505092915050565b6000818411806124ac575081841480156124ac57505050909110919050565b60008061306c836130d2565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e1982850101908113156130ba5793841c936130c4565b8060000385901b94505b81607f039350505050915091565b60008060008084126130e457836130ed565b6130ed84614459565b9050620d89e88111156131425760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e64730000000000000000006044820152606401610a6f565b60006001821615613165576ffff97272373d413259a46990580e2139935061316d565b600160801b93505b6002821615613197576080613192856ffff2e50f5f656932ef12357cf3c7fdcb613ef2565b901c93505b60048216156131c15760806131bc856fffe5caca7e10e4e61c3624eaa0941ccf613ef2565b901c93505b60088216156131eb5760806131e6856fffcb9843d60f6159c9db58835c926643613ef2565b901c93505b6010821615613215576080613210856fff973b41fa98c081472e6896dfb254bf613ef2565b901c93505b602082161561323f57608061323a856fff2ea16466c96a3843ec78b326b52860613ef2565b901c93505b6040821615613269576080613264856ffe5dee046a99a2a811c461f1969c3052613ef2565b901c93505b608082161561329357608061328e856ffcbe86c7900a88aedcffc83b479aa3a3613ef2565b901c93505b6101008216156132be5760806132b9856ff987a7253ac413176f2b074cf7815e53613ef2565b901c93505b6102008216156132e95760806132e4856ff3392b0822b70005940c7a398e4b70f2613ef2565b901c93505b61040082161561331457608061330f856fe7159475a2c29b7443b29c7fa6e889d8613ef2565b901c93505b61080082161561333f57608061333a856fd097f3bdfd2022b8845ad8f792aa5825613ef2565b901c93505b61100082161561336a576080613365856fa9f746462d870fdf8a65dc1f90e061e4613ef2565b901c93505b6120008216156133a2576080613390856fe1b0d342ada5437121767bec575e65ed613ef2565b901c935061339f600182614431565b90505b6140008216156133da5760806133c8856fc6f84d7e5f423f66048c541550bf3e96613ef2565b901c93506133d7600282614431565b90505b618000821615613412576080613400856f9aa508b5b7a84e1c677de54f3e99bc8f613ef2565b901c935061340f600482614431565b90505b6201000082161561344b576080613439856fbad5f1bdb70232cd33865244bdcc089c613ef2565b901c9350613448600982614431565b90505b62020000821615613484576080613472856f885b9613d7e87aa498106fb7fa5edd37613ef2565b901c9350613481601282614431565b90505b620400008216156134bd5760806134ab856f9142e0723efb884889d1f447715afacd613ef2565b901c93506134ba602582614431565b90505b620800008216156134f65760806134e4856fa4d9a773d61316918f140bd96e8e6814613ef2565b901c93506134f3604b82614431565b90505b60008513156135175760018485600003040193508061351490614459565b90505b613522816080614431565b92505050915091565b613533614475565b565b6001600160a01b038116811461039957600080fd5b801515811461039957600080fd5b803561253c8161354a565b6000806040838503121561357657600080fd5b823561358181613535565b915060208301356135918161354a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156135d4576135d461359c565b60405290565b604080519081016001600160401b03811182821017156135d4576135d461359c565b6040516101a081016001600160401b03811182821017156135d4576135d461359c565b60405161012081016001600160401b03811182821017156135d4576135d461359c565b604051601f8201601f191681016001600160401b038111828210171561366a5761366a61359c565b604052919050565b60006001600160401b0382111561368b5761368b61359c565b50601f01601f191660200190565b600082601f8301126136aa57600080fd5b81356136bd6136b882613672565b613642565b8181528460208386010111156136d257600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561370257600080fd5b82356001600160401b0381111561371857600080fd5b61372485828601613699565b925050602083013561359181613535565b60006001600160401b0382111561374e5761374e61359c565b5060051b60200190565b600082601f83011261376957600080fd5b813560206137796136b883613735565b8281526060928302850182019282820191908785111561379857600080fd5b8387015b858110156137df5781818a0312156137b45760008081fd5b6137bc6135b2565b81358152858201358682015260408083013590820152845292840192810161379c565b5090979650505050505050565b6000604082840312156137fe57600080fd5b6138066135da565b905081356001600160401b038082111561381f57600080fd5b61382b85838601613758565b8352602084013591508082111561384157600080fd5b5061384e84828501613758565b60208301525092915050565b803561253c81613535565b60006020828403121561387757600080fd5b81356001600160401b038082111561388e57600080fd5b908301906101a082860312156138a357600080fd5b6138ab6135fc565b8235828111156138ba57600080fd5b6138c6878286016137ec565b82525060208301356020820152604083013560408201526138e960608401613558565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100915061392682840161385a565b82820152610120915061393a82840161385a565b82820152610140915061394e82840161385a565b91810191909152610160828101359082015261018091820135918101919091529392505050565b60006020828403121561398757600080fd5b813561150481613535565b600060208083850312156139a557600080fd5b82356001600160401b038111156139bb57600080fd5b8301601f810185136139cc57600080fd5b80356139da6136b882613735565b81815260059190911b820183019083810190878311156139f957600080fd5b928401925b82841015613a17578335825292840192908401906139fe565b979650505050505050565b600060208284031215613a3457600080fd5b81356001600160401b03811115613a4a57600080fd5b613a5684828501613699565b949350505050565b62ffffff8116811461039957600080fd5b803561253c81613a5e565b63ffffffff8116811461039957600080fd5b6001600160581b038116811461039957600080fd5b6001600160701b038116811461039957600080fd5b600060808284031215613ac857600080fd5b604051608081018181106001600160401b0382111715613aea57613aea61359c565b6040529050808235613afb81613a7a565b81526020830135613b0b81613a5e565b60208201526040830135613b1e81613a8c565b60408201526060830135613b3181613aa1565b6060919091015292915050565b60006101808284031215613b5157600080fd5b613b5961361f565b823581526020830135602082015260408301356040820152613b7d60608401613a6f565b6060820152613b8f8460808501613ab6565b60808201526101008084013560a083015261012084013560c0830152613bb8610140850161385a565b60e0830152613bca610160850161385a565b908201529392505050565b600081518084526020808501945080840160005b83811015613c1b5781518051885283810151848901526040908101519088015260609096019590820190600101613be9565b509495945050505050565b6000815160408452613c3b6040850182613bd5565b9050602083015184820360208601526124ac8282613bd5565b6020815260006115046020830184613c26565b60005b83811015613c82578181015183820152602001613c6a565b50506000910152565b60008151808452613ca3816020860160208601613c67565b601f01601f19169290920160200192915050565b604081526000613cca6040830185613c8b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561055357610553613cf7565b600060018201613d3257613d32613cf7565b5060010190565b600060208284031215613d4b57600080fd5b81516001600160401b03811115613d6157600080fd5b8201601f81018413613d7257600080fd5b8051613d806136b882613672565b818152856020838501011115613d9557600080fd5b6124ac826020830160208601613c67565b60008351613db8818460208801613c67565b835190830190613dcc818360208801613c67565b01949350505050565b8181038181111561055357610553613cf7565b60008251613dfa818460208701613c67565b61016160f51b920191825250600201919050565b6020815260006115046020830184613c8b565b600060208284031215613e3357600080fd5b815161150481613535565b60008060008060808587031215613e5457600080fd5b8451613e5f81613a7a565b6020860151909450613e7081613a5e565b6040860151909350613e8181613a8c565b6060860151909250613e9281613aa1565b939692955090935050565b600060208284031215613eaf57600080fd5b5051919050565b83516001600160a01b03908116825260208086015190911690820152604093840151938101939093526060830191909152608082015260a00190565b808202811582820484141761055357610553613cf7565b600060208284031215613f1b57600080fd5b815160ff8116811461150457600080fd5b7f526571756972656420636f6c6c61746572616c206f6620626173652069732000815260008351613f6481601f850160208801613c67565b6d01030b7321038bab7ba329034b9960951b601f918401918201528351613f9281602d840160208801613c67565b01602d01949350505050565b7009cdee840cadcdeeaced040c4c2e6ca405607b1b815260008351613fca816011850160208801613c67565b6b01497102232b334b1b4ba1d160a51b6011918401918201528351613ff681601d840160208801613c67565b01601d01949350505050565b60008251614014818460208701613c67565b61017160f51b920191825250600201919050565b6000845161403a818460208901613c67565b7109cdee840cadcdeeaced040e2eadee8ca40560731b9083019081528451614069816012840160208901613c67565b6b01497102232b334b1b4ba1d160a51b60129290910191820152835161409681601e840160208801613c67565b01601e0195945050505050565b6c0313937b0b231b0b9ba32b91d1609d1b8152600083516140cb81600d850160208801613c67565b600160fd1b600d9184019182015283516140ec81600e840160208801613c67565b01600e01949350505050565b60006020828403121561410a57600080fd5b81516115048161354a565b60e08152600061412860e0830187613c26565b905063ffffffff855116602083015262ffffff60208601511660408301526001600160581b0360408601511660608301526001600160701b0360608601511660808301528360a08301528260c083015295945050505050565b600082601f83011261419257600080fd5b815160206141a26136b883613735565b828152606092830285018201928282019190878511156141c157600080fd5b8387015b858110156137df5781818a0312156141dd5760008081fd5b6141e56135b2565b8151815285820151868201526040808301519082015284529284019281016141c5565b60006020828403121561421a57600080fd5b81516001600160401b038082111561423157600080fd5b908301906040828603121561424557600080fd5b61424d6135da565b82518281111561425c57600080fd5b61426887828601614181565b82525060208301518281111561427d57600080fd5b61428987828601614181565b60208301525095945050505050565b600082516142aa818460208701613c67565b6b5f505249564154455f4b455960a01b920191825250600c01919050565b634e487b7160e01b600052601260045260246000fd5b6000826142ed576142ed6142c8565b500490565b6060815260006143056060830186613c8b565b82810360208401526143178186613c8b565b9050828103604084015261432b8185613c8b565b9695505050505050565b6040815260006143486040830185613c8b565b82810360208401526124ac8185613c8b565b600082614369576143696142c8565b500690565b601760f91b81526000825161438a816001850160208701613c67565b9190910160010192915050565b600360fc1b81526000825161438a816001850160208701613c67565b600082516143c5818460208701613c67565b6271405360e91b920191825250600301919050565b81810360008312801583831316838312821617156143fa576143fa613cf7565b5092915050565b80820260008212600160ff1b8414161561441d5761441d613cf7565b818105831482151761055357610553613cf7565b808201828112600083128015821682158216171561445157614451613cf7565b505092915050565b6000600160ff1b820161446e5761446e613cf7565b5060000390565b634e487b7160e01b600052605160045260246000fdfe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d4576616c756174696e6720726571756972656420636f6c6c61746572616c2e2e2e42726f616463617374657220646f6573206e6f74206861766520656e6f7567682066756e647320746f2070726f766973696f6e206f66666572732e204d697373696e672573206e6f7420666f756e64206f72206e6f7420706172736561626c652061732075696e742c207573696e672064656661756c742062726f6164636173742073656e646572a26469706673582212209e5571b5ad9c3c94647644c32786b37c7e2d1bb4a6b218468068384458e7268b64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f906200004990826200031b565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e90826200031b565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000268565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000268565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b50506001600e555050604080518082019091526008815267657468657265756d60c01b6020820152600f906200023390826200031b565b506040805180820190915260078152661b585a5b9b995d60ca1b60208201526010906200026190826200031b565b50620003e7565b610b65806200342783390190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a157607f821691505b602082108103620002c257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031657600081815260208120601f850160051c81016020861015620002f15750805b601f850160051c820191505b818110156200031257828155600101620002fd565b5050505b505050565b81516001600160401b0381111562000337576200033762000276565b6200034f816200034884546200028c565b84620002c8565b602080601f8311600181146200038757600084156200036e5750858301515b600019600386901b1c1916600185901b17855562000312565b600085815260208120601f198616915b82811015620003b85788860151825594840194600190910190840162000397565b5085821015620003d75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f76000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea26469706673582212208a254159e06fbe290510e0360d927896d46dc63090e516399684248831310bdc64736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f9062000049908262000318565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e908262000318565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000265565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000265565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b50506005600e555050604080518082019091526006815265676f65726c6960d01b6020820152600f9062000231908262000318565b50604080518082019091526006815265676f65726c6960d01b60208201526010906200025e908262000318565b50620003e4565b610b65806200342483390190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029e57607f821691505b602082108103620002bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031357600081815260208120601f850160051c81016020861015620002ee5750805b601f850160051c820191505b818110156200030f57828155600101620002fa565b5050505b505050565b81516001600160401b0381111562000334576200033462000273565b6200034c8162000345845462000289565b84620002c5565b602080601f8311600181146200038457600084156200036b5750858301515b600019600386901b1c1916600185901b1785556200030f565b600085815260208120601f198616915b82811015620003b55788860151825594840194600190910190840162000394565b5085821015620003d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea2646970667358221220a94a14a4d819d41e4d33d70549a4fb8ff1e3d376ef22c4181607fd8c3c6b824764736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f9062000049908262000318565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e908262000318565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000265565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000265565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b50506089600e5550506040805180820190915260078152663837b63cb3b7b760c91b6020820152600f9062000232908262000318565b506040805180820190915260058152646d6174696360d81b60208201526010906200025e908262000318565b50620003e4565b610b65806200342483390190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029e57607f821691505b602082108103620002bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031357600081815260208120601f850160051c81016020861015620002ee5750805b601f850160051c820191505b818110156200030f57828155600101620002fa565b5050505b505050565b81516001600160401b0381111562000334576200033462000273565b6200034c8162000345845462000289565b84620002c5565b602080601f8311600181146200038457600084156200036b5750858301515b600019600386901b1c1916600185901b1785556200030f565b600085815260208120601f198616915b82811015620003b55788860151825594840194600190910190840162000394565b5085821015620003d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f46000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea2646970667358221220913a794af173b2e5ce68fede628674781bfce4e3d4732ed49d176845f1df7d2c64736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f9062000049908262000317565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e908262000317565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000264565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000264565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b505061044d600e5550506040805180820190915260058152647a6b65766d60d81b6020820152600f9062000231908262000317565b506040805180820190915260058152647a6b65766d60d81b60208201526010906200025d908262000317565b50620003e3565b610b65806200342383390190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029d57607f821691505b602082108103620002be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031257600081815260208120601f850160051c81016020861015620002ed5750805b601f850160051c820191505b818110156200030e57828155600101620002f9565b5050505b505050565b81516001600160401b0381111562000333576200033362000272565b6200034b8162000344845462000288565b84620002c4565b602080601f8311600181146200038357600084156200036a5750858301515b600019600386901b1c1916600185901b1785556200030e565b600085815260208120601f198616915b82811015620003b45788860151825594840194600190910190840162000393565b5085821015620003d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f36000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea2646970667358221220f06760937eb2d474b3149e7cdd53e7ae03b34992d9b8c46107cf2dfb035b69f964736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f9062000049908262000327565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e908262000327565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000274565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000274565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b50506105a2600e55505060408051808201909152600d81526c746573746e65745f7a6b65766d60981b6020820152600f9062000239908262000327565b5060408051808201909152600d81526c746573746e65745f7a6b65766d60981b60208201526010906200026d908262000327565b50620003f3565b610b65806200343383390190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002ad57607f821691505b602082108103620002ce57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200032257600081815260208120601f850160051c81016020861015620002fd5750805b601f850160051c820191505b818110156200031e5782815560010162000309565b5050505b505050565b81516001600160401b0381111562000343576200034362000282565b6200035b8162000354845462000298565b84620002d4565b602080601f8311600181146200039357600084156200037a5750858301515b600019600386901b1c1916600185901b1785556200031e565b600085815260208120601f198616915b82811015620003c457888601518255948401946001909101908401620003a3565b5085821015620003e35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620004036000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea2646970667358221220e3d7e4842760173e55d4fd2630fe2aaa958d867b58d5f38d4f0d100ed752592564736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f9062000049908262000317565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e908262000317565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000264565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000264565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b5050617a69600e5550506040805180820190915260058152641b1bd8d85b60da1b6020820152600f9062000231908262000317565b506040805180820190915260058152641b1bd8d85b60da1b60208201526010906200025d908262000317565b50620003e3565b610b65806200342383390190565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200029d57607f821691505b602082108103620002be57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031257600081815260208120601f850160051c81016020861015620002ed5750805b601f850160051c820191505b818110156200030e57828155600101620002f9565b5050505b505050565b81516001600160401b0381111562000333576200033362000272565b6200034b8162000344845462000288565b84620002c4565b602080601f8311600181146200038357600084156200036a5750858301515b600019600386901b1c1916600185901b1785556200030e565b600085815260208120601f198616915b82811015620003b45788860151825594840194600190910190840162000393565b5085821015620003d35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f36000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea264697066735822122081393ff1385698efa8b6c947f8635cc3c05b5f3c870c2d84d8a30cb480e7800064736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f906200004990826200031d565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e90826200031d565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a8906200026a565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b906200026a565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b505061a4b1600e555050604080518082019091526008815267617262697472756d60c01b6020820152600f906200023490826200031d565b50604080518082019091526008815267617262697472756d60c01b60208201526010906200026390826200031d565b50620003e9565b610b65806200342983390190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a357607f821691505b602082108103620002c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031857600081815260208120601f850160051c81016020861015620002f35750805b601f850160051c820191505b818110156200031457828155600101620002ff565b5050505b505050565b81516001600160401b0381111562000339576200033962000278565b62000351816200034a84546200028e565b84620002ca565b602080601f831160018114620003895760008415620003705750858301515b600019600386901b1c1916600185901b17855562000314565b600085815260208120601f198616915b82811015620003ba5788860151825594840194600190910190840162000399565b5085821015620003d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f96000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea2646970667358221220bf22496f7ff4acf29acb201594e3e8de7f5682de4774f5d1f57edbab958a316464736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c6343000814003360048054600160ff199182168117909255600c8054909116909117905560c0604052600b60809081526a67656e657269634e616d6560a81b60a052600f906200004990826200031c565b5060408051808201909152600e81526d67656e657269634e6574776f726b60901b60208201526010906200007e90826200031c565b506013805460ff60a01b191690553480156200009957600080fd5b50604051620000a89062000269565b604051809103906000f080158015620000c5573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b1580156200013457600080fd5b505af115801562000149573d6000803e3d6000fd5b505050506040516200015b9062000269565b604051809103906000f08015801562000178573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b03929092169182179055604051632bf116ef60e11b81526004810191909152737109709ecfa91a80626ff3989d68f67f5b1dd12d906357e22dde90602401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b505062013881600e5550506040805180820190915260068152656d756d62616960d01b6020820152600f906200023390826200031c565b506040805180820190915260088152676d617469636d756d60c01b60208201526010906200026290826200031c565b50620003e8565b610b65806200342883390190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002a257607f821691505b602082108103620002c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031757600081815260208120601f850160051c81016020861015620002f25750805b601f850160051c820191505b818110156200031357828155600101620002fe565b5050505b505050565b81516001600160401b0381111562000338576200033862000277565b62000350816200034984546200028d565b84620002c9565b602080601f8311600181146200038857600084156200036f5750858301515b600019600386901b1c1916600185901b17855562000313565b600085815260208120601f198616915b82811015620003b95788860151825594840194600190910190840162000398565b5085821015620003d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61303080620003f86000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638759e6d1116100ad578063b6ced01011610071578063b6ced01014610241578063cd5e3c5d1461024a578063ec7eedc414610252578063f4b2dce014610267578063f8ccbf471461027a57600080fd5b80638759e6d1146101f25780638c1a359d146101fa578063a3f4df7e14610203578063a815ff151461020b578063a8e522941461021e57600080fd5b80635398a96b116100f45780635398a96b1461017f578063554cfbdb14610187578063693ec85e146101b2578063816eef4c146101c557806385e1f4d0146101db57600080fd5b8063014cce64146101265780630a9254e41461014f5780631f7b4f30146101595780634fe945fe1461016c575b600080fd5b610139610134366004611e96565b610287565b6040516101469190611f1a565b60405180910390f35b6101576102ba565b005b610157610167366004611f2d565b610a43565b61013961017a366004611f46565b610ab8565b610157610b74565b61019a610195366004611e96565b610be2565b6040516001600160a01b039091168152602001610146565b61019a6101c0366004611e96565b610ce0565b6101cd610d0c565b604051610146929190611fcd565b6101e4600e5481565b604051908152602001610146565b610139610d92565b6101e4600d5481565b610139610e20565b610157610219366004612089565b610e2d565b61023161022c366004611e96565b610f76565b6040519015158152602001610146565b6101e460115481565b610157610f93565b61025a610fd1565b60405161014691906120da565b610139610275366004612159565b6111ac565b600c546102319060ff1681565b60606000610293610fd1565b90506102b381602001518460405180602001604052806000815250610ab8565b9392505050565b60125460408051808201909152600b81526a436f6e7465787420454e5360a81b60208201526102f2916001600160a01b0316906111d1565b60135460408051808201909152600c81526b4465706c6f79656420454e5360a01b602082015261032b916001600160a01b0316906111d1565b600e546000036103c55760405162461bcd60e51b815260206004820152605460248201527f4e6f20666f726b2073656c65637465643a20796f752073686f756c642070696360448201527f6b206120737562636c617373206f662047656e65726963466f726b20776974686064820152731030903737b73d32b9379021a420a4a72fa4a21760611b608482015260a4015b60405180910390fd5b604051632bf116ef60e11b8152306004820152600080516020612fac833981519152906357e22dde90602401600060405180830381600087803b15801561040b57600080fd5b505af115801561041f573d6000803e3d6000fd5b50505050600061044d6040518060400160405280600781526020016618dbdb9d195e1d60ca1b81525061125f565b905060005b81518110156105535760125482516001600160a01b039091169063a815ff1590849084908110610484576104846121bc565b6020026020010151602001518484815181106104a2576104a26121bc565b6020026020010151600001516040518363ffffffff1660e01b81526004016104cb9291906121d2565b600060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b50505050610541828281518110610512576105126121bc565b602002602001015160000151838381518110610530576105306121bc565b6020026020010151602001516111d1565b8061054b81612212565b915050610452565b5061057d6040518060400160405280600881526020016719195c1b1bde595960c21b81525061125f565b905060005b81518110156105e1576105cf8282815181106105a0576105a06121bc565b6020026020010151602001518383815181106105be576105be6121bc565b602002602001015160000151610e2d565b806105d981612212565b915050610582565b50620decaf608c1b803b156106bb57600080826001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610631573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106599190810190612328565b9150915060005b82518110156106b7576106a583828151811061067e5761067e6121bc565b6020026020010151838381518110610698576106986121bc565b6020026020010151610e2d565b806106af81612212565b915050610660565b5050505b600e544614610a2c576011546000036107b45760405163975a6ce960e01b8152600080516020612fac833981519152906331ba349890829063975a6ce99061070890600f90600401612425565b600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261074d91908101906124b0565b6040518263ffffffff1660e01b81526004016107699190611f1a565b6020604051808303816000875af1158015610788573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ac91906124e4565b600d5561089a565b60405163975a6ce960e01b8152600080516020612fac83398151915290636ba3ba2b90829063975a6ce9906107ee90600f90600401612425565b600060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083391908101906124b0565b6011546040518363ffffffff1660e01b81526004016108539291906124fd565b6020604051808303816000875af1158015610872573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089691906124e4565b600d555b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf682790602401600060405180830381600087803b1580156108e557600080fd5b505af11580156108f9573d6000803e3d6000fd5b50505050600e544614610a2857600e5460405163348051d760e11b81526004810191909152600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097c91908101906124b0565b60405163348051d760e11b8152466004820152600f90600080516020612fac83398151915290636900a3ae90602401600060405180830381865afa1580156109c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f091908101906124b0565b604051602001610a0293929190612592565b60408051601f198184030181529082905262461bcd60e51b82526103bc91600401611f1a565b5050565b6013805460ff60a01b1916600160a01b1790555050565b610a4b6114ac565b600d546040516335d320e960e21b8152600481019190915260248101829052600080516020612fac8339815191529063d74c83a490604401600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b5050505050565b60607f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015610b1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4391908101906124b0565b8484601085604051602001610b5c95949392919061260a565b60405160208183030381529060405290509392505050565b610b7c6114ac565b600d54604051639ebf682760e01b81526004810191909152600080516020612fac83398151915290639ebf6827906024015b600060405180830381600087803b158015610bc857600080fd5b505af1158015610bdc573d6000803e3d6000fd5b50505050565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610c13908590600401611f1a565b602060405180830381865afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c549190612695565b90506001600160a01b038116610cdb57601354604051631ce4db4f60e31b81526001600160a01b039091169063e726da7890610c94908590600401611f1a565b602060405180830381865afa158015610cb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd59190612695565b92915050565b919050565b6000610ceb82610be2565b90506001600160a01b038116610cdb5781604051602001610a0291906126b2565b606080601360009054906101000a90046001600160a01b03166001600160a01b03166310c4e8b06040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d62573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d8a9190810190612328565b915091509091565b60108054610d9f906123eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610dcb906123eb565b8015610e185780601f10610ded57610100808354040283529160200191610e18565b820191906000526020600020905b815481529060010190602001808311610dfb57829003601f168201915b505050505081565b600f8054610d9f906123eb565b601254604051631ce4db4f60e31b81526000916001600160a01b03169063e726da7890610e5e908690600401611f1a565b602060405180830381865afa158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612695565b6001600160a01b031614610f085760405162461bcd60e51b815260206004820152602a60248201527f466f726b3a20636f6e74657874206164647265737365732063616e6e6f742062604482015269329031b430b733b2b21760b11b60648201526084016103bc565b60135460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590610f3a90859085906004016121d2565b600060405180830381600087803b158015610f5457600080fd5b505af1158015610f68573d6000803e3d6000fd5b50505050610a2881836111d1565b600080610f8283610be2565b6001600160a01b0316141592915050565b610f9b6114ac565b600d5460405163d9bbf3a160e01b81526004810191909152600080516020612fac8339815191529063d9bbf3a190602401610bae565b604080518082019091526060808252602082015260007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa158015611048573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261107091908101906124b0565b90506000816040516020016110859190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb11906110c9908590600401611f1a565b600060405180830381865afa1580156110e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261110e91908101906124b0565b604051633541300560e11b8152909150600090600080516020612fac83398151915290636a82600a90611145908590600401611f1a565b600060405180830381865afa158015611162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261118a9190810190612845565b90506000818060200190518101906111a2919061288d565b9695505050505050565b606060006111b8610fd1565b90506111c981602001518585610ab8565b949350505050565b604051600080516020612fac8339815191529063c657c7189084906111fd908590600f9060200161291d565b6040516020818303038152906040526040518363ffffffff1660e01b815260040161122992919061295b565b600060405180830381600087803b15801561124357600080fd5b505af1158015611257573d6000803e3d6000fd5b505050505050565b6060600061126c83611508565b60408051634777f3cf60e01b81526004810191909152601860448201527f4d47565f524541445f4144445245535345535f50415448530000000000000000606482015260016024820152909150600090600080516020612fac83398151915290634777f3cf906084016020604051808303816000875af11580156112f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611318919061297f565b905080611326575092915050565b6040805160008082526020820190925281611364565b60408051808201909152600081526060602082015281526020019060019003908161133c5790505b50905081156113795761137685611671565b90505b60008151845161138991906129a1565b6001600160401b038111156113a0576113a0611dab565b6040519080825280602002602001820160405280156113e657816020015b6040805180820190915260008152606060208201528152602001906001900390816113be5790505b50905060005b845181101561143f57848181518110611407576114076121bc565b6020026020010151828281518110611421576114216121bc565b6020026020010181905250808061143790612212565b9150506113ec565b5060005b82518110156114a25782818151811061145e5761145e6121bc565b60200260200101518282875161147491906129a1565b81518110611484576114846121bc565b6020026020010181905250808061149a90612212565b915050611443565b5095945050505050565b601354600160a01b900460ff16156115065760405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74206d616e6970756c6174652063757272656e7420666f726b000060448201526064016103bc565b565b60408051602081018252600080825291516334515cdb60e21b815260609290600080516020612fac8339815191529063d145736c9061154b9085906004016129b4565b6000604051808303816000875af115801561156a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261159291908101906124b0565b80519091501561162a57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906115d0908590600401611f1a565b600060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116159190810190612845565b90506116218186611872565b95945050505050565b6040805160008082526020820190925290611668565b6040805180820190915260008152606060208201528152602001906001900390816116405790505b50949350505050565b606060007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663d930a0e66040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116fe91908101906124b0565b90506000816040516020016117139190612812565b60408051601f19818403018152908290526360f9bb1160e01b82529150600090600080516020612fac833981519152906360f9bb1190611757908590600401611f1a565b600060405180830381865afa158015611774573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261179c91908101906124b0565b80519091501561182b57604051633541300560e11b8152600090600080516020612fac83398151915290636a82600a906117da908590600401611f1a565b600060405180830381865afa1580156117f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261181f9190810190612845565b90506111a28187611872565b60408051600080825260208201909252906114a2565b6040805180820190915260008152606060208201528152602001906001900390816118415790505095945050505050565b606060008380602001905181019061188a919061288d565b905060008160000151516001600160401b038111156118ab576118ab611dab565b6040519080825280602002602001820160405280156118de57816020015b60608152602001906001900390816118c95790505b50905060005b82515181101561197257600061192784600001518381518110611909576119096121bc565b60200260200101518760405180602001604052806000815250610ab8565b9050600061193482611ae1565b80519091501561195d5780848481518110611951576119516121bc565b60200260200101819052505b5050808061196a90612212565b9150506118e4565b506000805b82518110156119ba57828181518110611992576119926121bc565b602002602001015151826119a691906129a1565b9150806119b281612212565b915050611977565b506000816001600160401b038111156119d5576119d5611dab565b604051908082528060200260200182016040528015611a1b57816020015b6040805180820190915260008152606060208201528152602001906001900390816119f35790505b5090506000805b8451811015611ad45760005b858281518110611a4057611a406121bc565b602002602001015151811015611ac157858281518110611a6257611a626121bc565b60200260200101518181518110611a7b57611a7b6121bc565b6020026020010151848481518110611a9557611a956121bc565b60200260200101819052508280611aab90612212565b9350508080611ab990612212565b915050611a2e565b5080611acc81612212565b915050611a22565b5090979650505050505050565b6040516360f9bb1160e01b8152606090600080516020612fac833981519152906360f9bb1190611b15908590600401611f1a565b600060405180830381865afa925050508015611b5357506040513d6000823e601f3d908101601f19168201604052611b5091908101906124b0565b60015b611b7e57611b796040518060600160405280602f8152602001612fcc602f913983611d3d565b611cf8565b8051600003611bcd576040805160008082526020820190925290611bc5565b604080518082019091526000815260606020820152815260200190600190039081611b9d5790505b509392505050565b604051633541300560e11b8152600080516020612fac83398151915290636a82600a90611bfe908490600401611f1a565b600060405180830381865afa925050508015611c3c57506040513d6000823e601f3d908101601f19168201604052611c399190810190612845565b60015b611c515782604051602001610a0291906129f1565b604051611c5d90611d9e565b604051809103906000f080158015611c79573d6000803e3d6000fd5b506001600160a01b0316633efef57e826040518263ffffffff1660e01b8152600401611ca59190611f1a565b600060405180830381865afa925050508015611ce357506040513d6000823e601f3d908101601f19168201604052611ce09190810190612a40565b60015b6111c95783604051602001610a029190612b37565b6040805160008082526020820190925290611d36565b604080518082019091526000815260606020820152815260200190600190039081611d0e5790505b5092915050565b610a288282604051602401611d53929190612b92565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103f480612bb883390190565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611de357611de3611dab565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611e1157611e11611dab565b604052919050565b60006001600160401b03821115611e3257611e32611dab565b50601f01601f191660200190565b600082601f830112611e5157600080fd5b8135611e64611e5f82611e19565b611de9565b818152846020838601011115611e7957600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b6111c984828501611e40565b60005b83811015611ee5578181015183820152602001611ecd565b50506000910152565b60008151808452611f06816020860160208601611eca565b601f01601f19169290920160200192915050565b6020815260006102b36020830184611eee565b600060208284031215611f3f57600080fd5b5035919050565b600080600060608486031215611f5b57600080fd5b83356001600160401b0380821115611f7257600080fd5b611f7e87838801611e40565b94506020860135915080821115611f9457600080fd5b611fa087838801611e40565b93506040860135915080821115611fb657600080fd5b50611fc386828701611e40565b9150509250925092565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561202457605f19888703018552612012868351611eee565b95509382019390820190600101611ff6565b50508584038187015286518085528782019482019350915060005b828110156120645784516001600160a01b03168452938101939281019260010161203f565b5091979650505050505050565b6001600160a01b038116811461208657600080fd5b50565b6000806040838503121561209c57600080fd5b82356001600160401b038111156120b257600080fd5b6120be85828601611e40565b92505060208301356120cf81612071565b809150509250929050565b6000602080835260608301845160408386015281815180845260808701915060808160051b8801019350848301925060005b8181101561213a57607f19888603018352612128858551611eee565b9450928501929185019160010161210c565b5050505090840151838203601f19016040850152906116218183611eee565b6000806040838503121561216c57600080fd5b82356001600160401b038082111561218357600080fd5b61218f86838701611e40565b935060208501359150808211156121a557600080fd5b506121b285828601611e40565b9150509250929050565b634e487b7160e01b600052603260045260246000fd5b6040815260006121e56040830185611eee565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612224576122246121fc565b5060010190565b60006001600160401b0382111561224457612244611dab565b5060051b60200190565b600061225c611e5f84611e19565b905082815283838301111561227057600080fd5b6102b3836020830184611eca565b600082601f83011261228f57600080fd5b6102b38383516020850161224e565b600082601f8301126122af57600080fd5b815160206122bf611e5f8361222b565b82815260059290921b840181019181810190868411156122de57600080fd5b8286015b8481101561231d5780516001600160401b038111156123015760008081fd5b61230f8986838b010161227e565b8452509183019183016122e2565b509695505050505050565b6000806040838503121561233b57600080fd5b82516001600160401b038082111561235257600080fd5b61235e8683870161229e565b935060209150818501518181111561237557600080fd5b85019050601f8101861361238857600080fd5b8051612396611e5f8261222b565b81815260059190911b820183019083810190888311156123b557600080fd5b928401925b828410156123dc5783516123cd81612071565b825292840192908401906123ba565b80955050505050509250929050565b600181811c908216806123ff57607f821691505b60208210810361241f57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602080835260008454612439816123eb565b8084870152604060018084166000811461245a5760018114612474576124a2565b60ff1985168984015283151560051b8901830195506124a2565b896000528660002060005b8581101561249a5781548b820186015290830190880161247f565b8a0184019650505b509398975050505050505050565b6000602082840312156124c257600080fd5b81516001600160401b038111156124d857600080fd5b6111c98482850161227e565b6000602082840312156124f657600080fd5b5051919050565b6040815260006125106040830185611eee565b90508260208301529392505050565b6000815461252c816123eb565b60018281168015612544576001811461255957612588565b60ff1984168752821515830287019450612588565b8560005260208060002060005b8581101561257f5781548a820152908401908201612566565b50505082870194505b5050505092915050565b72021b430b4b71034b21039b437bab6321031329606d1b8152600084516125c0816013850160208901611eca565b61040560f31b6013918401918201526125dc601582018661251f565b905065014961034b9960d51b815283516125fd816006840160208801611eca565b0160060195945050505050565b6000865161261c818460208b01611eca565b8083019050602f60f81b808252875161263c816001850160208c01611eca565b8751920191612652816001850160208b01611eca565b6001920191820152612667600282018661251f565b90508351612679818360208801611eca565b64173539b7b760d91b9101908152600501979650505050505050565b6000602082840312156126a757600080fd5b81516102b381612071565b75466f726b3a3a67657428737472696e67206e616d652960501b8152600082516126e3816016850160208701611eca565b7f3a206e6f20636f6e747261637420666f756e6420666f72206e616d652061726760169390910192830152507f756d656e742c2065697468657220696e20636f6e74657874206e6f7220696e2060368201527f6465706c6f796564206164647265737365732e20436865636b2074686520617060568201527f70726f70726961746520636f6e746578742f3c636861696e3e2e6a736f6e206160768201527f6e64206465706c6f7965642f3c636861696e3e2e6a736f6e2c20616e64206d6160968201527f6b65207375726520796f752061726520646f696e6720666f726b2e736574286e60b68201527f616d652c616464726573732920666f7220616c6c20796f7572206465706c6f7960d68201526c32b21031b7b73a3930b1ba399760991b60f682015261010301919050565b60008251612824818460208701611eca565b6e17b6b3bb21b7b73334b3973539b7b760891b920191825250600f01919050565b60006020828403121561285757600080fd5b81516001600160401b0381111561286d57600080fd5b8201601f8101841361287e57600080fd5b6111c98482516020840161224e565b60006020828403121561289f57600080fd5b81516001600160401b03808211156128b657600080fd5b90830190604082860312156128ca57600080fd5b6128d2611dc1565b8251828111156128e157600080fd5b6128ed8782860161229e565b82525060208301518281111561290257600080fd5b61290e8782860161227e565b60208301525095945050505050565b6000835161292f818460208801611eca565b61040560f31b908301908152612948600282018561251f565b602960f81b815260010195945050505050565b6001600160a01b03831681526040602082018190526000906111c990830184611eee565b60006020828403121561299157600080fd5b815180151581146102b357600080fd5b80820180821115610cd557610cd56121fc565b6040815260136040820152724d47565f4144445245535345535f504154485360681b60608201526080602082015260006102b36080830184611eee565b7f466f726b3a204a534f4e2070617273696e67206572726f72206f6e2066696c658152600160fd1b602082015260008251612a33816021850160208701611eca565b9190910160210192915050565b60006020808385031215612a5357600080fd5b82516001600160401b0380821115612a6a57600080fd5b818501915085601f830112612a7e57600080fd5b8151612a8c611e5f8261222b565b81815260059190911b83018401908481019088831115612aab57600080fd5b8585015b83811015612b2a57805185811115612ac75760008081fd5b86016040818c03601f1901811315612adf5760008081fd5b612ae7611dc1565b89830151612af481612071565b8152908201519087821115612b095760008081fd5b612b178d8b8486010161227e565b818b015285525050918601918601612aaf565b5098975050505050505050565b7f466f726b3a204a534f4e20746f205265636f72645b5d2070617273696e67206581526c0393937b91037b7103334b6329609d1b602082015260008251612b8581602d850160208701611eca565b91909101602d0192915050565b604081526000612ba56040830185611eee565b82810360208401526116218185611eee56fe608060405234801561001057600080fd5b506103d4806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633efef57e14610030575b600080fd5b61004361003e36600461010d565b610059565b60405161005091906101b1565b60405180910390f35b60608180602001905181019061006f919061024b565b92915050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156100ae576100ae610075565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156100dd576100dd610075565b604052919050565b600067ffffffffffffffff8211156100ff576100ff610075565b50601f01601f191660200190565b60006020828403121561011f57600080fd5b813567ffffffffffffffff81111561013657600080fd5b8201601f8101841361014757600080fd5b803561015a610155826100e5565b6100b4565b81815285602083850101111561016f57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156101a8578181015183820152602001610190565b50506000910152565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561023d57888303603f19018552815180516001600160a01b031684528701518784018790528051878501819052606061021a82828801858d0161018d565b96890196601f91909101601f1916949094019093019250908601906001016101d8565b509098975050505050505050565b6000602080838503121561025e57600080fd5b825167ffffffffffffffff8082111561027657600080fd5b818501915085601f83011261028a57600080fd5b81518181111561029c5761029c610075565b8060051b6102ab8582016100b4565b91825283810185019185810190898411156102c557600080fd5b86860192505b83831015610391578251858111156102e35760008081fd5b86016040818c03601f19018113156102fb5760008081fd5b61030361008b565b828a01516001600160a01b038116811461031d5760008081fd5b815282820151888111156103315760008081fd5b8084019350508c603f8401126103475760008081fd5b89830151610357610155826100e5565b8181528e8483870101111561036c5760008081fd5b61037b828d830186880161018d565b828c0152508452505091860191908601906102cb565b999850505050505050505056fea2646970667358221220388edaf97026bec1280dd6b1cc5e5652404bf5b026100c1d38397d5126a350c264736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d466f726b3a2063616e6e6f742072656164206465706c6f796d656e742066696c652025732e2049676e6f72696e672ea2646970667358221220e28b9212993152d3de8e06f92356bd6b4ecce26cb6d0ee0cc19faa9971d31f2264736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c63430008140033608060405234801561001057600080fd5b50610b45806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806310c4e8b01461005c578063693ec85e1461007b578063a815ff15146100a6578063e726da78146100bb578063eba97ad7146100ef575b600080fd5b610064610102565b604051610072929190610550565b60405180910390f35b61008e61008936600461063d565b6102b4565b6040516001600160a01b039091168152602001610072565b6100b96100b436600461069b565b610332565b005b61008e6100c9366004610705565b80516020818301810180516000825292820191909301209152546001600160a01b031681565b6100b96100fd3660046107fb565b61048e565b6060806001805480602002602001604051908101604052809291908181526020016000905b828210156101d357838290600052602060002001805461014690610867565b80601f016020809104026020016040519081016040528092919081815260200182805461017290610867565b80156101bf5780601f10610194576101008083540402835291602001916101bf565b820191906000526020600020905b8154815290600101906020018083116101a257829003601f168201915b505050505081526020019060010190610127565b505050509150815167ffffffffffffffff8111156101f3576101f36106ef565b60405190808252806020026020018201604052801561021c578160200160208202803683370190505b50905060005b6001548110156102af576000838281518110610240576102406108a1565b602002602001015160405161025591906108b7565b9081526040519081900360200190205482516001600160a01b0390911690839083908110610285576102856108a1565b6001600160a01b0390921660209283029190910190910152806102a7816108d3565b915050610222565b509091565b60008083836040516102c79291906108fa565b90815260405160209181900382018120546001600160a01b03169250821515916102f591869186910161090a565b6040516020818303038152906040529061032b5760405162461bcd60e51b81526004016103229190610943565b60405180910390fd5b5092915050565b6001600160a01b0381166103945760405162461bcd60e51b815260206004820152602360248201527f546f79454e533a2063616e6e6f74207265636f72642061206e616d652061732060448201526203078360ec1b6064820152608401610322565b60006001600160a01b0316600084846040516103b19291906108fa565b908152604051908190036020019020546001600160a01b03160361040d576001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60161040b8385836109ac565b505b80600084846040516104209291906108fa565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f496595ced95720268cf8bc60bae3f35024ff2a130f73ac4e20f5c1eaca35db999061048190859085908590610a6c565b60405180910390a1505050565b60005b838110156104f9576104e78585838181106104ae576104ae6108a1565b90506020028101906104c09190610aad565b8585858181106104d2576104d26108a1565b90506020020160208101906100b49190610af4565b806104f1816108d3565b915050610491565b5050505050565b60005b8381101561051b578181015183820152602001610503565b50506000910152565b6000815180845261053c816020860160208601610500565b601f01601f19169290920160200192915050565b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156105a757605f19888703018552610595868351610524565b95509382019390820190600101610579565b50508584038187015286518085528782019482019350915060005b828110156105e75784516001600160a01b0316845293810193928101926001016105c2565b5091979650505050505050565b60008083601f84011261060657600080fd5b50813567ffffffffffffffff81111561061e57600080fd5b60208301915083602082850101111561063657600080fd5b9250929050565b6000806020838503121561065057600080fd5b823567ffffffffffffffff81111561066757600080fd5b610673858286016105f4565b90969095509350505050565b80356001600160a01b038116811461069657600080fd5b919050565b6000806000604084860312156106b057600080fd5b833567ffffffffffffffff8111156106c757600080fd5b6106d3868287016105f4565b90945092506106e690506020850161067f565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561071757600080fd5b813567ffffffffffffffff8082111561072f57600080fd5b818401915084601f83011261074357600080fd5b813581811115610755576107556106ef565b604051601f8201601f19908116603f0116810190838211818310171561077d5761077d6106ef565b8160405282815287602084870101111561079657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f8401126107c857600080fd5b50813567ffffffffffffffff8111156107e057600080fd5b6020830191508360208260051b850101111561063657600080fd5b6000806000806040858703121561081157600080fd5b843567ffffffffffffffff8082111561082957600080fd5b610835888389016107b6565b9096509450602087013591508082111561084e57600080fd5b5061085b878288016107b6565b95989497509550505050565b600181811c9082168061087b57607f821691505b60208210810361089b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600082516108c9818460208701610500565b9190910192915050565b6000600182016108f357634e487b7160e01b600052601160045260246000fd5b5060010190565b8183823760009101908152919050565b7f546f79454e533a2061646472657373206e6f7420666f756e6420666f7220000081528183601e83013760009101601e01908152919050565b6020815260006109566020830184610524565b9392505050565b601f8211156109a757600081815260208120601f850160051c810160208610156109845750805b601f850160051c820191505b818110156109a357828155600101610990565b5050505b505050565b67ffffffffffffffff8311156109c4576109c46106ef565b6109d8836109d28354610867565b8361095d565b6000601f841160018114610a0c57600085156109f45750838201355b600019600387901b1c1916600186901b1783556104f9565b600083815260209020601f19861690835b82811015610a3d5786850135825560209485019460019092019101610a1d565b5086821015610a5a5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f191690910101919050565b6000808335601e19843603018112610ac457600080fd5b83018035915067ffffffffffffffff821115610adf57600080fd5b60200191503681900382131561063657600080fd5b600060208284031215610b0657600080fd5b6109568261067f56fea26469706673582212206e5308427de2cb15180af9f4fc062bbb64ba30a00b28e4aecfa6f9049251589c64736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d",
    "sourceMap": "3126:44:18:-:0;;;-1:-1:-1;;3126:44:18;3166:4;3126:44;;;800:28:16;;;704:36:2;1130:6379:81;704:36:2;;1130:6379:81;704:36:2;;;;676:65;-1:-1:-1;;;;;;676:65:2;;;;;;873:19;:17;:19::i;:::-;847:45;;;-1:-1:-1;;;;;;847:45:2;-1:-1:-1;;;;;847:45:2;;;;;;;;;;2112:14:38;;;;;;;;;;;;-1:-1:-1;;;2112:14:38;;;;2102:25;;:9;:25::i;:::-;2071:57;;;-1:-1:-1;;;;;2071:57:38;;;;-1:-1:-1;;;;;;2071:57:38;;;;;;2288:56;;;;;;-1:-1:-1;;;2288:56:38;;;1130:6379:81;;;;;;;;;-1:-1:-1;2660:4:38;;2667:14;;;;;;;;;;;-1:-1:-1;;;2667:14:38;;;;2643:39;;-1:-1:-1;;;2643:39:38;;-1:-1:-1;;;;;;;;;;;2643:8:38;;;:39;;-1:-1:-1;;;;;2660:4:38;;;;2643:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2705:9:38;;2688:42;;;-1:-1:-1;;;2688:42:38;;-1:-1:-1;;;;;2705:9:38;;;2688:42;;;1079:51:131;1146:18;;;1139:30;1205:2;1185:18;;;1178:30;-1:-1:-1;;;1224:18:131;;;1217:40;-1:-1:-1;;;;;;;;;;;2688:8:38;-1:-1:-1;2688:8:38;;-1:-1:-1;1274:19:131;;2688:42:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2879:14:38;;;;;;;;;;;;-1:-1:-1;;;2879:14:38;;;;2906:1;;-1:-1:-1;2869:25:38;;-1:-1:-1;2869:9:38;:25::i;:::-;-1:-1:-1;;;;;2869:39:38;;2865:1216;;3089:13;3106:1;3089:18;3085:714;;3126:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3119:4:38;:25;;-1:-1:-1;;;;;;3119:25:38;-1:-1:-1;;;;;3119:25:38;;;;;;;;;;3085:714;;;3163:13;3180:1;3163:18;3159:640;;3200:16;;;;;:::i;3159:640::-;3235:13;3252:3;3235:20;3231:568;;3274:17;;;;;:::i;3231:568::-;3310:13;3327:4;3310:21;3306:493;;3350:15;;;;;:::i;3306:493::-;3384:13;3401:4;3384:21;3380:419;;3424:22;;;;;:::i;3380:419::-;3465:13;3482:5;3465:22;3461:338;;3506:15;;;;;:::i;3461:338::-;3540:13;3557:5;3540:22;3536:263;;3581:18;;;;;:::i;3536:263::-;3618:13;3635:5;3618:22;3614:185;;3659:16;;;;;:::i;3614:185::-;3742:26;;-1:-1:-1;;;3742:26:38;;3754:13;3742:26;;;1450:25:131;-1:-1:-1;;;;;;;;;;;3742:11:38;;;1423:18:131;;3742:26:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3742:26:38;;;;;;;;;;;;:::i;:::-;3707:82;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3707:82:38;;;;;;;;;;-1:-1:-1;;;3700:90:38;;;;;;;:::i;:::-;;;;;;;;3614:185;3819:9;;-1:-1:-1;;;;;3819:9:38;3811:30;:35;:88;;;;-1:-1:-1;3889:10:38;817:42;3850:35;:49;;3811:88;3807:133;;;3911:20;:18;:20::i;:::-;3958:14;;;;;;;;;;;;-1:-1:-1;;;3958:14:38;;;;3982:4;;3948:40;;3958:14;-1:-1:-1;;;;;3982:4:38;3948:9;:40::i;:::-;3996:4;;;;;;;;;-1:-1:-1;;;;;3996:4:38;-1:-1:-1;;;;;3996:10:38;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2865:1216;;;4058:14;;;;;;;;;;;;-1:-1:-1;;;4058:14:38;;;;4048:25;;:9;:25::i;:::-;4029:4;:45;;-1:-1:-1;;;;;;4029:45:38;-1:-1:-1;;;;;4029:45:38;;;;;;;;;;2865:1216;4091:26;;-1:-1:-1;;;4091:26:38;;3733:2:131;4091:26:38;;;3715:21:131;3772:2;3752:18;;;3745:30;-1:-1:-1;;;3791:18:131;;;3784:42;-1:-1:-1;;;;;;;;;;;4091:10:38;;;3843:18:131;;4091:26:38;;;;;;;;;;;;;;;;;;-1:-1:-1;4091:26:38;;;;;;;;-1:-1:-1;;4091:26:38;;;;;;;;;;;;:::i;:::-;;;4087:109;;;4154:11;:26;;;;;-1:-1:-1;;;4154:26:38;-1:-1:-1;;;;4154:26:38;;;;;;;;;4087:109;4216:31;;;-1:-1:-1;;;4216:31:38;;;;;4360:21:131;;;;4417:2;4397:18;;;4390:30;-1:-1:-1;;;4436:18:131;;;4429:42;309:37:15;4523:20:131;;;4516:52;-1:-1:-1;;;;;;;;;;;4216:8:38;;;4488:19:131;;4216:31:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4202:11;:45;;;;;-1:-1:-1;;;4202:45:38;-1:-1:-1;;;;4202:45:38;;;;;;;;;4370:10;;;;;;;;-1:-1:-1;4370:10:38;;;4353:28;;-1:-1:-1;;;4353:28:38;;-1:-1:-1;;;;;;;;;;;4353:8:38;;;:28;;4370:10;4353:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4353:28:38;;;;;;;;;;;;:::i;:::-;4322:60;;4411:2;4392:9;:16;:21;4388:91;;;4423:49;;-1:-1:-1;;;4423:49:38;;5231:2:131;4423:49:38;;;5213:21:131;5270:2;5250:18;;;5243:30;5309:34;5289:18;;;5282:62;-1:-1:-1;;;5360:18:131;;;5353:37;5407:19;;4423:49:38;5029:403:131;4388:91:38;4492:18;4500:9;4492:18;:::i;:::-;4485:4;:25;-1:-1:-1;1130:6379:81;;896:289:2;1001:11;;942:7;;1001:11;;;-1:-1:-1;;;;;1001:11:2;993:32;:37;;989:169;;1056:11;;1078:12;;-1:-1:-1;;;;;;;;;;;1040:7:2;;;1056:11;;;;-1:-1:-1;;;;;1056:11:2;;1078:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1070:26:2;;;;;;;;;;;;;;;;;;;;;;;;1040:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1122:11:2;;1105:46;;;-1:-1:-1;;;1105:46:2;;1122:11;;;;-1:-1:-1;;;;;1122:11:2;1105:46;;;6271:51:131;6338:18;;;6331:30;6397:2;6377:18;;;6370:30;-1:-1:-1;;;6416:18:131;;;6409:43;-1:-1:-1;;;;;;;;;;;1105:8:2;-1:-1:-1;1105:8:2;;-1:-1:-1;6469:19:131;;1105:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:169;-1:-1:-1;1178:1:2;;896:289::o;1385:111::-;1467:11;;:24;;-1:-1:-1;;;1467:24:2;;1445:7;;1467:11;;;-1:-1:-1;;;;;1467:11:2;;:18;;:24;;1486:4;;1467:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1460:31;1385:111;-1:-1:-1;;1385:111:2:o;10578:517:38:-;10648:15;;;10661:1;10648:15;;;;;;;;;10623:22;;10648:15;;;;;;;;;;;;;;;;;;;;10623:40;;10669:18;;;;;;;;;;;;;-1:-1:-1;;;10669:18:38;;;:6;10676:1;10669:9;;;;;;;;:::i;:::-;;;;;;:18;;;;10693:17;;;;;;;;;;;;;-1:-1:-1;;;10693:17:38;;;:6;10700:1;10693:9;;;;;;;;:::i;:::-;;;;;;:17;;;;10716:29;;;;;;;;;;;;;-1:-1:-1;;;10716:29:38;;;:6;10723:1;10716:9;;;;;;;;:::i;:::-;;;;;;;;;;:29;10783:9;;10763:31;;-1:-1:-1;;;10763:31:38;;-1:-1:-1;;;;;10783:9:38;;;10763:31;;;7072:51:131;-1:-1:-1;;;;;;;;;;;10763:11:38;;;7045:18:131;;10763:31:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10763:31:38;;;;;;;;;;;;:::i;:::-;10751:6;10758:1;10751:9;;;;;;;;:::i;:::-;;;;;;;;;;:43;10832:12;;-1:-1:-1;;;;;;;;;;;10812:11:38;;;10832:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10824:26:38;;;;;;;;;;;;;;;;;;;;;;;;10812:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10812:39:38;;;;;;;;;;;;:::i;:::-;10800:6;10807:1;10800:9;;;;;;;;:::i;:::-;;;;;;;;;;:51;10877:14;;-1:-1:-1;;;10877:14:38;;10857:17;;-1:-1:-1;;;;;;;;;;;10877:6:38;;;:14;;10884:6;;10877:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10877:14:38;;;;;;;;;;;;:::i;:::-;10857:34;;10920:17;10911:4;10901:15;;;;;;:36;10897:151;;10947:25;10966:4;10947:11;:25::i;:::-;10980:61;;-1:-1:-1;;;10980:61:38;;8830:2:131;10980:61:38;;;8812:21:131;8869:2;8849:18;;;8842:30;8908:34;8888:18;;;8881:62;8979:21;8959:18;;;8952:49;9018:19;;10980:61:38;8628:415:131;10897:151:38;11053:37;;;;;;;;;;;;;;;;;;;:11;:37::i;:::-;10617:478;;10578:517::o;1500:98:2:-;1566:11;;:27;;-1:-1:-1;;;1566:27:2;;:11;;;;-1:-1:-1;;;;;1566:11:2;;:15;;:27;;1582:4;;1588;;1566:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:98;;:::o;6598:121:30:-;6653:59;6708:2;6669:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6669:42:30;;;;;;;;;;;;;;-1:-1:-1;;;;;6669:42:30;;;-1:-1:-1;;;6669:42:30;;;;6653:15;:59;:::i;:::-;6598:121;:::o;868:133::-;939:55;986:7;965:19;;;;;939:55;;:::i;1007:380::-;1105:14;;591:42;1278:2;1265:16;;1081:21;;1105:14;1265:16;591:42;1314:5;1303:68;1294:77;;1231:150;;1007:380;:::o;1130:6379:81:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:250:131:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:131;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:131;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:131:o;545:317::-;-1:-1:-1;;;;;722:32:131;;704:51;;791:2;786;771:18;;764:30;;;-1:-1:-1;;811:45:131;;837:18;;829:6;811:45;:::i;:::-;803:53;545:317;-1:-1:-1;;;;545:317:131:o;1486:127::-;1547:10;1542:3;1538:20;1535:1;1528:31;1578:4;1575:1;1568:15;1602:4;1599:1;1592:15;1618:615;1694:5;-1:-1:-1;;;;;1754:14:131;;;1751:40;;;1771:18;;:::i;:::-;1846:2;1840:9;1814:2;1900:15;;-1:-1:-1;;1896:24:131;;;1922:2;1892:33;1888:42;1876:55;;;1946:18;;;1966:22;;;1943:46;1940:72;;;1992:18;;:::i;:::-;2032:10;2028:2;2021:22;2061:6;2052:15;;2091:6;2083;2076:22;2131:3;2122:6;2117:3;2113:16;2110:25;2107:45;;;2148:1;2145;2138:12;2107:45;2161:66;2220:6;2213:4;2205:6;2201:17;2196:3;2161:66;:::i;:::-;;;;1618:615;;;;;:::o;2238:459::-;2318:6;2371:2;2359:9;2350:7;2346:23;2342:32;2339:52;;;2387:1;2384;2377:12;2339:52;2414:16;;-1:-1:-1;;;;;2442:30:131;;2439:50;;;2485:1;2482;2475:12;2439:50;2508:22;;2561:4;2553:13;;2549:27;-1:-1:-1;2539:55:131;;2590:1;2587;2580:12;2539:55;2613:78;2683:7;2678:2;2672:9;2667:2;2663;2659:11;2613:78;:::i;2702:599::-;-1:-1:-1;;;3040:3:131;3033:32;3015:3;3094:6;3088:13;3110:75;3178:6;3173:2;3168:3;3164:12;3157:4;3149:6;3145:17;3110:75;:::i;:::-;-1:-1:-1;;;3244:2:131;3204:16;;;;3236:11;;;3229:39;-1:-1:-1;3292:2:131;3284:11;;2702:599;-1:-1:-1;2702:599:131:o;3306:220::-;3455:2;3444:9;3437:21;3418:4;3475:45;3516:2;3505:9;3501:18;3493:6;3475:45;:::i;:::-;3467:53;3306:220;-1:-1:-1;;;3306:220:131:o;3872:277::-;3939:6;3992:2;3980:9;3971:7;3967:23;3963:32;3960:52;;;4008:1;4005;3998:12;3960:52;4040:9;4034:16;4093:5;4086:13;4079:21;4072:5;4069:32;4059:60;;4115:1;4112;4105:12;4579:445;4829:2;4818:9;4811:21;4868:1;4863:2;4852:9;4848:18;4841:29;-1:-1:-1;;;4901:2:131;4890:9;4886:18;4879:34;4951:3;4944:4;4933:9;4929:20;4922:33;4792:4;4972:46;5013:3;5002:9;4998:19;4990:6;4972:46;:::i;5437:297::-;5555:12;;5602:4;5591:16;;;5585:23;;5555:12;5620:16;;5617:111;;;5714:1;5710:6;5700;5694:4;5690:17;5687:1;5683:25;5679:38;5672:5;5668:50;5659:59;;5617:111;;5437:297;;;:::o;6499:290::-;6569:6;6622:2;6610:9;6601:7;6597:23;6593:32;6590:52;;;6638:1;6635;6628:12;6590:52;6664:16;;-1:-1:-1;;;;;6709:31:131;;6699:42;;6689:70;;6755:1;6752;6745:12;6794:127;6855:10;6850:3;6846:20;6843:1;6836:31;6886:4;6883:1;6876:15;6910:4;6907:1;6900:15;7357:803;7519:4;7548:2;7588;7577:9;7573:18;7618:2;7607:9;7600:21;7641:6;7676;7670:13;7707:6;7699;7692:22;7745:2;7734:9;7730:18;7723:25;;7807:2;7797:6;7794:1;7790:14;7779:9;7775:30;7771:39;7757:53;;7845:2;7837:6;7833:15;7866:1;7876:255;7890:6;7887:1;7884:13;7876:255;;;7983:2;7979:7;7967:9;7959:6;7955:22;7951:36;7946:3;7939:49;8011:40;8044:6;8035;8029:13;8011:40;:::i;:::-;8001:50;-1:-1:-1;8109:12:131;;;;8074:15;;;;7912:1;7905:9;7876:255;;;-1:-1:-1;8148:6:131;;7357:803;-1:-1:-1;;;;;;;7357:803:131:o;9048:317::-;9225:2;9214:9;9207:21;9188:4;9245:45;9286:2;9275:9;9271:18;9263:6;9245:45;:::i;:::-;9237:53;;9355:1;9351;9346:3;9342:11;9338:19;9330:6;9326:32;9321:2;9310:9;9306:18;9299:60;9048:317;;;;;:::o;9370:127::-;1130:6379:81;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806376eadd3611610097578063b2bac94211610066578063b2bac942146101d6578063b84e3eda146101de578063c0406226146101f1578063f8ccbf47146101f957600080fd5b806376eadd361461019e5780637fb5297f146101a6578063ac019753146101ae578063afc98040146101ce57600080fd5b806343025920116100d35780634302592014610135578063521606d2146101485780635ef5270f1461015b5780636d77c7f71461018b57600080fd5b80630846f3f4146100fa57806310b559131461010f5780631fc7924814610122575b600080fd5b61010d610108366004613563565b610216565b005b61010d61011d3660046136ef565b610275565b61010d610130366004613865565b6102e1565b61010d610143366004613975565b61038e565b61010d610156366004613992565b61039c565b61016e610169366004613a22565b6104dc565b6040516001600160a01b0390911681526020015b60405180910390f35b61010d610199366004613b3e565b610559565b61010d61131d565b61010d611395565b6101c16101bc366004613b3e565b6113f2565b6040516101829190613c54565b61010d61150b565b61016e611523565b61010d6101ec366004613992565b611893565b61010d6119c9565b600c546102069060ff1681565b6040519015158152602001610182565b801561025657610252604051806040016040528060148152602001732232b83637bcb2b91d313937b0b231b0b9ba32b960611b81525083610275565b5050565b601080546001600160a01b0319166001600160a01b0384161790555050565b600c5460405163a815ff1560e01b81526101009091046001600160a01b03169063a815ff15906102ab9085908590600401613cb7565b600060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b505050505050565b60005b8151602001515181101561033a5781516020015180518290811061030a5761030a613ce1565b602002602001015160400151826040018181516103279190613d0d565b90525061033381613d20565b90506102e4565b5060005b815151518110156102525781515180518290811061035e5761035e613ce1565b6020026020010151604001518260200181815161037b9190613d0d565b90525061038781613d20565b905061033e565b610399816001610216565b50565b604080516020810190915260008082525b82518110156104d257817f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316636900a3ae8584815181106103fb576103fb613ce1565b60200260200101516040518263ffffffff1660e01b815260040161042191815260200190565b600060405180830381865afa15801561043e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104669190810190613d39565b604051602001610477929190613da6565b6040516020818303038152906040529150600183516104969190613dd5565b8110156104c057816040516020016104ae9190613de8565b60405160208183030381529060405291505b806104ca81613d20565b9150506103ad565b506102528161238a565b600c54604051631ce4db4f60e31b815260009161010090046001600160a01b03169063e726da7890610512908590600401613e0e565b602060405180830381865afa15801561052f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105539190613e21565b92915050565b604080516101e08101825260606101a082018181526101c08301829052825260006020830181905292820183905281018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290526101208101829052610140810182905261016081018290526101808101919091528161010001518161010001906001600160a01b031690816001600160a01b0316815250508160e001516001600160a01b031663ec342ad06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190613e21565b8161012001906001600160a01b031690816001600160a01b0316815250508160e001516001600160a01b0316639c5798396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190613e21565b8161014001906001600160a01b031690816001600160a01b0316815250508160e001516001600160a01b031663cff0ab966040518163ffffffff1660e01b8152600401608060405180830381865afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190613e3e565b8363ffffffff1693508262ffffff1692509050508260e0018360c00182815250828152505050600060405180606001604052808361012001516001600160a01b031681526020018361014001516001600160a01b031681526020018460e001516001600160a01b03166346ca626b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108249190613e9d565b81525090508161010001516001600160a01b0316636001af26828460c001518560e001516040518463ffffffff1660e01b815260040161086693929190613eb6565b602060405180830381865afa158015610883573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a79190613e9d565b6101608301526101008201516001600160a01b0316636001af2661090e836040805160608082018352600080835260208084018290529284015282519081018352838201516001600160a01b03908116825284511691810191909152918101519082015290565b8460c001518560e001516040518463ffffffff1660e01b815260040161093693929190613eb6565b602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190613e9d565b6101808301528251602084015160009161099091613dd5565b8361018001518461016001516109a69190613d0d565b6109b09190613ef2565b9050806109bb611523565b6001600160a01b0316311015610a7857610a386040518060800160405280604381526020016144cd60439139610a0d6109f2611523565b610a06906001600160a01b03163185613dd5565b60126123cd565b6040518060400160405280600d81526020016c6e617469766520746f6b656e7360981b8152506123db565b60405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682066756e647360801b60448201526064015b60405180910390fd5b610ab66040518060400160405280601d81526020017f43616c63756c6174696e67206261736520616e642071756f74652e2e2e000000815250612422565b610abf846113f2565b835260408051606081019091526021808252610ae391906144ac6020830139612422565b610aec836102e1565b60008361012001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b559190613f09565b60ff16905060008461014001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc39190613f09565b60ff169050610c0c610bd98660200151846123cd565b610be78760400151846123cd565b604051602001610bf8929190613f2c565b604051602081830303815290604052612422565b606085602001518661012001516001600160a01b03166370a08231610c2f611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610c73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c979190613e9d565b1015610ddd57610120860151604051632b65311f60e11b81526001600160a01b03909116600482015260008051602061448c833981519152906356ca623e90602401600060405180830381865afa158015610cf6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d1e9190810190613d39565b610dba8761012001516001600160a01b03166370a08231610d3d611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610d81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da59190613e9d565b8860200151610db49190613dd5565b856123cd565b604051602001610dcb929190613f9e565b60405160208183030381529060405290505b85604001518661014001516001600160a01b03166370a08231610dfe611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190613e9d565b1015610fe6576000815111610e8a5760405180602001604052806000815250610eab565b80604051602001610e9b9190614002565b6040516020818303038152906040525b610140870151604051632b65311f60e11b81526001600160a01b03909116600482015260008051602061448c833981519152906356ca623e90602401600060405180830381865afa158015610f04573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f2c9190810190613d39565b610fc28861014001516001600160a01b03166370a08231610f4b611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610f8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb39190613e9d565b8960400151610db49190613dd5565b604051602001610fd493929190614028565b60405160208183030381529060405290505b8051156110bb5760008051602061448c8339815191526356ca623e611009611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381865afa15801561104d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110759190810190613d39565b816040516020016110879291906140a3565b60405160208183030381529060405290506110a181612422565b8060405162461bcd60e51b8152600401610a6f9190613e0e565b6110f96040518060400160405280601b81526020017f417070726f76696e67206261736520616e642071756f74652e2e2e0000000000815250612422565b61110161150b565b61012086015160e0880151602088015160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015611161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118591906140f8565b5061118e61150b565b61014086015160e0880151604080890151905163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af11580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121291906140f8565b5061124a604051806040016040528060168152602001752837b83ab630ba34b7339026b0b733b937bb3297171760511b815250612422565b61125261150b565b8660e001516001600160a01b031663148b7cea8588600001518a608001518a602001518b604001516040518663ffffffff1660e01b81526004016112999493929190614115565b6000604051808303818588803b1580156112b257600080fd5b505af11580156112c6573d6000803e3d6000fd5b50505050506113146112d98560126123cd565b6040518060400160405280601f81526020017f6e617469766520746f6b656e7320757365642061732070726f766973696f6e0081525061244a565b50505050505050565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561137b57600080fd5b505af115801561138f573d6000803e3d6000fd5b50505050565b60008051602061448c833981519152637fec2a8d6113b1611523565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561137b57600080fd5b6040805180820190915260608082526020820152600061141a8360a001518460c0015161248f565b60e0840151845160208601516060808801516040808a015160c08b015160808c015194850151948301519251633fce15c960e01b8152600481019790975260248701959095526044860188905262ffffff9092166064860152608485019190915260001960a485015260c48401929092526001600160701b031660e48301526001600160581b03166101048201529192506001600160a01b031690633fce15c99061012401600060405180830381865afa1580156114dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526115049190810190614208565b9392505050565b60008051602061448c83398151915263e6962cdb6113b15b6010546000906001600160a01b03166118835761156b604051806040016040528060148152602001732232b83637bcb2b91d313937b0b231b0b9ba32b960611b8152506104dc565b601080546001600160a01b0319166001600160a01b03929092169182179055611883576115ba6040518060400160405280600b81526020016a212927a0a221a0a9aa22a960a91b8152506124b5565b1561160c576115eb6040518060400160405280600b81526020016a212927a0a221a0a9aa22a960a91b815250612541565b601080546001600160a01b0319166001600160a01b03929092169190911790555b6010546001600160a01b031661184257601080546001600160a01b0319163290811790915572a329c0648769a73afac7f9381e08fb43dbea72148061166f57506010546001600160a01b0316731804c8ab1f12e6bbf3894d4083f33e07309d1f38145b156118425760006116f9600e60009054906101000a90046001600160a01b03166001600160a01b031663a3f4df7e6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156116cc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526116f49190810190613d39565b612659565b6040516020016117099190614298565b60408051601f198184030181529082905263c1978d1f60e01b8252915060008051602061448c8339815191529063c1978d1f9061174a908490600401613e0e565b602060405180830381865afa925050508015611783575060408051601f3d908101601f1916820190925261178091810190613e9d565b60015b6117ae576117a9604051806080016040528060458152602001614510604591398261244a565b611840565b604051630884001960e21b81526004810182905260008051602061448c833981519152906322100064906024016020604051808303816000875af11580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e9190613e21565b601080546001600160a01b0319166001600160a01b0392909216919091179055505b505b6040805180820190915260148152732232b83637bcb2b91d313937b0b231b0b9ba32b960611b602082015260105461188391906001600160a01b0316610275565b506010546001600160a01b031690565b604080516020810190915260008082525b82518110156104d257817f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b0316636900a3ae8584815181106118f2576118f2613ce1565b60200260200101516040518263ffffffff1660e01b815260040161191891815260200190565b600060405180830381865afa158015611935573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261195d9190810190613d39565b60405160200161196e929190613da6565b60405160208183030381529060405291506001835161198d9190613dd5565b8110156119b757816040516020016119a59190613de8565b60405160208183030381529060405291505b806119c181613d20565b9150506118a4565b60006119f26040518060400160405280600681526020016512d05391115360d21b815250612541565b6040805160808101825260008082526020820181905291810182905260608101919091529091506000611a476040518060400160405280600b81526020016a151250d2d7d3d19194d15560aa1b8152506124b5565b15611baa5760405163c1978d1f60e01b815260206004820152600b60248201526a151250d2d7d3d19194d15560aa1b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad59190613e9d565b60405163c1978d1f60e01b815260206004820152600b60248201526a151250d2d7d3d19194d15560aa1b604482015290915060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611b3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b619190613e9d565b8162ffffff1614611baa5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908151250d2d7d3d19194d155606a1b6044820152606401610a6f565b611bd060405180604001604052806005815260200164524154494f60d81b8152506124b5565b15611d2c5762ffffff811615611c285760405162461bcd60e51b815260206004820152601960248201527f4f6e6c7920524154494f206f72205449434b5f4f4646534554000000000000006044820152606401610a6f565b60405163c1978d1f60e01b8152602060048201526005602482015264524154494f60d81b6044820152600090611ce190620186a09060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb79190613e9d565b611cc990670de0b6b3a7640000613ef2565b611cd391906142de565b670de0b6b3a764000061248f565b9050809150808262ffffff1614611d2a5760405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726174696f60981b6044820152606401610a6f565b505b60405163c1978d1f60e01b815260206004820152600c60248201526b50524943455f504f494e545360a01b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db69190613e9d565b6001600160701b0316606083015260405163c1978d1f60e01b815260206004820152600c60248201526b50524943455f504f494e545360a01b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611e2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4e9190613e9d565b82606001516001600160701b031614611ea05760405162461bcd60e51b8152602060048201526014602482015273496e76616c69642050524943455f504f494e545360601b6044820152606401610a6f565b60405163c1978d1f60e01b8152602060048201526009602482015268535445505f53495a4560b81b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f279190613e9d565b6001600160581b03166040838101919091525163c1978d1f60e01b8152602060048201526009602482015268535445505f53495a4560b81b604482015260008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015611f9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbe9190613e9d565b82604001516001600160581b03161461200d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c696420535445505f53495a4560781b6044820152606401610a6f565b6040805161012081019182905263c1978d1f60e01b909152602061012482015260046101448201526346524f4d60e01b610164820152612364908060008051602061448c83398151915263c1978d1f6101848301602060405180830381865afa15801561207e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a29190613e9d565b815260405163c1978d1f60e01b81526020600482018190526002602483015261544f60f01b60448301529091019060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa158015612106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061212a9190613e9d565b815260405163c1978d1f60e01b8152602060048201819052600f60248301526e08c92a4a6a8be82a696be929c888ab608b1b60448301529091019060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa15801561219b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121bf9190613e9d565b815262ffffff8416602082015260408082018690525163c1978d1f60e01b815260609091019060008051602061448c8339815191529063c1978d1f90612226906004016020808252600a9082015269494e49545f51554f544560b01b604082015260600190565b602060405180830381865afa158015612243573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122679190613e9d565b815260405163c1978d1f60e01b81526020600482018190526006602483015265564f4c554d4560d01b60448301529091019060008051602061448c8339815191529063c1978d1f90606401602060405180830381865afa1580156122cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f39190613e9d565b8152602001856001600160a01b031681526020016123546040518060400160405280600a81526020016926a3ab2fa922a0a222a960b11b8152506040518060400160405280600981526020016826b3bb2932b0b232b960b91b8152506127ee565b6001600160a01b03169052610559565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6103998160405160240161239e9190613e0e565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261287f565b60606115048383604e612888565b6123648383836040516024016123f3939291906142f2565b60408051601f198184030181529190526020810180516001600160e01b0316632ced7cef60e01b17905261287f565b6103996040518060400160405280600a8152602001691b5b33336d2a1b5b306d60b01b815250825b6102528282604051602401612460929190614335565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b17905261287f565b600080600061249e8585612aeb565b915091506124ac8282612d17565b95945050505050565b60405163f877cb1960e01b815260009060008051602061448c8339815191529063f877cb19906124e9908590600401613e0e565b600060405180830381865afa92505050801561252757506040513d6000823e601f3d908101601f191682016040526125249190810190613d39565b60015b61253357506000919050565b50600192915050565b919050565b60405163350d56bf60e01b815260009060008051602061448c8339815191529063350d56bf90612575908590600401613e0e565b602060405180830381865afa9250505080156125ae575060408051601f3d908101601f191682019092526125ab91810190613e21565b60015b61055357600e5460405163f877cb1960e01b81526001600160a01b039091169063693ec85e9060008051602061448c8339815191529063f877cb19906125f8908790600401613e0e565b600060405180830381865afa158015612615573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261263d9190810190613d39565b6040518263ffffffff1660e01b81526004016105129190613e0e565b805160609082906001600160401b038111156126775761267761359c565b6040519080825280601f01601f1916602001820160405280156126a1576020820181803683370190505b50915060005b81518110156127e75760008282815181106126c4576126c4613ce1565b01602001516001600160f81b03191690506000606160f81b82108015906126f95750603d60f91b6001600160f81b0319831611155b905080806127145750605f60f81b6001600160f81b03198316145b806127465750604160f81b6001600160f81b03198316108015906127465750602d60f91b6001600160f81b0319831611155b61279e5760405162461bcd60e51b815260206004820152602360248201527f73696d706c654361706974616c697a6520696e707574206f7574206f662072616044820152626e676560e81b6064820152608401610a6f565b806127a957816127b4565b60208260f81c0360f81b5b8584815181106127c6576127c6613ce1565b60200101906001600160f81b031916908160001a90535050506001016126a7565b5050919050565b60006127f9836124b5565b1561280e5761280783612541565b9050610553565b600e5460405163349f642f60e11b81526001600160a01b039091169063693ec85e9061283e908590600401613e0e565b602060405180830381865afa15801561285b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115049190613e21565b61039981612369565b604080516101808101825260016101408201818152600360fc1b610160840152825282518084018452818152603160f81b6020828101919091528084019190915283518085018552828152601960f91b818301528385015283518085018552828152603360f81b8183015260608481019190915284518086018652838152600d60fa1b81840152608085015284518086018652838152603560f81b8184015260a085015284518086018652838152601b60f91b8184015260c085015284518086018652838152603760f81b8184015260e085015284518086018652838152600760fb1b818401526101008501528451808601909552918452603960f81b908401526101208201929092526000908190819081905b878510806129aa5750600089115b15612a8c576129ba600a8a61435a565b935081806129c757508315155b915081806129d55750878510155b15612a2e57876129e58689613d0d565b10612a29578084600a81106129fc576129fc613ce1565b602002015186604051602001612a13929190613da6565b6040516020818303038152906040529550612a2e565b600192505b818015612a44575087612a42866001613d0d565b145b15612a6c5785604051602001612a5a919061436e565b60405160208183030381529060405295505b84612a7681613d20565b9550612a859050600a8a6142de565b985061299c565b848810612ab65785604051602001612aa49190614397565b60405160208183030381529060405295505b8215612adf5785604051602001612acd91906143b3565b60405160208183030381529060405295505b50505050509392505050565b60008060016001607f1b03841115612b455760405162461bcd60e51b815260206004820152601f60248201527f6d67762f726174696f46726f6d566f6c2f696e626f756e642f746f6f426967006044820152606401610a6f565b60016001607f1b03831115612b9c5760405162461bcd60e51b815260206004820181905260248201527f6d67762f726174696f46726f6d566f6c2f6f7574626f756e642f746f6f4269676044820152606401610a6f565b82600003612bbf57506ffffb12cdf1087799c03e5a811a7aaa1c90506000612d10565b83600003612be257506f800276a52a62a71c29fc1cc441e523bc905060ff612d10565b600083608086901b81612bf757612bf76142c8565b0490506000612c8f827e09010a0d15021d0b0e10121619031e080c141c0f111807131b17061a05041f6307c4acdd60e01b6fffffffffffffffffffffffffffffffff831160071b8315600890811b9190911784811c6001600160401b031060061b1784811c63ffffffff1060051b1793841c600181901c17600281901c17600481901c179081901c17601081901c170260fb1c1a1790565b905081600003612ce15760405162461bcd60e51b815260206004820152601e60248201527f6d67762f726174696f46726f6d566f6c756d65732f7a65726f526174696f00006044820152606401610a6f565b607f811115612d0257607e1981019190911c9250608003607f019050612d10565b607f0390811b925060800190505b9250929050565b6000612d3683836f800276a52a62a71c29fc1cc441e523bc60ff613041565b15612d835760405162461bcd60e51b815260206004820152601860248201527f6d67762f7469636b46726f6d526174696f2f746f6f4c6f7700000000000000006044820152606401610a6f565b612da06ffffb12cdf1087799c03e5a811a7aaa1c60008585613041565b15612ded5760405162461bcd60e51b815260206004820152601960248201527f6d67762f7469636b46726f6d526174696f2f746f6f48696768000000000000006044820152606401610a6f565b60006040612dfc84607f6143da565b901b90506000612e0d607f80613dd5565b85901c800260c081901c6780000000000000001692909217607f83811c60ff94851c1c800260c181901c674000000000000000169290921782821c92851c9290921c800260c281901c672000000000000000169290921782821c92851c9290921c800260c381901c671000000000000000169290921782821c92851c9290921c800260c481901c670800000000000000169290921782821c92851c9290921c800260c581901c670400000000000000169290921782821c92851c9290921c800260c681901c670200000000000000169290921782821c92851c9290921c800260c781901c670100000000000000169290921782821c92851c9290921c800260c881901c6680000000000000169290921782821c92851c9290921c800260c981901c6640000000000000169290921782821c92851c9290921c800260ca81901c6620000000000000169290921782821c92851c9290921c800260cb81901c6610000000000000169290921782821c9290941c9190911c800260cc81901c6608000000000000169390931792901c90506000612fb183691b13d180eb882abba643614401565b905060006080612fd16f0147b240d5bf82739a122ad496972236846143da565b901d905060006080612ff3846fd9e63e52eeeb7875a857348794e73675614431565b901d905060008061300383613060565b9150915060006130158b8b8585613041565b9050838514806130225750805b1561302f57849850613033565b8398505b505050505050505092915050565b6000818411806124ac575081841480156124ac57505050909110919050565b60008061306c836130d2565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e1982850101908113156130ba5793841c936130c4565b8060000385901b94505b81607f039350505050915091565b60008060008084126130e457836130ed565b6130ed84614459565b9050620d89e88111156131425760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e64730000000000000000006044820152606401610a6f565b60006001821615613165576ffff97272373d413259a46990580e2139935061316d565b600160801b93505b6002821615613197576080613192856ffff2e50f5f656932ef12357cf3c7fdcb613ef2565b901c93505b60048216156131c15760806131bc856fffe5caca7e10e4e61c3624eaa0941ccf613ef2565b901c93505b60088216156131eb5760806131e6856fffcb9843d60f6159c9db58835c926643613ef2565b901c93505b6010821615613215576080613210856fff973b41fa98c081472e6896dfb254bf613ef2565b901c93505b602082161561323f57608061323a856fff2ea16466c96a3843ec78b326b52860613ef2565b901c93505b6040821615613269576080613264856ffe5dee046a99a2a811c461f1969c3052613ef2565b901c93505b608082161561329357608061328e856ffcbe86c7900a88aedcffc83b479aa3a3613ef2565b901c93505b6101008216156132be5760806132b9856ff987a7253ac413176f2b074cf7815e53613ef2565b901c93505b6102008216156132e95760806132e4856ff3392b0822b70005940c7a398e4b70f2613ef2565b901c93505b61040082161561331457608061330f856fe7159475a2c29b7443b29c7fa6e889d8613ef2565b901c93505b61080082161561333f57608061333a856fd097f3bdfd2022b8845ad8f792aa5825613ef2565b901c93505b61100082161561336a576080613365856fa9f746462d870fdf8a65dc1f90e061e4613ef2565b901c93505b6120008216156133a2576080613390856fe1b0d342ada5437121767bec575e65ed613ef2565b901c935061339f600182614431565b90505b6140008216156133da5760806133c8856fc6f84d7e5f423f66048c541550bf3e96613ef2565b901c93506133d7600282614431565b90505b618000821615613412576080613400856f9aa508b5b7a84e1c677de54f3e99bc8f613ef2565b901c935061340f600482614431565b90505b6201000082161561344b576080613439856fbad5f1bdb70232cd33865244bdcc089c613ef2565b901c9350613448600982614431565b90505b62020000821615613484576080613472856f885b9613d7e87aa498106fb7fa5edd37613ef2565b901c9350613481601282614431565b90505b620400008216156134bd5760806134ab856f9142e0723efb884889d1f447715afacd613ef2565b901c93506134ba602582614431565b90505b620800008216156134f65760806134e4856fa4d9a773d61316918f140bd96e8e6814613ef2565b901c93506134f3604b82614431565b90505b60008513156135175760018485600003040193508061351490614459565b90505b613522816080614431565b92505050915091565b613533614475565b565b6001600160a01b038116811461039957600080fd5b801515811461039957600080fd5b803561253c8161354a565b6000806040838503121561357657600080fd5b823561358181613535565b915060208301356135918161354a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b03811182821017156135d4576135d461359c565b60405290565b604080519081016001600160401b03811182821017156135d4576135d461359c565b6040516101a081016001600160401b03811182821017156135d4576135d461359c565b60405161012081016001600160401b03811182821017156135d4576135d461359c565b604051601f8201601f191681016001600160401b038111828210171561366a5761366a61359c565b604052919050565b60006001600160401b0382111561368b5761368b61359c565b50601f01601f191660200190565b600082601f8301126136aa57600080fd5b81356136bd6136b882613672565b613642565b8181528460208386010111156136d257600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561370257600080fd5b82356001600160401b0381111561371857600080fd5b61372485828601613699565b925050602083013561359181613535565b60006001600160401b0382111561374e5761374e61359c565b5060051b60200190565b600082601f83011261376957600080fd5b813560206137796136b883613735565b8281526060928302850182019282820191908785111561379857600080fd5b8387015b858110156137df5781818a0312156137b45760008081fd5b6137bc6135b2565b81358152858201358682015260408083013590820152845292840192810161379c565b5090979650505050505050565b6000604082840312156137fe57600080fd5b6138066135da565b905081356001600160401b038082111561381f57600080fd5b61382b85838601613758565b8352602084013591508082111561384157600080fd5b5061384e84828501613758565b60208301525092915050565b803561253c81613535565b60006020828403121561387757600080fd5b81356001600160401b038082111561388e57600080fd5b908301906101a082860312156138a357600080fd5b6138ab6135fc565b8235828111156138ba57600080fd5b6138c6878286016137ec565b82525060208301356020820152604083013560408201526138e960608401613558565b60608201526080830135608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100915061392682840161385a565b82820152610120915061393a82840161385a565b82820152610140915061394e82840161385a565b91810191909152610160828101359082015261018091820135918101919091529392505050565b60006020828403121561398757600080fd5b813561150481613535565b600060208083850312156139a557600080fd5b82356001600160401b038111156139bb57600080fd5b8301601f810185136139cc57600080fd5b80356139da6136b882613735565b81815260059190911b820183019083810190878311156139f957600080fd5b928401925b82841015613a17578335825292840192908401906139fe565b979650505050505050565b600060208284031215613a3457600080fd5b81356001600160401b03811115613a4a57600080fd5b613a5684828501613699565b949350505050565b62ffffff8116811461039957600080fd5b803561253c81613a5e565b63ffffffff8116811461039957600080fd5b6001600160581b038116811461039957600080fd5b6001600160701b038116811461039957600080fd5b600060808284031215613ac857600080fd5b604051608081018181106001600160401b0382111715613aea57613aea61359c565b6040529050808235613afb81613a7a565b81526020830135613b0b81613a5e565b60208201526040830135613b1e81613a8c565b60408201526060830135613b3181613aa1565b6060919091015292915050565b60006101808284031215613b5157600080fd5b613b5961361f565b823581526020830135602082015260408301356040820152613b7d60608401613a6f565b6060820152613b8f8460808501613ab6565b60808201526101008084013560a083015261012084013560c0830152613bb8610140850161385a565b60e0830152613bca610160850161385a565b908201529392505050565b600081518084526020808501945080840160005b83811015613c1b5781518051885283810151848901526040908101519088015260609096019590820190600101613be9565b509495945050505050565b6000815160408452613c3b6040850182613bd5565b9050602083015184820360208601526124ac8282613bd5565b6020815260006115046020830184613c26565b60005b83811015613c82578181015183820152602001613c6a565b50506000910152565b60008151808452613ca3816020860160208601613c67565b601f01601f19169290920160200192915050565b604081526000613cca6040830185613c8b565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561055357610553613cf7565b600060018201613d3257613d32613cf7565b5060010190565b600060208284031215613d4b57600080fd5b81516001600160401b03811115613d6157600080fd5b8201601f81018413613d7257600080fd5b8051613d806136b882613672565b818152856020838501011115613d9557600080fd5b6124ac826020830160208601613c67565b60008351613db8818460208801613c67565b835190830190613dcc818360208801613c67565b01949350505050565b8181038181111561055357610553613cf7565b60008251613dfa818460208701613c67565b61016160f51b920191825250600201919050565b6020815260006115046020830184613c8b565b600060208284031215613e3357600080fd5b815161150481613535565b60008060008060808587031215613e5457600080fd5b8451613e5f81613a7a565b6020860151909450613e7081613a5e565b6040860151909350613e8181613a8c565b6060860151909250613e9281613aa1565b939692955090935050565b600060208284031215613eaf57600080fd5b5051919050565b83516001600160a01b03908116825260208086015190911690820152604093840151938101939093526060830191909152608082015260a00190565b808202811582820484141761055357610553613cf7565b600060208284031215613f1b57600080fd5b815160ff8116811461150457600080fd5b7f526571756972656420636f6c6c61746572616c206f6620626173652069732000815260008351613f6481601f850160208801613c67565b6d01030b7321038bab7ba329034b9960951b601f918401918201528351613f9281602d840160208801613c67565b01602d01949350505050565b7009cdee840cadcdeeaced040c4c2e6ca405607b1b815260008351613fca816011850160208801613c67565b6b01497102232b334b1b4ba1d160a51b6011918401918201528351613ff681601d840160208801613c67565b01601d01949350505050565b60008251614014818460208701613c67565b61017160f51b920191825250600201919050565b6000845161403a818460208901613c67565b7109cdee840cadcdeeaced040e2eadee8ca40560731b9083019081528451614069816012840160208901613c67565b6b01497102232b334b1b4ba1d160a51b60129290910191820152835161409681601e840160208801613c67565b01601e0195945050505050565b6c0313937b0b231b0b9ba32b91d1609d1b8152600083516140cb81600d850160208801613c67565b600160fd1b600d9184019182015283516140ec81600e840160208801613c67565b01600e01949350505050565b60006020828403121561410a57600080fd5b81516115048161354a565b60e08152600061412860e0830187613c26565b905063ffffffff855116602083015262ffffff60208601511660408301526001600160581b0360408601511660608301526001600160701b0360608601511660808301528360a08301528260c083015295945050505050565b600082601f83011261419257600080fd5b815160206141a26136b883613735565b828152606092830285018201928282019190878511156141c157600080fd5b8387015b858110156137df5781818a0312156141dd5760008081fd5b6141e56135b2565b8151815285820151868201526040808301519082015284529284019281016141c5565b60006020828403121561421a57600080fd5b81516001600160401b038082111561423157600080fd5b908301906040828603121561424557600080fd5b61424d6135da565b82518281111561425c57600080fd5b61426887828601614181565b82525060208301518281111561427d57600080fd5b61428987828601614181565b60208301525095945050505050565b600082516142aa818460208701613c67565b6b5f505249564154455f4b455960a01b920191825250600c01919050565b634e487b7160e01b600052601260045260246000fd5b6000826142ed576142ed6142c8565b500490565b6060815260006143056060830186613c8b565b82810360208401526143178186613c8b565b9050828103604084015261432b8185613c8b565b9695505050505050565b6040815260006143486040830185613c8b565b82810360208401526124ac8185613c8b565b600082614369576143696142c8565b500690565b601760f91b81526000825161438a816001850160208701613c67565b9190910160010192915050565b600360fc1b81526000825161438a816001850160208701613c67565b600082516143c5818460208701613c67565b6271405360e91b920191825250600301919050565b81810360008312801583831316838312821617156143fa576143fa613cf7565b5092915050565b80820260008212600160ff1b8414161561441d5761441d613cf7565b818105831482151761055357610553613cf7565b808201828112600083128015821682158216171561445157614451613cf7565b505092915050565b6000600160ff1b820161446e5761446e613cf7565b5060000390565b634e487b7160e01b600052605160045260246000fdfe0000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d4576616c756174696e6720726571756972656420636f6c6c61746572616c2e2e2e42726f616463617374657220646f6573206e6f74206861766520656e6f7567682066756e647320746f2070726f766973696f6e206f66666572732e204d697373696e672573206e6f7420666f756e64206f72206e6f7420706172736561626c652061732075696e742c207573696e672064656661756c742062726f6164636173742073656e646572a26469706673582212209e5571b5ad9c3c94647644c32786b37c7e2d1bb4a6b218468068384458e7268b64736f6c63430008140033",
    "sourceMap": "1130:6379:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7880:170:38;;;;;;:::i;:::-;;:::i;:::-;;1500:98:2;;;;;;:::i;:::-;;:::i;7164:343:81:-;;;;;;:::i;:::-;;:::i;8054:76:38:-;;;;;;:::i;:::-;;:::i;1931:282:2:-;;;;;;:::i;:::-;;:::i;1385:111::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8574:32:131;;;8556:51;;8544:2;8529:18;1385:111:2;;;;;;;;3611:2887:81;;;;;;:::i;:::-;;:::i;5043:80:38:-;;;:::i;4963:76::-;;;:::i;6502:468:81:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4786:66:38:-;;;:::i;5182:2582::-;;;:::i;1646:281:2:-;;;;;;:::i;:::-;;:::i;1170:1325:81:-;;;:::i;800:28:16:-;;;;;;;;;;;;13495:14:131;;13488:22;13470:41;;13458:2;13443:18;800:28:16;13330:187:131;7880:170:38;7945:6;7941:105;;;7961:38;7971:21;;;;;;;;;;;;;-1:-1:-1;;;7971:21:38;;;7994:4;7961:9;:38::i;:::-;7880:170;;:::o;7941:105::-;8020:12;:19;;-1:-1:-1;;;;;;8020:19:38;-1:-1:-1;;;;;8020:19:38;;;;;7880:170;;:::o;1500:98:2:-;1566:11;;:27;;-1:-1:-1;;;1566:27:2;;:11;;;;-1:-1:-1;;;;;1566:11:2;;:15;;:27;;1582:4;;1588;;1566:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:98;;:::o;7164:343:81:-;7242:6;7237:131;7258:17;;:22;;;:29;7254:33;;7237:131;;;7330:17;;:22;;;:25;;7353:1;;7330:25;;;;;;:::i;:::-;;;;;;;:31;;;7302:4;:24;;:59;;;;;;;:::i;:::-;;;-1:-1:-1;7289:3:81;;;:::i;:::-;;;7237:131;;;;7378:6;7373:130;7394:17;;:22;:29;7390:33;;7373:130;;;7465:17;;:22;:25;;7488:1;;7465:25;;;;;;:::i;:::-;;;;;;;:31;;;7438:4;:23;;:58;;;;;;;:::i;:::-;;;-1:-1:-1;7425:3:81;;;:::i;:::-;;;7373:130;;8054:76:38;8102:23;8114:4;8120;8102:11;:23::i;:::-;8054:76;:::o;1931:282:2:-;1984:20;;;;;;;;;:15;:20;;;2010:179;2031:4;:11;2027:1;:15;2010:179;;;2075:1;317:28:15;309:37;;-1:-1:-1;;;;;2078:11:2;;2095:4;2100:1;2095:7;;;;;;;;:::i;:::-;;;;;;;2078:26;;;;;;;;;;;;;15055:25:131;;15043:2;15028:18;;14909:177;2078:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2078:26:2;;;;;;;;;;;;:::i;:::-;2061:44;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2057:48;;2135:1;2121:4;:11;:15;;;;:::i;:::-;2117:1;:19;2113:70;;;2166:1;2152:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;2148:26;;2113:70;2044:3;;;;:::i;:::-;;;;2010:179;;;;2194:14;2206:1;2194:11;:14::i;1385:111::-;1467:11;;:24;;-1:-1:-1;;;1467:24:2;;1445:7;;1467:11;;;-1:-1:-1;;;;;1467:11:2;;:18;;:24;;1486:4;;1467:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1460:31;1385:111;-1:-1:-1;;1385:111:2:o;3611:2887:81:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3708:4:81;:14;;;3691:4;:14;;:31;-1:-1:-1;;;;;3691:31:81;;;-1:-1:-1;;;;;3691:31:81;;;;;3740:4;:8;;;-1:-1:-1;;;;;3740:13:81;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3728:4;:9;;:27;-1:-1:-1;;;;;3728:27:81;;;-1:-1:-1;;;;;3728:27:81;;;;;3774:4;:8;;;-1:-1:-1;;;;;3774:14:81;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3761:4;:10;;:29;-1:-1:-1;;;;;3761:29:81;;;-1:-1:-1;;;;;3761:29:81;;;;;3829:4;:8;;;-1:-1:-1;;;;;3829:15:81;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3796:50;;;;;;;;;;;;;3797:4;:13;;3812:4;:11;;3796:50;;;;;;;;;;3853:27;3889:113;;;;;;;;3918:4;:9;;;-1:-1:-1;;;;;3889:113:81;;;;;3951:4;:10;;;-1:-1:-1;;;;;3889:113:81;;;;;3977:4;:8;;;-1:-1:-1;;;;;3977:21:81;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3889:113;;;3853:149;;4023:4;:14;;;-1:-1:-1;;;;;4023:27:81;;4051:14;4067:4;:11;;;4080:4;:13;;;4023:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4008:12;;;:86;4115:14;;;;-1:-1:-1;;;;;4115:27:81;;4143:24;:14;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1727:63:47;;;;;;;1733:17;;;;-1:-1:-1;;;;;1727:63:47;;;;;1752:18;;1727:63;;;;;;;;1772:17;;;;1727:63;;;;;1640:155;4143:24:81;4169:4;:11;;;4182:4;:13;;;4115:81;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4100:12;;;:96;4258:9;;4248:7;;;;4202:10;;4248:19;;;:::i;:::-;4231:4;:12;;;4216:4;:12;;;:27;;;;:::i;:::-;4215:53;;;;:::i;:::-;4202:66;;4302:5;4278:13;:11;:13::i;:::-;-1:-1:-1;;;;;4278:21:81;;:29;4274:267;;;4317:175;;;;;;;;;;;;;;;;;;4417:42;4433:13;:11;:13::i;:::-;4425:29;;-1:-1:-1;;;;;4433:21:81;;4425:5;:29;:::i;:::-;4456:2;4417:7;:42::i;:::-;4317:175;;;;;;;;;;;;;-1:-1:-1;;;4317:175:81;;;:11;:175::i;:::-;4500:34;;-1:-1:-1;;;4500:34:81;;19356:2:131;4500:34:81;;;19338:21:131;19395:2;19375:18;;;19368:30;-1:-1:-1;;;19414:18:131;;;19407:46;19470:18;;4500:34:81;;;;;;;;;4547:42;;;;;;;;;;;;;;;;;;:9;:42::i;:::-;4615:24;4634:4;4615:18;:24::i;:::-;4595:44;;4646:46;;;;;;;;;;;;;;;;;;;;;:9;:46::i;:::-;4698:29;4722:4;4698:23;:29::i;:::-;4805:17;4825:4;:9;;;-1:-1:-1;;;;;4825:18:81;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4805:40;;;;4851:18;4872:4;:10;;;-1:-1:-1;;;;;4872:19:81;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4851:42;;;;4899:227;4982:46;4990:4;:23;;;5015:12;4982:7;:46::i;:::-;5064:48;5072:4;:24;;;5098:13;5064:7;:48::i;:::-;4916:204;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4899:9;:227::i;:::-;5133:21;5202:4;:23;;;5165:4;:9;;;-1:-1:-1;;;;;5165:19:81;;5185:13;:11;:13::i;:::-;5165:34;;-1:-1:-1;;;;;;5165:34:81;;;;;;;-1:-1:-1;;;;;8574:32:131;;;5165:34:81;;;8556:51:131;8529:18;;5165:34:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;5161:299;;;5317:9;;;;5297:31;;-1:-1:-1;;;5297:31:81;;-1:-1:-1;;;;;8574:32:131;;;5297:31:81;;;8556:51:131;-1:-1:-1;;;;;;;;;;;5297:11:81;;;8529:18:131;;5297:31:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5297:31:81;;;;;;;;;;;;:::i;:::-;5362:83;5396:4;:9;;;-1:-1:-1;;;;;5396:19:81;;5416:13;:11;:13::i;:::-;5396:34;;-1:-1:-1;;;;;;5396:34:81;;;;;;;-1:-1:-1;;;;;8574:32:131;;;5396:34:81;;;8556:51:131;8529:18;;5396:34:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5370:4;:23;;;:60;;;;:::i;:::-;5432:12;5362:7;:83::i;:::-;5245:208;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5235:218;;5161:299;5507:4;:24;;;5469:4;:10;;;-1:-1:-1;;;;;5469:20:81;;5490:13;:11;:13::i;:::-;5469:35;;-1:-1:-1;;;;;;5469:35:81;;;;;;;-1:-1:-1;;;;;8574:32:131;;;5469:35:81;;;8556:51:131;8529:18;;5469:35:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;5465:377;;;5598:1;5580:7;5574:21;:25;:61;;;;;;;;;;;;;;;;;5616:7;5602:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;5574:61;5695:10;;;;5675:32;;-1:-1:-1;;;5675:32:81;;-1:-1:-1;;;;;8574:32:131;;;5675::81;;;8556:51:131;-1:-1:-1;;;;;;;;;;;5675:11:81;;;8529:18:131;;5675:32:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5675:32:81;;;;;;;;;;;;:::i;:::-;5741:86;5776:4;:10;;;-1:-1:-1;;;;;5776:20:81;;5797:13;:11;:13::i;:::-;5776:35;;-1:-1:-1;;;;;;5776:35:81;;;;;;;-1:-1:-1;;;;;8574:32:131;;;5776:35:81;;;8556:51:131;8529:18;;5776:35:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5749:4;:24;;;:62;;;;:::i;5741:86::-;5551:284;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5541:294;;5465:377;5851:21;;:25;5847:177;;-1:-1:-1;;;;;;;;;;;5927:11:81;5939:13;:11;:13::i;:::-;5927:26;;-1:-1:-1;;;;;;5927:26:81;;;;;;;-1:-1:-1;;;;;8574:32:131;;;5927:26:81;;;8556:51:131;8529:18;;5927:26:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5927:26:81;;;;;;;;;;;;:::i;:::-;5960:7;5896:72;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5886:82;;5976:18;5986:7;5976:9;:18::i;:::-;6009:7;6002:15;;-1:-1:-1;;;6002:15:81;;;;;;;;:::i;5847:177::-;6030:40;;;;;;;;;;;;;;;;;;:9;:40::i;:::-;6076:11;:9;:11::i;:::-;6093:9;;;;6119:8;;;;6130:23;;;;6093:61;;-1:-1:-1;;;6093:61:81;;-1:-1:-1;;;;;23770:32:131;;;6093:61:81;;;23752:51:131;23819:18;;;23812:34;;;;6093:17:81;;;;;23725:18:131;;6093:61:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6160:11;:9;:11::i;:::-;6177:10;;;;6204:8;;;;6215:24;;;;;6177:63;;-1:-1:-1;;;6177:63:81;;-1:-1:-1;;;;;23770:32:131;;;6177:63:81;;;23752:51:131;23819:18;;;23812:34;;;;6177:18:81;;;;;23725::131;;6177:63:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6247:35;;;;;;;;;;;;;;-1:-1:-1;;;6247:35:81;;;:9;:35::i;:::-;6289:11;:9;:11::i;:::-;6307:4;:8;;;-1:-1:-1;;;;;6307:17:81;;6332:5;6339:4;:17;;;6358:4;:11;;;6371:4;:23;;;6396:4;:24;;;6307:114;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6427:66;6439:18;6447:5;6454:2;6439:7;:18::i;:::-;6427:66;;;;;;;;;;;;;;;;;:11;:66::i;:::-;3658:2840;;;;;;3611:2887;:::o;5043:80:38:-;317:28:15;309:37;;-1:-1:-1;;;;;5100:16:38;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5043:80::o;4963:76::-;-1:-1:-1;;;;;;;;;;;5002:17:38;5020:13;:11;:13::i;:::-;5002:32;;-1:-1:-1;;;;;;5002:32:38;;;;;;;-1:-1:-1;;;;;8574:32:131;;;5002::38;;;8556:51:131;8529:18;;5002:32:38;;;;;;;;;;;;;;;;;;;6502:468:81;-1:-1:-1;;;;;;;;;;;;;;;;;6624:24:81;6651:52;6675:4;:14;;;6691:4;:11;;;6651:23;:52::i;:::-;6724:8;;;;6759:9;;6776:7;;;;6818:15;;;;;6841:18;;;;;6889:11;;;;6908;;;;:23;;;;6939:20;;;;6724:241;;-1:-1:-1;;;6724:241:81;;;;;25332:25:131;;;;25373:18;;;25366:34;;;;25416:18;;;25409:34;;;25491:8;25479:21;;;25459:18;;;25452:49;25517:19;;;25510:35;;;;-1:-1:-1;;25561:19:131;;;25554:35;25605:19;;;25598:35;;;;-1:-1:-1;;;;;25670:43:131;25649:19;;;25642:72;-1:-1:-1;;;;;25751:37:131;25730:19;;;25723:66;6624:79:81;;-1:-1:-1;;;;;;6724:27:81;;;;25304:19:131;;6724:241:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6724:241:81;;;;;;;;;;;;:::i;:::-;6709:256;6502:468;-1:-1:-1;;;6502:468:81:o;4786:66:38:-;-1:-1:-1;;;;;;;;;;;4820:12:38;4833:13;5182:2582;6535:12;;5221:7;;-1:-1:-1;;;;;6535:12:38;6531:1204;;6586:32;6596:21;;;;;;;;;;;;;-1:-1:-1;;;6596:21:38;;;6586:9;:32::i;:::-;6571:12;:47;;-1:-1:-1;;;;;;6571:47:38;-1:-1:-1;;;;;6571:47:38;;;;;;;;;6626:1103;;6672:21;;;;;;;;;;;;;;-1:-1:-1;;;6672:21:38;;;:6;:21::i;:::-;6668:96;;;6722:31;;;;;;;;;;;;;;-1:-1:-1;;;6722:31:38;;;:16;:31::i;:::-;6707:12;:46;;-1:-1:-1;;;;;;6707:46:38;-1:-1:-1;;;;;6707:46:38;;;;;;;;;;6668:96;6777:12;;-1:-1:-1;;;;;6777:12:38;6773:815;;6994:12;:24;;-1:-1:-1;;;;;;6994:24:38;7009:9;6994:24;;;;;;7134:42;7118:58;;:92;;-1:-1:-1;7180:12:38;;-1:-1:-1;;;;;7180:12:38;:30;;7118:92;7114:464;;;7226:22;7265:29;7282:4;;;;;;;;;-1:-1:-1;;;;;7282:4:38;-1:-1:-1;;;;;7282:9:38;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7282:11:38;;;;;;;;;;;;:::i;:::-;7265:16;:29::i;:::-;7251:60;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7251:60:38;;;;;;;;;;-1:-1:-1;;;7329:20:38;;7251:60;-1:-1:-1;;;;;;;;;;;;7329:10:38;;;:20;;7251:60;;7329:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;7329:20:38;;;;;;;;-1:-1:-1;;7329:20:38;;;;;;;;;;;;:::i;:::-;;;7325:241;;7457:94;;;;;;;;;;;;;;;;;;7542:8;7457:11;:94::i;:::-;7325:241;;;7400:19;;-1:-1:-1;;;7400:19:38;;;;;15055:25:131;;;-1:-1:-1;;;;;;;;;;;7400:14:38;;;15028:18:131;;7400:19:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7385:12;:34;;-1:-1:-1;;;;;;7385:34:38;-1:-1:-1;;;;;7385:34:38;;;;;;;;;;-1:-1:-1;7325:241:38;7212:366;7114:464;7684:21;;;;;;;;;;;;-1:-1:-1;;;7684:21:38;;;;7707:12;;7674:46;;7684:21;-1:-1:-1;;;;;7707:12:38;7674:9;:46::i;:::-;-1:-1:-1;7747:12:38;;-1:-1:-1;;;;;7747:12:38;;5182:2582::o;1646:281:2:-;1701:20;;;;;;;;;:15;:20;;;1727:176;1748:5;:12;1744:1;:16;1727:176;;;1793:1;317:28:15;309:37;;-1:-1:-1;;;;;1796:11:2;;1808:5;1814:1;1808:8;;;;;;;;:::i;:::-;;;;;;;1796:21;;;;;;;;;;;;;15055:25:131;;15043:2;15028:18;;14909:177;1796:21:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1796:21:2;;;;;;;;;;;;:::i;:::-;1779:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1775:43;;1849:1;1834:5;:12;:16;;;;:::i;:::-;1830:1;:20;1826:71;;;1880:1;1866:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;1862:26;;1826:71;1762:3;;;;:::i;:::-;;;;1727:176;;1170:1325:81;1198:19;1227:26;;;;;;;;;;;;;;-1:-1:-1;;;1227:26:81;;;:16;:26::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1198:56:81;;-1:-1:-1;1293:17:81;1320:21;;;;;;;;;;;;;;-1:-1:-1;;;1320:21:81;;;:6;:21::i;:::-;1316:167;;;1371:25;;-1:-1:-1;;;1371:25:81;;28387:2:131;1371:25:81;;;28369:21:131;28426:2;28406:18;;;28399:30;-1:-1:-1;;;28445:18:131;;;28438:41;-1:-1:-1;;;;;;;;;;;1371:10:81;;;28496:18:131;;1371:25:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1427;;-1:-1:-1;;;1427:25:81;;28387:2:131;1427:25:81;;;28369:21:131;28426:2;28406:18;;;28399:30;-1:-1:-1;;;28445:18:131;;;28438:41;1351:46:81;;-1:-1:-1;;;;;;;;;;;;1427:10:81;;;28496:18:131;;1427:25:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1413:10;:39;;;1405:71;;;;-1:-1:-1;;;1405:71:81;;28727:2:131;1405:71:81;;;28709:21:131;28766:2;28746:18;;;28739:30;-1:-1:-1;;;28785:18:131;;;28778:49;28844:18;;1405:71:81;28525:343:131;1405:71:81;1492:15;;;;;;;;;;;;;;-1:-1:-1;;;1492:15:81;;;:6;:15::i;:::-;1488:324;;;1525:15;;;;1517:53;;;;-1:-1:-1;;;1517:53:81;;29075:2:131;1517:53:81;;;29057:21:131;29114:2;29094:18;;;29087:30;29153:27;29133:18;;;29126:55;29198:18;;1517:53:81;28873:349:131;1517:53:81;1647:19;;-1:-1:-1;;;1647:19:81;;29429:2:131;1647:19:81;;;29411:21:131;29468:1;29448:18;;;29441:29;-1:-1:-1;;;29486:18:131;;;29479:35;1578:15:81;;1608:80;;1671:6;;-1:-1:-1;;;;;;;;;;;1647:10:81;;;29531:18:131;;1647:19:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1632:35;;:7;:35;:::i;:::-;:46;;;;:::i;:::-;1680:7;1608:23;:80::i;:::-;1578:111;;1726:11;1697:43;;1775:11;1756:10;:31;;;1748:57;;;;-1:-1:-1;;;1748:57:81;;30019:2:131;1748:57:81;;;30001:21:131;30058:2;30038:18;;;30031:30;-1:-1:-1;;;30077:18:131;;;30070:43;30130:18;;1748:57:81;29817:337:131;1748:57:81;1509:303;1488:324;1846:26;;-1:-1:-1;;;1846:26:81;;30361:2:131;1846:26:81;;;30343:21:131;30400:2;30380:18;;;30373:30;-1:-1:-1;;;30419:18:131;;;30412:42;-1:-1:-1;;;;;;;;;;;1846:10:81;;;30471:18:131;;1846:26:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1817:56:81;:18;;;:56;1909:26;;-1:-1:-1;;;1909:26:81;;30361:2:131;1909:26:81;;;30343:21:131;30400:2;30380:18;;;30373:30;-1:-1:-1;;;30419:18:131;;;30412:42;-1:-1:-1;;;;;;;;;;;1909:10:81;;;30471:18:131;;1909:26:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1887:6;:18;;;-1:-1:-1;;;;;1887:48:81;;1879:81;;;;-1:-1:-1;;;1879:81:81;;30702:2:131;1879:81:81;;;30684:21:131;30741:2;30721:18;;;30714:30;-1:-1:-1;;;30760:18:131;;;30753:50;30820:18;;1879:81:81;30500:344:131;1879:81:81;1991:23;;-1:-1:-1;;;1991:23:81;;31051:2:131;1991:23:81;;;31033:21:131;31090:1;31070:18;;;31063:29;-1:-1:-1;;;31108:18:131;;;31101:39;-1:-1:-1;;;;;;;;;;;1991:10:81;;;31157:18:131;;1991:23:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1966:49:81;:15;;;;:49;;;;2048:23;-1:-1:-1;;;2048:23:81;;31051:2:131;2048:23:81;;;31033:21:131;31090:1;31070:18;;;31063:29;-1:-1:-1;;;31108:18:131;;;31101:39;-1:-1:-1;;;;;;;;;;;2048:10:81;;;31157:18:131;;2048:23:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:6;:15;;;-1:-1:-1;;;;;2029:42:81;;2021:72;;;;-1:-1:-1;;;2021:72:81;;31388:2:131;2021:72:81;;;31370:21:131;31427:2;31407:18;;;31400:30;-1:-1:-1;;;31446:18:131;;;31439:47;31503:18;;2021:72:81;31186:341:131;2021:72:81;2116:368;;;;;;;;;;-1:-1:-1;;;2141:18:81;;;31734:2:131;2141:18:81;;;31716:21:131;31773:1;31753:18;;;31746:29;-1:-1:-1;;;31791:18:131;;;31784:34;2100:390:81;;2116:368;-1:-1:-1;;;;;;;;;;;2141:10:81;31835:18:131;;;2141::81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:368;;2173:16;;-1:-1:-1;;;2173:16:81;;2116:368;2173:16;;;32048:21:131;;;32105:1;32085:18;;;32078:29;-1:-1:-1;;;32123:18:131;;;32116:32;2116:368:81;;;;-1:-1:-1;;;;;;;;;;;2173:10:81;;;32165:18:131;;2173:16:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:368;;2214:29;;-1:-1:-1;;;2214:29:81;;2116:368;2214:29;;;32378:21:131;;;32435:2;32415:18;;;32408:30;-1:-1:-1;;;32454:18:131;;;32447:45;2116:368:81;;;;-1:-1:-1;;;;;;;;;;;2214:10:81;;;32509:18:131;;2214:29:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:368;;;;;;;;;;;;;;;;2320:24;-1:-1:-1;;;2320:24:81;;2116:368;;;;;-1:-1:-1;;;;;;;;;;;2320:10:81;;;:24;;;;32740:2:131;32722:21;;;32779:2;32759:18;;;32752:30;-1:-1:-1;;;32813:2:131;32798:18;;32791:40;32863:2;32848:18;;32538:334;2320:24:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:368;;2362:20;;-1:-1:-1;;;2362:20:81;;2116:368;2362:20;;;33061:21:131;;;33118:1;33098:18;;;33091:29;-1:-1:-1;;;33136:18:131;;;33129:36;2116:368:81;;;;-1:-1:-1;;;;;;;;;;;2362:10:81;;;33182:18:131;;2362:20:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2116:368;;;;2397:3;-1:-1:-1;;;;;2116:368:81;;;;;2431:43;;;;;;;;;;;;;;-1:-1:-1;;;2431:43:81;;;;;;;;;;;;;;;;-1:-1:-1;;;2431:43:81;;;:16;:43::i;:::-;-1:-1:-1;;;;;2116:368:81;;;2100:8;:390::i;:::-;1192:1303;;;1170:1325::o;1007:380:30:-;1105:14;;591:42;1278:2;1265:16;;1081:21;;1105:14;1265:16;591:42;1314:5;1303:68;1294:77;;1231:150;;1007:380;:::o;6598:121::-;6653:59;6708:2;6669:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6669:42:30;;;;;;;;;;;;;;-1:-1:-1;;;;;6669:42:30;-1:-1:-1;;;6669:42:30;;;6653:15;:59::i;5744:122:33:-;5796:13;5822:41;5830:3;5834:4;5839:2;5822:7;:41::i;13031:179:30:-;13122:81;13191:2;13195;13199;13138:64;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;13138:64:30;;;;;;;;;;;;;;-1:-1:-1;;;;;13138:64:30;-1:-1:-1;;;13138:64:30;;;13122:15;:81::i;4856:103:38:-;4914:40;;;;;;;;;;;;;;-1:-1:-1;;;4914:40:38;;;4950:3;7846:150:30;7919:70;7981:2;7985;7935:53;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7935:53:30;;;;;;;;;;;;;;-1:-1:-1;;;;;7935:53:30;-1:-1:-1;;;7935:53:30;;;7919:15;:70::i;5187:214:12:-;5270:9;5288:8;5298;5310:41;5327:10;5339:11;5310:16;:41::i;:::-;5287:64;;;;5364:32;5388:3;5392;5364:23;:32::i;:::-;5357:39;5187:214;-1:-1:-1;;;;;5187:214:12:o;10335:162:38:-;10412:20;;-1:-1:-1;;;10412:20:38;;10396:4;;-1:-1:-1;;;;;;;;;;;10412:12:38;;;:20;;10425:6;;10412:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10412:20:38;;;;;;;;;;;;:::i;:::-;;;10408:85;;-1:-1:-1;10481:5:38;;10335:162;-1:-1:-1;10335:162:38:o;10408:85::-;-1:-1:-1;10448:4:38;;10335:162;-1:-1:-1;;10335:162:38:o;10408:85::-;10335:162;;;:::o;9633:241::-;9731:21;;-1:-1:-1;;;9731:21:38;;9704:15;;-1:-1:-1;;;;;;;;;;;9731:13:38;;;:21;;9745:6;;9731:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;9731:21:38;;;;;;;;-1:-1:-1;;9731:21:38;;;;;;;;;;;;:::i;:::-;;;9727:143;;9833:4;;9842:20;;-1:-1:-1;;;9842:20:38;;-1:-1:-1;;;;;9833:4:38;;;;:8;;-1:-1:-1;;;;;;;;;;;9842:12:38;;;:20;;9855:6;;9842:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9842:20:38;;;;;;;;;;;;:::i;:::-;9833:30;;;;;;;;;;;;;;;:::i;21189:472:2:-;21326:8;;21255:16;;21302:1;;-1:-1:-1;;;;;21315:20:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21315:20:2;;21310:25;;21364:6;21359:292;21380:1;:8;21376:1;:12;21359:292;;;21405:9;21417:1;21419;21417:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;21417:4:2;;-1:-1:-1;21431:14:2;-1:-1:-1;;;21448:9:2;;;;;:22;;-1:-1:-1;;;;;;;;;;21461:9:2;;;;21448:22;21431:39;;21488:9;:22;;;-1:-1:-1;;;;;;;;;;21501:9:2;;;21488:22;:50;;;-1:-1:-1;;;;;;;;;;21515:9:2;;;;;;:22;;-1:-1:-1;;;;;;;;;;21528:9:2;;;;21515:22;21480:98;;;;-1:-1:-1;;;21480:98:2;;34616:2:131;21480:98:2;;;34598:21:131;34655:2;34635:18;;;34628:30;34694:34;34674:18;;;34667:62;-1:-1:-1;;;34745:18:131;;;34738:33;34788:19;;21480:98:2;34414:399:131;21480:98:2;21603:9;:39;;21640:2;21603:39;;;21634:2;21628;21622:9;;:14;21615:22;;21603:39;21594:2;21598:1;21588:12;;;;;;;;:::i;:::-;;;;:54;-1:-1:-1;;;;;21588:54:2;;;;;;;;-1:-1:-1;;;21390:3:2;;21359:292;;;;21273:388;21189:472;;;:::o;10106:225:38:-;10204:15;10231:14;10238:6;10231;:14::i;:::-;10227:66;;;10262:24;10279:6;10262:16;:24::i;:::-;10255:31;;;;10227:66;10305:4;;:21;;-1:-1:-1;;;10305:21:38;;-1:-1:-1;;;;;10305:4:38;;;;:8;;:21;;10314:11;;10305:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;868:133:30:-;939:55;986:7;965:19;939:55::i;5943:1339:33:-;6329:74;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;6004:17;6329:74;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;-1:-1:-1;;;6329:74:33;;;;;;;;;;;;-1:-1:-1;;;6329:74:33;;;;-1:-1:-1;;;6329:74:33;;;;6027:10;;;;;;;;6475:596;6490:4;6482:5;:12;:23;;;;6504:1;6498:3;:7;6482:23;6475:596;;;6521:8;6527:2;6521:3;:8;:::i;:::-;6513:16;;6545:7;:21;;;-1:-1:-1;6556:10:33;;;6545:21;6535:31;;6641:7;:24;;;;6661:4;6652:5;:13;;6641:24;6637:250;;;6770:4;6756:10;6761:5;6756:2;:10;:::i;:::-;:18;6752:129;;6806:12;6819:5;6806:19;;;;;;;:::i;:::-;;;;;6827:3;6792:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6786:45;;6752:129;;;6868:4;6856:16;;6752:129;6960:7;:28;;;;-1:-1:-1;6984:4:33;6971:9;:5;6979:1;6971:9;:::i;:::-;:17;6960:28;6956:78;;;7023:3;7004:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;6998:29;;6956:78;7039:7;;;;:::i;:::-;;-1:-1:-1;7058:8:33;;-1:-1:-1;7064:2:33;7058:3;:8;:::i;:::-;7052:14;;6475:596;;;7129:5;7121:4;:13;7117:59;;7167:3;7148:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;7142:29;;7117:59;7221:9;7217:63;;;7258:3;7244:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;7238:37;;7217:63;6023:1259;;;;;5943:1339;;;;;:::o;4213:929:12:-;4297:13;4312:8;-1:-1:-1;;;;;4354:10:12;:29;;4346:73;;;;-1:-1:-1;;;4346:73:12;;36447:2:131;4346:73:12;;;36429:21:131;36486:2;36466:18;;;36459:30;36525:33;36505:18;;;36498:61;36576:18;;4346:73:12;36245:355:131;4346:73:12;-1:-1:-1;;;;;4435:11:12;:30;;4427:75;;;;-1:-1:-1;;;4427:75:12;;36807:2:131;4427:75:12;;;36789:21:131;;;36826:18;;;36819:30;36885:34;36865:18;;;36858:62;36937:18;;4427:75:12;36605:356:131;4427:75:12;4514:11;4529:1;4514:16;4510:181;;-1:-1:-1;2606:39:7;;-1:-1:-1;2676:1:7;4542:47:12;;4510:181;4608:10;4622:1;4608:15;4604:87;;-1:-1:-1;2496:39:7;;-1:-1:-1;2566:3:7;4635:47:12;;4604:87;4698:10;4743:11;2898:3:7;4712:10:12;:27;;4711:43;;;;;:::i;:::-;;4698:56;;4763:9;4775:17;4786:5;1891:66:6;-1:-1:-1;;;1333:34:6;1330:41;-1:-1:-1;1327:1:6;1323:49;1288:9;;1285:1;1281:17;;;1317:56;;;;1427:9;;;-1:-1:-1;;;;;1404:33:6;1401:1;1397:41;1391:48;1485:9;;;1473:10;1470:25;1467:1;1463:33;1457:40;1582:9;;;1619:1;1615:9;;;1609:16;1653:1;1649:9;;;1643:16;1687:1;1683:9;;;1677:16;1717:9;;;;1711:16;1755:2;1751:10;;;1745:17;1844:28;1839:3;1835:38;1830:128;1824:135;;1169:806;4775:17:12;4763:29;;4808:5;4817:1;4808:10;4800:52;;;;-1:-1:-1;;;4800:52:12;;37168:2:131;4800:52:12;;;37150:21:131;37207:2;37187:18;;;37180:30;37246:32;37226:18;;;37219:60;37296:18;;4800:52:12;36966:354:131;4800:52:12;2943:3:7;4864:4:12;:30;4860:272;;;-1:-1:-1;;4918:30:12;;4966:13;;;;;-1:-1:-1;2898:3:7;4981:20:12;2943:3:7;4981:20:12;;-1:-1:-1;4958:44:12;;4860:272;2943:3:7;5039:30:12;5087:13;;;;-1:-1:-1;2898:3:7;5102:20:12;;-1:-1:-1;4213:929:12;;;;;;:::o;6335:3839::-;6416:9;6437:63;6445:8;6455:3;2496:39:7;2566:3;6437:7:12;:63::i;:::-;6433:118;;;6510:34;;-1:-1:-1;;;6510:34:12;;37527:2:131;6510:34:12;;;37509:21:131;37566:2;37546:18;;;37539:30;37605:26;37585:18;;;37578:54;37649:18;;6510:34:12;37325:348:131;6433:118:12;6560:63;2606:39:7;2676:1;6609:8:12;6619:3;6560:7;:63::i;:::-;6556:119;;;6633:35;;-1:-1:-1;;;6633:35:12;;37880:2:131;6633:35:12;;;37862:21:131;37919:2;37899:18;;;37892:30;37958:27;37938:18;;;37931:55;38003:18;;6633:35:12;37678:349:131;6556:119:12;6680:13;6739:2;6696:39;6731:3;2943::7;6696:39:12;:::i;:::-;:45;;;-1:-1:-1;6747:9:12;6771:29;6797:3;;6771:29;:::i;:::-;6759:41;;;7441:15;;7527:16;;;;;;7513:31;;;;7436:3;7432:25;;;7479:14;;;;7559:18;7602:15;;7684:16;;;;;;7670:31;;;;7593:25;;;7636:14;;;7716:18;;;;7759:15;;7841:16;;;;;;7827:31;;;;7750:25;;;7793:14;;;7873:18;;;;7916:15;;7998:16;;;;;;7984:31;;;;7907:25;;;7950:14;;;8030:18;;;;8073:15;;8155:16;;;;;;8141:31;;;;8064:25;;;8107:14;;;8187:18;;;;8230:15;;8312:16;;;;;;8298:31;;;;8221:25;;;8264:14;;;8344:18;;;;8387:15;;8469:16;;;;;;8455:31;;;;8378:25;;;8421:14;;;8501:18;;;;8544:15;;8626:16;;;;;;8612:31;;;;8535:25;;;8578:14;;;8658:18;;;;8701:15;;8783:16;;;;;;8769:31;;;;8692:25;;;8735:14;;;8815:18;;;;8858:15;;8940:16;;;;;;8926:31;;;;8849:25;;;8892:14;;;8972:18;;;;9015:15;;9097:16;;;;;;9083:31;;;;9006:25;;;9049:14;;;9129:18;;;;9172:15;;9254:16;;;;;;9240:31;;;;9163:25;;;9206:14;;;;9286:18;;;;9329:15;;9411:16;;;;;;9397:31;;;;;9320:25;;;-1:-1:-1;9574:16:12;9593:36;9397:31;9605:24;9593:36;:::i;:::-;9574:55;-1:-1:-1;9677:11:12;9753:3;9696:52;9711:37;9574:55;9696:52;:::i;:::-;9695:61;;;-1:-1:-1;9805:12:12;9884:3;9825:54;:12;9840:39;9825:54;:::i;:::-;9824:63;;9805:83;;9896:17;9915:12;9931:34;9955:8;9931:13;:34::i;:::-;9895:70;;;;9972:16;9991:45;9999:8;10009:3;10014:12;10028:7;9991;:45::i;:::-;9972:64;;10057:8;10046:7;:19;:34;;;;10069:11;10046:34;10042:128;;;10107:7;10090:25;;10042:128;;;10154:8;10137:26;;10042:128;6427:3747;;;;;;;;6335:3839;;;;:::o;16515:373::-;16613:4;16830:5;16822;:13;:60;;;;16849:5;16840;:14;:41;;;;-1:-1:-1;;;16858:23:12;;;;16814:69;-1:-1:-1;16515:373:12:o;10423:815::-;10480:8;10490;10537:32;10564:4;10537:26;:32::i;:::-;10524:45;;-1:-1:-1;10524:45:12;-1:-1:-1;5056:3:7;10595:33:12;;;10577:15;10777:12;10830:30;;;10826:37;-1:-1:-1;10760:30:12;;;10812:52;;-1:-1:-1;;10890:18:12;;;:47;;10949:8;;10945:177;;;11047:17;;;;10945:177;;;11108:4;11107:5;;11095:3;:18;;11089:24;;10945:177;11217:9;2943:3:7;11188:38:12;11177:50;;10506:728;;;10423:815;;;:::o;11962:2858::-;12032:8;12042;12058:12;12093:1;12085:4;12073:21;:74;;12141:4;12073:74;;;12102:18;12115:4;12102:18;:::i;:::-;12058:89;;2296:6:7;12161:7:12;:25;;12153:61;;;;-1:-1:-1;;;12153:61:12;;39043:2:131;12153:61:12;;;39025:21:131;39082:2;39062:18;;;39055:30;39121:25;39101:18;;;39094:53;39164:18;;12153:61:12;38841:347:131;12153:61:12;12221:15;12256:3;12246:13;;:18;12242:141;;12280:34;12274:40;;12242:141;;;-1:-1:-1;;;12335:41:12;;12242:141;12402:3;12392:13;;:18;12388:94;;12472:3;12427:40;:3;12433:34;12427:40;:::i;:::-;12426:49;;12420:55;;12388:94;12501:3;12491:13;;:18;12487:94;;12571:3;12526:40;:3;12532:34;12526:40;:::i;:::-;12525:49;;12519:55;;12487:94;12600:3;12590:13;;:18;12586:94;;12670:3;12625:40;:3;12631:34;12625:40;:::i;:::-;12624:49;;12618:55;;12586:94;12699:4;12689:14;;:19;12685:95;;12770:3;12725:40;:3;12731:34;12725:40;:::i;:::-;12724:49;;12718:55;;12685:95;12799:4;12789:14;;:19;12785:95;;12870:3;12825:40;:3;12831:34;12825:40;:::i;:::-;12824:49;;12818:55;;12785:95;12899:4;12889:14;;:19;12885:95;;12970:3;12925:40;:3;12931:34;12925:40;:::i;:::-;12924:49;;12918:55;;12885:95;12999:4;12989:14;;:19;12985:95;;13070:3;13025:40;:3;13031:34;13025:40;:::i;:::-;13024:49;;13018:55;;12985:95;13099:5;13089:15;;:20;13085:96;;13171:3;13126:40;:3;13132:34;13126:40;:::i;:::-;13125:49;;13119:55;;13085:96;13200:5;13190:15;;:20;13186:96;;13272:3;13227:40;:3;13233:34;13227:40;:::i;:::-;13226:49;;13220:55;;13186:96;13301:5;13291:15;;:20;13287:96;;13373:3;13328:40;:3;13334:34;13328:40;:::i;:::-;13327:49;;13321:55;;13287:96;13402:5;13392:15;;:20;13388:96;;13474:3;13429:40;:3;13435:34;13429:40;:::i;:::-;13428:49;;13422:55;;13388:96;13503:6;13493:16;;:21;13489:97;;13576:3;13531:40;:3;13537:34;13531:40;:::i;:::-;13530:49;;13524:55;;13489:97;13605:6;13595:16;;:21;13591:121;;13678:3;13633:40;:3;13639:34;13633:40;:::i;:::-;13632:49;;;-1:-1:-1;13689:16:12;13704:1;13689:16;;:::i;:::-;;;13591:121;13731:6;13721:16;;:21;13717:121;;13804:3;13759:40;:3;13765:34;13759:40;:::i;:::-;13758:49;;;-1:-1:-1;13815:16:12;13830:1;13815:16;;:::i;:::-;;;13717:121;13857:6;13847:16;;:21;13843:121;;13930:3;13885:40;:3;13891:34;13885:40;:::i;:::-;13884:49;;;-1:-1:-1;13941:16:12;13956:1;13941:16;;:::i;:::-;;;13843:121;13983:7;13973:17;;:22;13969:122;;14057:3;14012:40;:3;14018:34;14012:40;:::i;:::-;14011:49;;;-1:-1:-1;14068:16:12;14083:1;14068:16;;:::i;:::-;;;13969:122;14110:7;14100:17;;:22;14096:123;;14184:3;14139:40;:3;14145:34;14139:40;:::i;:::-;14138:49;;;-1:-1:-1;14195:17:12;14210:2;14195:17;;:::i;:::-;;;14096:123;14238:7;14228:17;;:22;14224:123;;14312:3;14267:40;:3;14273:34;14267:40;:::i;:::-;14266:49;;;-1:-1:-1;14323:17:12;14338:2;14323:17;;:::i;:::-;;;14224:123;14366:7;14356:17;;:22;14352:123;;14440:3;14395:40;:3;14401:34;14395:40;:::i;:::-;14394:49;;;-1:-1:-1;14451:17:12;14466:2;14451:17;;:::i;:::-;;;14352:123;14504:1;14496:4;14484:21;14480:300;;;14730:1;14724:3;14718;14715:1;14711:11;14707:21;14703:29;14696:36;;14762:11;14761:12;;;:::i;:::-;14747:26;;14480:300;14796:17;14802:11;14796:3;:17;:::i;:::-;14785:29;;12052:2768;;11962:2858;;;:::o;-1:-1:-1:-;;;:::i;:::-;:::o;14:131:131:-;-1:-1:-1;;;;;89:31:131;;79:42;;69:70;;135:1;132;125:12;150:118;236:5;229:13;222:21;215:5;212:32;202:60;;258:1;255;248:12;273:128;338:20;;367:28;338:20;367:28;:::i;406:382::-;471:6;479;532:2;520:9;511:7;507:23;503:32;500:52;;;548:1;545;538:12;500:52;587:9;574:23;606:31;631:5;606:31;:::i;:::-;656:5;-1:-1:-1;713:2:131;698:18;;685:32;726:30;685:32;726:30;:::i;:::-;775:7;765:17;;;406:382;;;;;:::o;793:127::-;854:10;849:3;845:20;842:1;835:31;885:4;882:1;875:15;909:4;906:1;899:15;925:253;997:2;991:9;1039:4;1027:17;;-1:-1:-1;;;;;1059:34:131;;1095:22;;;1056:62;1053:88;;;1121:18;;:::i;:::-;1157:2;1150:22;925:253;:::o;1183:257::-;1255:4;1249:11;;;1287:17;;-1:-1:-1;;;;;1319:34:131;;1355:22;;;1316:62;1313:88;;;1381:18;;:::i;1445:255::-;1517:2;1511:9;1559:6;1547:19;;-1:-1:-1;;;;;1581:34:131;;1617:22;;;1578:62;1575:88;;;1643:18;;:::i;1705:255::-;1777:2;1771:9;1819:6;1807:19;;-1:-1:-1;;;;;1841:34:131;;1877:22;;;1838:62;1835:88;;;1903:18;;:::i;1965:275::-;2036:2;2030:9;2101:2;2082:13;;-1:-1:-1;;2078:27:131;2066:40;;-1:-1:-1;;;;;2121:34:131;;2157:22;;;2118:62;2115:88;;;2183:18;;:::i;:::-;2219:2;2212:22;1965:275;;-1:-1:-1;1965:275:131:o;2245:187::-;2294:4;-1:-1:-1;;;;;2319:6:131;2316:30;2313:56;;;2349:18;;:::i;:::-;-1:-1:-1;2415:2:131;2394:15;-1:-1:-1;;2390:29:131;2421:4;2386:40;;2245:187::o;2437:464::-;2480:5;2533:3;2526:4;2518:6;2514:17;2510:27;2500:55;;2551:1;2548;2541:12;2500:55;2587:6;2574:20;2618:49;2634:32;2663:2;2634:32;:::i;:::-;2618:49;:::i;:::-;2692:2;2683:7;2676:19;2738:3;2731:4;2726:2;2718:6;2714:15;2710:26;2707:35;2704:55;;;2755:1;2752;2745:12;2704:55;2820:2;2813:4;2805:6;2801:17;2794:4;2785:7;2781:18;2768:55;2868:1;2843:16;;;2861:4;2839:27;2832:38;;;;2847:7;2437:464;-1:-1:-1;;;2437:464:131:o;2906:457::-;2984:6;2992;3045:2;3033:9;3024:7;3020:23;3016:32;3013:52;;;3061:1;3058;3051:12;3013:52;3101:9;3088:23;-1:-1:-1;;;;;3126:6:131;3123:30;3120:50;;;3166:1;3163;3156:12;3120:50;3189;3231:7;3222:6;3211:9;3207:22;3189:50;:::i;:::-;3179:60;;;3289:2;3278:9;3274:18;3261:32;3302:31;3327:5;3302:31;:::i;3368:200::-;3445:4;-1:-1:-1;;;;;3470:6:131;3467:30;3464:56;;;3500:18;;:::i;:::-;-1:-1:-1;3545:1:131;3541:14;3557:4;3537:25;;3368:200::o;3573:1077::-;3644:5;3697:3;3690:4;3682:6;3678:17;3674:27;3664:55;;3715:1;3712;3705:12;3664:55;3751:6;3738:20;3777:4;3801:77;3817:60;3874:2;3817:60;:::i;3801:77::-;3912:15;;;3974:4;4017:11;;;4005:24;;4001:33;;;3943:12;;;;3900:3;4046:15;;;4043:35;;;4074:1;4071;4064:12;4043:35;4110:2;4102:6;4098:15;4122:499;4138:6;4133:3;4130:15;4122:499;;;4214:2;4208:3;4203;4199:13;4195:22;4192:112;;;4258:1;4287:2;4283;4276:14;4192:112;4330:22;;:::i;:::-;4379:17;;4365:32;;4446:12;;;4433:26;4417:14;;;4410:50;4483:2;4534:12;;;4521:26;4505:14;;;4498:50;4561:18;;4599:12;;;;4155;;4122:499;;;-1:-1:-1;4639:5:131;;3573:1077;-1:-1:-1;;;;;;;3573:1077:131:o;4655:610::-;4714:5;4762:4;4750:9;4745:3;4741:19;4737:30;4734:50;;;4780:1;4777;4770:12;4734:50;4802:22;;:::i;:::-;4793:31;;4860:9;4847:23;-1:-1:-1;;;;;4930:2:131;4922:6;4919:14;4916:34;;;4946:1;4943;4936:12;4916:34;4973:74;5043:3;5034:6;5023:9;5019:22;4973:74;:::i;:::-;4966:5;4959:89;5101:2;5090:9;5086:18;5073:32;5057:48;;5130:2;5120:8;5117:16;5114:36;;;5146:1;5143;5136:12;5114:36;;5182:76;5254:3;5243:8;5232:9;5228:24;5182:76;:::i;:::-;5177:2;5170:5;5166:14;5159:100;;4655:610;;;;:::o;5270:145::-;5349:20;;5378:31;5349:20;5378:31;:::i;5420:1494::-;5506:6;5559:2;5547:9;5538:7;5534:23;5530:32;5527:52;;;5575:1;5572;5565:12;5527:52;5615:9;5602:23;-1:-1:-1;;;;;5685:2:131;5677:6;5674:14;5671:34;;;5701:1;5698;5691:12;5671:34;5724:22;;;;5780:6;5762:16;;;5758:29;5755:49;;;5800:1;5797;5790:12;5755:49;5826:22;;:::i;:::-;5886:2;5873:16;5914:2;5904:8;5901:16;5898:36;;;5930:1;5927;5920:12;5898:36;5957:58;6007:7;5996:8;5992:2;5988:17;5957:58;:::i;:::-;5950:5;5943:73;;6069:2;6065;6061:11;6048:25;6043:2;6036:5;6032:14;6025:49;6127:2;6123;6119:11;6106:25;6101:2;6094:5;6090:14;6083:49;6164:28;6188:2;6184;6180:11;6164:28;:::i;:::-;6159:2;6152:5;6148:14;6141:52;6247:3;6243:2;6239:12;6226:26;6220:3;6213:5;6209:15;6202:51;6307:3;6303:2;6299:12;6286:26;6280:3;6273:5;6269:15;6262:51;6367:3;6363:2;6359:12;6346:26;6340:3;6333:5;6329:15;6322:51;6427:3;6423:2;6419:12;6406:26;6400:3;6393:5;6389:15;6382:51;6452:3;6442:13;;6487:42;6525:2;6521;6517:11;6487:42;:::i;:::-;6482:2;6475:5;6471:14;6464:66;6549:3;6539:13;;6584:42;6622:2;6618;6614:11;6584:42;:::i;:::-;6579:2;6572:5;6568:14;6561:66;6646:3;6636:13;;6681:42;6719:2;6715;6711:11;6681:42;:::i;:::-;6665:14;;;6658:66;;;;6743:3;6791:11;;;6778:25;6762:14;;;6755:49;6823:3;6871:11;;;6858:25;6842:14;;;6835:49;;;;6669:5;5420:1494;-1:-1:-1;;;5420:1494:131:o;6919:247::-;6978:6;7031:2;7019:9;7010:7;7006:23;7002:32;6999:52;;;7047:1;7044;7037:12;6999:52;7086:9;7073:23;7105:31;7130:5;7105:31;:::i;7171:907::-;7254:6;7285:2;7328;7316:9;7307:7;7303:23;7299:32;7296:52;;;7344:1;7341;7334:12;7296:52;7384:9;7371:23;-1:-1:-1;;;;;7409:6:131;7406:30;7403:50;;;7449:1;7446;7439:12;7403:50;7472:22;;7525:4;7517:13;;7513:27;-1:-1:-1;7503:55:131;;7554:1;7551;7544:12;7503:55;7590:2;7577:16;7613:77;7629:60;7686:2;7629:60;:::i;7613:77::-;7724:15;;;7806:1;7802:10;;;;7794:19;;7790:28;;;7755:12;;;;7830:19;;;7827:39;;;7862:1;7859;7852:12;7827:39;7886:11;;;;7906:142;7922:6;7917:3;7914:15;7906:142;;;7988:17;;7976:30;;7939:12;;;;8026;;;;7906:142;;;8067:5;7171:907;-1:-1:-1;;;;;;;7171:907:131:o;8083:322::-;8152:6;8205:2;8193:9;8184:7;8180:23;8176:32;8173:52;;;8221:1;8218;8211:12;8173:52;8261:9;8248:23;-1:-1:-1;;;;;8286:6:131;8283:30;8280:50;;;8326:1;8323;8316:12;8280:50;8349;8391:7;8382:6;8371:9;8367:22;8349:50;:::i;:::-;8339:60;8083:322;-1:-1:-1;;;;8083:322:131:o;8618:119::-;8703:8;8696:5;8692:20;8685:5;8682:31;8672:59;;8727:1;8724;8717:12;8742:132;8809:20;;8838:30;8809:20;8838:30;:::i;8879:121::-;8964:10;8957:5;8953:22;8946:5;8943:33;8933:61;;8990:1;8987;8980:12;9005:135;-1:-1:-1;;;;;9083:5:131;9079:36;9072:5;9069:47;9059:75;;9130:1;9127;9120:12;9145:142;-1:-1:-1;;;;;9224:5:131;9220:42;9213:5;9210:53;9200:81;;9277:1;9274;9267:12;9292:892;9345:5;9393:4;9381:9;9376:3;9372:19;9368:30;9365:50;;;9411:1;9408;9401:12;9365:50;9444:2;9438:9;9486:4;9478:6;9474:17;9557:6;9545:10;9542:22;-1:-1:-1;;;;;9509:10:131;9506:34;9503:62;9500:88;;;9568:18;;:::i;:::-;9604:2;9597:22;9637:6;-1:-1:-1;9637:6:131;9667:23;;9699:32;9667:23;9699:32;:::i;:::-;9740:23;;9815:2;9800:18;;9787:32;9828;9787;9828;:::i;:::-;9888:2;9876:15;;9869:32;9953:2;9938:18;;9925:32;9966;9925;9966;:::i;:::-;10026:2;10014:15;;10007:32;10091:2;10076:18;;10063:32;10104:33;10063:32;10104:33;:::i;:::-;10165:2;10153:15;;;;10146:32;9292:892;;-1:-1:-1;;9292:892:131:o;10189:897::-;10275:6;10328:3;10316:9;10307:7;10303:23;10299:33;10296:53;;;10345:1;10342;10335:12;10296:53;10371:22;;:::i;:::-;10429:9;10416:23;10409:5;10402:38;10500:2;10489:9;10485:18;10472:32;10467:2;10460:5;10456:14;10449:56;10565:2;10554:9;10550:18;10537:32;10532:2;10525:5;10521:14;10514:56;10602:37;10635:2;10624:9;10620:18;10602:37;:::i;:::-;10597:2;10590:5;10586:14;10579:61;10673:54;10719:7;10713:3;10702:9;10698:19;10673:54;:::i;:::-;10667:3;10660:5;10656:15;10649:79;10747:3;10812:2;10801:9;10797:18;10784:32;10777:4;10770:5;10766:16;10759:58;10879:6;10868:9;10864:22;10851:36;10844:4;10837:5;10833:16;10826:62;10922:50;10967:3;10956:9;10952:19;10922:50;:::i;:::-;10915:4;10908:5;10904:16;10897:76;11005:50;11050:3;11039:9;11035:19;11005:50;:::i;:::-;10989:14;;;10982:74;10993:5;10189:897;-1:-1:-1;;;10189:897:131:o;11091:619::-;11161:3;11199:5;11193:12;11226:6;11221:3;11214:19;11252:4;11281:2;11276:3;11272:12;11265:19;;11318:2;11311:5;11307:14;11339:1;11349:336;11363:6;11360:1;11357:13;11349:336;;;11422:13;;11460:9;;11448:22;;11510:11;;;11504:18;11490:12;;;11483:40;11546:4;11590:11;;;11584:18;11570:12;;;11563:40;11632:4;11623:14;;;;11660:15;;;;11385:1;11378:9;11349:336;;;-1:-1:-1;11701:3:131;;11091:619;-1:-1:-1;;;;;11091:619:131:o;11715:417::-;11770:3;11814:5;11808:12;11841:4;11836:3;11829:17;11867:75;11936:4;11931:3;11927:14;11913:12;11867:75;:::i;:::-;11855:87;;11990:4;11983:5;11979:16;11973:23;12038:3;12032:4;12028:14;12021:4;12016:3;12012:14;12005:38;12059:67;12121:4;12105:14;12059:67;:::i;12137:275::-;12328:2;12317:9;12310:21;12291:4;12348:58;12402:2;12391:9;12387:18;12379:6;12348:58;:::i;13522:250::-;13607:1;13617:113;13631:6;13628:1;13625:13;13617:113;;;13707:11;;;13701:18;13688:11;;;13681:39;13653:2;13646:10;13617:113;;;-1:-1:-1;;13764:1:131;13746:16;;13739:27;13522:250::o;13777:271::-;13819:3;13857:5;13851:12;13884:6;13879:3;13872:19;13900:76;13969:6;13962:4;13957:3;13953:14;13946:4;13939:5;13935:16;13900:76;:::i;:::-;14030:2;14009:15;-1:-1:-1;;14005:29:131;13996:39;;;;14037:4;13992:50;;13777:271;-1:-1:-1;;13777:271:131:o;14053:317::-;14230:2;14219:9;14212:21;14193:4;14250:45;14291:2;14280:9;14276:18;14268:6;14250:45;:::i;:::-;14242:53;;14360:1;14356;14351:3;14347:11;14343:19;14335:6;14331:32;14326:2;14315:9;14311:18;14304:60;14053:317;;;;;:::o;14375:127::-;14436:10;14431:3;14427:20;14424:1;14417:31;14467:4;14464:1;14457:15;14491:4;14488:1;14481:15;14507:127;14568:10;14563:3;14559:20;14556:1;14549:31;14599:4;14596:1;14589:15;14623:4;14620:1;14613:15;14639:125;14704:9;;;14725:10;;;14722:36;;;14738:18;;:::i;14769:135::-;14808:3;14829:17;;;14826:43;;14849:18;;:::i;:::-;-1:-1:-1;14896:1:131;14885:13;;14769:135::o;15091:649::-;15171:6;15224:2;15212:9;15203:7;15199:23;15195:32;15192:52;;;15240:1;15237;15230:12;15192:52;15273:9;15267:16;-1:-1:-1;;;;;15298:6:131;15295:30;15292:50;;;15338:1;15335;15328:12;15292:50;15361:22;;15414:4;15406:13;;15402:27;-1:-1:-1;15392:55:131;;15443:1;15440;15433:12;15392:55;15472:2;15466:9;15497:49;15513:32;15542:2;15513:32;:::i;15497:49::-;15569:2;15562:5;15555:17;15609:7;15604:2;15599;15595;15591:11;15587:20;15584:33;15581:53;;;15630:1;15627;15620:12;15581:53;15643:67;15707:2;15702;15695:5;15691:14;15686:2;15682;15678:11;15643:67;:::i;15745:496::-;15924:3;15962:6;15956:13;15978:66;16037:6;16032:3;16025:4;16017:6;16013:17;15978:66;:::i;:::-;16107:13;;16066:16;;;;16129:70;16107:13;16066:16;16176:4;16164:17;;16129:70;:::i;:::-;16215:20;;15745:496;-1:-1:-1;;;;15745:496:131:o;16246:128::-;16313:9;;;16334:11;;;16331:37;;;16348:18;;:::i;16379:442::-;16600:3;16638:6;16632:13;16654:66;16713:6;16708:3;16701:4;16693:6;16689:17;16654:66;:::i;:::-;-1:-1:-1;;;16742:16:131;;16767:19;;;-1:-1:-1;16813:1:131;16802:13;;16379:442;-1:-1:-1;16379:442:131:o;16826:220::-;16975:2;16964:9;16957:21;16938:4;16995:45;17036:2;17025:9;17021:18;17013:6;16995:45;:::i;17051:251::-;17121:6;17174:2;17162:9;17153:7;17149:23;17145:32;17142:52;;;17190:1;17187;17180:12;17142:52;17222:9;17216:16;17241:31;17266:5;17241:31;:::i;17576:648::-;17670:6;17678;17686;17694;17747:3;17735:9;17726:7;17722:23;17718:33;17715:53;;;17764:1;17761;17754:12;17715:53;17796:9;17790:16;17815:30;17839:5;17815:30;:::i;:::-;17914:2;17899:18;;17893:25;17864:5;;-1:-1:-1;17927:32:131;17893:25;17927:32;:::i;:::-;18030:2;18015:18;;18009:25;17978:7;;-1:-1:-1;18043:32:131;18009:25;18043:32;:::i;:::-;18146:2;18131:18;;18125:25;18094:7;;-1:-1:-1;18159:33:131;18125:25;18159:33;:::i;:::-;17576:648;;;;-1:-1:-1;17576:648:131;;-1:-1:-1;;17576:648:131:o;18229:184::-;18299:6;18352:2;18340:9;18331:7;18327:23;18323:32;18320:52;;;18368:1;18365;18358:12;18320:52;-1:-1:-1;18391:16:131;;18229:184;-1:-1:-1;18229:184:131:o;18418:558::-;18729:13;;-1:-1:-1;;;;;18725:22:131;;;18707:41;;18808:4;18796:17;;;18790:24;18786:33;;;18764:20;;;18757:63;18876:4;18864:17;;;18858:24;18836:20;;;18829:54;;;;18914:2;18899:18;;18892:34;;;;18957:3;18942:19;;18935:35;18656:3;18641:19;;18418:558::o;18981:168::-;19054:9;;;19085;;19102:15;;;19096:22;;19082:37;19072:71;;19123:18;;:::i;19499:273::-;19567:6;19620:2;19608:9;19599:7;19595:23;19591:32;19588:52;;;19636:1;19633;19626:12;19588:52;19668:9;19662:16;19718:4;19711:5;19707:16;19700:5;19697:27;19687:55;;19738:1;19735;19728:12;19777:797;20168:33;20163:3;20156:46;20138:3;20231:6;20225:13;20247:75;20315:6;20310:2;20305:3;20301:12;20294:4;20286:6;20282:17;20247:75;:::i;:::-;-1:-1:-1;;;20381:2:131;20341:16;;;20373:11;;;20366:37;20428:13;;20450:76;20428:13;20512:2;20504:11;;20497:4;20485:17;;20450:76;:::i;:::-;20546:17;20565:2;20542:26;;19777:797;-1:-1:-1;;;;19777:797:131:o;20579:781::-;-1:-1:-1;;;20965:3:131;20958:32;20940:3;21019:6;21013:13;21035:75;21103:6;21098:2;21093:3;21089:12;21082:4;21074:6;21070:17;21035:75;:::i;:::-;-1:-1:-1;;;21169:2:131;21129:16;;;21161:11;;;21154:35;21214:13;;21236:76;21214:13;21298:2;21290:11;;21283:4;21271:17;;21236:76;:::i;:::-;21332:17;21351:2;21328:26;;20579:781;-1:-1:-1;;;;20579:781:131:o;21365:442::-;21586:3;21624:6;21618:13;21640:66;21699:6;21694:3;21687:4;21679:6;21675:17;21640:66;:::i;:::-;-1:-1:-1;;;21728:16:131;;21753:19;;;-1:-1:-1;21799:1:131;21788:13;;21365:442;-1:-1:-1;21365:442:131:o;21812:991::-;22221:3;22259:6;22253:13;22275:66;22334:6;22329:3;22322:4;22314:6;22310:17;22275:66;:::i;:::-;-1:-1:-1;;;22363:16:131;;;22388:35;;;22448:13;;22470:79;22448:13;22535:2;22524:14;;22517:4;22505:17;;22470:79;:::i;:::-;-1:-1:-1;;;22612:2:131;22568:20;;;;22604:11;;;22597:35;22657:13;;22679:76;22657:13;22741:2;22733:11;;22726:4;22714:17;;22679:76;:::i;:::-;22775:17;22794:2;22771:26;;21812:991;-1:-1:-1;;;;;21812:991:131:o;22808:765::-;-1:-1:-1;;;23193:3:131;23186:28;23168:3;23243:6;23237:13;23259:75;23327:6;23322:2;23317:3;23313:12;23306:4;23298:6;23294:17;23259:75;:::i;:::-;-1:-1:-1;;;23393:2:131;23353:16;;;23385:11;;;23378:24;23427:13;;23449:76;23427:13;23511:2;23503:11;;23496:4;23484:17;;23449:76;:::i;:::-;23545:17;23564:2;23541:26;;22808:765;-1:-1:-1;;;;22808:765:131:o;23857:245::-;23924:6;23977:2;23965:9;23956:7;23952:23;23948:32;23945:52;;;23993:1;23990;23983:12;23945:52;24025:9;24019:16;24044:28;24066:5;24044:28;:::i;24107:827::-;24432:3;24421:9;24414:22;24395:4;24453:59;24507:3;24496:9;24492:19;24484:6;24453:59;:::i;:::-;24445:67;;24567:10;24558:6;24552:13;24548:30;24543:2;24532:9;24528:18;24521:58;24643:8;24637:2;24629:6;24625:15;24619:22;24615:37;24610:2;24599:9;24595:18;24588:65;-1:-1:-1;;;;;24711:2:131;24703:6;24699:15;24693:22;24689:53;24684:2;24673:9;24669:18;24662:81;-1:-1:-1;;;;;24802:2:131;24794:6;24790:15;24784:22;24780:59;24774:3;24763:9;24759:19;24752:88;24877:6;24871:3;24860:9;24856:19;24849:35;24921:6;24915:3;24904:9;24900:19;24893:35;24107:827;;;;;;;:::o;25800:1060::-;25882:5;25935:3;25928:4;25920:6;25916:17;25912:27;25902:55;;25953:1;25950;25943:12;25902:55;25982:6;25976:13;26008:4;26032:77;26048:60;26105:2;26048:60;:::i;26032:77::-;26143:15;;;26205:4;26248:11;;;26236:24;;26232:33;;;26174:12;;;;26131:3;26277:15;;;26274:35;;;26305:1;26302;26295:12;26274:35;26341:2;26333:6;26329:15;26353:478;26369:6;26364:3;26361:15;26353:478;;;26445:2;26439:3;26434;26430:13;26426:22;26423:112;;;26489:1;26518:2;26514;26507:14;26423:112;26561:22;;:::i;:::-;26610:10;;26596:25;;26663:12;;;26657:19;26641:14;;;26634:43;26700:2;26744:12;;;26738:19;26722:14;;;26715:43;26771:18;;26809:12;;;;26386;;26353:478;;26865:856;26966:6;27019:2;27007:9;26998:7;26994:23;26990:32;26987:52;;;27035:1;27032;27025:12;26987:52;27068:9;27062:16;-1:-1:-1;;;;;27138:2:131;27130:6;27127:14;27124:34;;;27154:1;27151;27144:12;27124:34;27177:22;;;;27233:4;27215:16;;;27211:27;27208:47;;;27251:1;27248;27241:12;27208:47;27277:22;;:::i;:::-;27330:2;27324:9;27358:2;27348:8;27345:16;27342:36;;;27374:1;27371;27364:12;27342:36;27401:84;27477:7;27466:8;27462:2;27458:17;27401:84;:::i;:::-;27394:5;27387:99;;27525:2;27521;27517:11;27511:18;27554:2;27544:8;27541:16;27538:36;;;27570:1;27567;27560:12;27538:36;27606:84;27682:7;27671:8;27667:2;27663:17;27606:84;:::i;:::-;27601:2;27590:14;;27583:108;-1:-1:-1;27594:5:131;26865:856;-1:-1:-1;;;;;26865:856:131:o;27726:454::-;27948:3;27986:6;27980:13;28002:66;28061:6;28056:3;28049:4;28041:6;28037:17;28002:66;:::i;:::-;-1:-1:-1;;;28090:16:131;;28115:29;;;-1:-1:-1;28171:2:131;28160:14;;27726:454;-1:-1:-1;27726:454:131:o;29560:127::-;29621:10;29616:3;29612:20;29609:1;29602:31;29652:4;29649:1;29642:15;29676:4;29673:1;29666:15;29692:120;29732:1;29758;29748:35;;29763:18;;:::i;:::-;-1:-1:-1;29797:9:131;;29692:120::o;33211:546::-;33456:2;33445:9;33438:21;33419:4;33482:45;33523:2;33512:9;33508:18;33500:6;33482:45;:::i;:::-;33575:9;33567:6;33563:22;33558:2;33547:9;33543:18;33536:50;33609:33;33635:6;33627;33609:33;:::i;:::-;33595:47;;33690:9;33682:6;33678:22;33673:2;33662:9;33658:18;33651:50;33718:33;33744:6;33736;33718:33;:::i;:::-;33710:41;33211:546;-1:-1:-1;;;;;;33211:546:131:o;33762:383::-;33959:2;33948:9;33941:21;33922:4;33985:45;34026:2;34015:9;34011:18;34003:6;33985:45;:::i;:::-;34078:9;34070:6;34066:22;34061:2;34050:9;34046:18;34039:50;34106:33;34132:6;34124;34106:33;:::i;34818:112::-;34850:1;34876;34866:35;;34881:18;;:::i;:::-;-1:-1:-1;34915:9:131;;34818:112::o;34935:420::-;-1:-1:-1;;;35181:3:131;35174:16;35156:3;35219:6;35213:13;35235:74;35302:6;35298:1;35293:3;35289:11;35282:4;35274:6;35270:17;35235:74;:::i;:::-;35329:16;;;;35347:1;35325:24;;34935:420;-1:-1:-1;;34935:420:131:o;35360:::-;-1:-1:-1;;;35606:3:131;35599:16;35581:3;35644:6;35638:13;35660:74;35727:6;35723:1;35718:3;35714:11;35707:4;35699:6;35695:17;35660:74;:::i;35785:455::-;36006:3;36044:6;36038:13;36060:66;36119:6;36114:3;36107:4;36099:6;36095:17;36060:66;:::i;:::-;-1:-1:-1;;;36148:16:131;;36173:32;;;-1:-1:-1;36232:1:131;36221:13;;35785:455;-1:-1:-1;35785:455:131:o;38032:200::-;38098:9;;;38071:4;38126:9;;38154:10;;38166:12;;;38150:29;38189:12;;;38181:21;;38147:56;38144:82;;;38206:18;;:::i;:::-;38144:82;38032:200;;;;:::o;38237:237::-;38309:9;;;38276:7;38334:9;;-1:-1:-1;;;38345:18:131;;38330:34;38327:60;;;38367:18;;:::i;:::-;38440:1;38431:7;38426:16;38423:1;38420:23;38416:1;38409:9;38406:38;38396:72;;38448:18;;:::i;38479:216::-;38543:9;;;38571:11;;;38518:3;38601:9;;38629:10;;38625:19;;38654:10;;38646:19;;38622:44;38619:70;;;38669:18;;:::i;:::-;38619:70;;38479:216;;;;:::o;38700:136::-;38735:3;-1:-1:-1;;;38756:22:131;;38753:48;;38781:18;;:::i;:::-;-1:-1:-1;38821:1:131;38817:13;;38700:136::o;39193:127::-;39254:10;39249:3;39245:20;39242:1;39235:31;39285:4;39282:1;39275:15;39309:4;39306:1;39299:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "broadcast()": "afc98040",
    "broadcaster()": "b2bac942",
    "broadcaster(address)": "43025920",
    "broadcaster(address,bool)": "0846f3f4",
    "calculateBaseQuote((uint256,uint256,uint256,uint24,(uint32,uint24,uint88,uint112),uint256,uint256,address,address))": "ac019753",
    "evaluateAmountsRequired((((uint256,int256,uint256)[],(uint256,int256,uint256)[]),uint256,uint256,bool,uint256,uint256,uint256,uint256,address,address,address,uint256,uint256))": "1fc79248",
    "innerRun((uint256,uint256,uint256,uint24,(uint32,uint24,uint88,uint112),uint256,uint256,address,address))": "6d77c7f7",
    "logary(int256[])": "521606d2",
    "logary(uint256[])": "b84e3eda",
    "run()": "c0406226",
    "singleton(string)": "5ef5270f",
    "singleton(string,address)": "10b55913",
    "startBroadcast()": "7fb5297f",
    "stopBroadcast()": "76eadd36"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"global\",\"type\":\"bool\"}],\"name\":\"broadcaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"broadcaster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcaster\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"tickOffset\",\"type\":\"uint24\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"initQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"contract GeometricKandel\",\"name\":\"kdl\",\"type\":\"address\"},{\"internalType\":\"contract MgvReader\",\"name\":\"mgvReader\",\"type\":\"address\"}],\"internalType\":\"struct KandelPopulate.HeapArgs\",\"name\":\"args\",\"type\":\"tuple\"}],\"name\":\"calculateBaseQuote\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"baseAmountRequired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmountRequired\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"bidding\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastOfferId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"contract MgvReader\",\"name\":\"mgvReader\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"BASE\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"QUOTE\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"provAsk\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"provBid\",\"type\":\"uint256\"}],\"internalType\":\"struct KandelPopulate.HeapVars\",\"name\":\"vars\",\"type\":\"tuple\"}],\"name\":\"evaluateAmountsRequired\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"tickOffset\",\"type\":\"uint24\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"initQuote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"},{\"internalType\":\"contract GeometricKandel\",\"name\":\"kdl\",\"type\":\"address\"},{\"internalType\":\"contract MgvReader\",\"name\":\"mgvReader\",\"type\":\"address\"}],\"internalType\":\"struct KandelPopulate.HeapArgs\",\"name\":\"args\",\"type\":\"tuple\"}],\"name\":\"innerRun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"ints\",\"type\":\"int256[]\"}],\"name\":\"logary\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"uints\",\"type\":\"uint256[]\"}],\"name\":\"logary\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"singleton\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"singleton\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"evaluateAmountsRequired((((uint256,int256,uint256)[],(uint256,int256,uint256)[]),uint256,uint256,bool,uint256,uint256,uint256,uint256,address,address,address,uint256,uint256))\":{\"details\":\"we use foundry cheats to revert all changes to the local node in order to prevent inconsistent tests.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"evaluateAmountsRequired((((uint256,int256,uint256)[],(uint256,int256,uint256)[]),uint256,uint256,bool,uint256,uint256,uint256,uint256,address,address,address,uint256,uint256))\":{\"notice\":\"evaluates required amounts that need to be published on Mangrove\"}},\"notice\":\"Populates Kandel's distribution on Mangrove\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/strategies/kandel/KandelPopulate.s.sol\":\"KandelPopulate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/Debug.sol\":{\"keccak256\":\"0x0dd24cc87bd6c0656388a2304776e3d49cf83151a94e41e6fde269a4bd8b474e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://0f904d1aab334b6dbb091f572bf266cf90ed45f867c3e5d01b3d4495cad1efc3\",\"dweb:/ipfs/QmZ5qpaqtZZ4Ho13grpqNxZ9G4TYAyjWgYhfnxyNG7fBNN\"]},\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/Script2.sol\":{\"keccak256\":\"0xf19aba97429d465937b47880a1f22dd87f97f6b5d57b64ae8b0c7a02fdb47cbf\",\"license\":\"AGPL-2.0\",\"urls\":[\"bzz-raw://b0ce60d67828f152ac191148afa8a5966736b9cc0e72d0e02c189034c46db8eb\",\"dweb:/ipfs/QmaKLDWDuyG3zAMDXmj8DiYWT48ia8qfaStAEWYDJQTCvQ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/Test2.sol\":{\"keccak256\":\"0x048c0794ec05ebeebf0ad6a346a5414be778844d638312517a81de1cb153d567\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://fa38faa0cd94939ff17f3d7c5f24f4377dbd54bb9ce02f9c237bd678fbacc291\",\"dweb:/ipfs/QmQZmZ4ukkREshvB7g6tqBWPKWkvyX9infHNfDeAoYyqPA\"]},\"node_modules/@mangrovedao/mangrove-core/lib/ToyENS.sol\":{\"keccak256\":\"0xa5bbb4003857ce3fb02d14ead815d27c18b2cdc3f9dda822aeaf3225f5b33b2e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9fe266af39f74137fc7db5b038f03e547bfd244529c649ee6f6bfbadba274ee6\",\"dweb:/ipfs/QmeYWmhqwZUeF1X5Myn8UyQa4MCbunh3doWD9i18vUBVVv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x0bded803c7e28336785fa600f03035e61d0b689bba2f014b1720e576c5ee3307\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://407f3979f460cc60bc7e4ce6fd7da4facac9f52623b4d6805052538d897eab9b\",\"dweb:/ipfs/QmSRhYNywsJhtYEYyPM1izGNsP1SBzxsXwLfcQnFF5NA9p\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e\",\"dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xc0c32cb12acb184919a4c205ef58785b56d7247ecf92be1094af81ec2b1f9254\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6053a75463b4611a170cf0626f0c42291b8de42cd205b61c5030a5e57adc989a\",\"dweb:/ipfs/Qmb4Gy4wq3zZGTAHUgF28VPuLwcy7MWQiPczYsg4aBWgNy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"node_modules/@mangrovedao/mangrove-core/lib/preprocessed/ToString.post.sol\":{\"keccak256\":\"0x41d4e5340bc42ef1e4a9de355c3abea452d74a60744bf929f8b9f79f47d7789f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6f6edbcefc408e82cfb94b7b6d6e55b9d6878785c31ce779c17184c2c19c70d6\",\"dweb:/ipfs/QmYqFXekQiVaoEY7aookGowbTnGz4JLQ4mqtyjKhreb57e\"]},\"node_modules/@mangrovedao/mangrove-core/script/lib/Deployer.sol\":{\"keccak256\":\"0x4642f3f731e858681d43df2eca2325856f5ac4fbb0d8ef16df9263d6af873c91\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://65e8c50465456607b5e7128b4d2549bff4aa89d5eb2ca2944d17b42d9d2bea71\",\"dweb:/ipfs/QmTeB2UyAk3dvdXMyqbxnK3J8Zp3KD4JB6fdBMDa1ZWrnu\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/periphery/MgvReader.sol\":{\"keccak256\":\"0x010238e6a7e3338c48645e81e5ea75aa9b10b8eeb355555374365c44af0a8109\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c3d910994ace7626de38858e111803d48fe02c9c9ca20f44671917941099e8fc\",\"dweb:/ipfs/QmV1Ed9nZK31WmG9NwsbCs9JCqMY3m6TkMxK2FikYpfDGH\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Arbitrum.sol\":{\"keccak256\":\"0x05e2eaeff79531b129c265d2cc2c5a6894c44cf558085733c95314b1f5cd9371\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://f7f3bd9f6737a1268514448097cb1e24105659bcb6512cd7f010335e73af8fb0\",\"dweb:/ipfs/QmS4177owHEefej2GFR4Abx4QHo1t1Hp7qpiZWr5L7qPBR\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Ethereum.sol\":{\"keccak256\":\"0x154196aba3e751b254b47d622ebdae7a91d103c89f2a84855a25728cc48dd7da\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://1784fc466b4069db5e11f6c4197ffeb5b7d2f9ae071560669f58de4e048135af\",\"dweb:/ipfs/QmRDLCL4MytkhZFU7WzG6NaCDztajzxE8wTR68yngWmLCi\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Generic.sol\":{\"keccak256\":\"0xbb727fe7191191a567eb5401c6589bf049e1aa425dab669b5e5479e33cafd27f\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://077125e1852f42db1dd518df52bcb910e39bc0a9131ae1e819906e786e7ef13f\",\"dweb:/ipfs/QmRpRub7g1Fb7BkfBovaXjWWKRcf61UTXEEJ82aubK49sf\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Goerli.sol\":{\"keccak256\":\"0xd2cecca60e68588d0df210f0b447a45f0f1354eb63d32904d330198273374c72\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://737a0b80c864148c33a421b03750e4c9dc4354a2c79f01c507a96a4af84ef15c\",\"dweb:/ipfs/QmUGabrP1ix5mZLESyFNUsms62y4za45fTRTPtU11ZSfQo\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Local.sol\":{\"keccak256\":\"0x9c4cc9f4c263d7a98f4a381e1d6726b74ffc29efef62508ea50485205b4a70f7\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://b8a07887a456269140e67eca9a831d07c1ff5752cccae380d4c08cd7b7bfbbea\",\"dweb:/ipfs/QmdHjyFrKG9GX5EaCsKTTivsEv66ARE2bpxhDxPg5BYS8P\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Mumbai.sol\":{\"keccak256\":\"0x6783d5a4d8e498c2e04dade7db1d0fd1a5afe25ade89ac796bc0e2dd79f338ae\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://42cec388abdb656cc4fd700b2aa09f791d633e38e103d177729e51902b172d29\",\"dweb:/ipfs/QmcsmcnVR4LZ6zm3cccKzQC2PuJBQSVfUVPHP1G7vJZZbr\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Polygon.sol\":{\"keccak256\":\"0x97133333940edff015a5c5fc3279ba53008015dcbee9c01c3d910ff448f1a26b\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://e64cfb2eaca6766ed15ce62b426c9cff65cd81990ec560d234528e3f21389488\",\"dweb:/ipfs/QmdJE43idYnKGpzGBiN2DNasSKREatKpGVZucLCVMvmeGZ\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/TestnetZkevm.sol\":{\"keccak256\":\"0xdb00d9d8334c4ae533f6a8885d0bec6f105bc3d9990d23cdbb8e32746731ae2b\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://dc9256c98a0c88fcb8bee868d627023e3af813d5903bbc99beec6566df016a06\",\"dweb:/ipfs/QmXe5K3ktRFz9xHJruZ3MvHUHZGaybem7oafvdN8GZaCnS\"]},\"node_modules/@mangrovedao/mangrove-core/test/lib/forks/Zkevm.sol\":{\"keccak256\":\"0x628b2aa9dc8324d3111fc407526ed0f34157f73b18ab87fb250f148705a572fd\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://c03beb2d4ce29050dc8e9d580f76136e6f103372424d92f0dc0092e8c317a5ce\",\"dweb:/ipfs/Qmc8gxtJB6cv6z1U5YYExB7RBVsrpD7Uh3nYDk3GWkhrMN\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/strategies/kandel/KandelPopulate.s.sol\":{\"keccak256\":\"0x3727e3c8d69f98036248bbaaae171b794984d852a4c5d2e581f095bf4a48a8ff\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://5db763c1cc90a252f9097855d5452a845d9349575100bbacb86bedbdcb14ddb6\",\"dweb:/ipfs/QmNbwWgcA7sjzLNuBHTvBN4JsS7Vj32TjCPUUWoBt7zzcb\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol\":{\"keccak256\":\"0xad6cf41d92ed534d3f3cb63f0dec1dff71d7fa0b40e944aec300423c31111a97\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://04e8d69f4ae8463c6822ff77e402e12d97e914a59654af88f8852b83666b9c5f\",\"dweb:/ipfs/Qmf7Fv85HNvXEcYyUnkKyRCjwoyhh3A9oGDD6BKiEQ78ZR\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol\":{\"keccak256\":\"0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518\",\"dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol\":{\"keccak256\":\"0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f\",\"dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol\":{\"keccak256\":\"0x49bf32ef326950c199d8dc7aad069779696d2aa54a6aeb65924c68fe2c93956b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://450bf42af8faa7f56d8102436f778ef2c3c9b91d80f21f742de78bf3de7b842b\",\"dweb:/ipfs/QmfFguoZ5wFcptVY7fXj7XHG68Eu7XNMum9GxMogz4Fo75\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol\":{\"keccak256\":\"0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510\",\"dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol\":{\"keccak256\":\"0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b\",\"dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol\":{\"keccak256\":\"0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd\",\"dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "broadcast"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "global",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "broadcaster"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "broadcaster"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "broadcaster",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct KandelPopulate.HeapArgs",
              "name": "args",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "from",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "to",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstAskIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint24",
                  "name": "tickOffset",
                  "type": "uint24"
                },
                {
                  "internalType": "struct CoreKandel.Params",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "gasprice",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint24",
                      "name": "gasreq",
                      "type": "uint24"
                    },
                    {
                      "internalType": "uint88",
                      "name": "stepSize",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint112",
                      "name": "pricePoints",
                      "type": "uint112"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "initQuote",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "volume",
                  "type": "uint256"
                },
                {
                  "internalType": "contract GeometricKandel",
                  "name": "kdl",
                  "type": "address"
                },
                {
                  "internalType": "contract MgvReader",
                  "name": "mgvReader",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateBaseQuote",
          "outputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct KandelPopulate.HeapVars",
              "name": "vars",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
                  "name": "distribution",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                      "name": "asks",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "index",
                          "type": "uint256"
                        },
                        {
                          "internalType": "Tick",
                          "name": "tick",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gives",
                          "type": "uint256"
                        }
                      ]
                    },
                    {
                      "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                      "name": "bids",
                      "type": "tuple[]",
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "index",
                          "type": "uint256"
                        },
                        {
                          "internalType": "Tick",
                          "name": "tick",
                          "type": "int256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "gives",
                          "type": "uint256"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "baseAmountRequired",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quoteAmountRequired",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "bidding",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "snapshotId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastOfferId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasreq",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasprice",
                  "type": "uint256"
                },
                {
                  "internalType": "contract MgvReader",
                  "name": "mgvReader",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "BASE",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "QUOTE",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "provAsk",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "provBid",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "evaluateAmountsRequired"
        },
        {
          "inputs": [
            {
              "internalType": "struct KandelPopulate.HeapArgs",
              "name": "args",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "from",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "to",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "firstAskIndex",
                  "type": "uint256"
                },
                {
                  "internalType": "uint24",
                  "name": "tickOffset",
                  "type": "uint24"
                },
                {
                  "internalType": "struct CoreKandel.Params",
                  "name": "params",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "gasprice",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint24",
                      "name": "gasreq",
                      "type": "uint24"
                    },
                    {
                      "internalType": "uint88",
                      "name": "stepSize",
                      "type": "uint88"
                    },
                    {
                      "internalType": "uint112",
                      "name": "pricePoints",
                      "type": "uint112"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "initQuote",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "volume",
                  "type": "uint256"
                },
                {
                  "internalType": "contract GeometricKandel",
                  "name": "kdl",
                  "type": "address"
                },
                {
                  "internalType": "contract MgvReader",
                  "name": "mgvReader",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "innerRun"
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "ints",
              "type": "int256[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "logary"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "uints",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "logary"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "run"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "singleton"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "singleton",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "startBroadcast"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stopBroadcast"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "evaluateAmountsRequired((((uint256,int256,uint256)[],(uint256,int256,uint256)[]),uint256,uint256,bool,uint256,uint256,uint256,uint256,address,address,address,uint256,uint256))": {
            "details": "we use foundry cheats to revert all changes to the local node in order to prevent inconsistent tests."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "evaluateAmountsRequired((((uint256,int256,uint256)[],(uint256,int256,uint256)[]),uint256,uint256,bool,uint256,uint256,uint256,uint256,address,address,address,uint256,uint256))": {
            "notice": "evaluates required amounts that need to be published on Mangrove"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/strategies/kandel/KandelPopulate.s.sol": "KandelPopulate"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/Debug.sol": {
        "keccak256": "0x0dd24cc87bd6c0656388a2304776e3d49cf83151a94e41e6fde269a4bd8b474e",
        "urls": [
          "bzz-raw://0f904d1aab334b6dbb091f572bf266cf90ed45f867c3e5d01b3d4495cad1efc3",
          "dweb:/ipfs/QmZ5qpaqtZZ4Ho13grpqNxZ9G4TYAyjWgYhfnxyNG7fBNN"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/Script2.sol": {
        "keccak256": "0xf19aba97429d465937b47880a1f22dd87f97f6b5d57b64ae8b0c7a02fdb47cbf",
        "urls": [
          "bzz-raw://b0ce60d67828f152ac191148afa8a5966736b9cc0e72d0e02c189034c46db8eb",
          "dweb:/ipfs/QmaKLDWDuyG3zAMDXmj8DiYWT48ia8qfaStAEWYDJQTCvQ"
        ],
        "license": "AGPL-2.0"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/Test2.sol": {
        "keccak256": "0x048c0794ec05ebeebf0ad6a346a5414be778844d638312517a81de1cb153d567",
        "urls": [
          "bzz-raw://fa38faa0cd94939ff17f3d7c5f24f4377dbd54bb9ce02f9c237bd678fbacc291",
          "dweb:/ipfs/QmQZmZ4ukkREshvB7g6tqBWPKWkvyX9infHNfDeAoYyqPA"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/ToyENS.sol": {
        "keccak256": "0xa5bbb4003857ce3fb02d14ead815d27c18b2cdc3f9dda822aeaf3225f5b33b2e",
        "urls": [
          "bzz-raw://9fe266af39f74137fc7db5b038f03e547bfd244529c649ee6f6bfbadba274ee6",
          "dweb:/ipfs/QmeYWmhqwZUeF1X5Myn8UyQa4MCbunh3doWD9i18vUBVVv"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Script.sol": {
        "keccak256": "0x0bded803c7e28336785fa600f03035e61d0b689bba2f014b1720e576c5ee3307",
        "urls": [
          "bzz-raw://407f3979f460cc60bc7e4ce6fd7da4facac9f52623b4d6805052538d897eab9b",
          "dweb:/ipfs/QmSRhYNywsJhtYEYyPM1izGNsP1SBzxsXwLfcQnFF5NA9p"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x43d853d6dd3c3f3d5a614a25f4553e2d4b719426a9eb2e8e433155306a5fdc02",
        "urls": [
          "bzz-raw://9dc16367f2391bf642f3762bfde686c643a08e8712ce56ad1026eb397247428e",
          "dweb:/ipfs/QmTpEko9tKnBbJNQw7T1oGoa4Gyfh6y28JbNdrQQXKUNAb"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Vm.sol": {
        "keccak256": "0xc0c32cb12acb184919a4c205ef58785b56d7247ecf92be1094af81ec2b1f9254",
        "urls": [
          "bzz-raw://6053a75463b4611a170cf0626f0c42291b8de42cd205b61c5030a5e57adc989a",
          "dweb:/ipfs/Qmb4Gy4wq3zZGTAHUgF28VPuLwcy7MWQiPczYsg4aBWgNy"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/preprocessed/ToString.post.sol": {
        "keccak256": "0x41d4e5340bc42ef1e4a9de355c3abea452d74a60744bf929f8b9f79f47d7789f",
        "urls": [
          "bzz-raw://6f6edbcefc408e82cfb94b7b6d6e55b9d6878785c31ce779c17184c2c19c70d6",
          "dweb:/ipfs/QmYqFXekQiVaoEY7aookGowbTnGz4JLQ4mqtyjKhreb57e"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/script/lib/Deployer.sol": {
        "keccak256": "0x4642f3f731e858681d43df2eca2325856f5ac4fbb0d8ef16df9263d6af873c91",
        "urls": [
          "bzz-raw://65e8c50465456607b5e7128b4d2549bff4aa89d5eb2ca2944d17b42d9d2bea71",
          "dweb:/ipfs/QmTeB2UyAk3dvdXMyqbxnK3J8Zp3KD4JB6fdBMDa1ZWrnu"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/periphery/MgvReader.sol": {
        "keccak256": "0x010238e6a7e3338c48645e81e5ea75aa9b10b8eeb355555374365c44af0a8109",
        "urls": [
          "bzz-raw://c3d910994ace7626de38858e111803d48fe02c9c9ca20f44671917941099e8fc",
          "dweb:/ipfs/QmV1Ed9nZK31WmG9NwsbCs9JCqMY3m6TkMxK2FikYpfDGH"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Arbitrum.sol": {
        "keccak256": "0x05e2eaeff79531b129c265d2cc2c5a6894c44cf558085733c95314b1f5cd9371",
        "urls": [
          "bzz-raw://f7f3bd9f6737a1268514448097cb1e24105659bcb6512cd7f010335e73af8fb0",
          "dweb:/ipfs/QmS4177owHEefej2GFR4Abx4QHo1t1Hp7qpiZWr5L7qPBR"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Ethereum.sol": {
        "keccak256": "0x154196aba3e751b254b47d622ebdae7a91d103c89f2a84855a25728cc48dd7da",
        "urls": [
          "bzz-raw://1784fc466b4069db5e11f6c4197ffeb5b7d2f9ae071560669f58de4e048135af",
          "dweb:/ipfs/QmRDLCL4MytkhZFU7WzG6NaCDztajzxE8wTR68yngWmLCi"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Generic.sol": {
        "keccak256": "0xbb727fe7191191a567eb5401c6589bf049e1aa425dab669b5e5479e33cafd27f",
        "urls": [
          "bzz-raw://077125e1852f42db1dd518df52bcb910e39bc0a9131ae1e819906e786e7ef13f",
          "dweb:/ipfs/QmRpRub7g1Fb7BkfBovaXjWWKRcf61UTXEEJ82aubK49sf"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Goerli.sol": {
        "keccak256": "0xd2cecca60e68588d0df210f0b447a45f0f1354eb63d32904d330198273374c72",
        "urls": [
          "bzz-raw://737a0b80c864148c33a421b03750e4c9dc4354a2c79f01c507a96a4af84ef15c",
          "dweb:/ipfs/QmUGabrP1ix5mZLESyFNUsms62y4za45fTRTPtU11ZSfQo"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Local.sol": {
        "keccak256": "0x9c4cc9f4c263d7a98f4a381e1d6726b74ffc29efef62508ea50485205b4a70f7",
        "urls": [
          "bzz-raw://b8a07887a456269140e67eca9a831d07c1ff5752cccae380d4c08cd7b7bfbbea",
          "dweb:/ipfs/QmdHjyFrKG9GX5EaCsKTTivsEv66ARE2bpxhDxPg5BYS8P"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Mumbai.sol": {
        "keccak256": "0x6783d5a4d8e498c2e04dade7db1d0fd1a5afe25ade89ac796bc0e2dd79f338ae",
        "urls": [
          "bzz-raw://42cec388abdb656cc4fd700b2aa09f791d633e38e103d177729e51902b172d29",
          "dweb:/ipfs/QmcsmcnVR4LZ6zm3cccKzQC2PuJBQSVfUVPHP1G7vJZZbr"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Polygon.sol": {
        "keccak256": "0x97133333940edff015a5c5fc3279ba53008015dcbee9c01c3d910ff448f1a26b",
        "urls": [
          "bzz-raw://e64cfb2eaca6766ed15ce62b426c9cff65cd81990ec560d234528e3f21389488",
          "dweb:/ipfs/QmdJE43idYnKGpzGBiN2DNasSKREatKpGVZucLCVMvmeGZ"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/TestnetZkevm.sol": {
        "keccak256": "0xdb00d9d8334c4ae533f6a8885d0bec6f105bc3d9990d23cdbb8e32746731ae2b",
        "urls": [
          "bzz-raw://dc9256c98a0c88fcb8bee868d627023e3af813d5903bbc99beec6566df016a06",
          "dweb:/ipfs/QmXe5K3ktRFz9xHJruZ3MvHUHZGaybem7oafvdN8GZaCnS"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove-core/test/lib/forks/Zkevm.sol": {
        "keccak256": "0x628b2aa9dc8324d3111fc407526ed0f34157f73b18ab87fb250f148705a572fd",
        "urls": [
          "bzz-raw://c03beb2d4ce29050dc8e9d580f76136e6f103372424d92f0dc0092e8c317a5ce",
          "dweb:/ipfs/Qmc8gxtJB6cv6z1U5YYExB7RBVsrpD7Uh3nYDk3GWkhrMN"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/strategies/kandel/KandelPopulate.s.sol": {
        "keccak256": "0x3727e3c8d69f98036248bbaaae171b794984d852a4c5d2e581f095bf4a48a8ff",
        "urls": [
          "bzz-raw://5db763c1cc90a252f9097855d5452a845d9349575100bbacb86bedbdcb14ddb6",
          "dweb:/ipfs/QmNbwWgcA7sjzLNuBHTvBN4JsS7Vj32TjCPUUWoBt7zzcb"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol": {
        "keccak256": "0xad6cf41d92ed534d3f3cb63f0dec1dff71d7fa0b40e944aec300423c31111a97",
        "urls": [
          "bzz-raw://04e8d69f4ae8463c6822ff77e402e12d97e914a59654af88f8852b83666b9c5f",
          "dweb:/ipfs/Qmf7Fv85HNvXEcYyUnkKyRCjwoyhh3A9oGDD6BKiEQ78ZR"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol": {
        "keccak256": "0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd",
        "urls": [
          "bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518",
          "dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol": {
        "keccak256": "0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1",
        "urls": [
          "bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f",
          "dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol": {
        "keccak256": "0x49bf32ef326950c199d8dc7aad069779696d2aa54a6aeb65924c68fe2c93956b",
        "urls": [
          "bzz-raw://450bf42af8faa7f56d8102436f778ef2c3c9b91d80f21f742de78bf3de7b842b",
          "dweb:/ipfs/QmfFguoZ5wFcptVY7fXj7XHG68Eu7XNMum9GxMogz4Fo75"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol": {
        "keccak256": "0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09",
        "urls": [
          "bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510",
          "dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "keccak256": "0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c",
        "urls": [
          "bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b",
          "dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol": {
        "keccak256": "0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa",
        "urls": [
          "bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd",
          "dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/strategies/kandel/KandelPopulate.s.sol",
    "id": 78558,
    "exportedSymbols": {
      "CoreKandel": [
        86559
      ],
      "Deployer": [
        53294
      ],
      "GeometricKandel": [
        87283
      ],
      "IERC20": [
        88
      ],
      "Kandel": [
        85602
      ],
      "KandelPopulate": [
        78557
      ],
      "MgvReader": [
        63469
      ],
      "OLKey": [
        55875
      ],
      "Script": [
        10570
      ],
      "Tick": [
        5280
      ],
      "TickLib": [
        6401
      ],
      "console": [
        37519
      ],
      "toFixed": [
        51532,
        51680
      ]
    },
    "nodeType": "SourceUnit",
    "src": "38:7472:81",
    "nodes": [
      {
        "id": 77787,
        "nodeType": "PragmaDirective",
        "src": "38:24:81",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 77790,
        "nodeType": "ImportDirective",
        "src": "64:70:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/Script.sol",
        "file": "@mgv/forge-std/Script.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 10571,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77788,
              "name": "Script",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10570,
              "src": "72:6:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 77789,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37519,
              "src": "80:8:81",
              "typeDescriptions": {}
            },
            "local": "console",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77792,
        "nodeType": "ImportDirective",
        "src": "135:94:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol",
        "file": "@mgv-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 85603,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77791,
              "name": "Kandel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85602,
              "src": "143:6:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77794,
        "nodeType": "ImportDirective",
        "src": "230:43:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77793,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "238:6:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77796,
        "nodeType": "ImportDirective",
        "src": "274:111:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol",
        "file": "@mgv-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 86560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77795,
              "name": "CoreKandel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 86559,
              "src": "282:10:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77798,
        "nodeType": "ImportDirective",
        "src": "386:121:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol",
        "file": "@mgv-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 87284,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77797,
              "name": "GeometricKandel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87283,
              "src": "394:15:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77800,
        "nodeType": "ImportDirective",
        "src": "508:59:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/periphery/MgvReader.sol",
        "file": "@mgv/src/periphery/MgvReader.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 63470,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77799,
              "name": "MgvReader",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63469,
              "src": "516:9:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77802,
        "nodeType": "ImportDirective",
        "src": "568:54:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/script/lib/Deployer.sol",
        "file": "@mgv/script/lib/Deployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 53295,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77801,
              "name": "Deployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53294,
              "src": "576:8:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77804,
        "nodeType": "ImportDirective",
        "src": "623:43:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/Test2.sol",
        "file": "@mgv/lib/Test2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 3860,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77803,
              "name": "toFixed",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "631:7:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77806,
        "nodeType": "ImportDirective",
        "src": "667:47:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77805,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "675:5:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 77809,
        "nodeType": "ImportDirective",
        "src": "715:56:81",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol",
        "file": "@mgv/lib/core/TickLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78558,
        "sourceUnit": 6402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 77807,
              "name": "TickLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6401,
              "src": "723:7:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 77808,
              "name": "Tick",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5280,
              "src": "732:4:81",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78557,
        "nodeType": "ContractDefinition",
        "src": "1130:6379:81",
        "nodes": [
          {
            "id": 77996,
            "nodeType": "FunctionDefinition",
            "src": "1170:1325:81",
            "nodes": [],
            "body": {
              "id": 77995,
              "nodeType": "Block",
              "src": "1192:1303:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    77817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77817,
                      "mutability": "mutable",
                      "name": "kdl",
                      "nameLocation": "1214:3:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 77995,
                      "src": "1198:19:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                        "typeString": "contract GeometricKandel"
                      },
                      "typeName": {
                        "id": 77816,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77815,
                          "name": "GeometricKandel",
                          "nameLocations": [
                            "1198:15:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87283,
                          "src": "1198:15:81"
                        },
                        "referencedDeclaration": 87283,
                        "src": "1198:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                          "typeString": "contract GeometricKandel"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77823,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4b414e44454c",
                            "id": 77820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1244:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_02abcb0e41cf070027dffd79f306db92bfb3466ed073996da5b0f4df5be995b7",
                              "typeString": "literal_string \"KANDEL\""
                            },
                            "value": "KANDEL"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_02abcb0e41cf070027dffd79f306db92bfb3466ed073996da5b0f4df5be995b7",
                              "typeString": "literal_string \"KANDEL\""
                            }
                          ],
                          "id": 77819,
                          "name": "envAddressOrName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            53128,
                            53152,
                            53176
                          ],
                          "referencedDeclaration": 53128,
                          "src": "1227:16:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_payable_$",
                            "typeString": "function (string memory) view returns (address payable)"
                          }
                        },
                        "id": 77821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1227:26:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 77818,
                      "name": "Kandel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85602,
                      "src": "1220:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Kandel_$85602_$",
                        "typeString": "type(contract Kandel)"
                      }
                    },
                    "id": 77822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1220:34:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Kandel_$85602",
                      "typeString": "contract Kandel"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1198:56:81"
                },
                {
                  "assignments": [
                    77828
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77828,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "1281:6:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 77995,
                      "src": "1260:27:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                        "typeString": "struct CoreKandel.Params"
                      },
                      "typeName": {
                        "id": 77827,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 77826,
                          "name": "Kandel.Params",
                          "nameLocations": [
                            "1260:6:81",
                            "1267:6:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85853,
                          "src": "1260:13:81"
                        },
                        "referencedDeclaration": 85853,
                        "src": "1260:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                          "typeString": "struct CoreKandel.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77829,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1260:27:81"
                },
                {
                  "assignments": [
                    77831
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 77831,
                      "mutability": "mutable",
                      "name": "tickOffset",
                      "nameLocation": "1300:10:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 77995,
                      "src": "1293:17:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 77830,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "1293:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 77832,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1293:17:81"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "hexValue": "5449434b5f4f4646534554",
                        "id": 77834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1327:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4cb523ae09743019a72642cbc4b964d974daf0699f8b5052cfd51ea5096ead5",
                          "typeString": "literal_string \"TICK_OFFSET\""
                        },
                        "value": "TICK_OFFSET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c4cb523ae09743019a72642cbc4b964d974daf0699f8b5052cfd51ea5096ead5",
                          "typeString": "literal_string \"TICK_OFFSET\""
                        }
                      ],
                      "id": 77833,
                      "name": "envHas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53197,
                      "src": "1320:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view returns (bool)"
                      }
                    },
                    "id": 77835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1320:21:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77857,
                  "nodeType": "IfStatement",
                  "src": "1316:167:81",
                  "trueBody": {
                    "id": 77856,
                    "nodeType": "Block",
                    "src": "1343:140:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 77844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 77836,
                            "name": "tickOffset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77831,
                            "src": "1351:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "5449434b5f4f4646534554",
                                    "id": 77841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1382:13:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c4cb523ae09743019a72642cbc4b964d974daf0699f8b5052cfd51ea5096ead5",
                                      "typeString": "literal_string \"TICK_OFFSET\""
                                    },
                                    "value": "TICK_OFFSET"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c4cb523ae09743019a72642cbc4b964d974daf0699f8b5052cfd51ea5096ead5",
                                      "typeString": "literal_string \"TICK_OFFSET\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 77839,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10515,
                                    "src": "1371:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$21330",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 77840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1374:7:81",
                                  "memberName": "envUint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19921,
                                  "src": "1371:10:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (string memory) view external returns (uint256)"
                                  }
                                },
                                "id": 77842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1371:25:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 77838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1364:6:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint24_$",
                                "typeString": "type(uint24)"
                              },
                              "typeName": {
                                "id": 77837,
                                "name": "uint24",
                                "nodeType": "ElementaryTypeName",
                                "src": "1364:6:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1364:33:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "src": "1351:46:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 77845,
                        "nodeType": "ExpressionStatement",
                        "src": "1351:46:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 77852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77847,
                                "name": "tickOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77831,
                                "src": "1413:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "5449434b5f4f4646534554",
                                    "id": 77850,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1438:13:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c4cb523ae09743019a72642cbc4b964d974daf0699f8b5052cfd51ea5096ead5",
                                      "typeString": "literal_string \"TICK_OFFSET\""
                                    },
                                    "value": "TICK_OFFSET"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c4cb523ae09743019a72642cbc4b964d974daf0699f8b5052cfd51ea5096ead5",
                                      "typeString": "literal_string \"TICK_OFFSET\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 77848,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10515,
                                    "src": "1427:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$21330",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 77849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1430:7:81",
                                  "memberName": "envUint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19921,
                                  "src": "1427:10:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (string memory) view external returns (uint256)"
                                  }
                                },
                                "id": 77851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1427:25:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1413:39:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964205449434b5f4f4646534554",
                              "id": 77853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1454:21:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bcdf21b40ed0dbac5d208a033cdf70eb3088767b940c083669093430af2efc8e",
                                "typeString": "literal_string \"Invalid TICK_OFFSET\""
                              },
                              "value": "Invalid TICK_OFFSET"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bcdf21b40ed0dbac5d208a033cdf70eb3088767b940c083669093430af2efc8e",
                                "typeString": "literal_string \"Invalid TICK_OFFSET\""
                              }
                            ],
                            "id": 77846,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1405:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1405:71:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77855,
                        "nodeType": "ExpressionStatement",
                        "src": "1405:71:81"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "hexValue": "524154494f",
                        "id": 77859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1499:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fb80bea1b9d6e2441738556e1e7e9c1b66f32b5dcaa576e8b80ae4ec2470b5d",
                          "typeString": "literal_string \"RATIO\""
                        },
                        "value": "RATIO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7fb80bea1b9d6e2441738556e1e7e9c1b66f32b5dcaa576e8b80ae4ec2470b5d",
                          "typeString": "literal_string \"RATIO\""
                        }
                      ],
                      "id": 77858,
                      "name": "envHas",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53197,
                      "src": "1492:6:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view returns (bool)"
                      }
                    },
                    "id": 77860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:15:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 77914,
                  "nodeType": "IfStatement",
                  "src": "1488:324:81",
                  "trueBody": {
                    "id": 77913,
                    "nodeType": "Block",
                    "src": "1509:303:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              "id": 77864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77862,
                                "name": "tickOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77831,
                                "src": "1525:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 77863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1539:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1525:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f6e6c7920524154494f206f72205449434b5f4f4646534554",
                              "id": 77865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1542:27:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_410ad7717cf797f9deb2d34d568569e8d9c3812f15c230d225c1ead6be44a8f2",
                                "typeString": "literal_string \"Only RATIO or TICK_OFFSET\""
                              },
                              "value": "Only RATIO or TICK_OFFSET"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_410ad7717cf797f9deb2d34d568569e8d9c3812f15c230d225c1ead6be44a8f2",
                                "typeString": "literal_string \"Only RATIO or TICK_OFFSET\""
                              }
                            ],
                            "id": 77861,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1517:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1517:53:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77867,
                        "nodeType": "ExpressionStatement",
                        "src": "1517:53:81"
                      },
                      {
                        "assignments": [
                          77869
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 77869,
                            "mutability": "mutable",
                            "name": "_tickOffset",
                            "nameLocation": "1582:11:81",
                            "nodeType": "VariableDeclaration",
                            "scope": 77913,
                            "src": "1578:15:81",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            },
                            "typeName": {
                              "id": 77868,
                              "name": "int",
                              "nodeType": "ElementaryTypeName",
                              "src": "1578:3:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 77889,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 77885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 77882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "31",
                                      "id": 77874,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1632:7:81",
                                      "subdenomination": "ether",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                        "typeString": "int_const 1000000000000000000"
                                      },
                                      "value": "1"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "524154494f",
                                              "id": 77879,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "1658:7:81",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_7fb80bea1b9d6e2441738556e1e7e9c1b66f32b5dcaa576e8b80ae4ec2470b5d",
                                                "typeString": "literal_string \"RATIO\""
                                              },
                                              "value": "RATIO"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_7fb80bea1b9d6e2441738556e1e7e9c1b66f32b5dcaa576e8b80ae4ec2470b5d",
                                                "typeString": "literal_string \"RATIO\""
                                              }
                                            ],
                                            "expression": {
                                              "id": 77877,
                                              "name": "vm",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 10515,
                                              "src": "1647:2:81",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Vm_$21330",
                                                "typeString": "contract Vm"
                                              }
                                            },
                                            "id": 77878,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1650:7:81",
                                            "memberName": "envUint",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 19921,
                                            "src": "1647:10:81",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                              "typeString": "function (string memory) view external returns (uint256)"
                                            }
                                          },
                                          "id": 77880,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1647:19:81",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 77876,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1642:4:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 77875,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1642:4:81",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 77881,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1642:25:81",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1632:35:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "hexValue": "313030303030",
                                        "id": 77883,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1671:6:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000_by_1",
                                          "typeString": "int_const 100000"
                                        },
                                        "value": "100000"
                                      }
                                    ],
                                    "id": 77884,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1670:8:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000_by_1",
                                      "typeString": "int_const 100000"
                                    }
                                  },
                                  "src": "1632:46:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "31",
                                  "id": 77886,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1680:7:81",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                ],
                                "expression": {
                                  "id": 77872,
                                  "name": "TickLib",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6401,
                                  "src": "1608:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_TickLib_$6401_$",
                                    "typeString": "type(library TickLib)"
                                  }
                                },
                                "id": 77873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1616:15:81",
                                "memberName": "tickFromVolumes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 5597,
                                "src": "1608:23:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_Tick_$5280_$",
                                  "typeString": "function (uint256,uint256) pure returns (Tick)"
                                }
                              },
                              "id": 77887,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1608:80:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                                "typeString": "Tick"
                              }
                            ],
                            "expression": {
                              "id": 77870,
                              "name": "Tick",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5280,
                              "src": "1596:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_userDefinedValueType$_Tick_$5280_$",
                                "typeString": "type(Tick)"
                              }
                            },
                            "id": 77871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1601:6:81",
                            "memberName": "unwrap",
                            "nodeType": "MemberAccess",
                            "src": "1596:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_Tick_$5280_$returns$_t_int256_$",
                              "typeString": "function (Tick) pure returns (int256)"
                            }
                          },
                          "id": 77888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1596:93:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1578:111:81"
                      },
                      {
                        "expression": {
                          "id": 77901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 77890,
                            "name": "tickOffset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77831,
                            "src": "1697:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 77897,
                                        "name": "_tickOffset",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 77869,
                                        "src": "1726:11:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 77896,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1722:3:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_int256_$",
                                        "typeString": "type(int256)"
                                      },
                                      "typeName": {
                                        "id": 77895,
                                        "name": "int",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1722:3:81",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 77898,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1722:16:81",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 77894,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1717:4:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 77893,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1717:4:81",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 77899,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1717:22:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 77892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1710:6:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint24_$",
                                "typeString": "type(uint24)"
                              },
                              "typeName": {
                                "id": 77891,
                                "name": "uint24",
                                "nodeType": "ElementaryTypeName",
                                "src": "1710:6:81",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 77900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1710:30:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "src": "1697:43:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "id": 77902,
                        "nodeType": "ExpressionStatement",
                        "src": "1697:43:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 77909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 77904,
                                "name": "tickOffset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77831,
                                "src": "1756:10:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 77907,
                                    "name": "_tickOffset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 77869,
                                    "src": "1775:11:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 77906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1770:4:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 77905,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1770:4:81",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 77908,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1770:17:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1756:31:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726174696f",
                              "id": 77910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1789:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_dcaede7f342d138dbdd1c8c8e2f94ccf2a1ae1eec490e5877aed57db442a01e4",
                                "typeString": "literal_string \"Invalid ratio\""
                              },
                              "value": "Invalid ratio"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_dcaede7f342d138dbdd1c8c8e2f94ccf2a1ae1eec490e5877aed57db442a01e4",
                                "typeString": "literal_string \"Invalid ratio\""
                              }
                            ],
                            "id": 77903,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1748:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 77911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1748:57:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 77912,
                        "nodeType": "ExpressionStatement",
                        "src": "1748:57:81"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 77925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 77915,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77828,
                        "src": "1817:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      "id": 77917,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1824:11:81",
                      "memberName": "pricePoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85852,
                      "src": "1817:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "50524943455f504f494e5453",
                              "id": 77922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1857:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b31f6604f377c461d6a9d144d23c332e42101ab6c712763c962432d09e58591",
                                "typeString": "literal_string \"PRICE_POINTS\""
                              },
                              "value": "PRICE_POINTS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6b31f6604f377c461d6a9d144d23c332e42101ab6c712763c962432d09e58591",
                                "typeString": "literal_string \"PRICE_POINTS\""
                              }
                            ],
                            "expression": {
                              "id": 77920,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10515,
                              "src": "1846:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$21330",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 77921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1849:7:81",
                            "memberName": "envUint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19921,
                            "src": "1846:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) view external returns (uint256)"
                            }
                          },
                          "id": 77923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1846:26:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 77919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1838:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint112_$",
                          "typeString": "type(uint112)"
                        },
                        "typeName": {
                          "id": 77918,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1838:7:81",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 77924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1838:35:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      }
                    },
                    "src": "1817:56:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "id": 77926,
                  "nodeType": "ExpressionStatement",
                  "src": "1817:56:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77928,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77828,
                            "src": "1887:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                              "typeString": "struct CoreKandel.Params memory"
                            }
                          },
                          "id": 77929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1894:11:81",
                          "memberName": "pricePoints",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85852,
                          "src": "1887:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "50524943455f504f494e5453",
                              "id": 77932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1920:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6b31f6604f377c461d6a9d144d23c332e42101ab6c712763c962432d09e58591",
                                "typeString": "literal_string \"PRICE_POINTS\""
                              },
                              "value": "PRICE_POINTS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6b31f6604f377c461d6a9d144d23c332e42101ab6c712763c962432d09e58591",
                                "typeString": "literal_string \"PRICE_POINTS\""
                              }
                            ],
                            "expression": {
                              "id": 77930,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10515,
                              "src": "1909:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$21330",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 77931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1912:7:81",
                            "memberName": "envUint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19921,
                            "src": "1909:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) view external returns (uint256)"
                            }
                          },
                          "id": 77933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1909:26:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1887:48:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642050524943455f504f494e5453",
                        "id": 77935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1937:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_19147ea5477f02190440f35d548d88f292e8c8475dd555c20f9d718b6e4995f2",
                          "typeString": "literal_string \"Invalid PRICE_POINTS\""
                        },
                        "value": "Invalid PRICE_POINTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_19147ea5477f02190440f35d548d88f292e8c8475dd555c20f9d718b6e4995f2",
                          "typeString": "literal_string \"Invalid PRICE_POINTS\""
                        }
                      ],
                      "id": 77927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1879:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1879:81:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77937,
                  "nodeType": "ExpressionStatement",
                  "src": "1879:81:81"
                },
                {
                  "expression": {
                    "id": 77948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 77938,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77828,
                        "src": "1966:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      "id": 77940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1973:8:81",
                      "memberName": "stepSize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85850,
                      "src": "1966:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "535445505f53495a45",
                              "id": 77945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2002:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ae4aafec86d8c1e5c57da60af34665422020707eca6b48d6e88973d6fe5441cc",
                                "typeString": "literal_string \"STEP_SIZE\""
                              },
                              "value": "STEP_SIZE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ae4aafec86d8c1e5c57da60af34665422020707eca6b48d6e88973d6fe5441cc",
                                "typeString": "literal_string \"STEP_SIZE\""
                              }
                            ],
                            "expression": {
                              "id": 77943,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10515,
                              "src": "1991:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$21330",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 77944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1994:7:81",
                            "memberName": "envUint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19921,
                            "src": "1991:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) view external returns (uint256)"
                            }
                          },
                          "id": 77946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1991:23:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 77942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1984:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint88_$",
                          "typeString": "type(uint88)"
                        },
                        "typeName": {
                          "id": 77941,
                          "name": "uint88",
                          "nodeType": "ElementaryTypeName",
                          "src": "1984:6:81",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 77947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1984:31:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "src": "1966:49:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint88",
                      "typeString": "uint88"
                    }
                  },
                  "id": 77949,
                  "nodeType": "ExpressionStatement",
                  "src": "1966:49:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 77957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 77951,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77828,
                            "src": "2029:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                              "typeString": "struct CoreKandel.Params memory"
                            }
                          },
                          "id": 77952,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2036:8:81",
                          "memberName": "stepSize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85850,
                          "src": "2029:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "535445505f53495a45",
                              "id": 77955,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2059:11:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ae4aafec86d8c1e5c57da60af34665422020707eca6b48d6e88973d6fe5441cc",
                                "typeString": "literal_string \"STEP_SIZE\""
                              },
                              "value": "STEP_SIZE"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ae4aafec86d8c1e5c57da60af34665422020707eca6b48d6e88973d6fe5441cc",
                                "typeString": "literal_string \"STEP_SIZE\""
                              }
                            ],
                            "expression": {
                              "id": 77953,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10515,
                              "src": "2048:2:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$21330",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 77954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2051:7:81",
                            "memberName": "envUint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19921,
                            "src": "2048:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (string memory) view external returns (uint256)"
                            }
                          },
                          "id": 77956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2048:23:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2029:42:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420535445505f53495a45",
                        "id": 77958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2073:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e222ad27c719fa77e8291d60c5f530f84e7bd389caf591fc396f74adbbe7eac",
                          "typeString": "literal_string \"Invalid STEP_SIZE\""
                        },
                        "value": "Invalid STEP_SIZE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e222ad27c719fa77e8291d60c5f530f84e7bd389caf591fc396f74adbbe7eac",
                          "typeString": "literal_string \"Invalid STEP_SIZE\""
                        }
                      ],
                      "id": 77950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2021:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2021:72:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77960,
                  "nodeType": "ExpressionStatement",
                  "src": "2021:72:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "46524f4d",
                                "id": 77965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2152:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_a622982436e871b29f75473087e2899d37a3804e66342a3aa71eaf2f06bc86f8",
                                  "typeString": "literal_string \"FROM\""
                                },
                                "value": "FROM"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_a622982436e871b29f75473087e2899d37a3804e66342a3aa71eaf2f06bc86f8",
                                  "typeString": "literal_string \"FROM\""
                                }
                              ],
                              "expression": {
                                "id": 77963,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "2141:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$21330",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 77964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2144:7:81",
                              "memberName": "envUint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19921,
                              "src": "2141:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) view external returns (uint256)"
                              }
                            },
                            "id": 77966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:18:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "544f",
                                "id": 77969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2184:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2638cab49a847fdff73e304aa0b6e86e84616fa41d2206c8754662e52d9058cf",
                                  "typeString": "literal_string \"TO\""
                                },
                                "value": "TO"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2638cab49a847fdff73e304aa0b6e86e84616fa41d2206c8754662e52d9058cf",
                                  "typeString": "literal_string \"TO\""
                                }
                              ],
                              "expression": {
                                "id": 77967,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "2173:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$21330",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 77968,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2176:7:81",
                              "memberName": "envUint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19921,
                              "src": "2173:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) view external returns (uint256)"
                              }
                            },
                            "id": 77970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2173:16:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "46495253545f41534b5f494e444558",
                                "id": 77973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2225:17:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_56d30d37de4e0aaf774e70ed3835e90a06606c4871933df0e563ad4142327aae",
                                  "typeString": "literal_string \"FIRST_ASK_INDEX\""
                                },
                                "value": "FIRST_ASK_INDEX"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_56d30d37de4e0aaf774e70ed3835e90a06606c4871933df0e563ad4142327aae",
                                  "typeString": "literal_string \"FIRST_ASK_INDEX\""
                                }
                              ],
                              "expression": {
                                "id": 77971,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "2214:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$21330",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 77972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2217:7:81",
                              "memberName": "envUint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19921,
                              "src": "2214:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) view external returns (uint256)"
                              }
                            },
                            "id": 77974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2214:29:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 77975,
                            "name": "tickOffset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77831,
                            "src": "2265:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          {
                            "id": 77976,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77828,
                            "src": "2293:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                              "typeString": "struct CoreKandel.Params memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "494e49545f51554f5445",
                                "id": 77979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2331:12:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e938359909308c554b99cf2fb19331410536f0def879385accc5d08e1b617d7a",
                                  "typeString": "literal_string \"INIT_QUOTE\""
                                },
                                "value": "INIT_QUOTE"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e938359909308c554b99cf2fb19331410536f0def879385accc5d08e1b617d7a",
                                  "typeString": "literal_string \"INIT_QUOTE\""
                                }
                              ],
                              "expression": {
                                "id": 77977,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "2320:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$21330",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 77978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2323:7:81",
                              "memberName": "envUint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19921,
                              "src": "2320:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) view external returns (uint256)"
                              }
                            },
                            "id": 77980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2320:24:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "564f4c554d45",
                                "id": 77983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2373:8:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_81bc940418c7e2260d6693d340a8034f85924d491f8dcc9edf4a2bf7b7ee47d2",
                                  "typeString": "literal_string \"VOLUME\""
                                },
                                "value": "VOLUME"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_81bc940418c7e2260d6693d340a8034f85924d491f8dcc9edf4a2bf7b7ee47d2",
                                  "typeString": "literal_string \"VOLUME\""
                                }
                              ],
                              "expression": {
                                "id": 77981,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10515,
                                "src": "2362:2:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$21330",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 77982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2365:7:81",
                              "memberName": "envUint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19921,
                              "src": "2362:10:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (string memory) view external returns (uint256)"
                              }
                            },
                            "id": 77984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2362:20:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 77985,
                            "name": "kdl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 77817,
                            "src": "2397:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "4d47565f524541444552",
                                    "id": 77988,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2448:12:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8c0439dffe71c3864738e49aa3f7b784e221ab0ecf3dff526ca258f4a4a6ec68",
                                      "typeString": "literal_string \"MGV_READER\""
                                    },
                                    "value": "MGV_READER"
                                  },
                                  {
                                    "hexValue": "4d6776526561646572",
                                    "id": 77989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2462:11:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_4389c2cfe3e71a17c324d66d054666f9219ccd5e27510bd69a245a0f93a2d4a9",
                                      "typeString": "literal_string \"MgvReader\""
                                    },
                                    "value": "MgvReader"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8c0439dffe71c3864738e49aa3f7b784e221ab0ecf3dff526ca258f4a4a6ec68",
                                      "typeString": "literal_string \"MGV_READER\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_4389c2cfe3e71a17c324d66d054666f9219ccd5e27510bd69a245a0f93a2d4a9",
                                      "typeString": "literal_string \"MgvReader\""
                                    }
                                  ],
                                  "id": 77987,
                                  "name": "envAddressOrName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    53128,
                                    53152,
                                    53176
                                  ],
                                  "referencedDeclaration": 53176,
                                  "src": "2431:16:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_payable_$",
                                    "typeString": "function (string memory,string memory) view returns (address payable)"
                                  }
                                },
                                "id": 77990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2431:43:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 77986,
                              "name": "MgvReader",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63469,
                              "src": "2421:9:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MgvReader_$63469_$",
                                "typeString": "type(contract MgvReader)"
                              }
                            },
                            "id": 77991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2421:54:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MgvReader_$63469",
                              "typeString": "contract MgvReader"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            },
                            {
                              "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                              "typeString": "struct CoreKandel.Params memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            },
                            {
                              "typeIdentifier": "t_contract$_MgvReader_$63469",
                              "typeString": "contract MgvReader"
                            }
                          ],
                          "id": 77962,
                          "name": "HeapArgs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78019,
                          "src": "2116:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_HeapArgs_$78019_storage_ptr_$",
                            "typeString": "type(struct KandelPopulate.HeapArgs storage pointer)"
                          }
                        },
                        "id": 77992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2135:4:81",
                          "2169:2:81",
                          "2199:13:81",
                          "2253:10:81",
                          "2285:6:81",
                          "2309:9:81",
                          "2354:6:81",
                          "2392:3:81",
                          "2410:9:81"
                        ],
                        "names": [
                          "from",
                          "to",
                          "firstAskIndex",
                          "tickOffset",
                          "params",
                          "initQuote",
                          "volume",
                          "kdl",
                          "mgvReader"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2116:368:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapArgs memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapArgs memory"
                        }
                      ],
                      "id": 77961,
                      "name": "innerRun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78446,
                      "src": "2100:8:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_HeapArgs_$78019_memory_ptr_$returns$__$",
                        "typeString": "function (struct KandelPopulate.HeapArgs memory)"
                      }
                    },
                    "id": 77993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2100:390:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77994,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:390:81"
                }
              ]
            },
            "functionSelector": "c0406226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nameLocation": "1179:3:81",
            "parameters": {
              "id": 77813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1182:2:81"
            },
            "returnParameters": {
              "id": 77814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:0:81"
            },
            "scope": 78557,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78019,
            "nodeType": "StructDefinition",
            "src": "3079:209:81",
            "nodes": [],
            "canonicalName": "KandelPopulate.HeapArgs",
            "documentation": {
              "id": 77997,
              "nodeType": "StructuredDocumentation",
              "src": "2499:577:81",
              "text": "@notice Arguments for innerRun\n@param initQuote the amount of quote tokens that Kandel must want/give at `from` index\n@param firstAskIndex the (inclusive) index after which offer should be an ask.\n@param provBid the amount of provision (in native tokens) that are required to post a fresh bid\n@param provAsk the amount of provision (in native tokens) that are required to post a fresh ask\n@param kdl the Kandel instance\n@param mgv is kdl.MGV()\n@param base is kdl.BASE()\n@param quote is kdl.QUOTE()\n@param mgvReader the MgvReader"
            },
            "members": [
              {
                "constant": false,
                "id": 77999,
                "mutability": "mutable",
                "name": "from",
                "nameLocation": "3106:4:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3101:9:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 77998,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3101:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78001,
                "mutability": "mutable",
                "name": "to",
                "nameLocation": "3121:2:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3116:7:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78000,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3116:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78003,
                "mutability": "mutable",
                "name": "firstAskIndex",
                "nameLocation": "3134:13:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3129:18:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78002,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3129:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78005,
                "mutability": "mutable",
                "name": "tickOffset",
                "nameLocation": "3160:10:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3153:17:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 78004,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "3153:6:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78008,
                "mutability": "mutable",
                "name": "params",
                "nameLocation": "3190:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3176:20:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                  "typeString": "struct CoreKandel.Params"
                },
                "typeName": {
                  "id": 78007,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78006,
                    "name": "Kandel.Params",
                    "nameLocations": [
                      "3176:6:81",
                      "3183:6:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 85853,
                    "src": "3176:13:81"
                  },
                  "referencedDeclaration": 85853,
                  "src": "3176:13:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                    "typeString": "struct CoreKandel.Params"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78010,
                "mutability": "mutable",
                "name": "initQuote",
                "nameLocation": "3207:9:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3202:14:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78009,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3202:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78012,
                "mutability": "mutable",
                "name": "volume",
                "nameLocation": "3227:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3222:11:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78011,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3222:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78015,
                "mutability": "mutable",
                "name": "kdl",
                "nameLocation": "3255:3:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3239:19:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                  "typeString": "contract GeometricKandel"
                },
                "typeName": {
                  "id": 78014,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78013,
                    "name": "GeometricKandel",
                    "nameLocations": [
                      "3239:15:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 87283,
                    "src": "3239:15:81"
                  },
                  "referencedDeclaration": 87283,
                  "src": "3239:15:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                    "typeString": "contract GeometricKandel"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78018,
                "mutability": "mutable",
                "name": "mgvReader",
                "nameLocation": "3274:9:81",
                "nodeType": "VariableDeclaration",
                "scope": 78019,
                "src": "3264:19:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MgvReader_$63469",
                  "typeString": "contract MgvReader"
                },
                "typeName": {
                  "id": 78017,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78016,
                    "name": "MgvReader",
                    "nameLocations": [
                      "3264:9:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63469,
                    "src": "3264:9:81"
                  },
                  "referencedDeclaration": 63469,
                  "src": "3264:9:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MgvReader_$63469",
                    "typeString": "contract MgvReader"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "HeapArgs",
            "nameLocation": "3086:8:81",
            "scope": 78557,
            "visibility": "public"
          },
          {
            "id": 78050,
            "nodeType": "StructDefinition",
            "src": "3292:315:81",
            "nodes": [],
            "canonicalName": "KandelPopulate.HeapVars",
            "members": [
              {
                "constant": false,
                "id": 78022,
                "mutability": "mutable",
                "name": "distribution",
                "nameLocation": "3338:12:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3314:36:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Distribution_$86630_storage_ptr",
                  "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                },
                "typeName": {
                  "id": 78021,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78020,
                    "name": "CoreKandel.Distribution",
                    "nameLocations": [
                      "3314:10:81",
                      "3325:12:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 86630,
                    "src": "3314:23:81"
                  },
                  "referencedDeclaration": 86630,
                  "src": "3314:23:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Distribution_$86630_storage_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78024,
                "mutability": "mutable",
                "name": "baseAmountRequired",
                "nameLocation": "3361:18:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3356:23:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78023,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3356:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78026,
                "mutability": "mutable",
                "name": "quoteAmountRequired",
                "nameLocation": "3390:19:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3385:24:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78025,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3385:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78028,
                "mutability": "mutable",
                "name": "bidding",
                "nameLocation": "3420:7:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3415:12:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 78027,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3415:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78030,
                "mutability": "mutable",
                "name": "snapshotId",
                "nameLocation": "3438:10:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3433:15:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78029,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3433:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78032,
                "mutability": "mutable",
                "name": "lastOfferId",
                "nameLocation": "3459:11:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3454:16:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78031,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3454:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78034,
                "mutability": "mutable",
                "name": "gasreq",
                "nameLocation": "3481:6:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3476:11:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78033,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3476:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78036,
                "mutability": "mutable",
                "name": "gasprice",
                "nameLocation": "3498:8:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3493:13:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78035,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3493:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78039,
                "mutability": "mutable",
                "name": "mgvReader",
                "nameLocation": "3522:9:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3512:19:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_MgvReader_$63469",
                  "typeString": "contract MgvReader"
                },
                "typeName": {
                  "id": 78038,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78037,
                    "name": "MgvReader",
                    "nameLocations": [
                      "3512:9:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 63469,
                    "src": "3512:9:81"
                  },
                  "referencedDeclaration": 63469,
                  "src": "3512:9:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MgvReader_$63469",
                    "typeString": "contract MgvReader"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78042,
                "mutability": "mutable",
                "name": "BASE",
                "nameLocation": "3544:4:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3537:11:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$88",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 78041,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78040,
                    "name": "IERC20",
                    "nameLocations": [
                      "3537:6:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 88,
                    "src": "3537:6:81"
                  },
                  "referencedDeclaration": 88,
                  "src": "3537:6:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78045,
                "mutability": "mutable",
                "name": "QUOTE",
                "nameLocation": "3561:5:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3554:12:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$88",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 78044,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 78043,
                    "name": "IERC20",
                    "nameLocations": [
                      "3554:6:81"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 88,
                    "src": "3554:6:81"
                  },
                  "referencedDeclaration": 88,
                  "src": "3554:6:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78047,
                "mutability": "mutable",
                "name": "provAsk",
                "nameLocation": "3577:7:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3572:12:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78046,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3572:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78049,
                "mutability": "mutable",
                "name": "provBid",
                "nameLocation": "3595:7:81",
                "nodeType": "VariableDeclaration",
                "scope": 78050,
                "src": "3590:12:81",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78048,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "3590:4:81",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "HeapVars",
            "nameLocation": "3299:8:81",
            "scope": 78557,
            "visibility": "public"
          },
          {
            "id": 78446,
            "nodeType": "FunctionDefinition",
            "src": "3611:2887:81",
            "nodes": [],
            "body": {
              "id": 78445,
              "nodeType": "Block",
              "src": "3658:2840:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78058
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78058,
                      "mutability": "mutable",
                      "name": "vars",
                      "nameLocation": "3680:4:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78445,
                      "src": "3664:20:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                        "typeString": "struct KandelPopulate.HeapVars"
                      },
                      "typeName": {
                        "id": 78057,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78056,
                          "name": "HeapVars",
                          "nameLocations": [
                            "3664:8:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 78050,
                          "src": "3664:8:81"
                        },
                        "referencedDeclaration": 78050,
                        "src": "3664:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_storage_ptr",
                          "typeString": "struct KandelPopulate.HeapVars"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78059,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3664:20:81"
                },
                {
                  "expression": {
                    "id": 78065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78060,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "3691:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3696:9:81",
                      "memberName": "mgvReader",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78039,
                      "src": "3691:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MgvReader_$63469",
                        "typeString": "contract MgvReader"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 78063,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78053,
                        "src": "3708:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapArgs memory"
                        }
                      },
                      "id": 78064,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3713:9:81",
                      "memberName": "mgvReader",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78018,
                      "src": "3708:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MgvReader_$63469",
                        "typeString": "contract MgvReader"
                      }
                    },
                    "src": "3691:31:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MgvReader_$63469",
                      "typeString": "contract MgvReader"
                    }
                  },
                  "id": 78066,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:31:81"
                },
                {
                  "expression": {
                    "id": 78074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78067,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "3728:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78069,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3733:4:81",
                      "memberName": "BASE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78042,
                      "src": "3728:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "expression": {
                            "id": 78070,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78053,
                            "src": "3740:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78071,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3745:3:81",
                          "memberName": "kdl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78015,
                          "src": "3740:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                            "typeString": "contract GeometricKandel"
                          }
                        },
                        "id": 78072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3749:4:81",
                        "memberName": "BASE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87949,
                        "src": "3740:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$88_$",
                          "typeString": "function () view external returns (contract IERC20)"
                        }
                      },
                      "id": 78073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3740:15:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3728:27:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 78075,
                  "nodeType": "ExpressionStatement",
                  "src": "3728:27:81"
                },
                {
                  "expression": {
                    "id": 78083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78076,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "3761:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78078,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3766:5:81",
                      "memberName": "QUOTE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78045,
                      "src": "3761:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "expression": {
                            "id": 78079,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78053,
                            "src": "3774:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78080,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3779:3:81",
                          "memberName": "kdl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78015,
                          "src": "3774:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                            "typeString": "contract GeometricKandel"
                          }
                        },
                        "id": 78081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3783:5:81",
                        "memberName": "QUOTE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87953,
                        "src": "3774:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$88_$",
                          "typeString": "function () view external returns (contract IERC20)"
                        }
                      },
                      "id": 78082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3774:16:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3761:29:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 78084,
                  "nodeType": "ExpressionStatement",
                  "src": "3761:29:81"
                },
                {
                  "expression": {
                    "id": 78095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "expression": {
                            "id": 78085,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "3797:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78087,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "3802:8:81",
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78036,
                          "src": "3797:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 78088,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "3812:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "3817:6:81",
                          "memberName": "gasreq",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78034,
                          "src": "3812:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 78090,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "3796:30:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$__$",
                        "typeString": "tuple(uint256,uint256,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "expression": {
                            "id": 78091,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78053,
                            "src": "3829:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78092,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3834:3:81",
                          "memberName": "kdl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78015,
                          "src": "3829:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                            "typeString": "contract GeometricKandel"
                          }
                        },
                        "id": 78093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3838:6:81",
                        "memberName": "params",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85857,
                        "src": "3829:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint32_$_t_uint24_$_t_uint88_$_t_uint112_$",
                          "typeString": "function () view external returns (uint32,uint24,uint88,uint112)"
                        }
                      },
                      "id": 78094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3829:17:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint32_$_t_uint24_$_t_uint88_$_t_uint112_$",
                        "typeString": "tuple(uint32,uint24,uint88,uint112)"
                      }
                    },
                    "src": "3796:50:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78096,
                  "nodeType": "ExpressionStatement",
                  "src": "3796:50:81"
                },
                {
                  "assignments": [
                    78099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78099,
                      "mutability": "mutable",
                      "name": "olKeyBaseQuote",
                      "nameLocation": "3866:14:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78445,
                      "src": "3853:27:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey"
                      },
                      "typeName": {
                        "id": 78098,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78097,
                          "name": "OLKey",
                          "nameLocations": [
                            "3853:5:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 55875,
                          "src": "3853:5:81"
                        },
                        "referencedDeclaration": 55875,
                        "src": "3853:5:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                          "typeString": "struct OLKey"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78116,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78103,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78058,
                              "src": "3918:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapVars memory"
                              }
                            },
                            "id": 78104,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3923:4:81",
                            "memberName": "BASE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78042,
                            "src": "3918:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 78102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3910:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78101,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3910:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3910:18:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78108,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78058,
                              "src": "3951:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapVars memory"
                              }
                            },
                            "id": 78109,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3956:5:81",
                            "memberName": "QUOTE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78045,
                            "src": "3951:10:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 78107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3943:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78106,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3943:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3943:19:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 78111,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78053,
                              "src": "3977:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78112,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3982:3:81",
                            "memberName": "kdl",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78015,
                            "src": "3977:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            }
                          },
                          "id": 78113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3986:12:81",
                          "memberName": "TICK_SPACING",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87956,
                          "src": "3977:21:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 78114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3977:23:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 78100,
                      "name": "OLKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55875,
                      "src": "3889:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_OLKey_$55875_storage_ptr_$",
                        "typeString": "type(struct OLKey storage pointer)"
                      }
                    },
                    "id": 78115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "3896:12:81",
                      "3930:11:81",
                      "3964:11:81"
                    ],
                    "names": [
                      "outbound_tkn",
                      "inbound_tkn",
                      "tickSpacing"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "3889:113:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3853:149:81"
                },
                {
                  "expression": {
                    "id": 78129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78117,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "4008:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78119,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4013:7:81",
                      "memberName": "provAsk",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78047,
                      "src": "4008:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 78123,
                          "name": "olKeyBaseQuote",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78099,
                          "src": "4051:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 78124,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "4067:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4072:6:81",
                          "memberName": "gasreq",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78034,
                          "src": "4067:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 78126,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "4080:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78127,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4085:8:81",
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78036,
                          "src": "4080:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 78120,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "4023:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78121,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4028:9:81",
                          "memberName": "mgvReader",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78039,
                          "src": "4023:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$63469",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4038:12:81",
                        "memberName": "getProvision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62443,
                        "src": "4023:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,uint256,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 78128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4023:71:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4008:86:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78130,
                  "nodeType": "ExpressionStatement",
                  "src": "4008:86:81"
                },
                {
                  "expression": {
                    "id": 78145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78131,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "4100:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4105:7:81",
                      "memberName": "provBid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78049,
                      "src": "4100:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 78137,
                              "name": "olKeyBaseQuote",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78099,
                              "src": "4143:14:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                "typeString": "struct OLKey memory"
                              }
                            },
                            "id": 78138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4158:7:81",
                            "memberName": "flipped",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55908,
                            "src": "4143:22:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_struct$_OLKey_$55875_memory_ptr_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                              "typeString": "function (struct OLKey memory) pure returns (struct OLKey memory)"
                            }
                          },
                          "id": 78139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4143:24:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 78140,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "4169:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78141,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4174:6:81",
                          "memberName": "gasreq",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78034,
                          "src": "4169:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 78142,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "4182:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4187:8:81",
                          "memberName": "gasprice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78036,
                          "src": "4182:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 78134,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "4115:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4120:9:81",
                          "memberName": "mgvReader",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78039,
                          "src": "4115:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MgvReader_$63469",
                            "typeString": "contract MgvReader"
                          }
                        },
                        "id": 78136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4130:12:81",
                        "memberName": "getProvision",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62443,
                        "src": "4115:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,uint256,uint256) view external returns (uint256)"
                        }
                      },
                      "id": 78144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4115:81:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4100:96:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78146,
                  "nodeType": "ExpressionStatement",
                  "src": "4100:96:81"
                },
                {
                  "assignments": [
                    78148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78148,
                      "mutability": "mutable",
                      "name": "funds",
                      "nameLocation": "4207:5:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78445,
                      "src": "4202:10:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78147,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4202:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78162,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 78149,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78058,
                              "src": "4216:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapVars memory"
                              }
                            },
                            "id": 78150,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4221:7:81",
                            "memberName": "provAsk",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78047,
                            "src": "4216:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 78151,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78058,
                              "src": "4231:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapVars memory"
                              }
                            },
                            "id": 78152,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4236:7:81",
                            "memberName": "provBid",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78049,
                            "src": "4231:12:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4216:27:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 78154,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4215:29:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 78159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 78155,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78053,
                              "src": "4248:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78156,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4253:2:81",
                            "memberName": "to",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78001,
                            "src": "4248:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 78157,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78053,
                              "src": "4258:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4263:4:81",
                            "memberName": "from",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77999,
                            "src": "4258:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4248:19:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 78160,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4247:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4215:53:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4202:66:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 78163,
                          "name": "broadcaster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            52871,
                            52892,
                            52903
                          ],
                          "referencedDeclaration": 52871,
                          "src": "4278:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                            "typeString": "function () returns (address)"
                          }
                        },
                        "id": 78164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4278:13:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 78165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4292:7:81",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "4278:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 78166,
                      "name": "funds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78148,
                      "src": "4302:5:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4278:29:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78189,
                  "nodeType": "IfStatement",
                  "src": "4274:267:81",
                  "trueBody": {
                    "id": 78188,
                    "nodeType": "Block",
                    "src": "4309:232:81",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "42726f616463617374657220646f6573206e6f74206861766520656e6f7567682066756e647320746f2070726f766973696f6e206f66666572732e204d697373696e67",
                              "id": 78171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4338:69:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4c3683bfd494916180e22f3131ef59f3e8098c139ad8f0a9a3a45e65b14eb78e",
                                "typeString": "literal_string \"Broadcaster does not have enough funds to provision offers. Missing\""
                              },
                              "value": "Broadcaster does not have enough funds to provision offers. Missing"
                            },
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 78177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 78173,
                                    "name": "funds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78148,
                                    "src": "4425:5:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 78174,
                                        "name": "broadcaster",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          52871,
                                          52892,
                                          52903
                                        ],
                                        "referencedDeclaration": 52871,
                                        "src": "4433:11:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                          "typeString": "function () returns (address)"
                                        }
                                      },
                                      "id": 78175,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4433:13:81",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 78176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4447:7:81",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "4433:21:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4425:29:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "3138",
                                  "id": 78178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4456:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  },
                                  "value": "18"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_18_by_1",
                                    "typeString": "int_const 18"
                                  }
                                ],
                                "id": 78172,
                                "name": "toFixed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  51532,
                                  51680
                                ],
                                "referencedDeclaration": 51532,
                                "src": "4417:7:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256,uint256) pure returns (string memory)"
                                }
                              },
                              "id": 78179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4417:42:81",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "hexValue": "6e617469766520746f6b656e73",
                              "id": 78180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4469:15:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a14709964e25b8723ea607b35533772cfb73598939dfc325d7fb962a756de5ff",
                                "typeString": "literal_string \"native tokens\""
                              },
                              "value": "native tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_4c3683bfd494916180e22f3131ef59f3e8098c139ad8f0a9a3a45e65b14eb78e",
                                "typeString": "literal_string \"Broadcaster does not have enough funds to provision offers. Missing\""
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a14709964e25b8723ea607b35533772cfb73598939dfc325d7fb962a756de5ff",
                                "typeString": "literal_string \"native tokens\""
                              }
                            ],
                            "expression": {
                              "id": 78168,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37519,
                              "src": "4317:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console2_$37519_$",
                                "typeString": "type(library console2)"
                              }
                            },
                            "id": 78170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4325:3:81",
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30790,
                            "src": "4317:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory,string memory,string memory) pure"
                            }
                          },
                          "id": 78181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4317:175:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78182,
                        "nodeType": "ExpressionStatement",
                        "src": "4317:175:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 78184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4508:5:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "4e6f7420656e6f7567682066756e6473",
                              "id": 78185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4515:18:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                                "typeString": "literal_string \"Not enough funds\""
                              },
                              "value": "Not enough funds"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38fc6ba06c924208472ab053d62249a6a0165c760c073089bf019af8c267f725",
                                "typeString": "literal_string \"Not enough funds\""
                              }
                            ],
                            "id": 78183,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4500:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 78186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4500:34:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78187,
                        "nodeType": "ExpressionStatement",
                        "src": "4500:34:81"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "43616c63756c6174696e67206261736520616e642071756f74652e2e2e",
                        "id": 78191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4557:31:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a585ec9eb62ff576f761991977e0ce83eae730d5844304cb7388724c5ef37d2",
                          "typeString": "literal_string \"Calculating base and quote...\""
                        },
                        "value": "Calculating base and quote..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0a585ec9eb62ff576f761991977e0ce83eae730d5844304cb7388724c5ef37d2",
                          "typeString": "literal_string \"Calculating base and quote...\""
                        }
                      ],
                      "id": 78190,
                      "name": "prettyLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52744,
                      "src": "4547:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 78192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4547:42:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78193,
                  "nodeType": "ExpressionStatement",
                  "src": "4547:42:81"
                },
                {
                  "expression": {
                    "id": 78200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 78194,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "4595:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78196,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4600:12:81",
                      "memberName": "distribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78022,
                      "src": "4595:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                        "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 78198,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78053,
                          "src": "4634:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapArgs memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapArgs memory"
                          }
                        ],
                        "id": 78197,
                        "name": "calculateBaseQuote",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78496,
                        "src": "4615:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_HeapArgs_$78019_memory_ptr_$returns$_t_struct$_Distribution_$86630_memory_ptr_$",
                          "typeString": "function (struct KandelPopulate.HeapArgs memory) pure returns (struct DirectWithBidsAndAsksDistribution.Distribution memory)"
                        }
                      },
                      "id": 78199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4615:24:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                        "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                      }
                    },
                    "src": "4595:44:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                    }
                  },
                  "id": 78201,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:44:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4576616c756174696e6720726571756972656420636f6c6c61746572616c2e2e2e",
                        "id": 78203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4656:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c911bcb79facd20c3f860f38fff035f0b8c809059f42972f33e983f7b56e796",
                          "typeString": "literal_string \"Evaluating required collateral...\""
                        },
                        "value": "Evaluating required collateral..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1c911bcb79facd20c3f860f38fff035f0b8c809059f42972f33e983f7b56e796",
                          "typeString": "literal_string \"Evaluating required collateral...\""
                        }
                      ],
                      "id": 78202,
                      "name": "prettyLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52744,
                      "src": "4646:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 78204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4646:46:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78205,
                  "nodeType": "ExpressionStatement",
                  "src": "4646:46:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 78207,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "4722:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      ],
                      "id": 78206,
                      "name": "evaluateAmountsRequired",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78556,
                      "src": "4698:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_HeapVars_$78050_memory_ptr_$returns$__$",
                        "typeString": "function (struct KandelPopulate.HeapVars memory) pure"
                      }
                    },
                    "id": 78208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4698:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78209,
                  "nodeType": "ExpressionStatement",
                  "src": "4698:29:81"
                },
                {
                  "assignments": [
                    78211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78211,
                      "mutability": "mutable",
                      "name": "baseDecimals",
                      "nameLocation": "4810:12:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78445,
                      "src": "4805:17:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78210,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4805:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78216,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 78212,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "4825:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78213,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4830:4:81",
                        "memberName": "BASE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78042,
                        "src": "4825:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4835:8:81",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "4825:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 78215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4825:20:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4805:40:81"
                },
                {
                  "assignments": [
                    78218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78218,
                      "mutability": "mutable",
                      "name": "quoteDecimals",
                      "nameLocation": "4856:13:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78445,
                      "src": "4851:18:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78217,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4851:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78223,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 78219,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "4872:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78220,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4877:5:81",
                        "memberName": "QUOTE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78045,
                        "src": "4872:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4883:8:81",
                      "memberName": "decimals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82,
                      "src": "4872:19:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                        "typeString": "function () view external returns (uint8)"
                      }
                    },
                    "id": 78222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4872:21:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4851:42:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "526571756972656420636f6c6c61746572616c206f66206261736520697320",
                            "id": 78228,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4939:33:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ef1c91a705f60a0dc0891d98bd85d261386b50d454965e48707c648519281bc6",
                              "typeString": "literal_string \"Required collateral of base is \""
                            },
                            "value": "Required collateral of base is "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 78230,
                                  "name": "vars",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78058,
                                  "src": "4990:4:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                    "typeString": "struct KandelPopulate.HeapVars memory"
                                  }
                                },
                                "id": 78231,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4995:18:81",
                                "memberName": "baseAmountRequired",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78024,
                                "src": "4990:23:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 78232,
                                "name": "baseDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78211,
                                "src": "5015:12:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 78229,
                              "name": "toFixed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                51532,
                                51680
                              ],
                              "referencedDeclaration": 51532,
                              "src": "4982:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256,uint256) pure returns (string memory)"
                              }
                            },
                            "id": 78233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4982:46:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "20616e642071756f746520697320",
                            "id": 78234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5038:16:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_a09e722845b62622eced32d8c5fe6c487914c69f6377f22eec843d65341f06f3",
                              "typeString": "literal_string \" and quote is \""
                            },
                            "value": " and quote is "
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 78236,
                                  "name": "vars",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78058,
                                  "src": "5072:4:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                    "typeString": "struct KandelPopulate.HeapVars memory"
                                  }
                                },
                                "id": 78237,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5077:19:81",
                                "memberName": "quoteAmountRequired",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78026,
                                "src": "5072:24:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 78238,
                                "name": "quoteDecimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78218,
                                "src": "5098:13:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 78235,
                              "name": "toFixed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                51532,
                                51680
                              ],
                              "referencedDeclaration": 51532,
                              "src": "5064:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                "typeString": "function (uint256,uint256) pure returns (string memory)"
                              }
                            },
                            "id": 78239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5064:48:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ef1c91a705f60a0dc0891d98bd85d261386b50d454965e48707c648519281bc6",
                              "typeString": "literal_string \"Required collateral of base is \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_a09e722845b62622eced32d8c5fe6c487914c69f6377f22eec843d65341f06f3",
                              "typeString": "literal_string \" and quote is \""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 78226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4916:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 78225,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "4916:6:81",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 78227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4923:6:81",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "4916:13:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () pure returns (string memory)"
                          }
                        },
                        "id": 78240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4916:204:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 78224,
                      "name": "prettyLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52744,
                      "src": "4899:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 78241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:227:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78242,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:227:81"
                },
                {
                  "assignments": [
                    78244
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78244,
                      "mutability": "mutable",
                      "name": "deficit",
                      "nameLocation": "5147:7:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78445,
                      "src": "5133:21:81",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 78243,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5133:6:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78245,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5133:21:81"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 78249,
                            "name": "broadcaster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              52871,
                              52892,
                              52903
                            ],
                            "referencedDeclaration": 52871,
                            "src": "5185:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 78250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5185:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 78246,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "5165:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78247,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5170:4:81",
                          "memberName": "BASE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78042,
                          "src": "5165:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 78248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5175:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "5165:19:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 78251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5165:34:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 78252,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "5202:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78253,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5207:18:81",
                      "memberName": "baseAmountRequired",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78024,
                      "src": "5202:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5165:60:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78285,
                  "nodeType": "IfStatement",
                  "src": "5161:299:81",
                  "trueBody": {
                    "id": 78284,
                    "nodeType": "Block",
                    "src": "5227:233:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 78282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 78255,
                            "name": "deficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "5235:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "4e6f7420656e6f75676820626173652028",
                                "id": 78259,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5268:19:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1c54cbd093df6e264c4547ed4b423bec49505005e1e9b96ae83534028afc5520",
                                  "typeString": "literal_string \"Not enough base (\""
                                },
                                "value": "Not enough base ("
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 78264,
                                          "name": "vars",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78058,
                                          "src": "5317:4:81",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                            "typeString": "struct KandelPopulate.HeapVars memory"
                                          }
                                        },
                                        "id": 78265,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5322:4:81",
                                        "memberName": "BASE",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78042,
                                        "src": "5317:9:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$88",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$88",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 78263,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5309:7:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 78262,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5309:7:81",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 78266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5309:18:81",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 78260,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10515,
                                    "src": "5297:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$21330",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 78261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5300:8:81",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 20377,
                                  "src": "5297:11:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (address) pure external returns (string memory)"
                                  }
                                },
                                "id": 78267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5297:31:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "292e20446566696369743a20",
                                "id": 78268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5338:14:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1418440698773c3028d7a5096a665ece67e34395ead81e771616046c9f40d5a9",
                                  "typeString": "literal_string \"). Deficit: \""
                                },
                                "value": "). Deficit: "
                              },
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 78278,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 78270,
                                        "name": "vars",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78058,
                                        "src": "5370:4:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                          "typeString": "struct KandelPopulate.HeapVars memory"
                                        }
                                      },
                                      "id": 78271,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5375:18:81",
                                      "memberName": "baseAmountRequired",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 78024,
                                      "src": "5370:23:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 78275,
                                            "name": "broadcaster",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              52871,
                                              52892,
                                              52903
                                            ],
                                            "referencedDeclaration": 52871,
                                            "src": "5416:11:81",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                              "typeString": "function () returns (address)"
                                            }
                                          },
                                          "id": 78276,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5416:13:81",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 78272,
                                            "name": "vars",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 78058,
                                            "src": "5396:4:81",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                              "typeString": "struct KandelPopulate.HeapVars memory"
                                            }
                                          },
                                          "id": 78273,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5401:4:81",
                                          "memberName": "BASE",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 78042,
                                          "src": "5396:9:81",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 78274,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5406:9:81",
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 18,
                                        "src": "5396:19:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 78277,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5396:34:81",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5370:60:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 78279,
                                    "name": "baseDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78211,
                                    "src": "5432:12:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 78269,
                                  "name": "toFixed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    51532,
                                    51680
                                  ],
                                  "referencedDeclaration": 51532,
                                  "src": "5362:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256,uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 78280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5362:83:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1c54cbd093df6e264c4547ed4b423bec49505005e1e9b96ae83534028afc5520",
                                  "typeString": "literal_string \"Not enough base (\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1418440698773c3028d7a5096a665ece67e34395ead81e771616046c9f40d5a9",
                                  "typeString": "literal_string \"). Deficit: \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 78257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5245:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 78256,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5245:6:81",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5252:6:81",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "5245:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 78281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5245:208:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5235:218:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 78283,
                        "nodeType": "ExpressionStatement",
                        "src": "5235:218:81"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 78289,
                            "name": "broadcaster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              52871,
                              52892,
                              52903
                            ],
                            "referencedDeclaration": 52871,
                            "src": "5490:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 78290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5490:13:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 78286,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78058,
                            "src": "5469:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78287,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5474:5:81",
                          "memberName": "QUOTE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78045,
                          "src": "5469:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 78288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5480:9:81",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18,
                        "src": "5469:20:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 78291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5469:35:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 78292,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78058,
                        "src": "5507:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                          "typeString": "struct KandelPopulate.HeapVars memory"
                        }
                      },
                      "id": 78293,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5512:19:81",
                      "memberName": "quoteAmountRequired",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78026,
                      "src": "5507:24:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5469:62:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78340,
                  "nodeType": "IfStatement",
                  "src": "5465:377:81",
                  "trueBody": {
                    "id": 78339,
                    "nodeType": "Block",
                    "src": "5533:309:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 78337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 78295,
                            "name": "deficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "5541:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 78305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 78301,
                                          "name": "deficit",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78244,
                                          "src": "5580:7:81",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 78300,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "5574:5:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 78299,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5574:5:81",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 78302,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5574:14:81",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 78303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5589:6:81",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "5574:21:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 78304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5598:1:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5574:25:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "hexValue": "",
                                  "id": 78312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5633:2:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                },
                                "id": 78313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5574:61:81",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 78309,
                                      "name": "deficit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 78244,
                                      "src": "5616:7:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    {
                                      "hexValue": "2e20",
                                      "id": 78310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5625:4:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_b64dcfb625593d85945cb085ac34491404bf22cca3317c6035fcf8dbafb18c0d",
                                        "typeString": "literal_string \". \""
                                      },
                                      "value": ". "
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_b64dcfb625593d85945cb085ac34491404bf22cca3317c6035fcf8dbafb18c0d",
                                        "typeString": "literal_string \". \""
                                      }
                                    ],
                                    "expression": {
                                      "id": 78307,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5602:6:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 78306,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5602:6:81",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 78308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5609:6:81",
                                    "memberName": "concat",
                                    "nodeType": "MemberAccess",
                                    "src": "5602:13:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () pure returns (string memory)"
                                    }
                                  },
                                  "id": 78311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5602:28:81",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "4e6f7420656e6f7567682071756f74652028",
                                "id": 78314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5645:20:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1e46fa0336defb7f7994ef94acd66e08d34e150409f720ddde6b2476c8e0ae9b",
                                  "typeString": "literal_string \"Not enough quote (\""
                                },
                                "value": "Not enough quote ("
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 78319,
                                          "name": "vars",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78058,
                                          "src": "5695:4:81",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                            "typeString": "struct KandelPopulate.HeapVars memory"
                                          }
                                        },
                                        "id": 78320,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5700:5:81",
                                        "memberName": "QUOTE",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78045,
                                        "src": "5695:10:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$88",
                                          "typeString": "contract IERC20"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_IERC20_$88",
                                          "typeString": "contract IERC20"
                                        }
                                      ],
                                      "id": 78318,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5687:7:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 78317,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5687:7:81",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 78321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5687:19:81",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 78315,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10515,
                                    "src": "5675:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$21330",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 78316,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5678:8:81",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 20377,
                                  "src": "5675:11:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (address) pure external returns (string memory)"
                                  }
                                },
                                "id": 78322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5675:32:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "292e20446566696369743a20",
                                "id": 78323,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5717:14:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1418440698773c3028d7a5096a665ece67e34395ead81e771616046c9f40d5a9",
                                  "typeString": "literal_string \"). Deficit: \""
                                },
                                "value": "). Deficit: "
                              },
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 78333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 78325,
                                        "name": "vars",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 78058,
                                        "src": "5749:4:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                          "typeString": "struct KandelPopulate.HeapVars memory"
                                        }
                                      },
                                      "id": 78326,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5754:19:81",
                                      "memberName": "quoteAmountRequired",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 78026,
                                      "src": "5749:24:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 78330,
                                            "name": "broadcaster",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              52871,
                                              52892,
                                              52903
                                            ],
                                            "referencedDeclaration": 52871,
                                            "src": "5797:11:81",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                              "typeString": "function () returns (address)"
                                            }
                                          },
                                          "id": 78331,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5797:13:81",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 78327,
                                            "name": "vars",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 78058,
                                            "src": "5776:4:81",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                              "typeString": "struct KandelPopulate.HeapVars memory"
                                            }
                                          },
                                          "id": 78328,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5781:5:81",
                                          "memberName": "QUOTE",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 78045,
                                          "src": "5776:10:81",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 78329,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5787:9:81",
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 18,
                                        "src": "5776:20:81",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 78332,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5776:35:81",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5749:62:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 78334,
                                    "name": "quoteDecimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78218,
                                    "src": "5813:13:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 78324,
                                  "name": "toFixed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    51532,
                                    51680
                                  ],
                                  "referencedDeclaration": 51532,
                                  "src": "5741:7:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256,uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 78335,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5741:86:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1e46fa0336defb7f7994ef94acd66e08d34e150409f720ddde6b2476c8e0ae9b",
                                  "typeString": "literal_string \"Not enough quote (\""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1418440698773c3028d7a5096a665ece67e34395ead81e771616046c9f40d5a9",
                                  "typeString": "literal_string \"). Deficit: \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 78297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5551:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 78296,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5551:6:81",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5558:6:81",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "5551:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 78336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5551:284:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5541:294:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 78338,
                        "nodeType": "ExpressionStatement",
                        "src": "5541:294:81"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 78343,
                            "name": "deficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "5857:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 78342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5851:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 78341,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5851:5:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5851:14:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 78345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5866:6:81",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5851:21:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 78346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5875:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5851:25:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78372,
                  "nodeType": "IfStatement",
                  "src": "5847:177:81",
                  "trueBody": {
                    "id": 78371,
                    "nodeType": "Block",
                    "src": "5878:146:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 78361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 78348,
                            "name": "deficit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78244,
                            "src": "5886:7:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "62726f61646361737465723a20",
                                "id": 78352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5910:15:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_42416592fa8543e27a1f6b3274ba1e3c43578ee6d2db99b39839f3ad4adcc372",
                                  "typeString": "literal_string \"broadcaster: \""
                                },
                                "value": "broadcaster: "
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 78355,
                                      "name": "broadcaster",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        52871,
                                        52892,
                                        52903
                                      ],
                                      "referencedDeclaration": 52871,
                                      "src": "5939:11:81",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                                        "typeString": "function () returns (address)"
                                      }
                                    },
                                    "id": 78356,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5939:13:81",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 78353,
                                    "name": "vm",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10515,
                                    "src": "5927:2:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Vm_$21330",
                                      "typeString": "contract Vm"
                                    }
                                  },
                                  "id": 78354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5930:8:81",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 20377,
                                  "src": "5927:11:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (address) pure external returns (string memory)"
                                  }
                                },
                                "id": 78357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5927:26:81",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "hexValue": "20",
                                "id": 78358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5955:3:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                  "typeString": "literal_string \" \""
                                },
                                "value": " "
                              },
                              {
                                "id": 78359,
                                "name": "deficit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78244,
                                "src": "5960:7:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_42416592fa8543e27a1f6b3274ba1e3c43578ee6d2db99b39839f3ad4adcc372",
                                  "typeString": "literal_string \"broadcaster: \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                                  "typeString": "literal_string \" \""
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 78350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5896:6:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                  "typeString": "type(string storage pointer)"
                                },
                                "typeName": {
                                  "id": 78349,
                                  "name": "string",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5896:6:81",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 78351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5903:6:81",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "5896:13:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () pure returns (string memory)"
                              }
                            },
                            "id": 78360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5896:72:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "5886:82:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 78362,
                        "nodeType": "ExpressionStatement",
                        "src": "5886:82:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78364,
                              "name": "deficit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78244,
                              "src": "5986:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 78363,
                            "name": "prettyLog",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52744,
                            "src": "5976:9:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 78365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5976:18:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78366,
                        "nodeType": "ExpressionStatement",
                        "src": "5976:18:81"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78368,
                              "name": "deficit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78244,
                              "src": "6009:7:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 78367,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "6002:6:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 78369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6002:15:81",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78370,
                        "nodeType": "ExpressionStatement",
                        "src": "6002:15:81"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "417070726f76696e67206261736520616e642071756f74652e2e2e",
                        "id": 78374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6040:29:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a25ddf916b444751e030e1fe0286b706eba55d732138379ccb002d2b318a7b3",
                          "typeString": "literal_string \"Approving base and quote...\""
                        },
                        "value": "Approving base and quote..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3a25ddf916b444751e030e1fe0286b706eba55d732138379ccb002d2b318a7b3",
                          "typeString": "literal_string \"Approving base and quote...\""
                        }
                      ],
                      "id": 78373,
                      "name": "prettyLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52744,
                      "src": "6030:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 78375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6030:40:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78376,
                  "nodeType": "ExpressionStatement",
                  "src": "6030:40:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 78377,
                      "name": "broadcast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52731,
                      "src": "6076:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 78378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6076:11:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78379,
                  "nodeType": "ExpressionStatement",
                  "src": "6076:11:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78387,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78053,
                              "src": "6119:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6124:3:81",
                            "memberName": "kdl",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78015,
                            "src": "6119:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            }
                          ],
                          "id": 78386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6111:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78385,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6111:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6111:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 78390,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6130:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6135:18:81",
                        "memberName": "baseAmountRequired",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78024,
                        "src": "6130:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 78380,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6093:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78383,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6098:4:81",
                        "memberName": "BASE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78042,
                        "src": "6093:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6103:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6093:17:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6093:61:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78393,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:61:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 78394,
                      "name": "broadcast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52731,
                      "src": "6160:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 78395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6160:11:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78396,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:11:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 78404,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78053,
                              "src": "6204:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78405,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6209:3:81",
                            "memberName": "kdl",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78015,
                            "src": "6204:8:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                              "typeString": "contract GeometricKandel"
                            }
                          ],
                          "id": 78403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6196:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 78402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6196:7:81",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6196:17:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 78407,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6215:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6220:19:81",
                        "memberName": "quoteAmountRequired",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78026,
                        "src": "6215:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 78397,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6177:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6182:5:81",
                        "memberName": "QUOTE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78045,
                        "src": "6177:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 78401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6188:7:81",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45,
                      "src": "6177:18:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 78409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6177:63:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78410,
                  "nodeType": "ExpressionStatement",
                  "src": "6177:63:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "506f70756c6174696e67204d616e67726f76652e2e2e",
                        "id": 78412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6257:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3d83ee4dfcb9a2bc525f4ebf8f92c5a1d3c9d25ad4b186dfbf4a988cfba8303",
                          "typeString": "literal_string \"Populating Mangrove...\""
                        },
                        "value": "Populating Mangrove..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b3d83ee4dfcb9a2bc525f4ebf8f92c5a1d3c9d25ad4b186dfbf4a988cfba8303",
                          "typeString": "literal_string \"Populating Mangrove...\""
                        }
                      ],
                      "id": 78411,
                      "name": "prettyLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52744,
                      "src": "6247:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 78413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6247:35:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78414,
                  "nodeType": "ExpressionStatement",
                  "src": "6247:35:81"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 78415,
                      "name": "broadcast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52731,
                      "src": "6289:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 78416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6289:11:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78417,
                  "nodeType": "ExpressionStatement",
                  "src": "6289:11:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78425,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6339:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78426,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6344:12:81",
                        "memberName": "distribution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78022,
                        "src": "6339:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 78427,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78053,
                          "src": "6358:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapArgs memory"
                          }
                        },
                        "id": 78428,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6363:6:81",
                        "memberName": "params",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78008,
                        "src": "6358:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 78429,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6371:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78430,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6376:18:81",
                        "memberName": "baseAmountRequired",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78024,
                        "src": "6371:23:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 78431,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78058,
                          "src": "6396:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapVars memory"
                          }
                        },
                        "id": 78432,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6401:19:81",
                        "memberName": "quoteAmountRequired",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78026,
                        "src": "6396:24:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                            "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 78418,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78053,
                            "src": "6307:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78421,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6312:3:81",
                          "memberName": "kdl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78015,
                          "src": "6307:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                            "typeString": "contract GeometricKandel"
                          }
                        },
                        "id": 78422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6316:8:81",
                        "memberName": "populate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86133,
                        "src": "6307:17:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_Distribution_$86630_memory_ptr_$_t_struct$_Params_$85853_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (struct DirectWithBidsAndAsksDistribution.Distribution memory,struct CoreKandel.Params memory,uint256,uint256) payable external"
                        }
                      },
                      "id": 78424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 78423,
                          "name": "funds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78148,
                          "src": "6332:5:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6307:31:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_Distribution_$86630_memory_ptr_$_t_struct$_Params_$85853_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (struct DirectWithBidsAndAsksDistribution.Distribution memory,struct CoreKandel.Params memory,uint256,uint256) payable external"
                      }
                    },
                    "id": 78433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6307:114:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78434,
                  "nodeType": "ExpressionStatement",
                  "src": "6307:114:81"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 78439,
                            "name": "funds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78148,
                            "src": "6447:5:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "3138",
                            "id": 78440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6454:2:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            }
                          ],
                          "id": 78438,
                          "name": "toFixed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            51532,
                            51680
                          ],
                          "referencedDeclaration": 51532,
                          "src": "6439:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256,uint256) pure returns (string memory)"
                          }
                        },
                        "id": 78441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6439:18:81",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "6e617469766520746f6b656e7320757365642061732070726f766973696f6e",
                        "id": 78442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6459:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c066996417153b8f568a586b41afe10abc1b195b1adb0af564b978acc866d8fd",
                          "typeString": "literal_string \"native tokens used as provision\""
                        },
                        "value": "native tokens used as provision"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c066996417153b8f568a586b41afe10abc1b195b1adb0af564b978acc866d8fd",
                          "typeString": "literal_string \"native tokens used as provision\""
                        }
                      ],
                      "expression": {
                        "id": 78435,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37519,
                        "src": "6427:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$37519_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 78437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6435:3:81",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30180,
                      "src": "6427:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory) pure"
                      }
                    },
                    "id": 78443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6427:66:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78444,
                  "nodeType": "ExpressionStatement",
                  "src": "6427:66:81"
                }
              ]
            },
            "functionSelector": "6d77c7f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "innerRun",
            "nameLocation": "3620:8:81",
            "parameters": {
              "id": 78054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78053,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "3645:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 78446,
                  "src": "3629:20:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                    "typeString": "struct KandelPopulate.HeapArgs"
                  },
                  "typeName": {
                    "id": 78052,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78051,
                      "name": "HeapArgs",
                      "nameLocations": [
                        "3629:8:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78019,
                      "src": "3629:8:81"
                    },
                    "referencedDeclaration": 78019,
                    "src": "3629:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeapArgs_$78019_storage_ptr",
                      "typeString": "struct KandelPopulate.HeapArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3628:22:81"
            },
            "returnParameters": {
              "id": 78055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3658:0:81"
            },
            "scope": 78557,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78496,
            "nodeType": "FunctionDefinition",
            "src": "6502:468:81",
            "nodes": [],
            "body": {
              "id": 78495,
              "nodeType": "Block",
              "src": "6618:352:81",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78457,
                      "mutability": "mutable",
                      "name": "baseQuoteTickIndex0",
                      "nameLocation": "6629:19:81",
                      "nodeType": "VariableDeclaration",
                      "scope": 78495,
                      "src": "6624:24:81",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      },
                      "typeName": {
                        "id": 78456,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 78455,
                          "name": "Tick",
                          "nameLocations": [
                            "6624:4:81"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5280,
                          "src": "6624:4:81"
                        },
                        "referencedDeclaration": 5280,
                        "src": "6624:4:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78465,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 78460,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78449,
                          "src": "6675:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapArgs memory"
                          }
                        },
                        "id": 78461,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6680:9:81",
                        "memberName": "initQuote",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78010,
                        "src": "6675:14:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 78462,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78449,
                          "src": "6691:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                            "typeString": "struct KandelPopulate.HeapArgs memory"
                          }
                        },
                        "id": 78463,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6696:6:81",
                        "memberName": "volume",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78012,
                        "src": "6691:11:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 78458,
                        "name": "TickLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6401,
                        "src": "6651:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TickLib_$6401_$",
                          "typeString": "type(library TickLib)"
                        }
                      },
                      "id": 78459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6659:15:81",
                      "memberName": "tickFromVolumes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5597,
                      "src": "6651:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_userDefinedValueType$_Tick_$5280_$",
                        "typeString": "function (uint256,uint256) pure returns (Tick)"
                      }
                    },
                    "id": 78464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6651:52:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6624:79:81"
                },
                {
                  "expression": {
                    "id": 78493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78466,
                      "name": "distribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78453,
                      "src": "6709:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                        "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 78470,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78449,
                            "src": "6759:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78471,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6764:4:81",
                          "memberName": "from",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 77999,
                          "src": "6759:9:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 78472,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78449,
                            "src": "6776:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6781:2:81",
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78001,
                          "src": "6776:7:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 78474,
                          "name": "baseQuoteTickIndex0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78457,
                          "src": "6791:19:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          }
                        },
                        {
                          "expression": {
                            "id": 78475,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78449,
                            "src": "6818:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78476,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6823:10:81",
                          "memberName": "tickOffset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78005,
                          "src": "6818:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "expression": {
                            "id": 78477,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78449,
                            "src": "6841:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78478,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6846:13:81",
                          "memberName": "firstAskIndex",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78003,
                          "src": "6841:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 78481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6872:4:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 78480,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6872:4:81",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 78479,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "6867:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 78482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6867:10:81",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 78483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6878:3:81",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "6867:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 78484,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78449,
                            "src": "6889:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78485,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6894:6:81",
                          "memberName": "volume",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78012,
                          "src": "6889:11:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 78486,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78449,
                              "src": "6908:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78487,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6913:6:81",
                            "memberName": "params",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78008,
                            "src": "6908:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                              "typeString": "struct CoreKandel.Params memory"
                            }
                          },
                          "id": 78488,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6920:11:81",
                          "memberName": "pricePoints",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85852,
                          "src": "6908:23:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 78489,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78449,
                              "src": "6939:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapArgs memory"
                              }
                            },
                            "id": 78490,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6944:6:81",
                            "memberName": "params",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78008,
                            "src": "6939:11:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                              "typeString": "struct CoreKandel.Params memory"
                            }
                          },
                          "id": 78491,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6951:8:81",
                          "memberName": "stepSize",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 85850,
                          "src": "6939:20:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          {
                            "typeIdentifier": "t_uint88",
                            "typeString": "uint88"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 78467,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78449,
                            "src": "6724:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapArgs memory"
                            }
                          },
                          "id": 78468,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6729:3:81",
                          "memberName": "kdl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78015,
                          "src": "6724:8:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GeometricKandel_$87283",
                            "typeString": "contract GeometricKandel"
                          }
                        },
                        "id": 78469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6733:18:81",
                        "memberName": "createDistribution",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87167,
                        "src": "6724:27:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_uint256_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Distribution_$86630_memory_ptr_$",
                          "typeString": "function (uint256,uint256,Tick,uint256,uint256,uint256,uint256,uint256,uint256) pure external returns (struct DirectWithBidsAndAsksDistribution.Distribution memory)"
                        }
                      },
                      "id": 78492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6724:241:81",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                        "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                      }
                    },
                    "src": "6709:256:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                    }
                  },
                  "id": 78494,
                  "nodeType": "ExpressionStatement",
                  "src": "6709:256:81"
                }
              ]
            },
            "functionSelector": "ac019753",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateBaseQuote",
            "nameLocation": "6511:18:81",
            "parameters": {
              "id": 78450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78449,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "6546:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 78496,
                  "src": "6530:20:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeapArgs_$78019_memory_ptr",
                    "typeString": "struct KandelPopulate.HeapArgs"
                  },
                  "typeName": {
                    "id": 78448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78447,
                      "name": "HeapArgs",
                      "nameLocations": [
                        "6530:8:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78019,
                      "src": "6530:8:81"
                    },
                    "referencedDeclaration": 78019,
                    "src": "6530:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeapArgs_$78019_storage_ptr",
                      "typeString": "struct KandelPopulate.HeapArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6529:22:81"
            },
            "returnParameters": {
              "id": 78454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78453,
                  "mutability": "mutable",
                  "name": "distribution",
                  "nameLocation": "6604:12:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 78496,
                  "src": "6573:43:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                  },
                  "typeName": {
                    "id": 78452,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78451,
                      "name": "CoreKandel.Distribution",
                      "nameLocations": [
                        "6573:10:81",
                        "6584:12:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86630,
                      "src": "6573:23:81"
                    },
                    "referencedDeclaration": 86630,
                    "src": "6573:23:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$86630_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6572:45:81"
            },
            "scope": 78557,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78556,
            "nodeType": "FunctionDefinition",
            "src": "7164:343:81",
            "nodes": [],
            "body": {
              "id": 78555,
              "nodeType": "Block",
              "src": "7231:276:81",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 78527,
                    "nodeType": "Block",
                    "src": "7294:74:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 78525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 78516,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78500,
                              "src": "7302:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapVars memory"
                              }
                            },
                            "id": 78518,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7307:19:81",
                            "memberName": "quoteAmountRequired",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78026,
                            "src": "7302:24:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 78519,
                                    "name": "vars",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78500,
                                    "src": "7330:4:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                      "typeString": "struct KandelPopulate.HeapVars memory"
                                    }
                                  },
                                  "id": 78520,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7335:12:81",
                                  "memberName": "distribution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 78022,
                                  "src": "7330:17:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                                  }
                                },
                                "id": 78521,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7348:4:81",
                                "memberName": "bids",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 86629,
                                "src": "7330:22:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                                }
                              },
                              "id": 78523,
                              "indexExpression": {
                                "id": 78522,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78504,
                                "src": "7353:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7330:25:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                                "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory"
                              }
                            },
                            "id": 78524,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7356:5:81",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86619,
                            "src": "7330:31:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7302:59:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78526,
                        "nodeType": "ExpressionStatement",
                        "src": "7302:59:81"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78507,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78504,
                      "src": "7254:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 78508,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78500,
                            "src": "7258:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7263:12:81",
                          "memberName": "distribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78022,
                          "src": "7258:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                            "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                          }
                        },
                        "id": 78510,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7276:4:81",
                        "memberName": "bids",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86629,
                        "src": "7258:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        }
                      },
                      "id": 78511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7281:6:81",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7258:29:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7254:33:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78528,
                  "initializationExpression": {
                    "assignments": [
                      78504
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 78504,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7247:1:81",
                        "nodeType": "VariableDeclaration",
                        "scope": 78528,
                        "src": "7242:6:81",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 78503,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7242:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 78506,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 78505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7251:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7242:10:81"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 78514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7289:3:81",
                      "subExpression": {
                        "id": 78513,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78504,
                        "src": "7291:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 78515,
                    "nodeType": "ExpressionStatement",
                    "src": "7289:3:81"
                  },
                  "nodeType": "ForStatement",
                  "src": "7237:131:81"
                },
                {
                  "body": {
                    "id": 78553,
                    "nodeType": "Block",
                    "src": "7430:73:81",
                    "statements": [
                      {
                        "expression": {
                          "id": 78551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 78542,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78500,
                              "src": "7438:4:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                "typeString": "struct KandelPopulate.HeapVars memory"
                              }
                            },
                            "id": 78544,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7443:18:81",
                            "memberName": "baseAmountRequired",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78024,
                            "src": "7438:23:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 78545,
                                    "name": "vars",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 78500,
                                    "src": "7465:4:81",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                                      "typeString": "struct KandelPopulate.HeapVars memory"
                                    }
                                  },
                                  "id": 78546,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7470:12:81",
                                  "memberName": "distribution",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 78022,
                                  "src": "7465:17:81",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                                  }
                                },
                                "id": 78547,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7483:4:81",
                                "memberName": "asks",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 86625,
                                "src": "7465:22:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                                }
                              },
                              "id": 78549,
                              "indexExpression": {
                                "id": 78548,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78530,
                                "src": "7488:1:81",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7465:25:81",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DistributionOffer_$86620_memory_ptr",
                                "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory"
                              }
                            },
                            "id": 78550,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7491:5:81",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86619,
                            "src": "7465:31:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7438:58:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 78552,
                        "nodeType": "ExpressionStatement",
                        "src": "7438:58:81"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78533,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78530,
                      "src": "7390:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "expression": {
                            "id": 78534,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78500,
                            "src": "7394:4:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                              "typeString": "struct KandelPopulate.HeapVars memory"
                            }
                          },
                          "id": 78535,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7399:12:81",
                          "memberName": "distribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78022,
                          "src": "7394:17:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                            "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                          }
                        },
                        "id": 78536,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7412:4:81",
                        "memberName": "asks",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86625,
                        "src": "7394:22:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DistributionOffer_$86620_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.DistributionOffer memory[] memory"
                        }
                      },
                      "id": 78537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7417:6:81",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7394:29:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7390:33:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78554,
                  "initializationExpression": {
                    "assignments": [
                      78530
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 78530,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "7383:1:81",
                        "nodeType": "VariableDeclaration",
                        "scope": 78554,
                        "src": "7378:6:81",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 78529,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7378:4:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 78532,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 78531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7387:1:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7378:10:81"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 78540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7425:3:81",
                      "subExpression": {
                        "id": 78539,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78530,
                        "src": "7427:1:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 78541,
                    "nodeType": "ExpressionStatement",
                    "src": "7425:3:81"
                  },
                  "nodeType": "ForStatement",
                  "src": "7373:130:81"
                }
              ]
            },
            "documentation": {
              "id": 78497,
              "nodeType": "StructuredDocumentation",
              "src": "6974:187:81",
              "text": "@notice evaluates required amounts that need to be published on Mangrove\n@dev we use foundry cheats to revert all changes to the local node in order to prevent inconsistent tests."
            },
            "functionSelector": "1fc79248",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "evaluateAmountsRequired",
            "nameLocation": "7173:23:81",
            "parameters": {
              "id": 78501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78500,
                  "mutability": "mutable",
                  "name": "vars",
                  "nameLocation": "7213:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 78556,
                  "src": "7197:20:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_HeapVars_$78050_memory_ptr",
                    "typeString": "struct KandelPopulate.HeapVars"
                  },
                  "typeName": {
                    "id": 78499,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78498,
                      "name": "HeapVars",
                      "nameLocations": [
                        "7197:8:81"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78050,
                      "src": "7197:8:81"
                    },
                    "referencedDeclaration": 78050,
                    "src": "7197:8:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_HeapVars_$78050_storage_ptr",
                      "typeString": "struct KandelPopulate.HeapVars"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7196:22:81"
            },
            "returnParameters": {
              "id": 78502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7231:0:81"
            },
            "scope": 78557,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 77811,
              "name": "Deployer",
              "nameLocations": [
                "1157:8:81"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53294,
              "src": "1157:8:81"
            },
            "id": 77812,
            "nodeType": "InheritanceSpecifier",
            "src": "1157:8:81"
          }
        ],
        "canonicalName": "KandelPopulate",
        "contractDependencies": [
          4030,
          75183,
          75219,
          76419,
          76442,
          76465,
          76488,
          76524,
          76547
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 77810,
          "nodeType": "StructuredDocumentation",
          "src": "773:62:81",
          "text": " @notice Populates Kandel's distribution on Mangrove"
        },
        "fullyImplemented": true,
        "internalFunctionIDs": {
          "29448": 1
        },
        "linearizedBaseContracts": [
          78557,
          53294,
          3293,
          10570,
          10531,
          10519,
          19757,
          14461,
          12681
        ],
        "name": "KandelPopulate",
        "nameLocation": "1139:14:81",
        "scope": 78558,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "Unlicense"
  },
  "id": 81
}