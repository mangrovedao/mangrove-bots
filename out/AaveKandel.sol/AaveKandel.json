{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKeyBaseQuote",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "OfferListKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetBaseQuoteTickOffset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasreq",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "SetIndexMapping",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetLength",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "SetReserveId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetStepSize",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE_ID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TICK_SPACING",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseQuoteTickOffset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "baseQuoteTickIndex0",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_baseQuoteTickOffset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "firstAskIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pricePoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stepSize",
          "type": "uint256"
        }
      ],
      "name": "createDistribution",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "depositFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "Offer",
          "name": "offer",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "indexOfOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AavePooledRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "offerIdOfIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "offeredVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "volume",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "gasprice",
          "type": "uint32"
        },
        {
          "internalType": "uint24",
          "name": "gasreq",
          "type": "uint24"
        },
        {
          "internalType": "uint88",
          "name": "stepSize",
          "type": "uint88"
        },
        {
          "internalType": "uint112",
          "name": "pricePoints",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "pending",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ],
          "internalType": "struct CoreKandel.Params",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "populate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        }
      ],
      "name": "populateChunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "baseQuoteTickIndex0",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "firstAskIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askGives",
          "type": "uint256"
        }
      ],
      "name": "populateChunkFromOffset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "baseQuoteTickIndex0",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_baseQuoteTickOffset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "firstAskIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askGives",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ],
          "internalType": "struct CoreKandel.Params",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "populateFromOffset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "reserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "freeWei",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retractAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "retractOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseQuoteTickOffset",
          "type": "uint256"
        }
      ],
      "name": "setBaseQuoteTickOffset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        }
      ],
      "name": "setGasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "setGasreq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stepSize",
          "type": "uint256"
        }
      ],
      "name": "setStepSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "$c9b0e4557995336ec140d025d87b634e02$__9063fbbd4a659061012401600060405180830381865af4158015610de0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e089190810190614c6a565b9a9950505050505050505050565b6000546001600160a01b03163314610e405760405162461bcd60e51b815260040161090090614b74565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b0316928201839052600160901b90046001600160701b0316606082018190526008549192600092610eb4928b928b928b9290918b918b918b9190610d44565b9050610ed481836020015162ffffff16846000015163ffffffff16612008565b5050505050505050565b6000546001600160a01b03163314610f085760405162461bcd60e51b815260040161090090614b74565b60005b818110156108d157610f42838383818110610f2857610f28614b2f565b9050602002016020810190610f3d9190614844565b612455565b610f4b81614b5b565b9050610f0b565b610f5c82826125a3565b610f646121ca565b604051636f9a302f60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000081166044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000811660848301529190911690636f9a302f9060a40160408051808303816000875af115801561102b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa9190614cff565b6000546001600160a01b031633146110795760405162461bcd60e51b815260040161090090614b74565b6001600160a01b0381166110cf5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610900565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b0316331461114e5760405162461bcd60e51b815260040161090090614b74565b60001982036111e2576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111df9190614bab565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126d9190614d23565b6112b15760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b6044820152606401610900565b6000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146112fe576040519150601f19603f3d011682016040523d82523d6000602084013e611303565b606091505b50509050806108d15760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f7765695472616e736665724661696c00000000000000006044820152606401610900565b60008061136184846117fe565b9050600061136e8561275d565b604051630129e86d60e21b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304a7a1b4906113bf9084908690600401614d6c565b602060405180830381865afa1580156113dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114009190614bab565b95945050505050565b6000546001600160a01b031633146114335760405162461bcd60e51b815260040161090090614b74565b61143d86866116be565b611448848483611573565b6114528282611124565b505050505050565b60008061146f6001546001600160a01b031690565b90506001600160a01b038116156115245760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f29190614bab565b61151c907f0000000000000000000000000000000000000000000000000000000000000000614bc4565b91505061154f565b7f000000000000000000000000000000000000000000000000000000000000000091505061154f565b505b92915050565b600061156082611a2e565b61156983610b00565b61154f9190614d87565b6000546001600160a01b0316331461159d5760405162461bcd60e51b815260040161090090614b74565b6115c87f000000000000000000000000000000000000000000000000000000000000000084836128b6565b6108d17f000000000000000000000000000000000000000000000000000000000000000083836128b6565b6000546001600160a01b0316331461161d5760405162461bcd60e51b815260040161090090614b74565b808162ffffff16146116715760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f7469636b4f6666736574546f6f4869676800000000000000006044820152606401610900565b80600854146116af5760088190556040518181527f286da08673f0eb4b3843f2824fb8e3e412534a62f6094fdc8b4008cfeba4ba6690602001611119565b50565b6000610bbd838361295c565b6000546001600160a01b031633146116e85760405162461bcd60e51b815260040161090090614b74565b6040517f97714c1c48a0b9a1a347710cb6a62f056f5a811d4006655e3b41959e1e72a40990600090a161171d82826001612a1d565b61172982826000612a1d565b6040517fa9bc12cd7db30bdfe60fece3ec52cfa7c8d60e396e2ea5df439a7d458f05f9b690600090a15050565b6000546001600160a01b031633146117805760405162461bcd60e51b815260040161090090614b74565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b031660608201526117fa6117e083614da7565b826020015162ffffff16836000015163ffffffff16612008565b5050565b6000600183600181111561181457611814614db3565b1461182d57600082815260046020526040902054610bbd565b50600090815260036020526040902054919050565b6000546001600160a01b0316331461186c5760405162461bcd60e51b815260040161090090614b74565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590602001611119565b6000546001600160a01b031633146118e45760405162461bcd60e51b815260040161090090614b74565b6118ed81611842565b6119167f0000000000000000000000000000000000000000000000000000000000000000612455565b61193f7f0000000000000000000000000000000000000000000000000000000000000000612455565b6116af61033a611a1c565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146119935760405162461bcd60e51b815260040161090090614b74565b81602001356f6d67762f74726164655375636365737360801b036119bc57610afa838335612a67565b60608301356119da6119d336869003860186614dc9565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b6000611a2960008061145a565b905090565b6000805b600254811015610c75576000611a488483611354565b9050611a6160016001607f1b03602c83901c1684614bc4565b92505080611a6e90614b5b565b9050611a32565b600080546001600160a01b03163314611aa05760405162461bcd60e51b815260040161090090614b74565b611aab848484612c75565b611af75760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c65640000000000000000006044820152606401610900565b5060019392505050565b6000546001600160a01b03163314611b2b5760405162461bcd60e51b815260040161090090614b74565b3415611ba6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b8c57600080fd5b505af1158015611ba0573d6000803e3d6000fd5b50505050505b611baf83611d98565b611bb8876115f3565b611bc28282610f52565b611bd08a8a8a898989610e16565b50505050505050505050565b60006001836001811115611bf257611bf2614db3565b14611c0b57600082815260066020526040902054610bbd565b50600090815260056020526040902054919050565b6000546001600160a01b03163314611c4a5760405162461bcd60e51b815260040161090090614b74565b63040000008110611c965760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ecec2e6e0e4d2c6caa8dede90d2ced60531b6044820152606401610900565b6007805463ffffffff191663ffffffff83161790556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001611119565b611ce481612c8a565b6000611cf86001546001600160a01b031690565b6001600160a01b0316146116af576001546001600160a01b0316604051631403b99b60e31b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063a01dccd89060440160006040518083038186803b158015611d7d57600080fd5b505afa158015611d91573d6000803e3d6000fd5b5050505050565b604080516080808201835260075463ffffffff81168352600160201b810462ffffff166020840152600160381b81046001600160581b031693830193909352600160901b9092046001600160701b03166060808301919091529091611e0291908401908401614de5565b6001600160701b031681606001516001600160701b031614611efc576000611e306080840160608501614de5565b9050611e426080840160608501614de5565b6001600160701b0316816001600160701b0316148015611e6c57506002816001600160701b031610155b611eb85760405162461bcd60e51b815260206004820152601960248201527f4b616e64656c2f696e76616c69645072696365506f696e7473000000000000006044820152606401610900565b611eca816001600160701b0316612d75565b600780546001600160701b03909216600160901b0271ffffffffffffffffffffffffffffffffffff9092169190911790555b611f0c6060830160408401614e0e565b6001600160581b031681604001516001600160581b031614611f4957611f49611f3b6060840160408501614e0e565b6001600160581b03166108d6565b611f566020830183614e37565b63ffffffff1615801590611f835750805163ffffffff16611f7a6020840184614e37565b63ffffffff1614155b15611fa357611fa3611f986020840184614e37565b63ffffffff16611c20565b611fb36040830160208401614e5d565b62ffffff1615801590611fe65750806020015162ffffff16826020016020810190611fde9190614e5d565b62ffffff1614155b156117fa576117fa611ffe6040840160208501614e5d565b62ffffff16610c7b565b6040517faab0a16d4cef87072f3977d7f1c066be401e0e6486526674f5f6172d42703db190600090a1612039614367565b6060810183905260808101829052612051600061275d565b8152602084015161206490600083612daa565b80516040805160608082018352600080835260208084018290529284015282519081018352818401516001600160a01b039081168252845116918101919091529181015190820152815283516120bc90600183612daa565b6040517fac65490b93de6b3189ca1e1653852249eb8680e816c258cff6ccf73d8501d3d090600090a150505050565b6000600182600181111561210157612101614db3565b1461212c577f000000000000000000000000000000000000000000000000000000000000000061154f565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b60008061215f836120eb565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156121a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190614bab565b6000611a296001546001600160a01b031690565b60008060a08301356121f36020850185614844565b6001600160a01b03166370a082316122136001546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015612257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227b9190614bab565b106122865780610bbd565b6e24a9afa324a929aa2fa82aa62622a960891b9392505050565b6000806122b06020840184614844565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156122f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231a9190614bab565b905083811061232d57600091505061154f565b6123378185614e82565b9050600061234d6001546001600160a01b031690565b90506001600160a01b0381166123655750905061154f565b60006001600160a01b03821663333dbb0d6123836020880188614844565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482018190526044820187905230141560648201526084016020604051808303816000875af1158015612403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124279190614bab565b9050828110156124405761243b8184614e82565b612443565b60005b935050505061154f565b505092915050565b60006124696001546001600160a01b031690565b9050612498827f0000000000000000000000000000000000000000000000000000000000000000600019612c75565b6124e45760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401610900565b6001600160a01b038116156117fa576125008282600019612c75565b61254c5760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c0000000000006044820152606401610900565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b15801561258f57600080fd5b505af1158015611452573d6000803e3d6000fd5b6125cf7f0000000000000000000000000000000000000000000000000000000000000000333085612ed8565b61261b5760405162461bcd60e51b815260206004820152601760248201527f4b616e64656c2f626173655472616e736665724661696c0000000000000000006044820152606401610900565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0948360405161267691815260200190565b60405180910390a26126aa7f0000000000000000000000000000000000000000000000000000000000000000333084612ed8565b6126f65760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f71756f74655472616e736665724661696c00000000000000006044820152606401610900565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0948260405161275191815260200190565b60405180910390a25050565b604080516060810182526000808252602082018190529181018290529082600181111561278c5761278c614db3565b146128235760405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525061154f565b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525092915050565b8115612951576128c46121ca565b604051636ce5768960e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201859052919091169063d9caed1290606401600060405180830381600087803b15801561293857600080fd5b505af115801561294c573d6000803e3d6000fd5b505050505b6108d1838383612fa7565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b81526004016129ad929190614d6c565b602060405180830381865afa1580156129ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ee9190614bab565b9050604881901c62ffffff16612a03826130b0565b01602582901c6303ffffff1602620f424002949350505050565b6000612a288261275d565b9050835b83811015611d91576000612a4084836117fe565b90508015612a5657612a54838260016130c6565b505b50612a6081614b5b565b9050612a2c565b6000612a728361315c565b6e24a9afa324a929aa2fa82aa62622a960891b8203612c6b57612a936121ca565b6040516370a0823160e01b81523060048201526001600160a01b0391821691636f9a302f917f0000000000000000000000000000000000000000000000000000000000000000918216906370a0823190602401602060405180830381865afa158015612b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b279190614bab565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038216906370a0823190602401602060405180830381865afa158015612b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb19190614bab565b60405160e086901b6001600160e01b03191681526001600160a01b0394851660048201526024810193909352908316604483015260648201527f0000000000000000000000000000000000000000000000000000000000000000909116608482015260a40160408051808303816000875af1158015612c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c589190614cff565b5050612c64838361319f565b905061154f565b610bbd838361325f565b6000612c8284848461339b565b949350505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015612cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1e9190614bab565b116116af5760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b6064820152608401610900565b60028190556040518181527f26003f10937c9ed98d59e0d595a28bc7d35537a044aeaad037fedaab24d1799890602001611119565b8051604051631c04321560e01b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691631c04321591612df991600401614e95565b602060405180830381865afa158015612e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e3a9190614bab565b90506000612e68612e4a83613481565b8460600151612e599190614bc4565b60ee84901c6101ff1690613491565b905060005b8551811015611452576000868281518110612e8a57612e8a614b2f565b60209081029190910181015180518183015192880192909252604080820151908801529150612ec587612ebd81846117fe565b8389886134ca565b505080612ed190614b5b565b9050612e6d565b600081600003612eea57506001612c82565b826001600160a01b0316846001600160a01b031603612f79576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa158015612f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f709190614bab565b10159050612c82565b306001600160a01b03851603612f9b57612f94858484613573565b9050612c82565b611400858585856135a9565b600019820361301b576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015612ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130189190614bab565b91505b613026838284613686565b6130685760405162461bcd60e51b815260206004820152601360248201527212d85b99195b0bdd1c985b9cd9995c91985a5b606a1b6044820152606401610900565b826001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046836040516130a391815260200190565b60405180910390a2505050565b6000603f82901c6101ff165b6103e80292915050565b604051630dcf4b9760e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e7a5cb89061311990879087908790600401614ea3565b6020604051808303816000875af1158015613138573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c829190614bab565b600061317361316e6020840184614844565b613729565b90506000806131828385613773565b915091506000613192828461394a565b9050611d91838383613a63565b60008060006131ad85613b11565b9150915081600014806131c757506131c58183613b46565b155b156131e5576b1bd999995c8bd99a5b1b195960a21b9250505061154f565b6040805160e08101909152613252908061320436899003890189614dc9565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff168152600060208201526001604090910152606087013561394a565b925061244d858585613b6f565b6000806132746001546001600160a01b031690565b90506001600160a01b03811615613391576040805160028082526060820183526000926020830190803683370190505090506132b36020860186614844565b816000815181106132c6576132c6614b2f565b6001600160a01b039092166020928302919091018201526132ed9060408701908701614844565b8160018151811061330057613300614b2f565b6001600160a01b039283166020918202929092010152604051633e142a0760e21b81529083169063f850a81c9061335d9084907f000000000000000000000000000000000000000000000000000000000000000090600401614ec7565b600060405180830381600087803b15801561337757600080fd5b505af115801561338b573d6000803e3d6000fd5b50505050505b612c82848461319f565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063095ea7b360e01b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161340b9190614f48565b6000604051808303816000865af19150503d8060008114613448576040519150601f19603f3d011682016040523d82523d6000602084013e61344d565b606091505b50915091508180156134775750805115806134775750808060200190518101906134779190614d23565b9695505050505050565b6000602182901c6101ff166130bc565b60008061349d84613c1c565b830290506402000000008106156134b55760016134b8565b60005b60ff16602082901c0191505092915050565b8360000361352f576040820151156134f8576134e582613c43565b5093506134f3858486613d68565b611d91565b6040820181905261350882613c43565b506000604084018190528351919550613523919086906130c6565b506134f3858486613d68565b8160400151600003613569576040820181905261354c828561394a565b5060006040830181905282516135639186906130c6565b50611d91565b611452828561394a565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063a9059cbb60e01b906064016133cd565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839283929189169161360f9190614f48565b6000604051808303816000865af19150503d806000811461364c576040519150601f19603f3d011682016040523d82523d6000602084013e613651565b606091505b509150915081801561367b57508051158061367b57508080602001905181019061367b9190614d23565b979650505050505050565b60008160000361369857506001610bbd565b306001600160a01b0384160361371e576040516370a0823160e01b81526001600160a01b0384811660048301528391908616906370a0823190602401602060405180830381865afa1580156136f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137159190614bab565b10159050610bbd565b612c82848484613573565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161461376b57600061154f565b600192915050565b600061377d614367565b600061378d858560600135611bdc565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b0316606082015290915060006137ef87613e11565b90506000613819828585604001516001600160581b031686606001516001600160701b0316613e4d565b905061382582826117fe565b95506138308261275d565b808652604051630129e86d60e21b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916304a7a1b491613882918b90600401614d6c565b602060405180830381865afa15801561389f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138c39190614bab565b90506138e060016001607f1b03602c83901c1660c08a0135614bc4565b6040870181905260016001607f1b0310156139035760016001607f1b0360408701525b6139108160401b60eb1d90565b602080880191909152600160c0880152845163ffffffff166080880152939093015162ffffff166060860152509396929550919350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88460a0015185600001518660200151876040015188606001518960800151896040518863ffffffff1660e01b81526004016139bb96959493929190614f64565b6000604051808303818588803b1580156139d457600080fd5b505af1935050505080156139e6575060015b613a4b576139f2614f9b565b806308c379a003613a3f5750613a06614fb7565b80613a115750613a41565b8360c001518190613a355760405162461bcd60e51b81526004016109009190615041565b5061151c81615074565b505b3d6000803e3d6000fd5b506c1bd999995c8bdd5c19185d1959609a1b92915050565b6c1bd999995c8bdd5c19185d1959609a1b811480613aa05750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b15613aaa57505050565b8151606090208390604080517f4b616e64656c2f7570646174654f666665724661696c656400000000000000008152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c391015b60405180910390a3505050565b600080613b3260a084013560016001607f1b036080860135602c1c16614e82565b9150608083013560401b60eb1d9050915091565b6000806000613b5485613e9c565b909250905080613b648584615098565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b811480613b9b57506c1bd999995c8bdd5c19185d1959609a1b81145b80613bc55750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b15613bcf57505050565b6060830135613be66119d336869003860186614dc9565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c39101613b04565b600060078211613c2d575060031690565b506004600382161760029190911c600119011b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f95902aa8460a00151856000015186602001518760400151886060015189608001516040518763ffffffff1660e01b8152600401613cb39594939291906150af565b60206040518083038185885af193505050508015613cee575060408051601f3d908101601f19168201909252613ceb91810190614bab565b60015b613d4f57613cfa614f9b565b806308c379a003613a3f5750613d0e614fb7565b80613d195750613a41565b8360c001518190613d3d5760405162461bcd60e51b81526004016109009190615041565b50613d4781615074565b915050915091565b936c1bd999995c8bd8dc99585d1959609a1b9350915050565b6001836001811115613d7c57613d7c614db3565b03613da757600081815260056020908152604080832085905584835260039091529020819055613dc9565b6000818152600660209081526040808320859055848352600490915290208190555b826001811115613ddb57613ddb614db3565b60408051848152602081018490527f4414bf83296b9500de34e173e9e5b7ca010ff6de3f093002103e680a3a10512791016130a3565b60006002826001811115613e2757613e27614db3565b613e32906001614bc4565b613e3c91906150df565b600181111561154f5761154f614db3565b60006001856001811115613e6357613e63614db3565b03613e8b57613e728385614bc4565b9050818110613e8657612f94600183614e82565b612c82565b828410612c82576114008385614e82565b600080613ea883613f0e565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e198285010190811315613ef65793841c93613f00565b8060000385901b94505b81607f039350505050915091565b6000806000808412613f205783613f29565b613f2984615101565b9050620d89e8811115613f7e5760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e64730000000000000000006044820152606401610900565b60006001821615613fa1576ffff97272373d413259a46990580e21399350613fa9565b600160801b93505b6002821615613fd3576080613fce856ffff2e50f5f656932ef12357cf3c7fdcb615098565b901c93505b6004821615613ffd576080613ff8856fffe5caca7e10e4e61c3624eaa0941ccf615098565b901c93505b6008821615614027576080614022856fffcb9843d60f6159c9db58835c926643615098565b901c93505b601082161561405157608061404c856fff973b41fa98c081472e6896dfb254bf615098565b901c93505b602082161561407b576080614076856fff2ea16466c96a3843ec78b326b52860615098565b901c93505b60408216156140a55760806140a0856ffe5dee046a99a2a811c461f1969c3052615098565b901c93505b60808216156140cf5760806140ca856ffcbe86c7900a88aedcffc83b479aa3a3615098565b901c93505b6101008216156140fa5760806140f5856ff987a7253ac413176f2b074cf7815e53615098565b901c93505b610200821615614125576080614120856ff3392b0822b70005940c7a398e4b70f2615098565b901c93505b61040082161561415057608061414b856fe7159475a2c29b7443b29c7fa6e889d8615098565b901c93505b61080082161561417b576080614176856fd097f3bdfd2022b8845ad8f792aa5825615098565b901c93505b6110008216156141a65760806141a1856fa9f746462d870fdf8a65dc1f90e061e4615098565b901c93505b6120008216156141de5760806141cc856fe1b0d342ada5437121767bec575e65ed615098565b901c93506141db60018261511d565b90505b614000821615614216576080614204856fc6f84d7e5f423f66048c541550bf3e96615098565b901c935061421360028261511d565b90505b61800082161561424e57608061423c856f9aa508b5b7a84e1c677de54f3e99bc8f615098565b901c935061424b60048261511d565b90505b62010000821615614287576080614275856fbad5f1bdb70232cd33865244bdcc089c615098565b901c935061428460098261511d565b90505b620200008216156142c05760806142ae856f885b9613d7e87aa498106fb7fa5edd37615098565b901c93506142bd60128261511d565b90505b620400008216156142f95760806142e7856f9142e0723efb884889d1f447715afacd615098565b901c93506142f660258261511d565b90505b62080000821615614332576080614320856fa4d9a773d61316918f140bd96e8e6814615098565b901c935061432f604b8261511d565b90505b60008513156143535760018485600003040193508061435090615101565b90505b61435e81608061511d565b92505050915091565b604080516101408101909152600060e0820181815261010083018290526101208301919091528190815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b600080602083850312156143d457600080fd5b823567ffffffffffffffff808211156143ec57600080fd5b818501915085601f83011261440057600080fd5b81358181111561440f57600080fd5b8660208260051b850101111561442457600080fd5b60209290920196919550909350505050565b60006020828403121561444857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6060810181811067ffffffffffffffff821117156144855761448561444f565b60405250565b6040810181811067ffffffffffffffff821117156144855761448561444f565b601f8201601f1916810167ffffffffffffffff811182821017156144d1576144d161444f565b6040525050565b600067ffffffffffffffff8211156144f2576144f261444f565b5060051b60200190565b600082601f83011261450d57600080fd5b8135602061451a826144d8565b6040805161452883826144ab565b8481526060948502870184019484820193508886111561454757600080fd5b8488015b8681101561458f5781818b0312156145635760008081fd5b835161456e81614465565b8135815286820135878201528482013585820152855293850193810161454b565b509098975050505050505050565b6000604082840312156145af57600080fd5b6040516145bb8161448b565b809150823567ffffffffffffffff808211156145d657600080fd5b6145e2868387016144fc565b835260208501359150808211156145f857600080fd5b50614605858286016144fc565b6020830152505092915050565b600060808284031215610c7557600080fd5b60008060008060e0858703121561463a57600080fd5b843567ffffffffffffffff81111561465157600080fd5b61465d8782880161459d565b94505061466d8660208701614612565b939693955050505060a08201359160c0013590565b80356002811061469157600080fd5b919050565b6000602082840312156146a857600080fd5b610bbd82614682565b60006101408284031215610c7557600080fd5b600061014082840312156146d757600080fd5b610bbd83836146b1565b60008060008060008060008060006101208a8c03121561470057600080fd5b505087359960208901359950604089013598606081013598506080810135975060a0810135965060c0810135955060e08101359450610100013592509050565b600081518084526020808501945080840160005b838110156147865781518051885283810151848901526040908101519088015260609096019590820190600101614754565b509495945050505050565b6020815260008251604060208401526147ad6060840182614740565b90506020840151601f198483030160408501526114008282614740565b60008060008060008060c087890312156147e357600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000806040838503121561482057600080fd5b50508035926020909101359150565b6001600160a01b03811681146116af57600080fd5b60006020828403121561485657600080fd5b8135610bbd8161482f565b6000806040838503121561487457600080fd5b8235915060208301356148868161482f565b809150509250929050565b600080604083850312156148a457600080fd5b6148ad83614682565b946020939093013593505050565b60008060008060008060c087890312156148d457600080fd5b863595506020870135945060408701359350606087013592506080870135915060a08701356149028161482f565b809150509295509295509295565b6000806040838503121561492357600080fd5b823561492e8161482f565b915060208301356148868161482f565b60008060006060848603121561495357600080fd5b8335925060208401359150604084013561496c8161482f565b809150509250925092565b60006060828403121561498957600080fd5b60405161499581614465565b80915082356149a38161482f565b815260208301356149b38161482f565b6020820152604092830135920191909152919050565b600080608083850312156149dc57600080fd5b6149e68484614977565b946060939093013593505050565b600060408284031215610c7557600080fd5b600060208284031215614a1857600080fd5b813567ffffffffffffffff811115614a2f57600080fd5b612c82848285016149f4565b6000806101808385031215614a4f57600080fd5b614a5984846146b1565b9150614a698461014085016149f4565b90509250929050565b600080600060608486031215614a8757600080fd5b8335614a928161482f565b92506020840135614aa28161482f565b929592945050506040919091013590565b6000806000806000806000806000806101a08b8d031215614ad357600080fd5b8a35995060208b0135985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b01359350614b0e8c60e08d01614612565b92506101608b013591506101808b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201614b6d57614b6d614b45565b5060010190565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215614bbd57600080fd5b5051919050565b8082018082111561154f5761154f614b45565b600082601f830112614be857600080fd5b81516020614bf5826144d8565b60408051614c0383826144ab565b84815260609485028701840194848201935088861115614c2257600080fd5b8488015b8681101561458f5781818b031215614c3e5760008081fd5b8351614c4981614465565b81518152868201518782015284820151858201528552938501938101614c26565b600060208284031215614c7c57600080fd5b815167ffffffffffffffff80821115614c9457600080fd5b9083019060408286031215614ca857600080fd5b604051614cb48161448b565b825182811115614cc357600080fd5b614ccf87828601614bd7565b825250602083015182811115614ce457600080fd5b614cf087828601614bd7565b60208301525095945050505050565b60008060408385031215614d1257600080fd5b505080516020909101519092909150565b600060208284031215614d3557600080fd5b81518015158114610bbd57600080fd5b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b60808101614d7a8285614d45565b8260608301529392505050565b818103600083128015838313168383128216171561154d5761154d614b45565b600061154f368361459d565b634e487b7160e01b600052602160045260246000fd5b600060608284031215614ddb57600080fd5b610bbd8383614977565b600060208284031215614df757600080fd5b81356001600160701b0381168114610bbd57600080fd5b600060208284031215614e2057600080fd5b81356001600160581b0381168114610bbd57600080fd5b600060208284031215614e4957600080fd5b813563ffffffff81168114610bbd57600080fd5b600060208284031215614e6f57600080fd5b813562ffffff81168114610bbd57600080fd5b8181038181111561154f5761154f614b45565b6060810161154f8284614d45565b60a08101614eb18286614d45565b8360608301528215156080830152949350505050565b604080825283519082018190526000906020906060840190828701845b82811015614f095781516001600160a01b031684529284019290840190600101614ee4565b5050506001600160a01b039490941692019190915250919050565b60005b83811015614f3f578181015183820152602001614f27565b50506000910152565b60008251614f5a818460208701614f24565b9190910192915050565b6101008101614f738289614d45565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600060033d1115614fb45760046000803e5060005160e01c5b90565b600060443d1015614fc55790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715614ff557505050505090565b828501915081518181111561500d5750505050505090565b843d87010160208285010111156150275750505050505090565b615036602082860101876144ab565b509095945050505050565b6020815260008251806020840152615060816040850160208701614f24565b601f01601f19169190910160400192915050565b80516020808301519190811015610c755760001960209190910360031b1b16919050565b808202811582820484141761154f5761154f614b45565b60e081016150bd8288614d45565b8560608301528460808301528360a08301528260c08301529695505050505050565b6000826150fc57634e487b7160e01b600052601260045260246000fd5b500690565b6000600160ff1b820161511657615116614b45565b5060000390565b808201828112600083128015821682158216171561244d5761244d614b4556fea2646970667358221220a546314e1afca7c558aa0098ea90b224ff5bd6a17f037088fabc23d484e1e70c64736f6c63430008140033",
    "sourceMap": "766:4959:107:-:0;;;1365:629;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1473:3;1478:14;1494:6;1502:9;1473:3;1478:14;1494:6;1502:9;1478:14;1473:3;1494:6;1502:9;1473:3;1609:1:99;1494:6:107;1502:9;1473:3;1494:6;2955:10:99;;977:57:123;;;;-1:-1:-1;;;977:57:123;;1734:2:131;977:57:123;;;1716:21:131;1773:2;1753:18;;;1746:30;1812:26;1792:18;;;1785:54;1856:18;;977:57:123;;;;;;;;;1040:6;:15;;-1:-1:-1;;;;;;1040:15:123;-1:-1:-1;;;;;1040:15:123;;;;;;;;;;2981:24:99::1;::::0;::::1;::::0;::::1;2973:60;;;::::0;-1:-1:-1;;;2973:60:99;;2087:2:131;2973:60:99::1;::::0;::::1;2069:21:131::0;2126:2;2106:18;;;2099:30;2165:25;2145:18;;;2138:53;2208:18;;2973:60:99::1;1885:347:131::0;2973:60:99::1;-1:-1:-1::0;;;;;3039:9:99;::::1;;::::0;;;3054:24:::1;::::0;;;3089:8:::1;::::0;2410:51:131;;;3089:8:99::1;::::0;-1:-1:-1;2383:18:131;3089:8:99::1;;;;;;;-1:-1:-1::0;;;;;;;2052:20:106;::::1;::::0;2048:59:::1;;2082:18;2092:7:::0;2082:9:::1;:18::i;:::-;2112;-1:-1:-1::0;;;;;2133:23:106;::::1;::::0;:51:::1;;2175:9;2133:51;;;2167:4;2133:51;-1:-1:-1::0;;;;;2190:23:106;::::1;;::::0;;;2224:24:::1;::::0;2112:72;;-1:-1:-1;2190:23:106;2224:24:::1;::::0;;;::::1;-1:-1:-1::0;;2327:27:117;;-1:-1:-1;;;;;2313:42:117;;;;;2376:26;;;;2361:42;;;-1:-1:-1;;;2424:26:117;;;;2409:41;;-1:-1:-1;;1552:2:47;1535:20;;2461:35:117;;-1:-1:-1;2461:35:117;;2618:25:131;;;2606:2;2591:18;2461:35:117;;;;;;;-1:-1:-1;;1873:27:107;;1861:40:::1;::::0;-1:-1:-1;1873:27:107;-1:-1:-1;;1861:11:107::1;:40:::0;-1:-1:-1;;;;1861:40:107:i:1;:::-;1860:41;:85;;;;-1:-1:-1::0;1918:26:107::1;::::0;::::1;::::0;1906:39:::1;::::0;:11:::1;:39::i;:::-;1905:40;1860:85;1845:144;;;::::0;-1:-1:-1;;;1845:144:107;;2856:2:131;1845:144:107::1;::::0;::::1;2838:21:131::0;2895:2;2875:18;;;2868:30;2934;2914:18;;;2907:58;2982:18;;1845:144:107::1;2654:352:131::0;1845:144:107::1;1365:629:::0;;;;766:4959;;7512:127:99;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;3213:2:131;1171:57:123;;;3195:21:131;3252:2;3232:18;;;3225:30;3291:26;3271:18;;;3264:54;3335:18;;1171:57:123;3011:348:131;1171:57:123;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;2410:51:131;;;7616:18:99::1;::::0;2398:2:131;2383:18;7616::99::1;;;;;;;7512:127:::0;:::o;2158:195:107:-;2217:4;2244:5;-1:-1:-1;;;;;2233:42:107;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2233:44:107;;;;;;;;-1:-1:-1;;2233:44:107;;;;;;;;;;;;:::i;:::-;;;2229:102;;;-1:-1:-1;2311:4:107;;2158:195;-1:-1:-1;;2158:195:107:o;2229:102::-;-1:-1:-1;2343:5:107;;2158:195;-1:-1:-1;2158:195:107:o;14:142:131:-;-1:-1:-1;;;;;100:31:131;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:149::-;240:13;;262:42;240:13;262:42;:::i;:::-;161:149;;;:::o;315:1212::-;455:6;463;471;479;523:9;514:7;510:23;553:3;549:2;545:12;542:32;;;570:1;567;560:12;542:32;602:9;596:16;621:42;657:5;621:42;:::i;:::-;682:5;-1:-1:-1;721:4:131;-1:-1:-1;;703:16:131;;699:27;696:47;;;739:1;736;729:12;696:47;-1:-1:-1;772:2:131;766:9;814:4;802:17;;-1:-1:-1;;;;;834:34:131;;870:22;;;831:62;828:185;;;935:10;930:3;926:20;923:1;916:31;970:4;967:1;960:15;998:4;995:1;988:15;828:185;1029:2;1022:22;1089:2;1074:18;;1068:25;1102:44;1068:25;1102:44;:::i;:::-;1155:23;;1223:2;1208:18;;1202:25;1236:44;1202:25;1236:44;:::i;:::-;1308:2;1296:15;;1289:32;1375:4;1360:20;;1354:27;1349:2;1337:15;;1330:52;1447:3;1432:19;;1426:26;1300:6;;-1:-1:-1;1426:26:131;-1:-1:-1;1471:50:131;1516:3;1501:19;;1471:50;:::i;:::-;1461:60;;315:1212;;;;;;;:::o;3596:262::-;3666:6;3719:2;3707:9;3698:7;3694:23;3690:32;3687:52;;;3735:1;3732;3725:12;3687:52;3767:9;3761:16;3786:42;3822:5;3786:42;:::i;:::-;3847:5;3596:262;-1:-1:-1;;;3596:262:131:o;:::-;766:4959:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "KandelLib": [
          {
            "start": 5157,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106102555760003560e01c80639eb7d4fe11610139578063cfcd2679116100b6578063ea0f394d1161007a578063ea0f394d146107a3578063ec342ad0146107c3578063f851a440146107f7578063f887ea4014610815578063fbc7d10b14610833578063fcaa7e2e1461086757600080fd5b8063cfcd26791461069c578063cff0ab96146106b1578063d2e498fe14610740578063e1f21c6714610760578063e4f248f41461079057600080fd5b8063ace67902116100fd578063ace67902146105fc578063bfc353f91461061c578063c0d786551461063c578063c4d66de81461065c578063c7e1bb441461067c57600080fd5b80639eb7d4fe146105485780639ee8a91c1461057c578063a224b5e91461059c578063a24f2b2d146105bc578063a2e241af146105dc57600080fd5b80635293840d116101d25780637692c328116101965780637692c32814610460578063790532a114610480578063820db1f7146104a057806398ed5340146104c057806399fa5e2d146104e05780639c5798391461051457600080fd5b80635293840d146103b35780635570db1d146103d357806361638ed514610400578063704b6c02146104205780637144df241461044057600080fd5b80632380fafd116102195780632380fafd146102ff57806334bd89311461031f5780633fce15c91461033f57806346ca626b1461036c5780634f605c5b146103a057600080fd5b806303eb17e2146102615780631450acd214610283578063148b7cea146102a357806314ee02bd146102b657806318acf82f146102df57600080fd5b3661025c57005b600080fd5b34801561026d57600080fd5b5061028161027c3660046143c1565b610887565b005b34801561028f57600080fd5b5061028161029e366004614436565b6108d6565b6102816102b1366004614624565b610a21565b3480156102c257600080fd5b506102cc60085481565b6040519081526020015b60405180910390f35b3480156102eb57600080fd5b506102cc6102fa366004614696565b610b00565b34801561030b57600080fd5b506102cc61031a3660046146c4565b610bc4565b34801561032b57600080fd5b5061028161033a366004614436565b610c7b565b34801561034b57600080fd5b5061035f61035a3660046146e1565b610d44565b6040516102d69190614791565b34801561037857600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b6102816103ae3660046147ca565b610e16565b3480156103bf57600080fd5b506102816103ce3660046143c1565b610ede565b3480156103df57600080fd5b506103e8600081565b6040516001600160a01b0390911681526020016102d6565b34801561040c57600080fd5b5061028161041b36600461480d565b610f52565b34801561042c57600080fd5b5061028161043b366004614844565b61104f565b34801561044c57600080fd5b5061028161045b366004614861565b611124565b34801561046c57600080fd5b506102cc61047b366004614891565b611354565b34801561048c57600080fd5b5061028161049b3660046148bb565b611409565b3480156104ac57600080fd5b506102cc6104bb366004614910565b61145a565b3480156104cc57600080fd5b506102cc6104db366004614696565b611555565b3480156104ec57600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561052057600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561055457600080fd5b506102cc7f000000000000000000000000000000000000000000000000000000000000000081565b34801561058857600080fd5b5061028161059736600461493e565b611573565b3480156105a857600080fd5b506102816105b7366004614436565b6115f3565b3480156105c857600080fd5b506102cc6105d73660046149c9565b6116b2565b3480156105e857600080fd5b506102816105f736600461480d565b6116be565b34801561060857600080fd5b50610281610617366004614a06565b611756565b34801561062857600080fd5b506102cc610637366004614891565b6117fe565b34801561064857600080fd5b50610281610657366004614844565b611842565b34801561066857600080fd5b50610281610677366004614844565b6118ba565b34801561068857600080fd5b50610281610697366004614a3b565b61194a565b3480156106a857600080fd5b506102cc611a1c565b3480156106bd57600080fd5b506007546106fe9063ffffffff811690600160201b810462ffffff1690600160381b81046001600160581b031690600160901b90046001600160701b031684565b6040805163ffffffff909516855262ffffff90931660208501526001600160581b03909116918301919091526001600160701b031660608201526080016102d6565b34801561074c57600080fd5b506102cc61075b366004614696565b611a2e565b34801561076c57600080fd5b5061078061077b366004614a72565b611a75565b60405190151581526020016102d6565b61028161079e366004614ab3565b611b01565b3480156107af57600080fd5b506102cc6107be366004614891565b611bdc565b3480156107cf57600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561080357600080fd5b506000546001600160a01b03166103e8565b34801561082157600080fd5b506001546001600160a01b03166103e8565b34801561083f57600080fd5b506103e87f000000000000000000000000000000000000000000000000000000000000000081565b34801561087357600080fd5b50610281610882366004614436565b611c20565b60005b818110156108d1576108c18383838181106108a7576108a7614b2f565b90506020020160208101906108bc9190614844565b611cdb565b6108ca81614b5b565b905061088a565b505050565b6000546001600160a01b031633146109095760405162461bcd60e51b815260040161090090614b74565b60405180910390fd5b808061094f5760405162461bcd60e51b81526020600482015260156024820152744b616e64656c2f7374657053697a65546f6f4c6f7760581b6044820152606401610900565b81816001600160581b03161480156109785750600754600160901b90046001600160701b031682105b6109bd5760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ee6e8cae0a6d2f4caa8dede90d2ced60531b6044820152606401610900565b6007805471ffffffffffffffffffffff000000000000001916600160381b6001600160581b038416021790556040518281527f0408193baae9f2730f7be76d9be93983ed2dd45af2305c085920b8f00c25bbcd906020015b60405180910390a15050565b6000546001600160a01b03163314610a4b5760405162461bcd60e51b815260040161090090614b74565b3415610ac6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610aac57600080fd5b505af1158015610ac0573d6000803e3d6000fd5b50505050505b610acf83611d98565b610ad98282610f52565b600754610afa90859062ffffff600160201b8204169063ffffffff16612008565b50505050565b600080610b0c836120eb565b9050610b1783612153565b610b1f6121ca565b60405163fe380db560e01b81526001600160a01b0384811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063fe380db590604401602060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190614bab565b610bbd9190614bc4565b9392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610c0f5760405162461bcd60e51b815260040161090090614b74565b610c18836121de565b9150610c288360a00135846122a0565b15610c755760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c656400000000000000006044820152606401610900565b50919050565b6000546001600160a01b03163314610ca55760405162461bcd60e51b815260040161090090614b74565b8062ffffff81168114610cf15760405162461bcd60e51b8152602060048201526014602482015273096c2dcc8cad85ecec2e6e4cae2a8dede90d2ced60631b6044820152606401610900565b6007805466ffffff000000001916600160201b62ffffff8416908102919091179091556040519081527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d90602001610a15565b60408051808201825260608082526020820152905163fbbd4a6560e01b8152600481018b9052602481018a905260448101899052606481018890526084810187905260a4810186905260c4810185905260e48101849052610104810183905273__$c9b0e4557995336ec140d025d87b634e02$__9063fbbd4a659061012401600060405180830381865af4158015610de0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e089190810190614c6a565b9a9950505050505050505050565b6000546001600160a01b03163314610e405760405162461bcd60e51b815260040161090090614b74565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b0316928201839052600160901b90046001600160701b0316606082018190526008549192600092610eb4928b928b928b9290918b918b918b9190610d44565b9050610ed481836020015162ffffff16846000015163ffffffff16612008565b5050505050505050565b6000546001600160a01b03163314610f085760405162461bcd60e51b815260040161090090614b74565b60005b818110156108d157610f42838383818110610f2857610f28614b2f565b9050602002016020810190610f3d9190614844565b612455565b610f4b81614b5b565b9050610f0b565b610f5c82826125a3565b610f646121ca565b604051636f9a302f60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590527f000000000000000000000000000000000000000000000000000000000000000081166044830152606482018490527f0000000000000000000000000000000000000000000000000000000000000000811660848301529190911690636f9a302f9060a40160408051808303816000875af115801561102b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afa9190614cff565b6000546001600160a01b031633146110795760405162461bcd60e51b815260040161090090614b74565b6001600160a01b0381166110cf5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610900565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b0316331461114e5760405162461bcd60e51b815260040161090090614b74565b60001982036111e2576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111df9190614bab565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af1158015611249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126d9190614d23565b6112b15760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b6044820152606401610900565b6000816001600160a01b03168360405160006040518083038185875af1925050503d80600081146112fe576040519150601f19603f3d011682016040523d82523d6000602084013e611303565b606091505b50509050806108d15760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f7765695472616e736665724661696c00000000000000006044820152606401610900565b60008061136184846117fe565b9050600061136e8561275d565b604051630129e86d60e21b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304a7a1b4906113bf9084908690600401614d6c565b602060405180830381865afa1580156113dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114009190614bab565b95945050505050565b6000546001600160a01b031633146114335760405162461bcd60e51b815260040161090090614b74565b61143d86866116be565b611448848483611573565b6114528282611124565b505050505050565b60008061146f6001546001600160a01b031690565b90506001600160a01b038116156115245760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa1580156114ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f29190614bab565b61151c907f0000000000000000000000000000000000000000000000000000000000000000614bc4565b91505061154f565b7f000000000000000000000000000000000000000000000000000000000000000091505061154f565b505b92915050565b600061156082611a2e565b61156983610b00565b61154f9190614d87565b6000546001600160a01b0316331461159d5760405162461bcd60e51b815260040161090090614b74565b6115c87f000000000000000000000000000000000000000000000000000000000000000084836128b6565b6108d17f000000000000000000000000000000000000000000000000000000000000000083836128b6565b6000546001600160a01b0316331461161d5760405162461bcd60e51b815260040161090090614b74565b808162ffffff16146116715760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f7469636b4f6666736574546f6f4869676800000000000000006044820152606401610900565b80600854146116af5760088190556040518181527f286da08673f0eb4b3843f2824fb8e3e412534a62f6094fdc8b4008cfeba4ba6690602001611119565b50565b6000610bbd838361295c565b6000546001600160a01b031633146116e85760405162461bcd60e51b815260040161090090614b74565b6040517f97714c1c48a0b9a1a347710cb6a62f056f5a811d4006655e3b41959e1e72a40990600090a161171d82826001612a1d565b61172982826000612a1d565b6040517fa9bc12cd7db30bdfe60fece3ec52cfa7c8d60e396e2ea5df439a7d458f05f9b690600090a15050565b6000546001600160a01b031633146117805760405162461bcd60e51b815260040161090090614b74565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b031660608201526117fa6117e083614da7565b826020015162ffffff16836000015163ffffffff16612008565b5050565b6000600183600181111561181457611814614db3565b1461182d57600082815260046020526040902054610bbd565b50600090815260036020526040902054919050565b6000546001600160a01b0316331461186c5760405162461bcd60e51b815260040161090090614b74565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e545590602001611119565b6000546001600160a01b031633146118e45760405162461bcd60e51b815260040161090090614b74565b6118ed81611842565b6119167f0000000000000000000000000000000000000000000000000000000000000000612455565b61193f7f0000000000000000000000000000000000000000000000000000000000000000612455565b6116af61033a611a1c565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146119935760405162461bcd60e51b815260040161090090614b74565b81602001356f6d67762f74726164655375636365737360801b036119bc57610afa838335612a67565b60608301356119da6119d336869003860186614dc9565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b6000611a2960008061145a565b905090565b6000805b600254811015610c75576000611a488483611354565b9050611a6160016001607f1b03602c83901c1684614bc4565b92505080611a6e90614b5b565b9050611a32565b600080546001600160a01b03163314611aa05760405162461bcd60e51b815260040161090090614b74565b611aab848484612c75565b611af75760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c65640000000000000000006044820152606401610900565b5060019392505050565b6000546001600160a01b03163314611b2b5760405162461bcd60e51b815260040161090090614b74565b3415611ba6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b8c57600080fd5b505af1158015611ba0573d6000803e3d6000fd5b50505050505b611baf83611d98565b611bb8876115f3565b611bc28282610f52565b611bd08a8a8a898989610e16565b50505050505050505050565b60006001836001811115611bf257611bf2614db3565b14611c0b57600082815260066020526040902054610bbd565b50600090815260056020526040902054919050565b6000546001600160a01b03163314611c4a5760405162461bcd60e51b815260040161090090614b74565b63040000008110611c965760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ecec2e6e0e4d2c6caa8dede90d2ced60531b6044820152606401610900565b6007805463ffffffff191663ffffffff83161790556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd90602001611119565b611ce481612c8a565b6000611cf86001546001600160a01b031690565b6001600160a01b0316146116af576001546001600160a01b0316604051631403b99b60e31b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063a01dccd89060440160006040518083038186803b158015611d7d57600080fd5b505afa158015611d91573d6000803e3d6000fd5b5050505050565b604080516080808201835260075463ffffffff81168352600160201b810462ffffff166020840152600160381b81046001600160581b031693830193909352600160901b9092046001600160701b03166060808301919091529091611e0291908401908401614de5565b6001600160701b031681606001516001600160701b031614611efc576000611e306080840160608501614de5565b9050611e426080840160608501614de5565b6001600160701b0316816001600160701b0316148015611e6c57506002816001600160701b031610155b611eb85760405162461bcd60e51b815260206004820152601960248201527f4b616e64656c2f696e76616c69645072696365506f696e7473000000000000006044820152606401610900565b611eca816001600160701b0316612d75565b600780546001600160701b03909216600160901b0271ffffffffffffffffffffffffffffffffffff9092169190911790555b611f0c6060830160408401614e0e565b6001600160581b031681604001516001600160581b031614611f4957611f49611f3b6060840160408501614e0e565b6001600160581b03166108d6565b611f566020830183614e37565b63ffffffff1615801590611f835750805163ffffffff16611f7a6020840184614e37565b63ffffffff1614155b15611fa357611fa3611f986020840184614e37565b63ffffffff16611c20565b611fb36040830160208401614e5d565b62ffffff1615801590611fe65750806020015162ffffff16826020016020810190611fde9190614e5d565b62ffffff1614155b156117fa576117fa611ffe6040840160208501614e5d565b62ffffff16610c7b565b6040517faab0a16d4cef87072f3977d7f1c066be401e0e6486526674f5f6172d42703db190600090a1612039614367565b6060810183905260808101829052612051600061275d565b8152602084015161206490600083612daa565b80516040805160608082018352600080835260208084018290529284015282519081018352818401516001600160a01b039081168252845116918101919091529181015190820152815283516120bc90600183612daa565b6040517fac65490b93de6b3189ca1e1653852249eb8680e816c258cff6ccf73d8501d3d090600090a150505050565b6000600182600181111561210157612101614db3565b1461212c577f000000000000000000000000000000000000000000000000000000000000000061154f565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b60008061215f836120eb565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa1580156121a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbd9190614bab565b6000611a296001546001600160a01b031690565b60008060a08301356121f36020850185614844565b6001600160a01b03166370a082316122136001546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015612257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061227b9190614bab565b106122865780610bbd565b6e24a9afa324a929aa2fa82aa62622a960891b9392505050565b6000806122b06020840184614844565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156122f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061231a9190614bab565b905083811061232d57600091505061154f565b6123378185614e82565b9050600061234d6001546001600160a01b031690565b90506001600160a01b0381166123655750905061154f565b60006001600160a01b03821663333dbb0d6123836020880188614844565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482018190526044820187905230141560648201526084016020604051808303816000875af1158015612403573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124279190614bab565b9050828110156124405761243b8184614e82565b612443565b60005b935050505061154f565b505092915050565b60006124696001546001600160a01b031690565b9050612498827f0000000000000000000000000000000000000000000000000000000000000000600019612c75565b6124e45760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c0000006044820152606401610900565b6001600160a01b038116156117fa576125008282600019612c75565b61254c5760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c0000000000006044820152606401610900565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b15801561258f57600080fd5b505af1158015611452573d6000803e3d6000fd5b6125cf7f0000000000000000000000000000000000000000000000000000000000000000333085612ed8565b61261b5760405162461bcd60e51b815260206004820152601760248201527f4b616e64656c2f626173655472616e736665724661696c0000000000000000006044820152606401610900565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0948360405161267691815260200190565b60405180910390a26126aa7f0000000000000000000000000000000000000000000000000000000000000000333084612ed8565b6126f65760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f71756f74655472616e736665724661696c00000000000000006044820152606401610900565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0948260405161275191815260200190565b60405180910390a25050565b604080516060810182526000808252602082018190529181018290529082600181111561278c5761278c614db3565b146128235760405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525061154f565b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525092915050565b8115612951576128c46121ca565b604051636ce5768960e11b81526001600160a01b0385811660048301527f00000000000000000000000000000000000000000000000000000000000000008116602483015260448201859052919091169063d9caed1290606401600060405180830381600087803b15801561293857600080fd5b505af115801561294c573d6000803e3d6000fd5b505050505b6108d1838383612fa7565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b81526004016129ad929190614d6c565b602060405180830381865afa1580156129ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ee9190614bab565b9050604881901c62ffffff16612a03826130b0565b01602582901c6303ffffff1602620f424002949350505050565b6000612a288261275d565b9050835b83811015611d91576000612a4084836117fe565b90508015612a5657612a54838260016130c6565b505b50612a6081614b5b565b9050612a2c565b6000612a728361315c565b6e24a9afa324a929aa2fa82aa62622a960891b8203612c6b57612a936121ca565b6040516370a0823160e01b81523060048201526001600160a01b0391821691636f9a302f917f0000000000000000000000000000000000000000000000000000000000000000918216906370a0823190602401602060405180830381865afa158015612b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b279190614bab565b6040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038216906370a0823190602401602060405180830381865afa158015612b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bb19190614bab565b60405160e086901b6001600160e01b03191681526001600160a01b0394851660048201526024810193909352908316604483015260648201527f0000000000000000000000000000000000000000000000000000000000000000909116608482015260a40160408051808303816000875af1158015612c34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c589190614cff565b5050612c64838361319f565b905061154f565b610bbd838361325f565b6000612c8284848461339b565b949350505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa158015612cfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1e9190614bab565b116116af5760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b6064820152608401610900565b60028190556040518181527f26003f10937c9ed98d59e0d595a28bc7d35537a044aeaad037fedaab24d1799890602001611119565b8051604051631c04321560e01b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691631c04321591612df991600401614e95565b602060405180830381865afa158015612e16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e3a9190614bab565b90506000612e68612e4a83613481565b8460600151612e599190614bc4565b60ee84901c6101ff1690613491565b905060005b8551811015611452576000868281518110612e8a57612e8a614b2f565b60209081029190910181015180518183015192880192909252604080820151908801529150612ec587612ebd81846117fe565b8389886134ca565b505080612ed190614b5b565b9050612e6d565b600081600003612eea57506001612c82565b826001600160a01b0316846001600160a01b031603612f79576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa158015612f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f709190614bab565b10159050612c82565b306001600160a01b03851603612f9b57612f94858484613573565b9050612c82565b611400858585856135a9565b600019820361301b576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015612ff4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130189190614bab565b91505b613026838284613686565b6130685760405162461bcd60e51b815260206004820152601360248201527212d85b99195b0bdd1c985b9cd9995c91985a5b606a1b6044820152606401610900565b826001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046836040516130a391815260200190565b60405180910390a2505050565b6000603f82901c6101ff165b6103e80292915050565b604051630dcf4b9760e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e7a5cb89061311990879087908790600401614ea3565b6020604051808303816000875af1158015613138573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c829190614bab565b600061317361316e6020840184614844565b613729565b90506000806131828385613773565b915091506000613192828461394a565b9050611d91838383613a63565b60008060006131ad85613b11565b9150915081600014806131c757506131c58183613b46565b155b156131e5576b1bd999995c8bd99a5b1b195960a21b9250505061154f565b6040805160e08101909152613252908061320436899003890189614dc9565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff168152600060208201526001604090910152606087013561394a565b925061244d858585613b6f565b6000806132746001546001600160a01b031690565b90506001600160a01b03811615613391576040805160028082526060820183526000926020830190803683370190505090506132b36020860186614844565b816000815181106132c6576132c6614b2f565b6001600160a01b039092166020928302919091018201526132ed9060408701908701614844565b8160018151811061330057613300614b2f565b6001600160a01b039283166020918202929092010152604051633e142a0760e21b81529083169063f850a81c9061335d9084907f000000000000000000000000000000000000000000000000000000000000000090600401614ec7565b600060405180830381600087803b15801561337757600080fd5b505af115801561338b573d6000803e3d6000fd5b50505050505b612c82848461319f565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063095ea7b360e01b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161340b9190614f48565b6000604051808303816000865af19150503d8060008114613448576040519150601f19603f3d011682016040523d82523d6000602084013e61344d565b606091505b50915091508180156134775750805115806134775750808060200190518101906134779190614d23565b9695505050505050565b6000602182901c6101ff166130bc565b60008061349d84613c1c565b830290506402000000008106156134b55760016134b8565b60005b60ff16602082901c0191505092915050565b8360000361352f576040820151156134f8576134e582613c43565b5093506134f3858486613d68565b611d91565b6040820181905261350882613c43565b506000604084018190528351919550613523919086906130c6565b506134f3858486613d68565b8160400151600003613569576040820181905261354c828561394a565b5060006040830181905282516135639186906130c6565b50611d91565b611452828561394a565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063a9059cbb60e01b906064016133cd565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839283929189169161360f9190614f48565b6000604051808303816000865af19150503d806000811461364c576040519150601f19603f3d011682016040523d82523d6000602084013e613651565b606091505b509150915081801561367b57508051158061367b57508080602001905181019061367b9190614d23565b979650505050505050565b60008160000361369857506001610bbd565b306001600160a01b0384160361371e576040516370a0823160e01b81526001600160a01b0384811660048301528391908616906370a0823190602401602060405180830381865afa1580156136f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137159190614bab565b10159050610bbd565b612c82848484613573565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161461376b57600061154f565b600192915050565b600061377d614367565b600061378d858560600135611bdc565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b0316606082015290915060006137ef87613e11565b90506000613819828585604001516001600160581b031686606001516001600160701b0316613e4d565b905061382582826117fe565b95506138308261275d565b808652604051630129e86d60e21b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916304a7a1b491613882918b90600401614d6c565b602060405180830381865afa15801561389f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138c39190614bab565b90506138e060016001607f1b03602c83901c1660c08a0135614bc4565b6040870181905260016001607f1b0310156139035760016001607f1b0360408701525b6139108160401b60eb1d90565b602080880191909152600160c0880152845163ffffffff166080880152939093015162ffffff166060860152509396929550919350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88460a0015185600001518660200151876040015188606001518960800151896040518863ffffffff1660e01b81526004016139bb96959493929190614f64565b6000604051808303818588803b1580156139d457600080fd5b505af1935050505080156139e6575060015b613a4b576139f2614f9b565b806308c379a003613a3f5750613a06614fb7565b80613a115750613a41565b8360c001518190613a355760405162461bcd60e51b81526004016109009190615041565b5061151c81615074565b505b3d6000803e3d6000fd5b506c1bd999995c8bdd5c19185d1959609a1b92915050565b6c1bd999995c8bdd5c19185d1959609a1b811480613aa05750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b15613aaa57505050565b8151606090208390604080517f4b616e64656c2f7570646174654f666665724661696c656400000000000000008152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c391015b60405180910390a3505050565b600080613b3260a084013560016001607f1b036080860135602c1c16614e82565b9150608083013560401b60eb1d9050915091565b6000806000613b5485613e9c565b909250905080613b648584615098565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b811480613b9b57506c1bd999995c8bdd5c19185d1959609a1b81145b80613bc55750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b15613bcf57505050565b6060830135613be66119d336869003860186614dc9565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c39101613b04565b600060078211613c2d575060031690565b506004600382161760029190911c600119011b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f95902aa8460a00151856000015186602001518760400151886060015189608001516040518763ffffffff1660e01b8152600401613cb39594939291906150af565b60206040518083038185885af193505050508015613cee575060408051601f3d908101601f19168201909252613ceb91810190614bab565b60015b613d4f57613cfa614f9b565b806308c379a003613a3f5750613d0e614fb7565b80613d195750613a41565b8360c001518190613d3d5760405162461bcd60e51b81526004016109009190615041565b50613d4781615074565b915050915091565b936c1bd999995c8bd8dc99585d1959609a1b9350915050565b6001836001811115613d7c57613d7c614db3565b03613da757600081815260056020908152604080832085905584835260039091529020819055613dc9565b6000818152600660209081526040808320859055848352600490915290208190555b826001811115613ddb57613ddb614db3565b60408051848152602081018490527f4414bf83296b9500de34e173e9e5b7ca010ff6de3f093002103e680a3a10512791016130a3565b60006002826001811115613e2757613e27614db3565b613e32906001614bc4565b613e3c91906150df565b600181111561154f5761154f614db3565b60006001856001811115613e6357613e63614db3565b03613e8b57613e728385614bc4565b9050818110613e8657612f94600183614e82565b612c82565b828410612c82576114008385614e82565b600080613ea883613f0e565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e198285010190811315613ef65793841c93613f00565b8060000385901b94505b81607f039350505050915091565b6000806000808412613f205783613f29565b613f2984615101565b9050620d89e8811115613f7e5760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e64730000000000000000006044820152606401610900565b60006001821615613fa1576ffff97272373d413259a46990580e21399350613fa9565b600160801b93505b6002821615613fd3576080613fce856ffff2e50f5f656932ef12357cf3c7fdcb615098565b901c93505b6004821615613ffd576080613ff8856fffe5caca7e10e4e61c3624eaa0941ccf615098565b901c93505b6008821615614027576080614022856fffcb9843d60f6159c9db58835c926643615098565b901c93505b601082161561405157608061404c856fff973b41fa98c081472e6896dfb254bf615098565b901c93505b602082161561407b576080614076856fff2ea16466c96a3843ec78b326b52860615098565b901c93505b60408216156140a55760806140a0856ffe5dee046a99a2a811c461f1969c3052615098565b901c93505b60808216156140cf5760806140ca856ffcbe86c7900a88aedcffc83b479aa3a3615098565b901c93505b6101008216156140fa5760806140f5856ff987a7253ac413176f2b074cf7815e53615098565b901c93505b610200821615614125576080614120856ff3392b0822b70005940c7a398e4b70f2615098565b901c93505b61040082161561415057608061414b856fe7159475a2c29b7443b29c7fa6e889d8615098565b901c93505b61080082161561417b576080614176856fd097f3bdfd2022b8845ad8f792aa5825615098565b901c93505b6110008216156141a65760806141a1856fa9f746462d870fdf8a65dc1f90e061e4615098565b901c93505b6120008216156141de5760806141cc856fe1b0d342ada5437121767bec575e65ed615098565b901c93506141db60018261511d565b90505b614000821615614216576080614204856fc6f84d7e5f423f66048c541550bf3e96615098565b901c935061421360028261511d565b90505b61800082161561424e57608061423c856f9aa508b5b7a84e1c677de54f3e99bc8f615098565b901c935061424b60048261511d565b90505b62010000821615614287576080614275856fbad5f1bdb70232cd33865244bdcc089c615098565b901c935061428460098261511d565b90505b620200008216156142c05760806142ae856f885b9613d7e87aa498106fb7fa5edd37615098565b901c93506142bd60128261511d565b90505b620400008216156142f95760806142e7856f9142e0723efb884889d1f447715afacd615098565b901c93506142f660258261511d565b90505b62080000821615614332576080614320856fa4d9a773d61316918f140bd96e8e6814615098565b901c935061432f604b8261511d565b90505b60008513156143535760018485600003040193508061435090615101565b90505b61435e81608061511d565b92505050915091565b604080516101408101909152600060e0820181815261010083018290526101208301919091528190815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b600080602083850312156143d457600080fd5b823567ffffffffffffffff808211156143ec57600080fd5b818501915085601f83011261440057600080fd5b81358181111561440f57600080fd5b8660208260051b850101111561442457600080fd5b60209290920196919550909350505050565b60006020828403121561444857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6060810181811067ffffffffffffffff821117156144855761448561444f565b60405250565b6040810181811067ffffffffffffffff821117156144855761448561444f565b601f8201601f1916810167ffffffffffffffff811182821017156144d1576144d161444f565b6040525050565b600067ffffffffffffffff8211156144f2576144f261444f565b5060051b60200190565b600082601f83011261450d57600080fd5b8135602061451a826144d8565b6040805161452883826144ab565b8481526060948502870184019484820193508886111561454757600080fd5b8488015b8681101561458f5781818b0312156145635760008081fd5b835161456e81614465565b8135815286820135878201528482013585820152855293850193810161454b565b509098975050505050505050565b6000604082840312156145af57600080fd5b6040516145bb8161448b565b809150823567ffffffffffffffff808211156145d657600080fd5b6145e2868387016144fc565b835260208501359150808211156145f857600080fd5b50614605858286016144fc565b6020830152505092915050565b600060808284031215610c7557600080fd5b60008060008060e0858703121561463a57600080fd5b843567ffffffffffffffff81111561465157600080fd5b61465d8782880161459d565b94505061466d8660208701614612565b939693955050505060a08201359160c0013590565b80356002811061469157600080fd5b919050565b6000602082840312156146a857600080fd5b610bbd82614682565b60006101408284031215610c7557600080fd5b600061014082840312156146d757600080fd5b610bbd83836146b1565b60008060008060008060008060006101208a8c03121561470057600080fd5b505087359960208901359950604089013598606081013598506080810135975060a0810135965060c0810135955060e08101359450610100013592509050565b600081518084526020808501945080840160005b838110156147865781518051885283810151848901526040908101519088015260609096019590820190600101614754565b509495945050505050565b6020815260008251604060208401526147ad6060840182614740565b90506020840151601f198483030160408501526114008282614740565b60008060008060008060c087890312156147e357600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000806040838503121561482057600080fd5b50508035926020909101359150565b6001600160a01b03811681146116af57600080fd5b60006020828403121561485657600080fd5b8135610bbd8161482f565b6000806040838503121561487457600080fd5b8235915060208301356148868161482f565b809150509250929050565b600080604083850312156148a457600080fd5b6148ad83614682565b946020939093013593505050565b60008060008060008060c087890312156148d457600080fd5b863595506020870135945060408701359350606087013592506080870135915060a08701356149028161482f565b809150509295509295509295565b6000806040838503121561492357600080fd5b823561492e8161482f565b915060208301356148868161482f565b60008060006060848603121561495357600080fd5b8335925060208401359150604084013561496c8161482f565b809150509250925092565b60006060828403121561498957600080fd5b60405161499581614465565b80915082356149a38161482f565b815260208301356149b38161482f565b6020820152604092830135920191909152919050565b600080608083850312156149dc57600080fd5b6149e68484614977565b946060939093013593505050565b600060408284031215610c7557600080fd5b600060208284031215614a1857600080fd5b813567ffffffffffffffff811115614a2f57600080fd5b612c82848285016149f4565b6000806101808385031215614a4f57600080fd5b614a5984846146b1565b9150614a698461014085016149f4565b90509250929050565b600080600060608486031215614a8757600080fd5b8335614a928161482f565b92506020840135614aa28161482f565b929592945050506040919091013590565b6000806000806000806000806000806101a08b8d031215614ad357600080fd5b8a35995060208b0135985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b01359350614b0e8c60e08d01614612565b92506101608b013591506101808b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201614b6d57614b6d614b45565b5060010190565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215614bbd57600080fd5b5051919050565b8082018082111561154f5761154f614b45565b600082601f830112614be857600080fd5b81516020614bf5826144d8565b60408051614c0383826144ab565b84815260609485028701840194848201935088861115614c2257600080fd5b8488015b8681101561458f5781818b031215614c3e5760008081fd5b8351614c4981614465565b81518152868201518782015284820151858201528552938501938101614c26565b600060208284031215614c7c57600080fd5b815167ffffffffffffffff80821115614c9457600080fd5b9083019060408286031215614ca857600080fd5b604051614cb48161448b565b825182811115614cc357600080fd5b614ccf87828601614bd7565b825250602083015182811115614ce457600080fd5b614cf087828601614bd7565b60208301525095945050505050565b60008060408385031215614d1257600080fd5b505080516020909101519092909150565b600060208284031215614d3557600080fd5b81518015158114610bbd57600080fd5b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b60808101614d7a8285614d45565b8260608301529392505050565b818103600083128015838313168383128216171561154d5761154d614b45565b600061154f368361459d565b634e487b7160e01b600052602160045260246000fd5b600060608284031215614ddb57600080fd5b610bbd8383614977565b600060208284031215614df757600080fd5b81356001600160701b0381168114610bbd57600080fd5b600060208284031215614e2057600080fd5b81356001600160581b0381168114610bbd57600080fd5b600060208284031215614e4957600080fd5b813563ffffffff81168114610bbd57600080fd5b600060208284031215614e6f57600080fd5b813562ffffff81168114610bbd57600080fd5b8181038181111561154f5761154f614b45565b6060810161154f8284614d45565b60a08101614eb18286614d45565b8360608301528215156080830152949350505050565b604080825283519082018190526000906020906060840190828701845b82811015614f095781516001600160a01b031684529284019290840190600101614ee4565b5050506001600160a01b039490941692019190915250919050565b60005b83811015614f3f578181015183820152602001614f27565b50506000910152565b60008251614f5a818460208701614f24565b9190910192915050565b6101008101614f738289614d45565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600060033d1115614fb45760046000803e5060005160e01c5b90565b600060443d1015614fc55790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715614ff557505050505090565b828501915081518181111561500d5750505050505090565b843d87010160208285010111156150275750505050505090565b615036602082860101876144ab565b509095945050505050565b6020815260008251806020840152615060816040850160208701614f24565b601f01601f19169190910160400192915050565b80516020808301519190811015610c755760001960209190910360031b1b16919050565b808202811582820484141761154f5761154f614b45565b60e081016150bd8288614d45565b8560608301528460808301528360a08301528260c08301529695505050505050565b6000826150fc57634e487b7160e01b600052601260045260246000fd5b500690565b6000600160ff1b820161511657615116614b45565b5060000390565b808201828112600083128015821682158216171561244d5761244d614b4556fea2646970667358221220a546314e1afca7c558aa0098ea90b224ff5bd6a17f037088fabc23d484e1e70c64736f6c63430008140033",
    "sourceMap": "766:4959:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8197:158:99;;;;;;;;;;-1:-1:-1;8197:158:99;;;;;:::i;:::-;;:::i;:::-;;2711:311:112;;;;;;;;;;-1:-1:-1;2711:311:112;;;;;:::i;:::-;;:::i;6031:371::-;;;;;;:::i;:::-;;:::i;1205:31:114:-;;;;;;;;;;;;;;;;;;;4681:25:131;;;4669:2;4654:18;1205:31:114;;;;;;;;4005:221:107;;;;;;;;;;-1:-1:-1;4005:221:107;;;;;:::i;:::-;;:::i;4721:649:99:-;;;;;;;;;;-1:-1:-1;4721:649:99;;;;;:::i;:::-;;:::i;3395:205:112:-;;;;;;;;;;-1:-1:-1;3395:205:112;;;;;:::i;:::-;;:::i;5061:457:114:-;;;;;;;;;;-1:-1:-1;5061:457:114;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1695:34:117:-;;;;;;;;;;;;;;;8674:558:114;;;;;;:::i;:::-;;:::i;7921:161:99:-;;;;;;;;;;-1:-1:-1;7921:161:99;;;;;:::i;:::-;;:::i;1543:69::-;;;;;;;;;;;;1609:1;1543:69;;;;;-1:-1:-1;;;;;8414:32:131;;;8396:51;;8384:2;8369:18;1543:69:99;8226:227:131;3212:306:107;;;;;;;;;;-1:-1:-1;3212:306:107;;;;;:::i;:::-;;:::i;2221:167:123:-;;;;;;;;;;-1:-1:-1;2221:167:123;;;;;:::i;:::-;;:::i;9908:470:99:-;;;;;;;;;;-1:-1:-1;9908:470:99;;;;;:::i;:::-;;:::i;8178:220:113:-;;;;;;;;;;-1:-1:-1;8178:220:113;;;;;:::i;:::-;;:::i;13646:306:112:-;;;;;;;;;;-1:-1:-1;13646:306:112;;;;;:::i;:::-;;:::i;3405:277:99:-;;;;;;;;;;-1:-1:-1;3405:277:99;;;;;:::i;:::-;;:::i;11030:125:112:-;;;;;;;;;;-1:-1:-1;11030:125:112;;;;;:::i;:::-;;:::i;1473:30:99:-;;;;;;;;;;;;;;;1606:29:117;;;;;;;;;;;;;;;1330:37:99;;;;;;;;;;;;;;;12196:221:112;;;;;;;;;;-1:-1:-1;12196:221:112;;;;;:::i;:::-;;:::i;1874:344:114:-;;;;;;;;;;-1:-1:-1;1874:344:114;;;;;:::i;:::-;;:::i;4500:154:106:-;;;;;;;;;;-1:-1:-1;4500:154:106;;;;;:::i;:::-;;:::i;7186:223:113:-;;;;;;;;;;-1:-1:-1;7186:223:113;;;;;:::i;:::-;;:::i;6977:203:112:-;;;;;;;;;;-1:-1:-1;6977:203:112;;;;;:::i;:::-;;:::i;1786:176:115:-;;;;;;;;;;-1:-1:-1;1786:176:115;;;;;:::i;:::-;;:::i;7512:127:99:-;;;;;;;;;;-1:-1:-1;7512:127:99;;;;;:::i;:::-;;:::i;2685:311:107:-;;;;;;;;;;-1:-1:-1;2685:311:107;;;;;:::i;:::-;;:::i;6005:568:99:-;;;;;;;;;;-1:-1:-1;6005:568:99;;;;;:::i;:::-;;:::i;3260:111::-;;;;;;;;;;;;;:::i;2618:20:112:-;;;;;;;;;;-1:-1:-1;2618:20:112;;;;;;;;-1:-1:-1;;;2618:20:112;;;;;-1:-1:-1;;;2618:20:112;;-1:-1:-1;;;;;2618:20:112;;-1:-1:-1;;;2618:20:112;;-1:-1:-1;;;;;2618:20:112;;;;;;;14540:10:131;14528:23;;;14510:42;;14600:8;14588:21;;;14583:2;14568:18;;14561:49;-1:-1:-1;;;;;14646:37:131;;;14626:18;;;14619:65;;;;-1:-1:-1;;;;;14720:43:131;14715:2;14700:18;;14693:71;14497:3;14482:19;2618:20:112;14285:485:131;8633:206:113;;;;;;;;;;-1:-1:-1;8633:206:113;;;;;:::i;:::-;;:::i;7673:214:99:-;;;;;;;;;;-1:-1:-1;7673:214:99;;;;;:::i;:::-;;:::i;:::-;;;15414:14:131;;15407:22;15389:41;;15377:2;15362:18;7673:214:99;15249:187:131;6971:572:114;;;;;;:::i;:::-;;:::i;2133:180:115:-;;;;;;;;;;-1:-1:-1;2133:180:115;;;;;:::i;:::-;;:::i;1524:28:117:-;;;;;;;;;;;;;;;1989:79:123;;;;;;;;;;-1:-1:-1;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;1989:79;;3136:90:99;;;;;;;;;;-1:-1:-1;3213:8:99;;-1:-1:-1;;;;;3213:8:99;3136:90;;1430:35:106;;;;;;;;;;;;;;;3103:189:112;;;;;;;;;;-1:-1:-1;3103:189:112;;;;;:::i;:::-;;:::i;8197:158:99:-;8276:6;8271:80;8288:17;;;8271:80;;;8320:24;8334:6;;8341:1;8334:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8320:13;:24::i;:::-;8307:3;;;:::i;:::-;;;8271:80;;;;8197:158;;:::o;2711:311:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;;;;;;;;;2796:8:112;2819:12;2811:46:::1;;;::::0;-1:-1:-1;;;2811:46:112;;17759:2:131;2811:46:112::1;::::0;::::1;17741:21:131::0;17798:2;17778:18;;;17771:30;-1:-1:-1;;;17817:18:131;;;17810:51;17878:18;;2811:46:112::1;17557:345:131::0;2811:46:112::1;2884:8;2871:9;-1:-1:-1::0;;;;;2871:21:112::1;;:54;;;;-1:-1:-1::0;2907:6:112::1;:18:::0;-1:-1:-1;;;2907:18:112;::::1;-1:-1:-1::0;;;;;2907:18:112::1;2896:29:::0;::::1;2871:54;2863:89;;;::::0;-1:-1:-1;;;2863:89:112;;18109:2:131;2863:89:112::1;::::0;::::1;18091:21:131::0;18148:2;18128:18;;;18121:30;-1:-1:-1;;;18167:18:131;;;18160:52;18229:18;;2863:89:112::1;17907:346:131::0;2863:89:112::1;2958:6;:27:::0;;-1:-1:-1;;2958:27:112::1;-1:-1:-1::0;;;;;;;;2958:27:112;::::1;;;::::0;;2996:21:::1;::::0;4681:25:131;;;2996:21:112::1;::::0;4669:2:131;4654:18;2996:21:112::1;;;;;;;;2764:258;2711:311:::0;:::o;6031:371::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;6195:9:112::1;:13:::0;6191:62:::1;;6218:3;-1:-1:-1::0;;;;;6218:8:112::1;;6234:9;6218:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;6191:62;6258:21;6268:10;6258:9;:21::i;:::-;6286:37;6299:10;6311:11;6286:12;:37::i;:::-;6366:6;:13:::0;6330:67:::1;::::0;6352:12;;6366:13:::1;-1:-1:-1::0;;;6366:13:112;::::1;;::::0;6381:15:::1;;6330:21;:67::i;:::-;6031:371:::0;;;;:::o;4005:221:107:-;4073:12;4093;4108:23;4128:2;4108:19;:23::i;:::-;4093:38;;4197:24;4218:2;4197:20;:24::i;:::-;4144:14;:12;:14::i;:::-;:50;;-1:-1:-1;;;4144:50:107;;-1:-1:-1;;;;;18501:15:131;;;4144:50:107;;;18483:34:131;4183:10:107;18553:15:131;;18533:18;;;18526:43;4144:31:107;;;;;;;18418:18:131;;4144:50:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:77;;;;:::i;:::-;4137:84;4005:221;-1:-1:-1;;;4005:221:107:o;4721:649:99:-;4846:11;4827:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;4982:19:99::1;4995:5;4982:12;:19::i;:::-;4976:25:::0;-1:-1:-1;5299:32:99::1;5307:5;:16;;;5325:5;5299:7;:32::i;:::-;:37:::0;5291:74:::1;;;::::0;-1:-1:-1;;;5291:74:99;;19454:2:131;5291:74:99::1;::::0;::::1;19436:21:131::0;19493:2;19473:18;;;19466:30;19532:26;19512:18;;;19505:54;19576:18;;5291:74:99::1;19252:348:131::0;5291:74:99::1;4721:649:::0;;;;:::o;3395:205:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;3474:6:112;3495:17:::1;::::0;::::1;::::0;::::1;3487:50;;;::::0;-1:-1:-1;;;3487:50:112;;19807:2:131;3487:50:112::1;::::0;::::1;19789:21:131::0;19846:2;19826:18;;;19819:30;-1:-1:-1;;;19865:18:131;;;19858:50;19925:18;;3487:50:112::1;19605:344:131::0;3487:50:112::1;3543:6;:23:::0;;-1:-1:-1;;3543:23:112::1;-1:-1:-1::0;;;3543:23:112::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3577:18:::1;::::0;20099:40:131;;;3577:18:112::1;::::0;20087:2:131;20072:18;3577::112::1;19954:191:131::0;5061:457:114;-1:-1:-1;;;;;;;;;;;;;;;;5353:160:114;;-1:-1:-1;;;5353:160:114;;;;;20553:25:131;;;20594:18;;;20587:34;;;20637:18;;;20630:34;;;20680:18;;;20673:34;;;20723:19;;;20716:35;;;20767:19;;;20760:35;;;20811:19;;;20804:35;;;20855:19;;;20848:35;;;20899:19;;;20892:35;;;5353:9:114;;:37;;20525:19:131;;5353:160:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5353:160:114;;;;;;;;;;;;:::i;:::-;5346:167;5061:457;-1:-1:-1;;;;;;;;;;5061:457:114:o;8674:558::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;8862:33:114::1;::::0;;::::1;::::0;::::1;::::0;;8889:6:::1;8862:33:::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;8862:33:114;::::1;;;;::::0;::::1;::::0;-1:-1:-1;;;8862:33:114;::::1;-1:-1:-1::0;;;;;8862:33:114::1;::::0;;;;;;-1:-1:-1;;;8862:33:114;::::1;-1:-1:-1::0;;;;;8862:33:114::1;::::0;;;;;;9011:19:::1;::::0;8862:33;;-1:-1:-1;;8936:210:114::1;::::0;8962:4;;8974:2;;8984:19;;9011;;9038:13;;9059:8;;9075;;8862:33;8936:18:::1;:210::i;:::-;8901:245;;9152:75;9174:12;9188:10;:17;;;9152:75;;9207:10;:19;;;9152:75;;:21;:75::i;:::-;8856:376;;8674:558:::0;;;;;;:::o;7921:161:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;8004:6:99::1;7999:79;8016:17:::0;;::::1;7999:79;;;8048:23;8061:6;;8068:1;8061:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8048:12;:23::i;:::-;8035:3;::::0;::::1;:::i;:::-;;;7999:79;;3212:306:107::0;3333:43;3352:10;3364:11;3333:18;:43::i;:::-;3435:14;:12;:14::i;:::-;:78;;-1:-1:-1;;;3435:78:107;;-1:-1:-1;;;;;3464:4:107;23346:15:131;;3435:78:107;;;23328:34:131;23378:18;;;23371:34;;;3482:5:107;23441:15:131;;23421:18;;;23414:43;23473:18;;;23466:34;;;3502:10:107;23537:15:131;;23516:19;;;23509:44;3435:28:107;;;;;;;23262:19:131;;3435:78:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;24016:2:131;2278:57:123::1;::::0;::::1;23998:21:131::0;24055:2;24035:18;;;24028:30;24094:26;24074:18;;;24067:54;24138:18;;2278:57:123::1;23814:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;8396:51:131;;;2367:16:123::1;::::0;8384:2:131;8369:18;2367:16:123::1;;;;;;;;2221:167:::0;:::o;9908:470:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;10004:6:99::1;:24:::0;10000:82:::1;;10047:28;::::0;-1:-1:-1;;;10047:28:99;;10069:4:::1;10047:28;::::0;::::1;8396:51:131::0;10047:3:99::1;-1:-1:-1::0;;;;;10047:13:99::1;::::0;::::1;::::0;8369:18:131;;10047:28:99::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10038:37;;10000:82;10174:20;::::0;-1:-1:-1;;;10174:20:99;;::::1;::::0;::::1;4681:25:131::0;;;10174:3:99::1;-1:-1:-1::0;;;;;10174:12:99::1;::::0;::::1;::::0;4654:18:131;;10174:20:99::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10166:54;;;::::0;-1:-1:-1;;;10166:54:99;;24651:2:131;10166:54:99::1;::::0;::::1;24633:21:131::0;24690:2;24670:18;;;24663:30;-1:-1:-1;;;24709:18:131;;;24702:51;24770:18;;10166:54:99::1;24449:345:131::0;10166:54:99::1;10227:13;10245:8;-1:-1:-1::0;;;;;10245:13:99::1;10266:6;10245:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10226:51;;;10336:8;10328:45;;;::::0;-1:-1:-1;;;10328:45:99;;25211:2:131;10328:45:99::1;::::0;::::1;25193:21:131::0;25250:2;25230:18;;;25223:30;25289:26;25269:18;;;25262:54;25333:18;;10328:45:99::1;25009:348:131::0;8178:220:113;8243:11;8262:12;8277:25;8292:2;8296:5;8277:14;:25::i;:::-;8262:40;;8308:18;8329:24;8350:2;8329:20;:24::i;:::-;8367:26;;-1:-1:-1;;;8367:26:113;;8308:45;;-1:-1:-1;;;;;;8367:3:113;:10;;;;:26;;8308:45;;8385:7;;8367:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8359:34;8178:220;-1:-1:-1;;;;;8178:220:113:o;13646:306:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;13823:23:112::1;13837:4;13843:2;13823:13;:23::i;:::-;13852:49;13866:10;13878:11;13891:9;13852:13;:49::i;:::-;13907:40;13928:7;13937:9;13907:20;:40::i;:::-;13646:306:::0;;;;;;:::o;3405:277:99:-;3480:4;3492:22;3517:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;3517:8;3492:33;-1:-1:-1;;;;;;3535:20:99;;;3531:147;;3590:38;;-1:-1:-1;;;3590:38:99;;-1:-1:-1;;;;;18501:15:131;;;3590:38:99;;;18483:34:131;18553:15;;;18533:18;;;18526:43;3590:20:99;;;;;18418:18:131;;3590:38:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3572:56;;:15;:56;:::i;:::-;3565:63;;;;;3531:147;3656:15;3649:22;;;;;3531:147;3486:196;3405:277;;;;;:::o;11030:125:112:-;11084:3;11132:17;11146:2;11132:13;:17::i;:::-;11106:18;11121:2;11106:14;:18::i;:::-;11102:48;;;;:::i;12196:221::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;12304:50:112::1;12326:4;12332:10;12344:9;12304:21;:50::i;:::-;12360:52;12382:5;12389:11;12402:9;12360:21;:52::i;1874:344:114:-:0;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;1996:20:114::1;1971;1964:52;;;1956:89;;;::::0;-1:-1:-1;;;1956:89:114;;26567:2:131;1956:89:114::1;::::0;::::1;26549:21:131::0;26606:2;26586:18;;;26579:30;26645:26;26625:18;;;26618:54;26689:18;;1956:89:114::1;26365:348:131::0;1956:89:114::1;2078:20;2055:19;;:43;2051:163;;2108:19;:42:::0;;;2163:44:::1;::::0;4681:25:131;;;2163:44:114::1;::::0;4669:2:131;4654:18;2163:44:114::1;4535:177:131::0;2051:163:114::1;1874:344:::0;:::o;4500:154:106:-;4587:14;4621:28;4634:5;4641:7;4621:12;:28::i;7186:223:113:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7257:14:113::1;::::0;::::1;::::0;;;::::1;7277:49;7302:4;7308:2;7312:13;7277:24;:49::i;:::-;7332;7357:4;7363:2;7367:13;7332:24;:49::i;:::-;7392:12;::::0;::::1;::::0;;;::::1;7186:223:::0;;:::o;6977:203:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7061:33:112::1;::::0;;::::1;::::0;::::1;::::0;;7088:6:::1;7061:33:::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;7061:33:112;::::1;;;;::::0;::::1;::::0;-1:-1:-1;;;7061:33:112;::::1;-1:-1:-1::0;;;;;7061:33:112::1;::::0;;;;;;;-1:-1:-1;;;7061:33:112;;::::1;-1:-1:-1::0;;;;;7061:33:112::1;::::0;;;;7100:75:::1;;7122:12:::0;7100:75:::1;:::i;:::-;7136:10;:17;;;7100:75;;7155:10;:19;;;7100:75;;:21;:75::i;:::-;7055:125;6977:203:::0;:::o;1786:176:115:-;1857:12;1890:13;1884:2;:19;;;;;;;;:::i;:::-;;:73;;1933:24;;;;:17;:24;;;;;;1884:73;;;-1:-1:-1;1906:24:115;;;;:17;:24;;;;;;;1786:176;-1:-1:-1;1786:176:115:o;7512:127:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;8396:51:131;;;7616:18:99::1;::::0;8384:2:131;8369:18;7616::99::1;8226:227:131::0;2685:311:107;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;2756:18:107::1;2766:7;2756:9;:18::i;:::-;2918;2931:4;2918:12;:18::i;:::-;2942:19;2955:5;2942:12;:19::i;:::-;2967:24;2977:13;:11;:13::i;6005:568:99:-:0;6148:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;6166:6:99::1;:14;;;-1:-1:-1::0;;;6166:36:99;6162:407:::1;;6212:44;6232:5:::0;6239:16;::::1;6212:19;:44::i;6162:407::-;6369:13;::::0;::::1;;6349:18;:16;;::::0;;::::1;::::0;::::1;6369:5:::0;6349:16:::1;:::i;:::-;1552:2:47::0;1535:20;;;1419:146;6349:18:99::1;6337:80;::::0;;6384:16;::::1;27468:25:131::0;;6402:14:99::1;::::0;;::::1;;27509:18:131::0;;;27502:34;6337:80:99::1;::::0;27441:18:131;6337:80:99::1;;;;;;;8271::::0;8197:158;;:::o;3260:111::-;3304:4;3323:43;3350:1;3363;3323:11;:43::i;:::-;3316:50;;3260:111;:::o;8633:206:113:-;8691:11;;8710:125;8739:6;;8731:5;:14;8710:125;;;8764:11;8778:19;8787:2;8791:5;8778:8;:19::i;:::-;8764:33;-1:-1:-1;8805:23:113;-1:-1:-1;;;;;5058:66:56;;;;;8805:23:113;;:::i;:::-;;;8756:79;8747:7;;;;:::i;:::-;;;8710:125;;7673:214:99;7769:4;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7789:48:99::1;7814:5;7821:7;7830:6;7789:24;:48::i;:::-;7781:84;;;::::0;-1:-1:-1;;;7781:84:99;;27749:2:131;7781:84:99::1;::::0;::::1;27731:21:131::0;27788:2;27768:18;;;27761:30;27827:25;27807:18;;;27800:53;27870:18;;7781:84:99::1;27547:347:131::0;7781:84:99::1;-1:-1:-1::0;7878:4:99::1;7673:214:::0;;;;;:::o;6971:572:114:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7264:9:114::1;:13:::0;7260:62:::1;;7287:3;-1:-1:-1::0;;;;;7287:8:114::1;;7303:9;7287:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;7260:62;7327:21;7337:10;7327:9;:21::i;:::-;7354:44;7377:20;7354:22;:44::i;:::-;7405:37;7418:10;7430:11;7405:12;:37::i;:::-;7449:89;7473:4;7479:2;7483:19;7504:13;7519:8;7529;7449:23;:89::i;:::-;6971:572:::0;;;;;;;;;;:::o;2133:180:115:-;2206:10;2237:13;2231:2;:19;;;;;;;;:::i;:::-;;:77;;2282:26;;;;:17;:26;;;;;;2231:77;;;-1:-1:-1;2253:26:115;;;;:17;:26;;;;;;;2133:180;-1:-1:-1;2133:180:115:o;3103:189:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;3181:7:112::1;3170:8;:18;3162:53;;;::::0;-1:-1:-1;;;3162:53:112;;28101:2:131;3162:53:112::1;::::0;::::1;28083:21:131::0;28140:2;28120:18;;;28113:30;-1:-1:-1;;;28159:18:131;;;28152:52;28221:18;;3162:53:112::1;27899:346:131::0;3162:53:112::1;3221:6;:34:::0;;-1:-1:-1;;3221:34:112::1;;::::0;::::1;;::::0;;3266:21:::1;::::0;4681:25:131;;;3266:21:112::1;::::0;4669:2:131;4654:18;3266:21:112::1;4535:177:131::0;6942:189:106;7016:26;7036:5;7016:19;:26::i;:::-;1609:1:99;7052:8:106;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;7052:8:106;-1:-1:-1;;;;;7052:21:106;;7048:79;;3213:8:99;;-1:-1:-1;;;;;3213:8:99;7083:37:106;;-1:-1:-1;;;7083:37:106;;-1:-1:-1;;;;;18501:15:131;;;7083:37:106;;;18483:34:131;7109:10:106;18553:15:131;;18533:18;;;18526:43;7083:18:106;;;;;;;18418::131;;7083:37:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6942:189;:::o;3698:738:112:-;3759:32;;;;;;;;;3785:6;3759:32;;;;;;-1:-1:-1;;;3759:32:112;;;;;;;;-1:-1:-1;;;3759:32:112;;-1:-1:-1;;;;;3759:32:112;;;;;;;;-1:-1:-1;;;3759:32:112;;;-1:-1:-1;;;;;3759:32:112;;;;;;;;;;;3827:21;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3802:46:112;:9;:21;;;-1:-1:-1;;;;;3802:46:112;;3798:296;;3858:20;3889:21;;;;;;;;:::i;:::-;3858:53;-1:-1:-1;3943:21:112;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3927:37:112;:12;-1:-1:-1;;;;;3927:37:112;;:58;;;;;3984:1;3968:12;-1:-1:-1;;;;;3968:17:112;;;3927:58;3919:96;;;;-1:-1:-1;;;3919:96:112;;28754:2:131;3919:96:112;;;28736:21:131;28793:2;28773:18;;;28766:30;28832:27;28812:18;;;28805:55;28877:18;;3919:96:112;28552:349:131;3919:96:112;4023:23;4033:12;-1:-1:-1;;;;;4023:23:112;:9;:23::i;:::-;4054:6;:33;;-1:-1:-1;;;;;4054:33:112;;;-1:-1:-1;;;4054:33:112;;;;;;;;;;;3798:296;4126:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:40:112;:9;:18;;;-1:-1:-1;;;;;4104:40:112;;4100:92;;4154:31;4166:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4154:31:112;:11;:31::i;:::-;4202:18;;;;:9;:18;:::i;:::-;:23;;;;;;:67;;-1:-1:-1;4251:18:112;;4229:40;;:18;;;;:9;:18;:::i;:::-;:40;;;;4202:67;4198:119;;;4279:31;4291:18;;;;:9;:18;:::i;:::-;4279:31;;:11;:31::i;:::-;4327:16;;;;;;;;:::i;:::-;:21;;;;;;:61;;;4372:9;:16;;;4352:36;;:9;:16;;;;;;;;;;:::i;:::-;:36;;;;4327:61;4323:109;;;4398:27;4408:16;;;;;;;;:::i;:::-;4398:27;;:9;:27::i;2847:682:113:-;2960:15;;;;;;;3021:21;;:::i;:::-;3160:11;;;:20;;;3186:13;;;:24;;;3251:35;-1:-1:-1;3251:20:113;:35::i;:::-;3238:48;;3323:17;;;;3292:70;;3238:10;:4;3292:30;:70::i;:::-;3403:10;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1727:63:47;;;;;;;1733:17;;;;-1:-1:-1;;;;;1727:63:47;;;;;1752:18;;1727:63;;;;;;;;1772:17;;;;1727:63;;;;3390:33:113;;3460:17;;3429:70;;3479:13;3390:4;3429:30;:70::i;:::-;3511:13;;;;;;;2949:580;2847:682;;;:::o;3053:142:117:-;3128:12;3162:13;3156:2;:19;;;;;;;;:::i;:::-;;:34;;3185:5;3156:34;;;3178:4;3148:42;3053:142;-1:-1:-1;;3053:142:117:o;7364:173:112:-;7431:12;7451;7466:23;7486:2;7466:19;:23::i;:::-;7502:30;;-1:-1:-1;;;7502:30:112;;7526:4;7502:30;;;8396:51:131;7451:38:112;;-1:-1:-1;;;;;;7502:15:112;;;;;8369:18:131;;7502:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2437:117:107:-;2483:16;2539:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;4370:280:107;4454:7;;4598:16;;;;4541:24;;;;4598:5;4541:24;:::i;:::-;-1:-1:-1;;;;;4534:42:107;;4585:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;4585:8:107;4534:61;;-1:-1:-1;;;;;;4534:61:107;;;;;;;-1:-1:-1;;;;;8414:32:131;;;4534:61:107;;;8396:51:131;8369:18;;4534:61:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:80;4533:112;;4636:9;4533:112;;;-1:-1:-1;;;4520:125:107;4370:280;-1:-1:-1;;;4370:280:107:o;5244:773:106:-;5344:4;;5378:24;;;;:5;:24;:::i;:::-;5371:57;;-1:-1:-1;;;5371:57:106;;5422:4;5371:57;;;8396:51:131;-1:-1:-1;;;;;5371:42:106;;;;;;;8369:18:131;;5371:57:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5356:72;;5449:6;5438:7;:17;5434:46;;5472:1;5465:8;;;;;5434:46;5495:16;5504:7;5495:6;:16;:::i;:::-;5485:26;;5517:22;5542:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;5542:8:106;5517:33;-1:-1:-1;;;;;;5560:20:106;;5556:457;;-1:-1:-1;5597:7:106;-1:-1:-1;5590:14:106;;5556:457;5841:11;-1:-1:-1;;;;;5855:12:106;;;5875:24;;;;:5;:24;:::i;:::-;5855:96;;-1:-1:-1;;;;;;5855:96:106;;;;;;;-1:-1:-1;;;;;30188:15:131;;;5855:96:106;;;30170:34:131;5902:10:106;5923:27;;;30220:18:131;;;30213:43;;;30272:18;;;30265:34;;;5945:4:106;5923:27;;30315:18:131;;;30308:50;30104:19;;5855:96:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5841:110;;5976:7;5966:6;:17;;:40;;5990:16;6000:6;5990:7;:16;:::i;:::-;5966:40;;;5986:1;5966:40;5959:47;;;;;;;5556:457;5350:667;;5244:773;;;;:::o;8617:808:99:-;8676:22;8701:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;8701:8;8676:33;;8824:61;8849:5;8864:3;-1:-1:-1;;8824:24:99;:61::i;:::-;8816:103;;;;-1:-1:-1;;;8816:103:99;;30571:2:131;8816:103:99;;;30553:21:131;30610:2;30590:18;;;30583:30;30649:31;30629:18;;;30622:59;30698:18;;8816:103:99;30369:353:131;8816:103:99;-1:-1:-1;;;;;8929:20:99;;;8925:496;;9067:65;9092:5;9107:7;-1:-1:-1;;9067:24:99;:65::i;:::-;9059:104;;;;-1:-1:-1;;;9059:104:99;;30929:2:131;9059:104:99;;;30911:21:131;30968:2;30948:18;;;30941:30;31007:28;30987:18;;;30980:56;31053:18;;9059:104:99;30727:350:131;9059:104:99;9391:23;;-1:-1:-1;;;9391:23:99;;-1:-1:-1;;;;;8414:32:131;;;9391:23:99;;;8396:51:131;9391:16:99;;;;;8369:18:131;;9391:23:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11337:384:112;11423:74;11453:4;11459:10;11479:4;11486:10;11423:29;:74::i;:::-;11415:110;;;;-1:-1:-1;;;11415:110:112;;31284:2:131;11415:110:112;;;31266:21:131;31323:2;31303:18;;;31296:30;31362:25;31342:18;;;31335:53;31405:18;;11415:110:112;31082:347:131;11415:110:112;11543:4;-1:-1:-1;;;;;11536:24:112;;11549:10;11536:24;;;;4681:25:131;;4669:2;4654:18;;4535:177;11536:24:112;;;;;;;;11574:76;11604:5;11611:10;11631:4;11638:11;11574:29;:76::i;:::-;11566:113;;;;-1:-1:-1;;;11566:113:112;;31636:2:131;11566:113:112;;;31618:21:131;31675:2;31655:18;;;31648:30;31714:26;31694:18;;;31687:54;31758:18;;11566:113:112;31434:348:131;11566:113:112;11697:5;-1:-1:-1;;;;;11690:26:112;;11704:11;11690:26;;;;4681:25:131;;4669:2;4654:18;;4535:177;11690:26:112;;;;;;;;11337:384;;:::o;2547:251:117:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;2656:2:117;:19;;;;;;;;:::i;:::-;;:137;;2743:50;;;;;;;;2757:4;-1:-1:-1;;;;;2743:50:117;;;;;2772:5;-1:-1:-1;;;;;2743:50:117;;;;;2780:12;2743:50;;;2656:137;;;2684:50;;;;;;;;2698:5;-1:-1:-1;;;;;2684:50:117;;;;;2714:4;-1:-1:-1;;;;;2684:50:117;;;;;2721:12;2684:50;;;2649:144;2547:251;-1:-1:-1;;2547:251:117:o;3550:246:107:-;3655:11;;3651:82;;3676:14;:12;:14::i;:::-;:50;;-1:-1:-1;;;3676:50:107;;-1:-1:-1;;;;;32058:15:131;;;3676:50:107;;;32040:34:131;3707:10:107;32110:15:131;;32090:18;;;32083:43;32142:18;;;32135:34;;;3676:23:107;;;;;;;31975:18:131;;3676:50:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3651:82;3738:53;3766:5;3773:6;3781:9;3738:27;:53::i;17606:289:99:-;17685:14;17707:23;17733:3;-1:-1:-1;;;;;17733:16:99;;17750:5;17757:7;17733:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17707:58;-1:-1:-1;5160:74:57;;;;;;17833:27:99;:11;:25;:27::i;:::-;:50;6080:78:57;;;;;;17801:83:99;17826:3;17801:83;;17606:289;-1:-1:-1;;;;17606:289:99:o;7622:377:113:-;7705:18;7726:24;7747:2;7726:20;:24::i;:::-;7705:45;-1:-1:-1;7774:4:113;7756:239;7788:2;7780:5;:10;7756:239;;;7869:12;7884:25;7899:2;7903:5;7884:14;:25::i;:::-;7869:40;-1:-1:-1;7921:12:113;;7917:72;;7945:35;7959:5;7966:7;7975:4;7945:13;:35::i;:::-;;7917:72;-1:-1:-1;7792:7:113;;;:::i;:::-;;;7756:239;;4848:875:107;4970:20;5033:31;5058:5;5033:24;:31::i;:::-;-1:-1:-1;;;5127:9:107;:28;5123:596;;5236:14;:12;:14::i;:::-;5280:29;;-1:-1:-1;;;5280:29:107;;5303:4;5280:29;;;8396:51:131;-1:-1:-1;;;;;5236:28:107;;;;;;5274:4;;5280:14;;;;;8369:18:131;;5280:29:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5318:30;;-1:-1:-1;;;5318:30:107;;5342:4;5318:30;;;8396:51:131;5311:5:107;;-1:-1:-1;;;;;5318:15:107;;;;;8369:18:131;;5318:30:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5236:132;;;;;;-1:-1:-1;;;;;;5236:132:107;;;-1:-1:-1;;;;;23346:15:131;;;5236:132:107;;;23328:34:131;23378:18;;;23371:34;;;;23441:15;;;23421:18;;;23414:43;23473:18;;;23466:34;5350:10:107;23537:15:131;;;23516:19;;;23509:44;23262:19;;5236:132:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5502:51;5536:5;5543:9;5502:33;:51::i;:::-;5487:66;;5123:596;;;5669:43;5695:5;5702:9;5669:25;:43::i;5061:145:5:-;5145:4;5164:37;5178:5;5185:7;5194:6;5164:13;:37::i;:::-;5157:44;5061:145;-1:-1:-1;;;;5061:145:5:o;9710:164:99:-;9783:44;;-1:-1:-1;;;9783:44:99;;9807:4;9783:44;;;18483:34:131;-1:-1:-1;;;;;9822:3:99;18553:15:131;;18533:18;;;18526:43;-1:-1:-1;;9783:15:99;;;;;;18418:18:131;;9783:44:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;9775:94;;;;-1:-1:-1;;;9775:94:99;;32913:2:131;9775:94:99;;;32895:21:131;32952:2;32932:18;;;32925:30;32991:34;32971:18;;;32964:62;-1:-1:-1;;;33042:18:131;;;33035:31;33083:19;;9775:94:99;32711:397:131;2911:98:115;2959:6;:16;;;2986:18;;4681:25:131;;;2986:18:115;;4669:2:131;4654:18;2986::115;4535:177:131;3781:580:113;3938:10;;3928:21;;-1:-1:-1;;;3928:21:113;;3914:11;;-1:-1:-1;;;;;3928:3:113;:9;;;;:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3914:35;;4009:13;4025:63;4066:21;:5;:19;:21::i;:::-;4052:4;:11;;;:35;;;;:::i;:::-;10051:70:55;;;;;;4025:26:113;;:63::i;:::-;4009:79;;4099:6;4094:263;4111:6;:13;4107:1;:17;4094:263;;;4139:30;4172:6;4179:1;4172:9;;;;;;;;:::i;:::-;;;;;;;;;;;;4202:11;;4233:10;;;;4221:9;;;:22;;;;4264:11;;;;;4251:10;;;:24;4172:9;-1:-1:-1;4283:67:113;4297:2;4301:25;4297:2;4202:11;4301:14;:25::i;:::-;4328:5;4335:4;4341:8;4283:13;:67::i;:::-;4131:226;;4126:3;;;;:::i;:::-;;;4094:263;;2297:483:5;2405:4;2421:6;2431:1;2421:11;2417:43;;-1:-1:-1;2449:4:5;2442:11;;2417:43;2480:9;-1:-1:-1;;;;;2469:20:5;:7;-1:-1:-1;;;;;2469:20:5;;2465:82;;2506:24;;-1:-1:-1;;;2506:24:5;;-1:-1:-1;;;;;8414:32:131;;;2506:24:5;;;8396:51:131;2534:6:5;;2506:15;;;;;;8369:18:131;;2506:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;2499:41;;;;2465:82;2641:4;-1:-1:-1;;;;;2622:24:5;;;2618:92;;2663:40;2678:5;2685:9;2696:6;2663:14;:40::i;:::-;2656:47;;;;2618:92;2722:53;2741:5;2748:7;2757:9;2768:6;2722:18;:53::i;12731:308:112:-;-1:-1:-1;;12835:6:112;:24;12831:84;;12878:30;;-1:-1:-1;;;12878:30:112;;12902:4;12878:30;;;8396:51:131;-1:-1:-1;;;;;12878:15:112;;;;;8369:18:131;;12878:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12869:39;;12831:84;12928:51;12954:5;12961:9;12972:6;12928:25;:51::i;:::-;12920:83;;;;-1:-1:-1;;;12920:83:112;;33778:2:131;12920:83:112;;;33760:21:131;33817:2;33797:18;;;33790:30;-1:-1:-1;;;33836:18:131;;;33829:49;33895:18;;12920:83:112;33576:343:131;12920:83:112;13020:5;-1:-1:-1;;;;;13014:20:112;;13027:6;13014:20;;;;4681:25:131;;4669:2;4654:18;;4535:177;13014:20:112;;;;;;;;12731:308;;;:::o;231:146:10:-;302:4;5589:98:57;;;;;;333:32:10;368:3;333:38;;231:146;-1:-1:-1;;231:146:10:o;4170:297:106:-;4417:45;;-1:-1:-1;;;4417:45:106;;4387:12;;-1:-1:-1;;;;;4417:3:106;:16;;;;:45;;4434:5;;4441:7;;4450:11;;4417:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8418:554:112:-;8502:12;8517:53;8544:24;;;;:5;:24;:::i;:::-;8517:19;:53::i;:::-;8502:68;;8685:12;8699:21;8724:25;8739:2;8743:5;8724:14;:25::i;:::-;8684:65;;;;8852:25;8880:27;8893:4;8899:7;8880:12;:27::i;:::-;8852:55;;8913:54;8934:7;8943:4;8949:17;8913:20;:54::i;15478:1256:99:-;15599:12;15659:13;15674:12;15690:25;15709:5;15690:18;:25::i;:::-;15658:57;;;;16266:8;16278:1;16266:13;:59;;;-1:-1:-1;16283:37:99;:7;16311:8;16283:27;:37::i;:::-;:42;16266:59;16262:100;;;-1:-1:-1;;;16335:20:99;;;;;;16262:100;16394:228;;;;;;;;;16374:275;;16394:228;;;;;;;;16421:5;16394:228;:::i;:::-;;;;;;;;;;;;;;;;;16498:17;;;;5160:74:57;;;;16394:228:99;;;;16544:17;;;;6080:78:57;;;;16394:228:99;;16612:1;16394:228;;;;16592:4;16394:228;;;;;16630:13;;;;16374:12;:275::i;:::-;16367:282;;16690:39;16706:5;16713:9;16724:4;16690:15;:39::i;6144:656:106:-;6278:7;6295:22;6320:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;6320:8:106;6295:33;-1:-1:-1;;;;;;6338:20:106;;;6334:367;;6393:15;;;6406:1;6393:15;;;;;;;;6368:22;;6393:15;;;;;;;;;;-1:-1:-1;;6368:40:106;-1:-1:-1;6435:24:106;;;;:5;:24;:::i;:::-;6416:6;6423:1;6416:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6416:44:106;;;:9;;;;;;;;;;:44;6590:23;;;;;;;;;:::i;:::-;6571:6;6578:1;6571:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6571:43:106;;;:9;;;;;;;;;:43;6661:33;;-1:-1:-1;;;6661:33:106;;:13;;;;;;:33;;6675:6;;6683:10;;6661:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6360:341;6334:367;6752:43;6778:5;6785:9;6752:25;:43::i;4155:623:5:-;4637:63;;-1:-1:-1;;;;;35292:32:131;;;4637:63:5;;;35274:51:131;35341:18;;;35334:34;;;4239:4:5;;;;;;4617:19;;;;-1:-1:-1;;;4660:22:5;35247:18:131;;4637:63:5;;;;-1:-1:-1;;4637:63:5;;;;;;;;;;;;;;-1:-1:-1;;;;;4637:63:5;-1:-1:-1;;;;;;4637:63:5;;;;;;;;;;4617:84;;;;4637:63;4617:84;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4575:126;;;;4715:7;:57;;;;-1:-1:-1;4727:11:5;;:16;;:44;;;4758:4;4747:24;;;;;;;;;;;;:::i;:::-;4707:66;4155:623;-1:-1:-1;;;;;;4155:623:5:o;986:128:9:-;1045:4;12515:92:55;;;;;;1076:26:9;12418:195:55;4996:186:8;5064:4;5088:9;5104:17;:7;:15;:17::i;:::-;5100:21;;;-1:-1:-1;5156:5:8;5100:21;5150:12;:17;:25;;5174:1;5150:25;;;5170:1;5150:25;5134:42;;5143:2;5135:4;:10;;5134:42;5127:49;;;4996:186;;;;:::o;4846:2079:113:-;5013:7;5024:1;5013:12;5009:1912;;5073:10;;;;:14;5069:915;;5210:15;5220:4;5210:9;:15::i;:::-;-1:-1:-1;5197:28:113;-1:-1:-1;5235:35:113;5251:2;5255:5;5197:28;5235:15;:35::i;:::-;5009:1912;;5069:915;5552:10;;;:21;;;5694:15;5552:4;5694:9;:15::i;:::-;-1:-1:-1;5781:1:113;5768:10;;;:14;;;5903:10;;5681:28;;-1:-1:-1;5889:41:113;;5903:10;5681:28;;5889:13;:41::i;:::-;;5940:35;5956:2;5960:5;5967:7;5940:15;:35::i;5009:1912::-;6092:4;:10;;;6106:1;6092:15;6088:827;;6394:10;;;:21;;;6502:27;6394:4;6521:7;6502:12;:27::i;:::-;-1:-1:-1;6601:1:113;6588:10;;;:14;;;6723:10;;6709:41;;6735:7;;6709:13;:41::i;:::-;;6088:827;;;6879:27;6892:4;6898:7;6879:12;:27::i;1241:629:5:-;1726:66;;-1:-1:-1;;;;;35292:32:131;;;1726:66:5;;;35274:51:131;35341:18;;;35334:34;;;1328:4:5;;;;;;1706:19;;;;-1:-1:-1;;;1749:23:5;35247:18:131;;1726:66:5;35100:274:131;3207:665:5;3715:79;;;-1:-1:-1;;;;;32058:15:131;;;3715:79:5;;;32040:34:131;32110:15;;;32090:18;;;32083:43;32142:18;;;;32135:34;;;3715:79:5;;;;;;;;;;31975:18:131;;;;3715:79:5;;;;;;;-1:-1:-1;;;;;3715:79:5;-1:-1:-1;;;3715:79:5;;;3695:100;;-1:-1:-1;;;;;;3695:19:5;;;;:100;;3715:79;3695:100;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:142;;;;3809:7;:57;;;;-1:-1:-1;3821:11:5;;:16;;:44;;;3852:4;3841:24;;;;;;;;;;;;:::i;:::-;3801:66;3207:665;-1:-1:-1;;;;;;;3207:665:5:o;634:294::-;721:4;737:6;747:1;737:11;733:43;;-1:-1:-1;765:4:5;758:11;;733:43;806:4;-1:-1:-1;;;;;785:26:5;;;781:90;;828:26;;-1:-1:-1;;;828:26:5;;-1:-1:-1;;;;;8414:32:131;;;828:26:5;;;8396:51:131;858:6:5;;828:15;;;;;;8369:18:131;;828:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;821:43;;;;781:90;883:40;898:5;905:9;916:6;883:14;:40::i;2844:163:117:-;2926:9;2966:4;-1:-1:-1;;;;;2950:20:117;:12;-1:-1:-1;;;;;2950:20:117;;:52;;2989:13;2950:52;;;2973:13;2943:59;2844:163;-1:-1:-1;;2844:163:117:o;9284:1474:112:-;9395:16;9413:21;;:::i;:::-;9444:10;9457:33;9472:2;9476:5;:13;;;9457:14;:33::i;:::-;9496:35;;;;;;;;9525:6;9496:35;;;;;;-1:-1:-1;;;9496:35:112;;;;;;;;-1:-1:-1;;;9496:35:112;;-1:-1:-1;;;;;9496:35:112;;;;;;;;-1:-1:-1;;;9496:35:112;;;-1:-1:-1;;;;;9496:35:112;;;;;9444:46;;-1:-1:-1;;9556:8:112;9561:2;9556:4;:8::i;:::-;9537:27;;9571:14;9588:94;9619:6;9627:5;9634:12;:21;;;-1:-1:-1;;;;;9588:94:112;9657:12;:24;;;-1:-1:-1;;;;;9588:94:112;:30;:94::i;:::-;9571:111;;9703:33;9718:6;9726:9;9703:14;:33::i;:::-;9689:47;;9755:28;9776:6;9755:20;:28::i;:::-;9742:41;;;9807:35;;-1:-1:-1;;;9807:35:112;;9742:10;;-1:-1:-1;;;;;9807:3:112;:10;;;;:35;;9830:11;;9807:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9789:53;-1:-1:-1;9942:36:112;-1:-1:-1;;;;;5058:66:56;;;;;9942:16:112;;;;:36;:::i;:::-;9929:10;;;:49;;;-1:-1:-1;;;;;;9984:403:112;;;-1:-1:-1;;;;;10267:10:112;;;:28;9984:403;10441:16;:9;1421:23:56;4674:37;4717:15;4670:63;;4573:168;10441:16:112;10429:9;;;;:28;;;;10629:4;10613:13;;;:20;10693:21;;10677:37;;:13;;;:37;10734:19;;;;;10720:33;;:11;;;:33;-1:-1:-1;9284:1474:112;;10429:4;;-1:-1:-1;9284:1474:112;;-1:-1:-1;;;;9284:1474:112:o;3116:389:106:-;3202:14;3228:3;-1:-1:-1;;;;;3228:21:106;;3257:4;:9;;;3268:4;:10;;;3280:4;:9;;;3291:4;:10;;;3303:4;:11;;;3316:4;:13;;;3331:7;3228:111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:277;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3433:4;:13;;;3448:6;3425:30;;;;;-1:-1:-1;;;3425:30:106;;;;;;;;:::i;:::-;-1:-1:-1;3472:22:106;3486:6;3472:22;:::i;3224:277::-;;;;;;;;;;;-1:-1:-1;;;;3116:389:106;;;;:::o;7798:453:112:-;-1:-1:-1;;;7911:17:112;:35;:91;;;;7950:17;:52;;7911:91;7907:243;;;7798:453;;;:::o;7907:243::-;8172:10;;1552:2:47;1535:20;;8191:7:112;;8160:86;;;38887:26:131;38869:45;;38945:2;38930:18;;38923:34;;;8160:86:112;;38842:18:131;8160:86:112;;;;;;;;7798:453;;;:::o;14189:212:99:-;14278:13;;14324:38;14346:16;;;;-1:-1:-1;;;;;14324:11:99;;;;5058:66:56;;;14324:38:99;:::i;:::-;14313:49;-1:-1:-1;14378:11:99;;;;1421:23:56;4674:37;4717:15;4670:63;14368:28:99;;14189:212;;;:::o;2156:179:12:-;2237:4;2250:8;2260;2272:19;2286:4;2272:13;:19::i;:::-;2249:42;;-1:-1:-1;2249:42:12;-1:-1:-1;2249:42:12;2305:17;2311:11;2249:42;2305:17;:::i;:::-;2304:26;;;2156:179;-1:-1:-1;;;;;2156:179:12:o;6902:576:99:-;-1:-1:-1;;;7166:12:99;:29;:63;;;;-1:-1:-1;;;7199:12:99;:30;7166:63;:114;;;;7233:12;:47;;7166:114;7155:319;;;6902:576;;;:::o;7155:319::-;7428:13;;;;7408:18;:16;;;;;;;7428:5;7408:16;:::i;:18::-;7396:71;;;27468:25:131;;;27524:2;27509:18;;27502:34;;;7396:71:99;;27441:18:131;7396:71:99;27294:248:131;3155:515:8;3212:4;1971:28;3317:42;;3313:109;;-1:-1:-1;2033:24:8;3376:39;;3155:515::o;3313:109::-;-1:-1:-1;2134:18:8;2033:24;3595:39;;3594:60;1934:1;3523:40;;;;-1:-1:-1;;3522:58:8;3593:71;;3155:515::o;2655:426:106:-;2715:12;2729:14;2755:3;-1:-1:-1;;;;;2755:18:106;;2781:4;:9;;;2792:4;:10;;;2804:4;:9;;;2815:4;:10;;;2827:4;:11;;;2840:4;:13;;;2755:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2755:99:106;;;;;;;;-1:-1:-1;;2755:99:106;;;;;;;;;;;;:::i;:::-;;;2751:326;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3009:4;:13;;;3024:6;3001:30;;;;;-1:-1:-1;;;3001:30:106;;;;;;;;:::i;:::-;-1:-1:-1;3048:22:106;3062:6;3048:22;:::i;:::-;3039:31;;2959:118;2655:426;;;:::o;2751:326::-;2909:8;-1:-1:-1;;;2934:17:106;-1:-1:-1;2655:426:106;-1:-1:-1;;2655:426:106:o;2487:343:115:-;2577:13;2571:2;:19;;;;;;;;:::i;:::-;;2567:213;;2600:26;;;;:17;:26;;;;;;;;:34;;;2642:24;;;:17;:24;;;;;:34;;;2567:213;;;2697:26;;;;:17;:26;;;;;;;;:34;;;2739:24;;;:17;:24;;;;;:34;;;2567:213;2806:2;2790:35;;;;;;;;:::i;:::-;;;;27468:25:131;;;27524:2;27509:18;;27502:34;;;2790:35:115;;27441:18:131;2790:35:115;27294:248:131;3364:116:117;3415:16;3473:1;3462:2;3457:8;;;;;;;;:::i;:::-;:12;;3468:1;3457:12;:::i;:::-;3456:18;;;;:::i;:::-;3446:29;;;;;;;;:::i;813:387:116:-;933:11;964:13;958:2;:19;;;;;;;;:::i;:::-;;954:242;;996:12;1004:4;996:5;:12;:::i;:::-;987:21;;1030:11;1020:6;:21;1016:70;;1062:15;1076:1;1062:11;:15;:::i;1016:70::-;954:242;;;1119:4;1110:5;:13;1106:59;;1144:12;1152:4;1144:5;:12;:::i;10423:815:12:-;10480:8;10490;10537:32;10564:4;10537:26;:32::i;:::-;10524:45;;-1:-1:-1;10524:45:12;-1:-1:-1;5056:3:7;10595:33:12;;;10577:15;10777:12;10830:30;;;10826:37;-1:-1:-1;10760:30:12;;;10812:52;;-1:-1:-1;;10890:18:12;;;:47;;10949:8;;10945:177;;;11047:17;;;;10945:177;;;11108:4;11107:5;;11095:3;:18;;11089:24;;10945:177;11217:9;2943:3:7;11188:38:12;11177:50;;10506:728;;;10423:815;;;:::o;11962:2858::-;12032:8;12042;12058:12;12093:1;12085:4;12073:21;:74;;12141:4;12073:74;;;12102:18;12115:4;12102:18;:::i;:::-;12058:89;;2296:6:7;12161:7:12;:25;;12153:61;;;;-1:-1:-1;;;12153:61:12;;40510:2:131;12153:61:12;;;40492:21:131;40549:2;40529:18;;;40522:30;40588:25;40568:18;;;40561:53;40631:18;;12153:61:12;40308:347:131;12153:61:12;12221:15;12256:3;12246:13;;:18;12242:141;;12280:34;12274:40;;12242:141;;;-1:-1:-1;;;12335:41:12;;12242:141;12402:3;12392:13;;:18;12388:94;;12472:3;12427:40;:3;12433:34;12427:40;:::i;:::-;12426:49;;12420:55;;12388:94;12501:3;12491:13;;:18;12487:94;;12571:3;12526:40;:3;12532:34;12526:40;:::i;:::-;12525:49;;12519:55;;12487:94;12600:3;12590:13;;:18;12586:94;;12670:3;12625:40;:3;12631:34;12625:40;:::i;:::-;12624:49;;12618:55;;12586:94;12699:4;12689:14;;:19;12685:95;;12770:3;12725:40;:3;12731:34;12725:40;:::i;:::-;12724:49;;12718:55;;12685:95;12799:4;12789:14;;:19;12785:95;;12870:3;12825:40;:3;12831:34;12825:40;:::i;:::-;12824:49;;12818:55;;12785:95;12899:4;12889:14;;:19;12885:95;;12970:3;12925:40;:3;12931:34;12925:40;:::i;:::-;12924:49;;12918:55;;12885:95;12999:4;12989:14;;:19;12985:95;;13070:3;13025:40;:3;13031:34;13025:40;:::i;:::-;13024:49;;13018:55;;12985:95;13099:5;13089:15;;:20;13085:96;;13171:3;13126:40;:3;13132:34;13126:40;:::i;:::-;13125:49;;13119:55;;13085:96;13200:5;13190:15;;:20;13186:96;;13272:3;13227:40;:3;13233:34;13227:40;:::i;:::-;13226:49;;13220:55;;13186:96;13301:5;13291:15;;:20;13287:96;;13373:3;13328:40;:3;13334:34;13328:40;:::i;:::-;13327:49;;13321:55;;13287:96;13402:5;13392:15;;:20;13388:96;;13474:3;13429:40;:3;13435:34;13429:40;:::i;:::-;13428:49;;13422:55;;13388:96;13503:6;13493:16;;:21;13489:97;;13576:3;13531:40;:3;13537:34;13531:40;:::i;:::-;13530:49;;13524:55;;13489:97;13605:6;13595:16;;:21;13591:121;;13678:3;13633:40;:3;13639:34;13633:40;:::i;:::-;13632:49;;;-1:-1:-1;13689:16:12;13704:1;13689:16;;:::i;:::-;;;13591:121;13731:6;13721:16;;:21;13717:121;;13804:3;13759:40;:3;13765:34;13759:40;:::i;:::-;13758:49;;;-1:-1:-1;13815:16:12;13830:1;13815:16;;:::i;:::-;;;13717:121;13857:6;13847:16;;:21;13843:121;;13930:3;13885:40;:3;13891:34;13885:40;:::i;:::-;13884:49;;;-1:-1:-1;13941:16:12;13956:1;13941:16;;:::i;:::-;;;13843:121;13983:7;13973:17;;:22;13969:122;;14057:3;14012:40;:3;14018:34;14012:40;:::i;:::-;14011:49;;;-1:-1:-1;14068:16:12;14083:1;14068:16;;:::i;:::-;;;13969:122;14110:7;14100:17;;:22;14096:123;;14184:3;14139:40;:3;14145:34;14139:40;:::i;:::-;14138:49;;;-1:-1:-1;14195:17:12;14210:2;14195:17;;:::i;:::-;;;14096:123;14238:7;14228:17;;:22;14224:123;;14312:3;14267:40;:3;14273:34;14267:40;:::i;:::-;14266:49;;;-1:-1:-1;14323:17:12;14338:2;14323:17;;:::i;:::-;;;14224:123;14366:7;14356:17;;:22;14352:123;;14440:3;14395:40;:3;14401:34;14395:40;:::i;:::-;14394:49;;;-1:-1:-1;14451:17:12;14466:2;14451:17;;:::i;:::-;;;14352:123;14504:1;14496:4;14484:21;14480:300;;;14730:1;14724:3;14718;14715:1;14711:11;14707:21;14703:29;14696:36;;14762:11;14761:12;;;:::i;:::-;14747:26;;14480:300;14796:17;14802:11;14796:3;:17;:::i;:::-;14785:29;;12052:2768;;11962:2858;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:628:131:-;113:6;121;174:2;162:9;153:7;149:23;145:32;142:52;;;190:1;187;180:12;142:52;230:9;217:23;259:18;300:2;292:6;289:14;286:34;;;316:1;313;306:12;286:34;354:6;343:9;339:22;329:32;;399:7;392:4;388:2;384:13;380:27;370:55;;421:1;418;411:12;370:55;461:2;448:16;487:2;479:6;476:14;473:34;;;503:1;500;493:12;473:34;556:7;551:2;541:6;538:1;534:14;530:2;526:23;522:32;519:45;516:65;;;577:1;574;567:12;516:65;608:2;600:11;;;;;630:6;;-1:-1:-1;14:628:131;;-1:-1:-1;;;;14:628:131:o;647:180::-;706:6;759:2;747:9;738:7;734:23;730:32;727:52;;;775:1;772;765:12;727:52;-1:-1:-1;798:23:131;;647:180;-1:-1:-1;647:180:131:o;832:127::-;893:10;888:3;884:20;881:1;874:31;924:4;921:1;914:15;948:4;945:1;938:15;964:225;1050:4;1042:6;1038:17;1121:6;1109:10;1106:22;1085:18;1073:10;1070:34;1067:62;1064:88;;;1132:18;;:::i;:::-;1168:2;1161:22;-1:-1:-1;964:225:131:o;1194:227::-;1280:4;1272:6;1268:17;1351:6;1339:10;1336:22;1315:18;1303:10;1300:34;1297:62;1294:88;;;1362:18;;:::i;1426:249::-;1536:2;1517:13;;-1:-1:-1;;1513:27:131;1501:40;;1571:18;1556:34;;1592:22;;;1553:62;1550:88;;;1618:18;;:::i;:::-;1654:2;1647:22;-1:-1:-1;;1426:249:131:o;1680:200::-;1757:4;1790:18;1782:6;1779:30;1776:56;;;1812:18;;:::i;:::-;-1:-1:-1;1857:1:131;1853:14;1869:4;1849:25;;1680:200::o;1885:1184::-;1956:5;2009:3;2002:4;1994:6;1990:17;1986:27;1976:55;;2027:1;2024;2017:12;1976:55;2063:6;2050:20;2089:4;2112:60;2169:2;2112:60;:::i;:::-;2191:2;2222;2216:9;2234:31;2262:2;2254:6;2234:31;:::i;:::-;2300:18;;;2368:4;2411:11;;;2399:24;;2395:33;;;2334:15;;;;-1:-1:-1;2440:15:131;;;2437:35;;;2468:1;2465;2458:12;2437:35;2504:2;2496:6;2492:15;2516:523;2532:6;2527:3;2524:15;2516:523;;;2608:2;2602:3;2597;2593:13;2589:22;2586:112;;;2652:1;2681:2;2677;2670:14;2586:112;2733:2;2727:9;2749:34;2774:8;2749:34;:::i;:::-;2813:17;;2796:35;;2883:12;;;2870:26;2851:17;;;2844:53;2949:12;;;2936:26;2917:17;;;2910:53;2976:21;;3017:12;;;;2549;;2516:523;;;-1:-1:-1;3057:6:131;;1885:1184;-1:-1:-1;;;;;;;;1885:1184:131:o;3074:671::-;3133:5;3181:4;3169:9;3164:3;3160:19;3156:30;3153:50;;;3199:1;3196;3189:12;3153:50;3232:4;3226:11;3246:32;3271:6;3246:32;:::i;:::-;3296:6;3287:15;;3338:9;3325:23;3367:18;3408:2;3400:6;3397:14;3394:34;;;3424:1;3421;3414:12;3394:34;3452:74;3522:3;3513:6;3502:9;3498:22;3452:74;:::i;:::-;3444:6;3437:90;3580:2;3569:9;3565:18;3552:32;3536:48;;3609:2;3599:8;3596:16;3593:36;;;3625:1;3622;3615:12;3593:36;;3662:76;3734:3;3723:8;3712:9;3708:24;3662:76;:::i;:::-;3657:2;3649:6;3645:15;3638:101;;;3074:671;;;;:::o;3750:155::-;3809:5;3854:3;3845:6;3840:3;3836:16;3832:26;3829:46;;;3871:1;3868;3861:12;3910:620;4054:6;4062;4070;4078;4131:3;4119:9;4110:7;4106:23;4102:33;4099:53;;;4148:1;4145;4138:12;4099:53;4188:9;4175:23;4221:18;4213:6;4210:30;4207:50;;;4253:1;4250;4243:12;4207:50;4276:63;4331:7;4322:6;4311:9;4307:22;4276:63;:::i;:::-;4266:73;;;4358:62;4412:7;4407:2;4396:9;4392:18;4358:62;:::i;:::-;3910:620;;4348:72;;-1:-1:-1;;;;4467:3:131;4452:19;;4439:33;;4519:3;4504:19;4491:33;;3910:620::o;4717:150::-;4792:20;;4841:1;4831:12;;4821:40;;4857:1;4854;4847:12;4821:40;4717:150;;;:::o;4872:208::-;4946:6;4999:2;4987:9;4978:7;4974:23;4970:32;4967:52;;;5015:1;5012;5005:12;4967:52;5038:36;5064:9;5038:36;:::i;5085:160::-;5149:5;5194:3;5185:6;5180:3;5176:16;5172:26;5169:46;;;5211:1;5208;5201:12;5250:248;5341:6;5394:3;5382:9;5373:7;5369:23;5365:33;5362:53;;;5411:1;5408;5401:12;5362:53;5434:58;5484:7;5473:9;5434:58;:::i;5685:755::-;5841:6;5849;5857;5865;5873;5881;5889;5897;5905;5958:3;5946:9;5937:7;5933:23;5929:33;5926:53;;;5975:1;5972;5965:12;5926:53;-1:-1:-1;;5998:23:131;;;6068:2;6053:18;;6040:32;;-1:-1:-1;6119:2:131;6104:18;;6091:32;;6170:2;6155:18;;6142:32;;-1:-1:-1;6221:3:131;6206:19;;6193:33;;-1:-1:-1;6273:3:131;6258:19;;6245:33;;-1:-1:-1;6325:3:131;6310:19;;6297:33;;-1:-1:-1;6377:3:131;6362:19;;6349:33;;-1:-1:-1;6429:3:131;6414:19;6401:33;;-1:-1:-1;5685:755:131;-1:-1:-1;5685:755:131:o;6445:619::-;6515:3;6553:5;6547:12;6580:6;6575:3;6568:19;6606:4;6635:2;6630:3;6626:12;6619:19;;6672:2;6665:5;6661:14;6693:1;6703:336;6717:6;6714:1;6711:13;6703:336;;;6776:13;;6814:9;;6802:22;;6864:11;;;6858:18;6844:12;;;6837:40;6900:4;6944:11;;;6938:18;6924:12;;;6917:40;6986:4;6977:14;;;;7014:15;;;;6739:1;6732:9;6703:336;;;-1:-1:-1;7055:3:131;;6445:619;-1:-1:-1;;;;;6445:619:131:o;7069:599::-;7260:2;7249:9;7242:21;7223:4;7298:6;7292:13;7341:4;7336:2;7325:9;7321:18;7314:32;7369:79;7444:2;7433:9;7429:18;7415:12;7369:79;:::i;:::-;7355:93;;7497:2;7489:6;7485:15;7479:22;7571:2;7567:7;7555:9;7547:6;7543:22;7539:36;7532:4;7521:9;7517:20;7510:66;7593:69;7655:6;7639:14;7593:69;:::i;7673:548::-;7802:6;7810;7818;7826;7834;7842;7895:3;7883:9;7874:7;7870:23;7866:33;7863:53;;;7912:1;7909;7902:12;7863:53;-1:-1:-1;;7935:23:131;;;8005:2;7990:18;;7977:32;;-1:-1:-1;8056:2:131;8041:18;;8028:32;;8107:2;8092:18;;8079:32;;-1:-1:-1;8158:3:131;8143:19;;8130:33;;-1:-1:-1;8210:3:131;8195:19;8182:33;;-1:-1:-1;7673:548:131;-1:-1:-1;7673:548:131:o;8458:248::-;8526:6;8534;8587:2;8575:9;8566:7;8562:23;8558:32;8555:52;;;8603:1;8600;8593:12;8555:52;-1:-1:-1;;8626:23:131;;;8696:2;8681:18;;;8668:32;;-1:-1:-1;8458:248:131:o;8711:131::-;-1:-1:-1;;;;;8786:31:131;;8776:42;;8766:70;;8832:1;8829;8822:12;8847:247;8906:6;8959:2;8947:9;8938:7;8934:23;8930:32;8927:52;;;8975:1;8972;8965:12;8927:52;9014:9;9001:23;9033:31;9058:5;9033:31;:::i;9099:323::-;9175:6;9183;9236:2;9224:9;9215:7;9211:23;9207:32;9204:52;;;9252:1;9249;9242:12;9204:52;9288:9;9275:23;9265:33;;9348:2;9337:9;9333:18;9320:32;9361:31;9386:5;9361:31;:::i;:::-;9411:5;9401:15;;;9099:323;;;;;:::o;9427:276::-;9510:6;9518;9571:2;9559:9;9550:7;9546:23;9542:32;9539:52;;;9587:1;9584;9577:12;9539:52;9610:36;9636:9;9610:36;:::i;:::-;9600:46;9693:2;9678:18;;;;9665:32;;-1:-1:-1;;;9427:276:131:o;9917:598::-;10029:6;10037;10045;10053;10061;10069;10122:3;10110:9;10101:7;10097:23;10093:33;10090:53;;;10139:1;10136;10129:12;10090:53;10175:9;10162:23;10152:33;;10232:2;10221:9;10217:18;10204:32;10194:42;;10283:2;10272:9;10268:18;10255:32;10245:42;;10334:2;10323:9;10319:18;10306:32;10296:42;;10385:3;10374:9;10370:19;10357:33;10347:43;;10440:3;10429:9;10425:19;10412:33;10454:31;10479:5;10454:31;:::i;:::-;10504:5;10494:15;;;9917:598;;;;;;;;:::o;10520:401::-;10601:6;10609;10662:2;10650:9;10641:7;10637:23;10633:32;10630:52;;;10678:1;10675;10668:12;10630:52;10717:9;10704:23;10736:31;10761:5;10736:31;:::i;:::-;10786:5;-1:-1:-1;10843:2:131;10828:18;;10815:32;10856:33;10815:32;10856:33;:::i;11562:383::-;11639:6;11647;11655;11708:2;11696:9;11687:7;11683:23;11679:32;11676:52;;;11724:1;11721;11714:12;11676:52;11760:9;11747:23;11737:33;;11817:2;11806:9;11802:18;11789:32;11779:42;;11871:2;11860:9;11856:18;11843:32;11884:31;11909:5;11884:31;:::i;:::-;11934:5;11924:15;;;11562:383;;;;;:::o;11950:551::-;12002:5;12050:4;12038:9;12033:3;12029:19;12025:30;12022:50;;;12068:1;12065;12058:12;12022:50;12101:2;12095:9;12113:32;12138:6;12113:32;:::i;:::-;12163:6;12154:15;;12206:9;12193:23;12225:33;12250:7;12225:33;:::i;:::-;12267:23;;12342:2;12327:18;;12314:32;12355:33;12314:32;12355:33;:::i;:::-;12416:2;12404:15;;12397:32;12490:2;12475:18;;;12462:32;12445:15;;12438:57;;;;11950:551;;-1:-1:-1;11950:551:131:o;12506:293::-;12598:6;12606;12659:3;12647:9;12638:7;12634:23;12630:33;12627:53;;;12676:1;12673;12666:12;12627:53;12699:43;12734:7;12723:9;12699:43;:::i;:::-;12689:53;12789:2;12774:18;;;;12761:32;;-1:-1:-1;;;12506:293:131:o;12804:160::-;12869:5;12914:2;12905:6;12900:3;12896:16;12892:25;12889:45;;;12930:1;12927;12920:12;12969:367;13061:6;13114:2;13102:9;13093:7;13089:23;13085:32;13082:52;;;13130:1;13127;13120:12;13082:52;13170:9;13157:23;13203:18;13195:6;13192:30;13189:50;;;13235:1;13232;13225:12;13189:50;13258:72;13322:7;13313:6;13302:9;13298:22;13258:72;:::i;13895:385::-;14027:6;14035;14088:3;14076:9;14067:7;14063:23;14059:33;14056:53;;;14105:1;14102;14095:12;14056:53;14128:58;14178:7;14167:9;14128:58;:::i;:::-;14118:68;;14205:69;14266:7;14260:3;14249:9;14245:19;14205:69;:::i;:::-;14195:79;;13895:385;;;;;:::o;14775:469::-;14865:6;14873;14881;14934:2;14922:9;14913:7;14909:23;14905:32;14902:52;;;14950:1;14947;14940:12;14902:52;14989:9;14976:23;15008:31;15033:5;15008:31;:::i;:::-;15058:5;-1:-1:-1;15115:2:131;15100:18;;15087:32;15128:33;15087:32;15128:33;:::i;:::-;14775:469;;15180:7;;-1:-1:-1;;;15234:2:131;15219:18;;;;15206:32;;14775:469::o;15441:881::-;15633:6;15641;15649;15657;15665;15673;15681;15689;15697;15705;15758:3;15746:9;15737:7;15733:23;15729:33;15726:53;;;15775:1;15772;15765:12;15726:53;15811:9;15798:23;15788:33;;15868:2;15857:9;15853:18;15840:32;15830:42;;15919:2;15908:9;15904:18;15891:32;15881:42;;15970:2;15959:9;15955:18;15942:32;15932:42;;16021:3;16010:9;16006:19;15993:33;15983:43;;16073:3;16062:9;16058:19;16045:33;16035:43;;16125:3;16114:9;16110:19;16097:33;16087:43;;16149:63;16204:7;16198:3;16187:9;16183:19;16149:63;:::i;:::-;16139:73;;16259:3;16248:9;16244:19;16231:33;16221:43;;16311:3;16300:9;16296:19;16283:33;16273:43;;15441:881;;;;;;;;;;;;;:::o;16535:127::-;16596:10;16591:3;16587:20;16584:1;16577:31;16627:4;16624:1;16617:15;16651:4;16648:1;16641:15;16932:127;16993:10;16988:3;16984:20;16981:1;16974:31;17024:4;17021:1;17014:15;17048:4;17045:1;17038:15;17064:135;17103:3;17124:17;;;17121:43;;17144:18;;:::i;:::-;-1:-1:-1;17191:1:131;17180:13;;17064:135::o;17204:348::-;17406:2;17388:21;;;17445:2;17425:18;;;17418:30;17484:26;17479:2;17464:18;;17457:54;17543:2;17528:18;;17204:348::o;18580:184::-;18650:6;18703:2;18691:9;18682:7;18678:23;18674:32;18671:52;;;18719:1;18716;18709:12;18671:52;-1:-1:-1;18742:16:131;;18580:184;-1:-1:-1;18580:184:131:o;18769:125::-;18834:9;;;18855:10;;;18852:36;;;18868:18;;:::i;20938:1167::-;21020:5;21073:3;21066:4;21058:6;21054:17;21050:27;21040:55;;21091:1;21088;21081:12;21040:55;21120:6;21114:13;21146:4;21169:60;21226:2;21169:60;:::i;:::-;21248:2;21279;21273:9;21291:31;21319:2;21311:6;21291:31;:::i;:::-;21357:18;;;21425:4;21468:11;;;21456:24;;21452:33;;;21391:15;;;;-1:-1:-1;21497:15:131;;;21494:35;;;21525:1;21522;21515:12;21494:35;21561:2;21553:6;21549:15;21573:502;21589:6;21584:3;21581:15;21573:502;;;21665:2;21659:3;21654;21650:13;21646:22;21643:112;;;21709:1;21738:2;21734;21727:14;21643:112;21790:2;21784:9;21806:34;21831:8;21806:34;:::i;:::-;21870:10;;21853:28;;21926:12;;;21920:19;21901:17;;;21894:46;21985:12;;;21979:19;21960:17;;;21953:46;22012:21;;22053:12;;;;21606;;21573:502;;22110:890;22211:6;22264:2;22252:9;22243:7;22239:23;22235:32;22232:52;;;22280:1;22277;22270:12;22232:52;22313:9;22307:16;22342:18;22383:2;22375:6;22372:14;22369:34;;;22399:1;22396;22389:12;22369:34;22422:22;;;;22478:4;22460:16;;;22456:27;22453:47;;;22496:1;22493;22486:12;22453:47;22529:4;22523:11;22543:32;22568:6;22543:32;:::i;:::-;22606:2;22600:9;22634:2;22624:8;22621:16;22618:36;;;22650:1;22647;22640:12;22618:36;22678:84;22754:7;22743:8;22739:2;22735:17;22678:84;:::i;:::-;22670:6;22663:100;;22802:2;22798;22794:11;22788:18;22831:2;22821:8;22818:16;22815:36;;;22847:1;22844;22837:12;22815:36;22884:84;22960:7;22949:8;22945:2;22941:17;22884:84;:::i;:::-;22879:2;22867:15;;22860:109;-1:-1:-1;22871:6:131;22110:890;-1:-1:-1;;;;;22110:890:131:o;23564:245::-;23643:6;23651;23704:2;23692:9;23683:7;23679:23;23675:32;23672:52;;;23720:1;23717;23710:12;23672:52;-1:-1:-1;;23743:16:131;;23799:2;23784:18;;;23778:25;23743:16;;23778:25;;-1:-1:-1;23564:245:131:o;24167:277::-;24234:6;24287:2;24275:9;24266:7;24262:23;24258:32;24255:52;;;24303:1;24300;24293:12;24255:52;24335:9;24329:16;24388:5;24381:13;24374:21;24367:5;24364:32;24354:60;;24410:1;24407;24400:12;25362:258;25475:12;;-1:-1:-1;;;;;25471:21:131;;;25459:34;;25546:4;25535:16;;;25529:23;25525:32;;;25509:14;;;25502:56;25607:4;25596:16;;;25590:23;25574:14;;25567:47;25362:258::o;25625:314::-;25835:3;25820:19;;25848:42;25824:9;25872:6;25848:42;:::i;:::-;25926:6;25921:2;25910:9;25906:18;25899:34;25625:314;;;;;:::o;26160:200::-;26226:9;;;26199:4;26254:9;;26282:10;;26294:12;;;26278:29;26317:12;;;26309:21;;26275:56;26272:82;;;26334:18;;:::i;26718:210::-;26832:9;26869:53;26907:14;26900:5;26869:53;:::i;26933:127::-;26994:10;26989:3;26985:20;26982:1;26975:31;27025:4;27022:1;27015:15;27049:4;27046:1;27039:15;27065:224;27148:6;27201:2;27189:9;27180:7;27176:23;27172:32;27169:52;;;27217:1;27214;27207:12;27169:52;27240:43;27275:7;27264:9;27240:43;:::i;28250:297::-;28309:6;28362:2;28350:9;28341:7;28337:23;28333:32;28330:52;;;28378:1;28375;28368:12;28330:52;28417:9;28404:23;-1:-1:-1;;;;;28460:5:131;28456:42;28449:5;28446:53;28436:81;;28513:1;28510;28503:12;28906:290;28964:6;29017:2;29005:9;28996:7;28992:23;28988:32;28985:52;;;29033:1;29030;29023:12;28985:52;29072:9;29059:23;-1:-1:-1;;;;;29115:5:131;29111:36;29104:5;29101:47;29091:75;;29162:1;29159;29152:12;29201:276;29259:6;29312:2;29300:9;29291:7;29287:23;29283:32;29280:52;;;29328:1;29325;29318:12;29280:52;29367:9;29354:23;29417:10;29410:5;29406:22;29399:5;29396:33;29386:61;;29443:1;29440;29433:12;29482:274;29540:6;29593:2;29581:9;29572:7;29568:23;29564:32;29561:52;;;29609:1;29606;29599:12;29561:52;29648:9;29635:23;29698:8;29691:5;29687:20;29680:5;29677:31;29667:59;;29722:1;29719;29712:12;29761:128;29828:9;;;29849:11;;;29846:37;;;29863:18;;:::i;33113:242::-;33295:2;33280:18;;33307:42;33284:9;33331:6;33307:42;:::i;33924:396::-;34156:3;34141:19;;34169:42;34145:9;34193:6;34169:42;:::i;:::-;34247:6;34242:2;34231:9;34227:18;34220:34;34305:6;34298:14;34291:22;34285:3;34274:9;34270:19;34263:51;33924:396;;;;;;:::o;34325:770::-;34556:2;34568:21;;;34638:13;;34541:18;;;34660:22;;;34508:4;;34735;;34713:2;34698:18;;;34762:15;;;34508:4;34805:195;34819:6;34816:1;34813:13;34805:195;;;34884:13;;-1:-1:-1;;;;;34880:39:131;34868:52;;34940:12;;;;34975:15;;;;34916:1;34834:9;34805:195;;;-1:-1:-1;;;;;;;;35056:32:131;;;;35036:18;;35029:60;;;;-1:-1:-1;35017:3:131;34325:770;-1:-1:-1;34325:770:131:o;35379:250::-;35464:1;35474:113;35488:6;35485:1;35482:13;35474:113;;;35564:11;;;35558:18;35545:11;;;35538:39;35510:2;35503:10;35474:113;;;-1:-1:-1;;35621:1:131;35603:16;;35596:27;35379:250::o;35634:287::-;35763:3;35801:6;35795:13;35817:66;35876:6;35871:3;35864:4;35856:6;35852:17;35817:66;:::i;:::-;35899:16;;;;;35634:287;-1:-1:-1;;35634:287:131:o;36438:626::-;36784:3;36769:19;;36797:42;36773:9;36821:6;36797:42;:::i;:::-;36870:2;36855:18;;36848:34;;;;36913:3;36898:19;;36891:35;;;;36957:3;36942:19;;36935:35;;;;37001:3;36986:19;;36979:35;37045:3;37030:19;;;37023:35;36438:626;;-1:-1:-1;36438:626:131:o;37069:179::-;37104:3;37146:1;37128:16;37125:23;37122:120;;;37192:1;37189;37186;37171:23;-1:-1:-1;37229:1:131;37223:8;37218:3;37214:18;37122:120;37069:179;:::o;37253:671::-;37292:3;37334:4;37316:16;37313:26;37310:39;;;37253:671;:::o;37310:39::-;37376:2;37370:9;-1:-1:-1;;37441:16:131;37437:25;;37434:1;37370:9;37413:50;37492:4;37486:11;37516:16;37551:18;37622:2;37615:4;37607:6;37603:17;37600:25;37595:2;37587:6;37584:14;37581:45;37578:58;;;37629:5;;;;;37253:671;:::o;37578:58::-;37666:6;37660:4;37656:17;37645:28;;37702:3;37696:10;37729:2;37721:6;37718:14;37715:27;;;37735:5;;;;;;37253:671;:::o;37715:27::-;37819:2;37800:16;37794:4;37790:27;37786:36;37779:4;37770:6;37765:3;37761:16;37757:27;37754:69;37751:82;;;37826:5;;;;;;37253:671;:::o;37751:82::-;37842:57;37893:4;37884:6;37876;37872:19;37868:30;37862:4;37842:57;:::i;:::-;-1:-1:-1;37915:3:131;;37253:671;-1:-1:-1;;;;;37253:671:131:o;37929:396::-;38078:2;38067:9;38060:21;38041:4;38110:6;38104:13;38153:6;38148:2;38137:9;38133:18;38126:34;38169:79;38241:6;38236:2;38225:9;38221:18;38216:2;38208:6;38204:15;38169:79;:::i;:::-;38309:2;38288:15;-1:-1:-1;;38284:29:131;38269:45;;;;38316:2;38265:54;;37929:396;-1:-1:-1;;37929:396:131:o;38330:297::-;38448:12;;38495:4;38484:16;;;38478:23;;38448:12;38513:16;;38510:111;;;-1:-1:-1;;38587:4:131;38583:17;;;;38580:1;38576:25;38572:38;38561:50;;38330:297;-1:-1:-1;38330:297:131:o;38968:168::-;39041:9;;;39072;;39089:15;;;39083:22;;39069:37;39059:71;;39110:18;;:::i;39141:554::-;39459:3;39444:19;;39472:42;39448:9;39496:6;39472:42;:::i;:::-;39550:6;39545:2;39534:9;39530:18;39523:34;39594:6;39588:3;39577:9;39573:19;39566:35;39638:6;39632:3;39621:9;39617:19;39610:35;39682:6;39676:3;39665:9;39661:19;39654:35;39141:554;;;;;;;;:::o;39953:209::-;39985:1;40011;40001:132;;40055:10;40050:3;40046:20;40043:1;40036:31;40090:4;40087:1;40080:15;40118:4;40115:1;40108:15;40001:132;-1:-1:-1;40147:9:131;;39953:209::o;40167:136::-;40202:3;-1:-1:-1;;;40223:22:131;;40220:48;;40248:18;;:::i;:::-;-1:-1:-1;40288:1:131;40284:13;;40167:136::o;40660:216::-;40724:9;;;40752:11;;;40699:3;40782:9;;40810:10;;40806:19;;40835:10;;40827:19;;40803:44;40800:70;;;40850:18;;:::i",
    "linkReferences": {
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "KandelLib": [
          {
            "start": 3493,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "81625": [
        {
          "start": 1370,
          "length": 32
        },
        {
          "start": 5368,
          "length": 32
        },
        {
          "start": 5414,
          "length": 32
        }
      ],
      "81629": [
        {
          "start": 1266,
          "length": 32
        },
        {
          "start": 2643,
          "length": 32
        },
        {
          "start": 3016,
          "length": 32
        },
        {
          "start": 4460,
          "length": 32
        },
        {
          "start": 4600,
          "length": 32
        },
        {
          "start": 5000,
          "length": 32
        },
        {
          "start": 6476,
          "length": 32
        },
        {
          "start": 6963,
          "length": 32
        },
        {
          "start": 9329,
          "length": 32
        },
        {
          "start": 10593,
          "length": 32
        },
        {
          "start": 11431,
          "length": 32
        },
        {
          "start": 11718,
          "length": 32
        },
        {
          "start": 12512,
          "length": 32
        },
        {
          "start": 14413,
          "length": 32
        },
        {
          "start": 14670,
          "length": 32
        },
        {
          "start": 15432,
          "length": 32
        }
      ],
      "84656": [
        {
          "start": 2117,
          "length": 32
        },
        {
          "start": 2878,
          "length": 32
        },
        {
          "start": 4057,
          "length": 32
        },
        {
          "start": 7473,
          "length": 32
        },
        {
          "start": 9129,
          "length": 32
        },
        {
          "start": 10467,
          "length": 32
        },
        {
          "start": 11244,
          "length": 32
        },
        {
          "start": 13109,
          "length": 32
        }
      ],
      "87949": [
        {
          "start": 2005,
          "length": 32
        },
        {
          "start": 3963,
          "length": 32
        },
        {
          "start": 5538,
          "length": 32
        },
        {
          "start": 6386,
          "length": 32
        },
        {
          "start": 8494,
          "length": 32
        },
        {
          "start": 9640,
          "length": 32
        },
        {
          "start": 9757,
          "length": 32
        },
        {
          "start": 10142,
          "length": 32
        },
        {
          "start": 10335,
          "length": 32
        },
        {
          "start": 10938,
          "length": 32
        },
        {
          "start": 14125,
          "length": 32
        }
      ],
      "87953": [
        {
          "start": 1318,
          "length": 32
        },
        {
          "start": 4010,
          "length": 32
        },
        {
          "start": 5581,
          "length": 32
        },
        {
          "start": 6427,
          "length": 32
        },
        {
          "start": 8456,
          "length": 32
        },
        {
          "start": 9859,
          "length": 32
        },
        {
          "start": 9976,
          "length": 32
        },
        {
          "start": 10189,
          "length": 32
        },
        {
          "start": 10288,
          "length": 32
        },
        {
          "start": 11068,
          "length": 32
        }
      ],
      "87956": [
        {
          "start": 894,
          "length": 32
        },
        {
          "start": 10236,
          "length": 32
        },
        {
          "start": 10382,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BASE()": "ec342ad0",
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "QUOTE()": "9c579839",
    "RESERVE_ID()": "fbc7d10b",
    "TICK_SPACING()": "46ca626b",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "baseQuoteTickOffset()": "14ee02bd",
    "checkList(address[])": "03eb17e2",
    "createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)": "3fce15c9",
    "depositFunds(uint256,uint256)": "61638ed5",
    "getOffer(uint8,uint256)": "7692c328",
    "indexOfOfferId(uint8,uint256)": "ea0f394d",
    "initialize(address)": "c4d66de8",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "offerIdOfIndex(uint8,uint256)": "bfc353f9",
    "offeredVolume(uint8)": "d2e498fe",
    "params()": "cff0ab96",
    "pending(uint8)": "98ed5340",
    "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": "148b7cea",
    "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": "ace67902",
    "populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)": "4f605c5b",
    "populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)": "e4f248f4",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "reserveBalance(uint8)": "18acf82f",
    "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": "790532a1",
    "retractOffers(uint256,uint256)": "a2e241af",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setBaseQuoteTickOffset(uint256)": "a224b5e9",
    "setGasprice(uint256)": "fcaa7e2e",
    "setGasreq(uint256)": "34bd8931",
    "setRouter(address)": "c0d78655",
    "setStepSize(uint256)": "1450acd2",
    "withdrawFromMangrove(uint256,address)": "7144df24",
    "withdrawFunds(uint256,uint256,address)": "9ee8a91c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKeyBaseQuote\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Credit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Debit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"}],\"name\":\"OfferListKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetBaseQuoteTickOffset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasprice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasreq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"SetIndexMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetLength\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"SetReserveId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetStepSize\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TICK_SPACING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseQuoteTickOffset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"baseQuoteTickIndex0\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_baseQuoteTickOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stepSize\",\"type\":\"uint256\"}],\"name\":\"createDistribution\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"indexOfOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AavePooledRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"offerIdOfIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"offeredVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"populate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"}],\"name\":\"populateChunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"baseQuoteTickIndex0\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askGives\",\"type\":\"uint256\"}],\"name\":\"populateChunkFromOffset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"baseQuoteTickIndex0\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_baseQuoteTickOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askGives\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"populateFromOffset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"freeWei\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"retractAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"retractOffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseQuoteTickOffset\",\"type\":\"uint256\"}],\"name\":\"setBaseQuoteTickOffset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"}],\"name\":\"setGasprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"}],\"name\":\"setGasreq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stepSize\",\"type\":\"uint256\"}],\"name\":\"setStepSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Credit(address,uint256)\":{\"params\":{\"amount\":\"the amount.\",\"token\":\"the asset. This is indexed so that RPC calls can filter on it.\"}},\"Debit(address,uint256)\":{\"params\":{\"amount\":\"the amount.\",\"token\":\"the asset. This is indexed so that RPC calls can filter on it.\"}},\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"OfferListKey(bytes32)\":{\"params\":{\"olKeyHash\":\"of the market Kandel is making\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetBaseQuoteTickOffset(uint256)\":{\"params\":{\"value\":\"the tick offset.\"}},\"SetGasprice(uint256)\":{\"params\":{\"value\":\"the gasprice for offers.\"}},\"SetGasreq(uint256)\":{\"params\":{\"value\":\"the gasreq (including router's gasreq) for offers\"}},\"SetIndexMapping(uint8,uint256,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\",\"offerId\":\"the Mangrove offer id.\"}},\"SetLength(uint256)\":{\"params\":{\"value\":\"the length.\"}},\"SetReserveId(address)\":{\"params\":{\"reserveId\":\"identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}},\"SetStepSize(uint256)\":{\"params\":{\"value\":\"the step size in amount of price points to jump for posting dual offer\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"constructor\":{\"params\":{\"gasreq\":\"the gasreq to use for offers\",\"mgv\":\"The Mangrove deployment.\",\"olKeyBaseQuote\":\"The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.\",\"reserveId\":\"identifier of this contract's reserve when using a router.\"}},\"createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"the absolute price of an offer is the ratio of quote/base volumes of tokens it tradesthe tick of offers on Mangrove are in relative taker price of maker's inbound/outbound volumes of tokens it tradesfor Bids, outbound_tkn=quote, inbound_tkn=base so relative taker price of a a bid is the inverse of the absolute price.for Asks, outbound_tkn=base, inbound_tkn=quote so relative taker price of an ask coincides with absolute price.Index0 will contain the ask with the lowest relative price and the bid with the highest relative price. Absolute price is geometrically increasing over indexes.tickOffset moves an offer relative price s.t. `AskTick_{i+1} = AskTick_i + tickOffset` and `BidTick_{i+1} = BidTick_i - tickOffset`A hole is left in the middle at the size of stepSize - either an offer or its dual is posted, not both.The caller should make sure the minimum and maximum tick does not exceed the MIN_TICK and MAX_TICK from respectively; otherwise, populate will fail for those offers.If type(uint).max is used for `bidGives` or `askGives` then very high or low prices can yield gives=0 (which results in both offer an dual being dead) or gives>=type(uin96).max which is not supported by Mangrove.\",\"params\":{\"_baseQuoteTickOffset\":\"the tick offset used for the geometric progression deployment. Must be at least 1. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"askGives\":\"The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.\",\"baseQuoteTickIndex0\":\"the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"bidGives\":\"The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.\",\"firstAskIndex\":\"the (inclusive) index after which offer should be an ask. Must be at most `pricePoints`.\",\"from\":\"populate offers starting from this index (inclusive). Must be at most `pricePoints`.\",\"pricePoints\":\"the number of price points for the Kandel instance. Must be at least 2.\",\"stepSize\":\"in amount of price points to jump for posting dual offer. Must be less than `pricePoints`.\",\"to\":\"populate offers until this index (exclusive). Must be at most `pricePoints`.\"},\"returns\":{\"distribution\":\"the distribution of bids and asks to populate\"}},\"depositFunds(uint256,uint256)\":{\"params\":{\"baseAmount\":\"the amount of base tokens to deposit.\",\"quoteAmount\":\"the amount of quote tokens to deposit.\"}},\"getOffer(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type.\",\"index\":\"the index.\"},\"returns\":{\"offer\":\"the Mangrove offer.\"}},\"indexOfOfferId(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"offerId\":\"the Mangrove offer id.\"},\"returns\":{\"index\":\"the index.\"}},\"initialize(address)\":{\"params\":{\"router_\":\"the Aave router to use.\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"offerIdOfIndex(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\"},\"returns\":{\"offerId\":\"the Mangrove offer id.\"}},\"offeredVolume(uint8)\":{\"details\":\"function is very gas costly, for external calls only.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"volume\":\"the total gives of all offers of the offer type.\"}},\"pending(uint8)\":{\"details\":\"Gas costly function, better suited for off chain calls.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"_0\":\"the pending amount\"}},\"populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"details\":\"This function is used at initialization and can fund with provision for the offers.Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.If this function is invoked with different pricePoints or stepSize, then first retract all offers.msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens).\",\"params\":{\"baseAmount\":\"base amount to deposit\",\"distribution\":\"the distribution of bids and asks to populate\",\"parameters\":\"the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.\",\"quoteAmount\":\"quote amount to deposit\"}},\"populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))\":{\"params\":{\"distribution\":\"the distribution of bids and asks to populate\"}},\"populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)\":{\"details\":\"This is typically used after a call to `populateFromOffset` to populate the rest of the offers with the same parameters. See that function for further details.\",\"params\":{\"askGives\":\"The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.\",\"baseQuoteTickIndex0\":\"the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"bidGives\":\"The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.\",\"firstAskIndex\":\"the (inclusive) index after which offer should be an ask.\",\"from\":\"populate offers starting from this index (inclusive).\",\"to\":\"populate offers until this index (exclusive).\"}},\"populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"details\":\"See `createDistribution` for further details.\",\"params\":{\"_baseQuoteTickOffset\":\"the tick offset used for the geometric progression deployment. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"askGives\":\"The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.\",\"baseAmount\":\"base amount to deposit\",\"baseQuoteTickIndex0\":\"the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"bidGives\":\"The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.\",\"firstAskIndex\":\"the (inclusive) index after which offer should be an ask.\",\"from\":\"populate offers starting from this index (inclusive).\",\"parameters\":\"the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.\",\"quoteAmount\":\"quote amount to deposit\",\"to\":\"populate offers until this index (exclusive).\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"reserveBalance(uint8)\":{\"params\":{\"ba\":\"the offer type.\"},\"returns\":{\"balance\":\"the balance of the token.\"}},\"retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"baseAmount\":\"the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"freeWei\":\"the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.\",\"from\":\"retract offers starting from this index.\",\"quoteAmount\":\"the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"recipient\":\"the recipient of the funds.\",\"to\":\"retract offers until this index.\"}},\"retractOffers(uint256,uint256)\":{\"details\":\"use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.\",\"params\":{\"from\":\"the start index.\",\"to\":\"the end index.\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setBaseQuoteTickOffset(uint256)\":{\"params\":{\"_baseQuoteTickOffset\":\"the new tick offset.\"}},\"setGasprice(uint256)\":{\"params\":{\"gasprice\":\"the gasprice.\"}},\"setGasreq(uint256)\":{\"params\":{\"gasreq\":\"the gasreq.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"setStepSize(uint256)\":{\"params\":{\"stepSize\":\"the step size.\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}},\"withdrawFunds(uint256,uint256,address)\":{\"details\":\"it is up to the caller to make sure there are still enough funds for live offers.\",\"params\":{\"baseAmount\":\"the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"quoteAmount\":\"the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"recipient\":\"the address to which the withdrawn funds should be sent to.\"}}},\"title\":\"A Kandel strat with geometric price progression which stores funds on AAVE to generate yield.\",\"version\":1},\"userdoc\":{\"events\":{\"Credit(address,uint256)\":{\"notice\":\"the Kandel instance is credited of `amount` by its owner.By emitting this data, an indexer will be able to keep track of what credits are made.\"},\"Debit(address,uint256)\":{\"notice\":\"the Kandel instance is debited of `amount` by its owner.By emitting this data, an indexer will be able to keep track of what debits are made.\"},\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"OfferListKey(bytes32)\":{\"notice\":\"The traded offer listwe only emit this, so that the events for a Kandel is self contained. If one uses the KandelSeeder to deploy, then this information is already available from NewKandel or NewAaveKandel events.\"},\"PopulateEnd()\":{\"notice\":\"logs the end of a call to populateBy emitting this, an indexer will know that the previous PopulateStart event is over.\"},\"PopulateStart()\":{\"notice\":\"logs the start of a call to populateBy emitting this, an indexer will be able to know that the following events are in the context of populate.\"},\"RetractEnd()\":{\"notice\":\"logs the end of a call to retractOffersBy emitting this, an indexer will know that the previous RetractStart event is over.\"},\"RetractStart()\":{\"notice\":\"logs the start of a call to retractOffersBy emitting this, an indexer will be able to know that the following events are in the context of retract.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetBaseQuoteTickOffset(uint256)\":{\"notice\":\"The tick offset for absolute price used for the on-chain geometric progression deployment in `createDistribution`. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\"},\"SetGasprice(uint256)\":{\"notice\":\"the gasprice has been set.By emitting this data, an indexer will be able to keep track of what gasprice is used.\"},\"SetGasreq(uint256)\":{\"notice\":\"the gasreq has been set.By emitting this data, an indexer will be able to keep track of what gasreq is used.\"},\"SetIndexMapping(uint8,uint256,uint256)\":{\"notice\":\"a new offer of type `ba` with `offerId` was created at price `index`By emitting this data, an indexer will be able to keep track of what offer has what index.\"},\"SetLength(uint256)\":{\"notice\":\"the length of the index has been set.By emitting this data, an indexer will be able to keep track of what length is used.\"},\"SetReserveId(address)\":{\"notice\":\"`reserveId` is set in the constructorby emitting this event, an indexer will be able to keep track of what reserve is used.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"},\"SetStepSize(uint256)\":{\"notice\":\"the step size has been set.\"}},\"kind\":\"user\",\"methods\":{\"BASE()\":{\"notice\":\"base of the market Kandel is making\"},\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"QUOTE()\":{\"notice\":\"quote of the market Kandel is making\"},\"RESERVE_ID()\":{\"notice\":\"identifier of this contract's reserve when using a router\"},\"TICK_SPACING()\":{\"notice\":\"tickSpacing of the market Kandel is making\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"baseQuoteTickOffset()\":{\"notice\":\"The tick offset for absolute price used for the on-chain geometric progression deployment in `createDistribution`. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"constructor\":{\"notice\":\"Constructor\"},\"createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a distribution of bids and asks given by the parameters. Dual offers are included with gives=0.\"},\"depositFunds(uint256,uint256)\":{\"notice\":\"deposits funds to be available for being offered. Will increase `pending`.\"},\"getOffer(uint8,uint256)\":{\"notice\":\"gets the Mangrove offer at the given index for the offer type.\"},\"indexOfOfferId(uint8,uint256)\":{\"notice\":\"Maps an offer type and Mangrove offer id to index.\"},\"initialize(address)\":{\"notice\":\"Sets the AaveRouter as router and activates router for base and quote\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"offerIdOfIndex(uint8,uint256)\":{\"notice\":\"maps index of offers to offer id on Mangrove.\"},\"offeredVolume(uint8)\":{\"notice\":\"gets the total gives of all offers of the offer type.\"},\"params()\":{\"notice\":\"Storage of the parameters for the strat.\"},\"pending(uint8)\":{\"notice\":\"gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises.\"},\"populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"notice\":\"publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).\"},\"populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))\":{\"notice\":\"Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.This function is not payable, use `populate` to fund along with populate.\"},\"populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)\":{\"notice\":\"publishes bids/asks according to a geometric distribution, and reads parameters from the Kandel instance.\"},\"populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"notice\":\"publishes bids/asks according to a geometric distribution, and sets all parameters according to inputs.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"reserveBalance(uint8)\":{\"notice\":\"returns the amount of the router's balance that belong to this contract for the token offered for the offer type.\"},\"retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Retracts offers, withdraws funds, and withdraws free wei from Mangrove.\"},\"retractOffers(uint256,uint256)\":{\"notice\":\"retracts and deprovisions offers of the distribution interval `[from, to[`.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setBaseQuoteTickOffset(uint256)\":{\"notice\":\"sets the tick offset if different from existing.\"},\"setGasprice(uint256)\":{\"notice\":\"sets the gasprice for offers\"},\"setGasreq(uint256)\":{\"notice\":\"sets the gasreq (including router's gasreq) for offers\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"setStepSize(uint256)\":{\"notice\":\"sets the step size\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"},\"withdrawFunds(uint256,uint256,address)\":{\"notice\":\"withdraws funds from the contract's reserve\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/AaveKandel.sol\":\"AaveKandel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/integrations/AaveV3Lender.sol\":{\"keccak256\":\"0x65c1d71a127fec7fdf05944089c5199201bc93ca1e5027ed08302984f67ab31c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://253877f6572d8601c115f40f22bea85522d11b1fd0a62e3c441a6c82bdfa7ba1\",\"dweb:/ipfs/QmPGJb4VmwXsX24zs2m4sxpv7UYXKs95uHpJ7gYVJhZwPJ\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/AaveKandel.sol\":{\"keccak256\":\"0x546f75007ca2c287cda9d70a0ccf321a00ffaedbed35557b59901b55bd0c4704\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0905ddfb5e00addb91f7bed3cea4fdd3b266ef0b076f89ba41b33da0ef641e68\",\"dweb:/ipfs/QmXT77BbKDZgzWSW9Tcigvm1hrkMd6R4NTyfpiRwKaWQNW\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol\":{\"keccak256\":\"0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518\",\"dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol\":{\"keccak256\":\"0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f\",\"dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol\":{\"keccak256\":\"0x49bf32ef326950c199d8dc7aad069779696d2aa54a6aeb65924c68fe2c93956b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://450bf42af8faa7f56d8102436f778ef2c3c9b91d80f21f742de78bf3de7b842b\",\"dweb:/ipfs/QmfFguoZ5wFcptVY7fXj7XHG68Eu7XNMum9GxMogz4Fo75\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol\":{\"keccak256\":\"0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510\",\"dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol\":{\"keccak256\":\"0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b\",\"dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol\":{\"keccak256\":\"0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd\",\"dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol\":{\"keccak256\":\"0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066\",\"dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol\":{\"keccak256\":\"0x2c3da5585b1baace5d0f7f769beace104ebff7bded77812f67e17b54329da270\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://48d1e2a0b57d8de56a7d6adb0755dace4e594996fcba1c5235b6bba22008309e\",\"dweb:/ipfs/QmUs8bXDL9sbi2uGGfCU62noGCffh5YysjdagPdnxfZgbL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/HasAaveBalanceMemoizer.sol\":{\"keccak256\":\"0xa4a742f5eabf48824fffe0964e492c8ca30ade52489b70ebb953a7d128d75642\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0da6001867bd2b0439e27411a8fdf552e70da7cc9abd1d69f8113357c7bd89ab\",\"dweb:/ipfs/QmZxDy1osTChe6G4iUFUDk5XcBKEieaQ1YbKGvY5Y7uGca\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/DataTypes.sol\":{\"keccak256\":\"0x775020af3bbcf63aef55c874e3d27917f3c44da0d385d517f042a0098f18c73e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5b76490e8120d2c263b469225d856a7877461468ca2155e62a10440cd3e0d2e5\",\"dweb:/ipfs/QmTpuDqndYBysHtCAoN8r3Ep8ia9yPiF5r1c7DWz25THjH\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IATokenIsh.sol\":{\"keccak256\":\"0x0a6151a8ff99ef98f78dddd4300b456789a3cf10630ed748f6843118bfedfedc\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3cc56ed42f444540fbc5e7d636929c5c33c4b71c7538552d7275d100f52f3edd\",\"dweb:/ipfs/QmeWMFQFDCWi7nFR4CScHRoGVBxUvnLUbvUecBCW3sMfi8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPool.sol\":{\"keccak256\":\"0x782b82cf3ecb497600a70b8e7b116b310d1b5c2d56cf7b4148c4d58fe340aa31\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://4b1d7437c36656463add0b99c8ad81d8dff35ce09f6bbb9620ec7e5bda9ed562\",\"dweb:/ipfs/QmbWYNTHFQpUPuWswmSFvyuNgMeqeA3xcqrDBiz3woPkc7\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPoolAddressesProvider.sol\":{\"keccak256\":\"0x8406a64ea84a30724906cc2d3753ec4de384838eadaf7b502fa459304f338fb9\",\"license\":\"AGPL-3.0\",\"urls\":[\"bzz-raw://3e4dbfdb5a653794fde64501ffbe0d28febe5b97f5b2b061ce341c4e63f235dc\",\"dweb:/ipfs/QmeoseiHXJ2uGpJKfpPfzhfq4Vpcj3YfmWRHcR9C4trpC5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IRewardsControllerIsh.sol\":{\"keccak256\":\"0x80fa787b6bace14b44e4856939452c4bf32f7866cfcc302cf192d0576287ff55\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://a65bd5a79a1757dc72ff918d544cb08c846d5d6a2a5f3e6153cd0f4874e5f960\",\"dweb:/ipfs/QmQmBnSAPAPRERisyvV6V4ATt7d4JskvEEZ35MUkx9qvFv\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address"
            },
            {
              "internalType": "struct OLKey",
              "name": "olKeyBaseQuote",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Credit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Debit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferListKey",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateStart",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetBaseQuoteTickOffset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasprice",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasreq",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetIndexMapping",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetLength",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetReserveId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStepSize",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RESERVE_ID",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TICK_SPACING",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseQuoteTickOffset",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "baseQuoteTickIndex0",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_baseQuoteTickOffset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bidGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stepSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "createDistribution",
          "outputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFunds"
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexOfOfferId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract AavePooledRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerIdOfIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offeredVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "volume",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "params",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pending",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CoreKandel.Params",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populate"
        },
        {
          "inputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "populateChunk"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "baseQuoteTickIndex0",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bidGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askGives",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populateChunkFromOffset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "baseQuoteTickIndex0",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_baseQuoteTickOffset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bidGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askGives",
              "type": "uint256"
            },
            {
              "internalType": "struct CoreKandel.Params",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populateFromOffset"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "freeWei",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractAndWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_baseQuoteTickOffset",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseQuoteTickOffset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasprice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasreq"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stepSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStepSize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFunds"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "constructor": {
            "params": {
              "gasreq": "the gasreq to use for offers",
              "mgv": "The Mangrove deployment.",
              "olKeyBaseQuote": "The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.",
              "reserveId": "identifier of this contract's reserve when using a router."
            }
          },
          "createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)": {
            "details": "the absolute price of an offer is the ratio of quote/base volumes of tokens it tradesthe tick of offers on Mangrove are in relative taker price of maker's inbound/outbound volumes of tokens it tradesfor Bids, outbound_tkn=quote, inbound_tkn=base so relative taker price of a a bid is the inverse of the absolute price.for Asks, outbound_tkn=base, inbound_tkn=quote so relative taker price of an ask coincides with absolute price.Index0 will contain the ask with the lowest relative price and the bid with the highest relative price. Absolute price is geometrically increasing over indexes.tickOffset moves an offer relative price s.t. `AskTick_{i+1} = AskTick_i + tickOffset` and `BidTick_{i+1} = BidTick_i - tickOffset`A hole is left in the middle at the size of stepSize - either an offer or its dual is posted, not both.The caller should make sure the minimum and maximum tick does not exceed the MIN_TICK and MAX_TICK from respectively; otherwise, populate will fail for those offers.If type(uint).max is used for `bidGives` or `askGives` then very high or low prices can yield gives=0 (which results in both offer an dual being dead) or gives>=type(uin96).max which is not supported by Mangrove.",
            "params": {
              "_baseQuoteTickOffset": "the tick offset used for the geometric progression deployment. Must be at least 1. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "askGives": "The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.",
              "baseQuoteTickIndex0": "the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "bidGives": "The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.",
              "firstAskIndex": "the (inclusive) index after which offer should be an ask. Must be at most `pricePoints`.",
              "from": "populate offers starting from this index (inclusive). Must be at most `pricePoints`.",
              "pricePoints": "the number of price points for the Kandel instance. Must be at least 2.",
              "stepSize": "in amount of price points to jump for posting dual offer. Must be less than `pricePoints`.",
              "to": "populate offers until this index (exclusive). Must be at most `pricePoints`."
            },
            "returns": {
              "distribution": "the distribution of bids and asks to populate"
            }
          },
          "depositFunds(uint256,uint256)": {
            "params": {
              "baseAmount": "the amount of base tokens to deposit.",
              "quoteAmount": "the amount of quote tokens to deposit."
            }
          },
          "getOffer(uint8,uint256)": {
            "params": {
              "ba": "the offer type.",
              "index": "the index."
            },
            "returns": {
              "offer": "the Mangrove offer."
            }
          },
          "indexOfOfferId(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "offerId": "the Mangrove offer id."
            },
            "returns": {
              "index": "the index."
            }
          },
          "initialize(address)": {
            "params": {
              "router_": "the Aave router to use."
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "offerIdOfIndex(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "index": "the index"
            },
            "returns": {
              "offerId": "the Mangrove offer id."
            }
          },
          "offeredVolume(uint8)": {
            "details": "function is very gas costly, for external calls only.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "volume": "the total gives of all offers of the offer type."
            }
          },
          "pending(uint8)": {
            "details": "Gas costly function, better suited for off chain calls.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "_0": "the pending amount"
            }
          },
          "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "details": "This function is used at initialization and can fund with provision for the offers.Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.If this function is invoked with different pricePoints or stepSize, then first retract all offers.msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens).",
            "params": {
              "baseAmount": "base amount to deposit",
              "distribution": "the distribution of bids and asks to populate",
              "parameters": "the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.",
              "quoteAmount": "quote amount to deposit"
            }
          },
          "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": {
            "params": {
              "distribution": "the distribution of bids and asks to populate"
            }
          },
          "populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)": {
            "details": "This is typically used after a call to `populateFromOffset` to populate the rest of the offers with the same parameters. See that function for further details.",
            "params": {
              "askGives": "The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.",
              "baseQuoteTickIndex0": "the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "bidGives": "The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.",
              "firstAskIndex": "the (inclusive) index after which offer should be an ask.",
              "from": "populate offers starting from this index (inclusive).",
              "to": "populate offers until this index (exclusive)."
            }
          },
          "populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "details": "See `createDistribution` for further details.",
            "params": {
              "_baseQuoteTickOffset": "the tick offset used for the geometric progression deployment. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "askGives": "The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.",
              "baseAmount": "base amount to deposit",
              "baseQuoteTickIndex0": "the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "bidGives": "The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.",
              "firstAskIndex": "the (inclusive) index after which offer should be an ask.",
              "from": "populate offers starting from this index (inclusive).",
              "parameters": "the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.",
              "quoteAmount": "quote amount to deposit",
              "to": "populate offers until this index (exclusive)."
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "reserveBalance(uint8)": {
            "params": {
              "ba": "the offer type."
            },
            "returns": {
              "balance": "the balance of the token."
            }
          },
          "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": {
            "params": {
              "baseAmount": "the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "freeWei": "the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.",
              "from": "retract offers starting from this index.",
              "quoteAmount": "the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "recipient": "the recipient of the funds.",
              "to": "retract offers until this index."
            }
          },
          "retractOffers(uint256,uint256)": {
            "details": "use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.",
            "params": {
              "from": "the start index.",
              "to": "the end index."
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setBaseQuoteTickOffset(uint256)": {
            "params": {
              "_baseQuoteTickOffset": "the new tick offset."
            }
          },
          "setGasprice(uint256)": {
            "params": {
              "gasprice": "the gasprice."
            }
          },
          "setGasreq(uint256)": {
            "params": {
              "gasreq": "the gasreq."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "setStepSize(uint256)": {
            "params": {
              "stepSize": "the step size."
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          },
          "withdrawFunds(uint256,uint256,address)": {
            "details": "it is up to the caller to make sure there are still enough funds for live offers.",
            "params": {
              "baseAmount": "the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "quoteAmount": "the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "recipient": "the address to which the withdrawn funds should be sent to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BASE()": {
            "notice": "base of the market Kandel is making"
          },
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "QUOTE()": {
            "notice": "quote of the market Kandel is making"
          },
          "RESERVE_ID()": {
            "notice": "identifier of this contract's reserve when using a router"
          },
          "TICK_SPACING()": {
            "notice": "tickSpacing of the market Kandel is making"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "baseQuoteTickOffset()": {
            "notice": "The tick offset for absolute price used for the on-chain geometric progression deployment in `createDistribution`. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)": {
            "notice": "Creates a distribution of bids and asks given by the parameters. Dual offers are included with gives=0."
          },
          "depositFunds(uint256,uint256)": {
            "notice": "deposits funds to be available for being offered. Will increase `pending`."
          },
          "getOffer(uint8,uint256)": {
            "notice": "gets the Mangrove offer at the given index for the offer type."
          },
          "indexOfOfferId(uint8,uint256)": {
            "notice": "Maps an offer type and Mangrove offer id to index."
          },
          "initialize(address)": {
            "notice": "Sets the AaveRouter as router and activates router for base and quote"
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "offerIdOfIndex(uint8,uint256)": {
            "notice": "maps index of offers to offer id on Mangrove."
          },
          "offeredVolume(uint8)": {
            "notice": "gets the total gives of all offers of the offer type."
          },
          "params()": {
            "notice": "Storage of the parameters for the strat."
          },
          "pending(uint8)": {
            "notice": "gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises."
          },
          "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "notice": "publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead)."
          },
          "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": {
            "notice": "Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.This function is not payable, use `populate` to fund along with populate."
          },
          "populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)": {
            "notice": "publishes bids/asks according to a geometric distribution, and reads parameters from the Kandel instance."
          },
          "populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "notice": "publishes bids/asks according to a geometric distribution, and sets all parameters according to inputs."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "reserveBalance(uint8)": {
            "notice": "returns the amount of the router's balance that belong to this contract for the token offered for the offer type."
          },
          "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": {
            "notice": "Retracts offers, withdraws funds, and withdraws free wei from Mangrove."
          },
          "retractOffers(uint256,uint256)": {
            "notice": "retracts and deprovisions offers of the distribution interval `[from, to[`."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setBaseQuoteTickOffset(uint256)": {
            "notice": "sets the tick offset if different from existing."
          },
          "setGasprice(uint256)": {
            "notice": "sets the gasprice for offers"
          },
          "setGasreq(uint256)": {
            "notice": "sets the gasreq (including router's gasreq) for offers"
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "setStepSize(uint256)": {
            "notice": "sets the step size"
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          },
          "withdrawFunds(uint256,uint256,address)": {
            "notice": "withdraws funds from the contract's reserve"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/AaveKandel.sol": "AaveKandel"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/integrations/AaveV3Lender.sol": {
        "keccak256": "0x65c1d71a127fec7fdf05944089c5199201bc93ca1e5027ed08302984f67ab31c",
        "urls": [
          "bzz-raw://253877f6572d8601c115f40f22bea85522d11b1fd0a62e3c441a6c82bdfa7ba1",
          "dweb:/ipfs/QmPGJb4VmwXsX24zs2m4sxpv7UYXKs95uHpJ7gYVJhZwPJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/AaveKandel.sol": {
        "keccak256": "0x546f75007ca2c287cda9d70a0ccf321a00ffaedbed35557b59901b55bd0c4704",
        "urls": [
          "bzz-raw://0905ddfb5e00addb91f7bed3cea4fdd3b266ef0b076f89ba41b33da0ef641e68",
          "dweb:/ipfs/QmXT77BbKDZgzWSW9Tcigvm1hrkMd6R4NTyfpiRwKaWQNW"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol": {
        "keccak256": "0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd",
        "urls": [
          "bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518",
          "dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol": {
        "keccak256": "0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1",
        "urls": [
          "bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f",
          "dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol": {
        "keccak256": "0x49bf32ef326950c199d8dc7aad069779696d2aa54a6aeb65924c68fe2c93956b",
        "urls": [
          "bzz-raw://450bf42af8faa7f56d8102436f778ef2c3c9b91d80f21f742de78bf3de7b842b",
          "dweb:/ipfs/QmfFguoZ5wFcptVY7fXj7XHG68Eu7XNMum9GxMogz4Fo75"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol": {
        "keccak256": "0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09",
        "urls": [
          "bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510",
          "dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "keccak256": "0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c",
        "urls": [
          "bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b",
          "dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol": {
        "keccak256": "0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa",
        "urls": [
          "bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd",
          "dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol": {
        "keccak256": "0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5",
        "urls": [
          "bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066",
          "dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol": {
        "keccak256": "0x2c3da5585b1baace5d0f7f769beace104ebff7bded77812f67e17b54329da270",
        "urls": [
          "bzz-raw://48d1e2a0b57d8de56a7d6adb0755dace4e594996fcba1c5235b6bba22008309e",
          "dweb:/ipfs/QmUs8bXDL9sbi2uGGfCU62noGCffh5YysjdagPdnxfZgbL"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/HasAaveBalanceMemoizer.sol": {
        "keccak256": "0xa4a742f5eabf48824fffe0964e492c8ca30ade52489b70ebb953a7d128d75642",
        "urls": [
          "bzz-raw://0da6001867bd2b0439e27411a8fdf552e70da7cc9abd1d69f8113357c7bd89ab",
          "dweb:/ipfs/QmZxDy1osTChe6G4iUFUDk5XcBKEieaQ1YbKGvY5Y7uGca"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/DataTypes.sol": {
        "keccak256": "0x775020af3bbcf63aef55c874e3d27917f3c44da0d385d517f042a0098f18c73e",
        "urls": [
          "bzz-raw://5b76490e8120d2c263b469225d856a7877461468ca2155e62a10440cd3e0d2e5",
          "dweb:/ipfs/QmTpuDqndYBysHtCAoN8r3Ep8ia9yPiF5r1c7DWz25THjH"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IATokenIsh.sol": {
        "keccak256": "0x0a6151a8ff99ef98f78dddd4300b456789a3cf10630ed748f6843118bfedfedc",
        "urls": [
          "bzz-raw://3cc56ed42f444540fbc5e7d636929c5c33c4b71c7538552d7275d100f52f3edd",
          "dweb:/ipfs/QmeWMFQFDCWi7nFR4CScHRoGVBxUvnLUbvUecBCW3sMfi8"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPool.sol": {
        "keccak256": "0x782b82cf3ecb497600a70b8e7b116b310d1b5c2d56cf7b4148c4d58fe340aa31",
        "urls": [
          "bzz-raw://4b1d7437c36656463add0b99c8ad81d8dff35ce09f6bbb9620ec7e5bda9ed562",
          "dweb:/ipfs/QmbWYNTHFQpUPuWswmSFvyuNgMeqeA3xcqrDBiz3woPkc7"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IPoolAddressesProvider.sol": {
        "keccak256": "0x8406a64ea84a30724906cc2d3753ec4de384838eadaf7b502fa459304f338fb9",
        "urls": [
          "bzz-raw://3e4dbfdb5a653794fde64501ffbe0d28febe5b97f5b2b061ce341c4e63f235dc",
          "dweb:/ipfs/QmeoseiHXJ2uGpJKfpPfzhfq4Vpcj3YfmWRHcR9C4trpC5"
        ],
        "license": "AGPL-3.0"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IRewardsControllerIsh.sol": {
        "keccak256": "0x80fa787b6bace14b44e4856939452c4bf32f7866cfcc302cf192d0576287ff55",
        "urls": [
          "bzz-raw://a65bd5a79a1757dc72ff918d544cb08c846d5d6a2a5f3e6153cd0f4874e5f960",
          "dweb:/ipfs/QmQmBnSAPAPRERisyvV6V4ATt7d4JskvEEZ35MUkx9qvFv"
        ],
        "license": "agpl-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/AaveKandel.sol",
    "id": 85391,
    "exportedSymbols": {
      "AaveKandel": [
        85390
      ],
      "AavePooledRouter": [
        89541
      ],
      "CoreKandel": [
        86559
      ],
      "GeometricKandel": [
        87283
      ],
      "IATokenIsh": [
        90213
      ],
      "IERC20": [
        88
      ],
      "IMangrove": [
        54127
      ],
      "MangroveOffer": [
        82367
      ],
      "MgvLib": [
        55985
      ],
      "OLKey": [
        55875
      ],
      "OfferType": [
        87910
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:5685:107",
    "nodes": [
      {
        "id": 85068,
        "nodeType": "PragmaDirective",
        "src": "41:24:107",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 85070,
        "nodeType": "ImportDirective",
        "src": "67:75:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol",
        "file": "@mgv-strats/src/strategies/MangroveOffer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 82368,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85069,
              "name": "MangroveOffer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82367,
              "src": "75:13:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85073,
        "nodeType": "ImportDirective",
        "src": "143:55:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85071,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55985,
              "src": "151:6:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 85072,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "159:5:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85075,
        "nodeType": "ImportDirective",
        "src": "199:102:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/integrations/AavePooledRouter.sol",
        "file": "@mgv-strats/src/strategies/routers/integrations/AavePooledRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 89542,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85074,
              "name": "AavePooledRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89541,
              "src": "207:16:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85077,
        "nodeType": "ImportDirective",
        "src": "302:84:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/vendor/aave/v3/IATokenIsh.sol",
        "file": "@mgv-strats/src/strategies/vendor/aave/v3/IATokenIsh.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 90214,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85076,
              "name": "IATokenIsh",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 90213,
              "src": "310:10:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85079,
        "nodeType": "ImportDirective",
        "src": "387:63:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol",
        "file": "./abstract/GeometricKandel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 87284,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85078,
              "name": "GeometricKandel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87283,
              "src": "395:15:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85081,
        "nodeType": "ImportDirective",
        "src": "451:53:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol",
        "file": "./abstract/CoreKandel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 86560,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85080,
              "name": "CoreKandel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 86559,
              "src": "459:10:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85083,
        "nodeType": "ImportDirective",
        "src": "505:61:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol",
        "file": "./abstract/TradesBaseQuotePair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 88102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85082,
              "name": "OfferType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87910,
              "src": "513:9:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85085,
        "nodeType": "ImportDirective",
        "src": "567:49:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
        "file": "@mgv/src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 54128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85084,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54127,
              "src": "575:9:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85087,
        "nodeType": "ImportDirective",
        "src": "617:43:107",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85391,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85086,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "625:6:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85390,
        "nodeType": "ContractDefinition",
        "src": "766:4959:107",
        "nodes": [
          {
            "id": 85094,
            "nodeType": "VariableDeclaration",
            "src": "933:61:107",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 85091,
              "nodeType": "StructuredDocumentation",
              "src": "809:121:107",
              "text": "@notice Indication that this is first puller (returned from __lastLook__) so posthook should deposit liquidity on AAVE"
            },
            "mutability": "constant",
            "name": "IS_FIRST_PULLER",
            "nameLocation": "959:15:107",
            "scope": 85390,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 85092,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "933:7:107",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "49535f46495253545f50554c4c4552",
              "id": 85093,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "977:17:107",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_9b7542cff9fd764a02c70bde4a79ebc7ddf88ba15ccb79e9abb262aa9f2fc04d",
                "typeString": "literal_string \"IS_FIRST_PULLER\""
              },
              "value": "IS_FIRST_PULLER"
            },
            "visibility": "internal"
          },
          {
            "id": 85130,
            "nodeType": "FunctionDefinition",
            "src": "1365:629:107",
            "nodes": [],
            "body": {
              "id": 85129,
              "nodeType": "Block",
              "src": "1515:479:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 85125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1860:41:107",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 85116,
                                  "name": "olKeyBaseQuote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85101,
                                  "src": "1873:14:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  }
                                },
                                "id": 85117,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1888:12:107",
                                "memberName": "outbound_tkn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55870,
                                "src": "1873:27:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 85115,
                              "name": "isOverlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85156,
                              "src": "1861:11:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 85118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1861:40:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "id": 85124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1905:40:107",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 85121,
                                  "name": "olKeyBaseQuote",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85101,
                                  "src": "1918:14:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                                    "typeString": "struct OLKey memory"
                                  }
                                },
                                "id": 85122,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1933:11:107",
                                "memberName": "inbound_tkn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55872,
                                "src": "1918:26:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 85120,
                              "name": "isOverlying",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85156,
                              "src": "1906:11:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 85123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1906:39:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1860:85:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416176654b616e64656c2f63616e6e6f74547261646541546f6b656e",
                        "id": 85126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1953:30:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbf1490e936bb0f4d3f29d2c8668b2f8bd0b0b70998a52e6a9ec4d7dac5dbd1f",
                          "typeString": "literal_string \"AaveKandel/cannotTradeAToken\""
                        },
                        "value": "AaveKandel/cannotTradeAToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbf1490e936bb0f4d3f29d2c8668b2f8bd0b0b70998a52e6a9ec4d7dac5dbd1f",
                          "typeString": "literal_string \"AaveKandel/cannotTradeAToken\""
                        }
                      ],
                      "id": 85114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1845:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1845:144:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85128,
                  "nodeType": "ExpressionStatement",
                  "src": "1845:144:107"
                }
              ]
            },
            "documentation": {
              "id": 85095,
              "nodeType": "StructuredDocumentation",
              "src": "999:363:107",
              "text": "@notice Constructor\n@param mgv The Mangrove deployment.\n@param olKeyBaseQuote The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.\n@param gasreq the gasreq to use for offers\n@param reserveId identifier of this contract's reserve when using a router."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 85108,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85098,
                    "src": "1473:3:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "id": 85109,
                    "name": "olKeyBaseQuote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85101,
                    "src": "1478:14:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  {
                    "id": 85110,
                    "name": "gasreq",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85103,
                    "src": "1494:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 85111,
                    "name": "reserveId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85105,
                    "src": "1502:9:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 85112,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 85107,
                  "name": "GeometricKandel",
                  "nameLocations": [
                    "1457:15:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87283,
                  "src": "1457:15:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "1457:55:107"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 85106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85098,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "1387:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85130,
                  "src": "1377:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 85097,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85096,
                      "name": "IMangrove",
                      "nameLocations": [
                        "1377:9:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "1377:9:107"
                    },
                    "referencedDeclaration": 54127,
                    "src": "1377:9:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85101,
                  "mutability": "mutable",
                  "name": "olKeyBaseQuote",
                  "nameLocation": "1405:14:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85130,
                  "src": "1392:27:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 85100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85099,
                      "name": "OLKey",
                      "nameLocations": [
                        "1392:5:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "1392:5:107"
                    },
                    "referencedDeclaration": 55875,
                    "src": "1392:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85103,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "1426:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85130,
                  "src": "1421:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1421:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85105,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "1442:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85130,
                  "src": "1434:17:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1376:76:107"
            },
            "returnParameters": {
              "id": 85113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1515:0:107"
            },
            "scope": 85390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85156,
            "nodeType": "FunctionDefinition",
            "src": "2158:195:107",
            "nodes": [],
            "body": {
              "id": 85155,
              "nodeType": "Block",
              "src": "2223:130:107",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 85148,
                        "nodeType": "Block",
                        "src": "2296:26:107",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 85146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2311:4:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 85137,
                            "id": 85147,
                            "nodeType": "Return",
                            "src": "2304:11:107"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 85149,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 85145,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 85144,
                            "mutability": "mutable",
                            "name": "",
                            "nameLocation": "-1:-1:-1",
                            "nodeType": "VariableDeclaration",
                            "scope": 85149,
                            "src": "2287:7:107",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 85143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2287:7:107",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2286:9:107"
                      },
                      "src": "2278:44:107"
                    },
                    {
                      "block": {
                        "id": 85150,
                        "nodeType": "Block",
                        "src": "2329:2:107",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 85151,
                      "nodeType": "TryCatchClause",
                      "src": "2323:8:107"
                    }
                  ],
                  "externalCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 85139,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85133,
                            "src": "2244:5:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 85138,
                          "name": "IATokenIsh",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90213,
                          "src": "2233:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IATokenIsh_$90213_$",
                            "typeString": "type(contract IATokenIsh)"
                          }
                        },
                        "id": 85140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2233:17:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IATokenIsh_$90213",
                          "typeString": "contract IATokenIsh"
                        }
                      },
                      "id": 85141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2251:24:107",
                      "memberName": "UNDERLYING_ASSET_ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90206,
                      "src": "2233:42:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 85142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:44:107",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 85152,
                  "nodeType": "TryStatement",
                  "src": "2229:102:107"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 85153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2343:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 85137,
                  "id": 85154,
                  "nodeType": "Return",
                  "src": "2336:12:107"
                }
              ]
            },
            "documentation": {
              "id": 85131,
              "nodeType": "StructuredDocumentation",
              "src": "1998:157:107",
              "text": "@notice Verifies that token is not an official AAVE overlying.\n @param token the token to verify.\n @return true if overlying; otherwise, false."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOverlying",
            "nameLocation": "2167:11:107",
            "parameters": {
              "id": 85134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85133,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2187:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85156,
                  "src": "2179:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2179:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:15:107"
            },
            "returnParameters": {
              "id": 85137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85156,
                  "src": "2217:4:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 85135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2216:6:107"
            },
            "scope": 85390,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85172,
            "nodeType": "FunctionDefinition",
            "src": "2437:117:107",
            "nodes": [],
            "body": {
              "id": 85171,
              "nodeType": "Block",
              "src": "2501:53:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 85166,
                              "name": "router",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 81713,
                              "src": "2539:6:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                                "typeString": "function () view returns (contract AbstractRouter)"
                              }
                            },
                            "id": 85167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2539:8:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                              "typeString": "contract AbstractRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                              "typeString": "contract AbstractRouter"
                            }
                          ],
                          "id": 85165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2531:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2531:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2531:17:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85163,
                      "name": "AavePooledRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89541,
                      "src": "2514:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AavePooledRouter_$89541_$",
                        "typeString": "type(contract AavePooledRouter)"
                      }
                    },
                    "id": 85169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:35:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                      "typeString": "contract AavePooledRouter"
                    }
                  },
                  "functionReturnParameters": 85162,
                  "id": 85170,
                  "nodeType": "Return",
                  "src": "2507:42:107"
                }
              ]
            },
            "documentation": {
              "id": 85157,
              "nodeType": "StructuredDocumentation",
              "src": "2357:77:107",
              "text": "@notice returns the router as an Aave router\n@return The aave router."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pooledRouter",
            "nameLocation": "2446:12:107",
            "parameters": {
              "id": 85158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2458:2:107"
            },
            "returnParameters": {
              "id": 85162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85172,
                  "src": "2483:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                    "typeString": "contract AavePooledRouter"
                  },
                  "typeName": {
                    "id": 85160,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85159,
                      "name": "AavePooledRouter",
                      "nameLocations": [
                        "2483:16:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89541,
                      "src": "2483:16:107"
                    },
                    "referencedDeclaration": 89541,
                    "src": "2483:16:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                      "typeString": "contract AavePooledRouter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2482:18:107"
            },
            "scope": 85390,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 85199,
            "nodeType": "FunctionDefinition",
            "src": "2685:311:107",
            "nodes": [],
            "body": {
              "id": 85198,
              "nodeType": "Block",
              "src": "2750:246:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85182,
                        "name": "router_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85176,
                        "src": "2766:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                          "typeString": "contract AavePooledRouter"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                          "typeString": "contract AavePooledRouter"
                        }
                      ],
                      "id": 85181,
                      "name": "setRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81922,
                      "src": "2756:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_AbstractRouter_$88623_$returns$__$",
                        "typeString": "function (contract AbstractRouter)"
                      }
                    },
                    "id": 85183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2756:18:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85184,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:18:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85186,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87949,
                        "src": "2931:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 85185,
                      "name": "__activate__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82070,
                      "src": "2918:12:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 85187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2918:18:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85188,
                  "nodeType": "ExpressionStatement",
                  "src": "2918:18:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85190,
                        "name": "QUOTE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87953,
                        "src": "2955:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 85189,
                      "name": "__activate__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82070,
                      "src": "2942:12:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 85191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2942:19:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85192,
                  "nodeType": "ExpressionStatement",
                  "src": "2942:19:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85194,
                          "name": "offerGasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            81733,
                            81767
                          ],
                          "referencedDeclaration": 81733,
                          "src": "2977:11:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 85195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2977:13:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85193,
                      "name": "setGasreq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85966,
                      "src": "2967:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 85196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2967:24:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85197,
                  "nodeType": "ExpressionStatement",
                  "src": "2967:24:107"
                }
              ]
            },
            "documentation": {
              "id": 85173,
              "nodeType": "StructuredDocumentation",
              "src": "2558:124:107",
              "text": "@notice Sets the AaveRouter as router and activates router for base and quote\n@param router_ the Aave router to use."
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85179,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85178,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "2740:9:107"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "2740:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2740:9:107"
              }
            ],
            "name": "initialize",
            "nameLocation": "2694:10:107",
            "parameters": {
              "id": 85177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85176,
                  "mutability": "mutable",
                  "name": "router_",
                  "nameLocation": "2722:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85199,
                  "src": "2705:24:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                    "typeString": "contract AavePooledRouter"
                  },
                  "typeName": {
                    "id": 85175,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85174,
                      "name": "AavePooledRouter",
                      "nameLocations": [
                        "2705:16:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 89541,
                      "src": "2705:16:107"
                    },
                    "referencedDeclaration": 89541,
                    "src": "2705:16:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                      "typeString": "contract AavePooledRouter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2704:26:107"
            },
            "returnParameters": {
              "id": 85180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2750:0:107"
            },
            "scope": 85390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85226,
            "nodeType": "FunctionDefinition",
            "src": "3212:306:107",
            "nodes": [],
            "body": {
              "id": 85225,
              "nodeType": "Block",
              "src": "3285:233:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85211,
                        "name": "baseAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85202,
                        "src": "3352:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85212,
                        "name": "quoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85204,
                        "src": "3364:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 85208,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3333:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_AaveKandel_$85390_$",
                          "typeString": "type(contract super AaveKandel)"
                        }
                      },
                      "id": 85210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3339:12:107",
                      "memberName": "depositFunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86452,
                      "src": "3333:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 85213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3333:43:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85214,
                  "nodeType": "ExpressionStatement",
                  "src": "3333:43:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85218,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87949,
                        "src": "3464:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 85219,
                        "name": "baseAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85202,
                        "src": "3470:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85220,
                        "name": "QUOTE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87953,
                        "src": "3482:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 85221,
                        "name": "quoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85204,
                        "src": "3489:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85222,
                        "name": "RESERVE_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84656,
                        "src": "3502:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 85215,
                          "name": "pooledRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85172,
                          "src": "3435:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AavePooledRouter_$89541_$",
                            "typeString": "function () view returns (contract AavePooledRouter)"
                          }
                        },
                        "id": 85216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3435:14:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                          "typeString": "contract AavePooledRouter"
                        }
                      },
                      "id": 85217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3450:13:107",
                      "memberName": "pushAndSupply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89181,
                      "src": "3435:28:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (contract IERC20,uint256,contract IERC20,uint256,address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 85223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3435:78:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 85224,
                  "nodeType": "ExpressionStatement",
                  "src": "3435:78:107"
                }
              ]
            },
            "baseFunctions": [
              86452
            ],
            "documentation": {
              "id": 85200,
              "nodeType": "StructuredDocumentation",
              "src": "3000:209:107",
              "text": "@notice deposits funds to be available for being offered. Will increase `pending`.\n@param baseAmount the amount of base tokens to deposit.\n@param quoteAmount the amount of quote tokens to deposit."
            },
            "functionSelector": "61638ed5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFunds",
            "nameLocation": "3221:12:107",
            "overrides": {
              "id": 85206,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3276:8:107"
            },
            "parameters": {
              "id": 85205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85202,
                  "mutability": "mutable",
                  "name": "baseAmount",
                  "nameLocation": "3239:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85226,
                  "src": "3234:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85204,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "3256:11:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85226,
                  "src": "3251:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85203,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3233:35:107"
            },
            "returnParameters": {
              "id": 85207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3285:0:107"
            },
            "scope": 85390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85260,
            "nodeType": "FunctionDefinition",
            "src": "3550:246:107",
            "nodes": [],
            "body": {
              "id": 85259,
              "nodeType": "Block",
              "src": "3645:151:107",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85238,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85232,
                      "src": "3655:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 85239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3665:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3655:11:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85250,
                  "nodeType": "IfStatement",
                  "src": "3651:82:107",
                  "trueBody": {
                    "id": 85249,
                    "nodeType": "Block",
                    "src": "3668:65:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85244,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85230,
                              "src": "3700:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 85245,
                              "name": "RESERVE_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84656,
                              "src": "3707:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 85246,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85232,
                              "src": "3719:6:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 85241,
                                "name": "pooledRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85172,
                                "src": "3676:12:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AavePooledRouter_$89541_$",
                                  "typeString": "function () view returns (contract AavePooledRouter)"
                                }
                              },
                              "id": 85242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3676:14:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                "typeString": "contract AavePooledRouter"
                              }
                            },
                            "id": 85243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3691:8:107",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 89376,
                            "src": "3676:23:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256) external"
                            }
                          },
                          "id": 85247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3676:50:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85248,
                        "nodeType": "ExpressionStatement",
                        "src": "3676:50:107"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85254,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85230,
                        "src": "3766:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 85255,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85232,
                        "src": "3773:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 85256,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85234,
                        "src": "3781:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 85251,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3738:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_AaveKandel_$85390_$",
                          "typeString": "type(contract super AaveKandel)"
                        }
                      },
                      "id": 85253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3744:21:107",
                      "memberName": "withdrawFundsForToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86523,
                      "src": "3738:27:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,address)"
                      }
                    },
                    "id": 85257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3738:53:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85258,
                  "nodeType": "ExpressionStatement",
                  "src": "3738:53:107"
                }
              ]
            },
            "baseFunctions": [
              86523
            ],
            "documentation": {
              "id": 85227,
              "nodeType": "StructuredDocumentation",
              "src": "3522:25:107",
              "text": "@inheritdoc CoreKandel"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFundsForToken",
            "nameLocation": "3559:21:107",
            "overrides": {
              "id": 85236,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3636:8:107"
            },
            "parameters": {
              "id": 85235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85230,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3588:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85260,
                  "src": "3581:12:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 85229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85228,
                      "name": "IERC20",
                      "nameLocations": [
                        "3581:6:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "3581:6:107"
                    },
                    "referencedDeclaration": 88,
                    "src": "3581:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85232,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3600:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85260,
                  "src": "3595:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85231,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85234,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3616:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85260,
                  "src": "3608:17:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3608:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3580:46:107"
            },
            "returnParameters": {
              "id": 85237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:107"
            },
            "scope": 85390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85290,
            "nodeType": "FunctionDefinition",
            "src": "4005:221:107",
            "nodes": [],
            "body": {
              "id": 85289,
              "nodeType": "Block",
              "src": "4087:139:107",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85272,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "4100:5:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 85289,
                      "src": "4093:12:107",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 85271,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 85270,
                          "name": "IERC20",
                          "nameLocations": [
                            "4093:6:107"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88,
                          "src": "4093:6:107"
                        },
                        "referencedDeclaration": 88,
                        "src": "4093:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85276,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85274,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85264,
                        "src": "4128:2:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 85273,
                      "name": "outboundOfOfferType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        88077
                      ],
                      "referencedDeclaration": 88077,
                      "src": "4108:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_contract$_IERC20_$88_$",
                        "typeString": "function (enum OfferType) view returns (contract IERC20)"
                      }
                    },
                    "id": 85275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4108:23:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4093:38:107"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 85280,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85272,
                          "src": "4176:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 85281,
                          "name": "RESERVE_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84656,
                          "src": "4183:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 85277,
                            "name": "pooledRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85172,
                            "src": "4144:12:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AavePooledRouter_$89541_$",
                              "typeString": "function () view returns (contract AavePooledRouter)"
                            }
                          },
                          "id": 85278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4144:14:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                            "typeString": "contract AavePooledRouter"
                          }
                        },
                        "id": 85279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4159:16:107",
                        "memberName": "balanceOfReserve",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 88845,
                        "src": "4144:31:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$88_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20,address) view external returns (uint256)"
                        }
                      },
                      "id": 85282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4144:50:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 85285,
                          "name": "ba",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85264,
                          "src": "4218:2:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        ],
                        "expression": {
                          "id": 85283,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4197:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_AaveKandel_$85390_$",
                            "typeString": "type(contract super AaveKandel)"
                          }
                        },
                        "id": 85284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4203:14:107",
                        "memberName": "reserveBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86181,
                        "src": "4197:20:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_uint256_$",
                          "typeString": "function (enum OfferType) view returns (uint256)"
                        }
                      },
                      "id": 85286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4197:24:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4144:77:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 85269,
                  "id": 85288,
                  "nodeType": "Return",
                  "src": "4137:84:107"
                }
              ]
            },
            "baseFunctions": [
              86181
            ],
            "documentation": {
              "id": 85261,
              "nodeType": "StructuredDocumentation",
              "src": "3800:202:107",
              "text": "@notice returns the amount of the router's balance that belong to this contract for the token offered for the offer type.\n@param ba the offer type.\n@return balance the balance of the token."
            },
            "functionSelector": "18acf82f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserveBalance",
            "nameLocation": "4014:14:107",
            "overrides": {
              "id": 85266,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4055:8:107"
            },
            "parameters": {
              "id": 85265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85264,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "4039:2:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85290,
                  "src": "4029:12:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 85263,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85262,
                      "name": "OfferType",
                      "nameLocations": [
                        "4029:9:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "4029:9:107"
                    },
                    "referencedDeclaration": 87910,
                    "src": "4029:9:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4028:14:107"
            },
            "returnParameters": {
              "id": 85269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85268,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4078:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85290,
                  "src": "4073:12:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4073:4:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4072:14:107"
            },
            "scope": 85390,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85328,
            "nodeType": "FunctionDefinition",
            "src": "4370:280:107",
            "nodes": [],
            "body": {
              "id": 85327,
              "nodeType": "Block",
              "src": "4463:187:107",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85301,
                      "mutability": "mutable",
                      "name": "makerData",
                      "nameLocation": "4477:9:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 85327,
                      "src": "4469:17:107",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 85300,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4469:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85306,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85304,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85294,
                        "src": "4508:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      ],
                      "expression": {
                        "id": 85302,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4489:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_AaveKandel_$85390_$",
                          "typeString": "type(contract super AaveKandel)"
                        }
                      },
                      "id": 85303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4495:12:107",
                      "memberName": "__lastLook__",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82188,
                      "src": "4489:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata) returns (bytes32)"
                      }
                    },
                    "id": 85305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:25:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4469:45:107"
                },
                {
                  "expression": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 85315,
                                      "name": "router",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81713,
                                      "src": "4585:6:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                                        "typeString": "function () view returns (contract AbstractRouter)"
                                      }
                                    },
                                    "id": 85316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4585:8:107",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                      "typeString": "contract AbstractRouter"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                      "typeString": "contract AbstractRouter"
                                    }
                                  ],
                                  "id": 85314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4577:7:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 85313,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4577:7:107",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 85317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4577:17:107",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 85308,
                                        "name": "order",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 85294,
                                        "src": "4541:5:107",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                          "typeString": "struct MgvLib.SingleOrder calldata"
                                        }
                                      },
                                      "id": 85309,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4547:5:107",
                                      "memberName": "olKey",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 55950,
                                      "src": "4541:11:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                        "typeString": "struct OLKey calldata"
                                      }
                                    },
                                    "id": 85310,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4553:12:107",
                                    "memberName": "outbound_tkn",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 55870,
                                    "src": "4541:24:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 85307,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88,
                                  "src": "4534:6:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 85311,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4534:32:107",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 85312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4567:9:107",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "4534:42:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 85318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4534:61:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 85319,
                              "name": "order",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85294,
                              "src": "4598:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                "typeString": "struct MgvLib.SingleOrder calldata"
                              }
                            },
                            "id": 85320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4604:10:107",
                            "memberName": "takerWants",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55957,
                            "src": "4598:16:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4534:80:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 85322,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4533:82:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 85324,
                      "name": "makerData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85301,
                      "src": "4636:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 85325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4533:112:107",
                    "trueExpression": {
                      "id": 85323,
                      "name": "IS_FIRST_PULLER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85094,
                      "src": "4618:15:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 85299,
                  "id": 85326,
                  "nodeType": "Return",
                  "src": "4520:125:107"
                }
              ]
            },
            "baseFunctions": [
              82188
            ],
            "documentation": {
              "id": 85291,
              "nodeType": "StructuredDocumentation",
              "src": "4230:137:107",
              "text": "@notice Verifies, prior to pulling funds from the router, whether pull will be fetching funds on AAVE\n @inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__lastLook__",
            "nameLocation": "4379:12:107",
            "overrides": {
              "id": 85296,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4436:8:107"
            },
            "parameters": {
              "id": 85295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85294,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4420:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85328,
                  "src": "4392:33:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 85293,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85292,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "4392:6:107",
                        "4399:11:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "4392:18:107"
                    },
                    "referencedDeclaration": 55969,
                    "src": "4392:18:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4391:35:107"
            },
            "returnParameters": {
              "id": 85299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85328,
                  "src": "4454:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85297,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4454:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4453:9:107"
            },
            "scope": 85390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 85389,
            "nodeType": "FunctionDefinition",
            "src": "4848:875:107",
            "nodes": [],
            "body": {
              "id": 85388,
              "nodeType": "Block",
              "src": "4994:729:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85341,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85332,
                        "src": "5058:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      ],
                      "id": 85340,
                      "name": "transportSuccessfulOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86255,
                      "src": "5033:24:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata)"
                      }
                    },
                    "id": 85342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5033:31:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85343,
                  "nodeType": "ExpressionStatement",
                  "src": "5033:31:107"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 85346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 85344,
                      "name": "makerData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85334,
                      "src": "5127:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 85345,
                      "name": "IS_FIRST_PULLER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85094,
                      "src": "5140:15:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "5127:28:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 85386,
                    "nodeType": "Block",
                    "src": "5566:153:107",
                    "statements": [
                      {
                        "expression": {
                          "id": 85384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 85378,
                            "name": "repostStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85338,
                            "src": "5654:12:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 85381,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85332,
                                "src": "5695:5:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              {
                                "id": 85382,
                                "name": "makerData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85334,
                                "src": "5702:9:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 85379,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "5669:5:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AaveKandel_$85390_$",
                                  "typeString": "type(contract super AaveKandel)"
                                }
                              },
                              "id": 85380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5675:19:107",
                              "memberName": "__posthookSuccess__",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85037,
                              "src": "5669:25:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (struct MgvLib.SingleOrder calldata,bytes32) returns (bytes32)"
                              }
                            },
                            "id": 85383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5669:43:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5654:58:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 85385,
                        "nodeType": "ExpressionStatement",
                        "src": "5654:58:107"
                      }
                    ]
                  },
                  "id": 85387,
                  "nodeType": "IfStatement",
                  "src": "5123:596:107",
                  "trueBody": {
                    "id": 85377,
                    "nodeType": "Block",
                    "src": "5157:403:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85350,
                              "name": "BASE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87949,
                              "src": "5274:4:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 85355,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5303:4:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AaveKandel_$85390",
                                        "typeString": "contract AaveKandel"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AaveKandel_$85390",
                                        "typeString": "contract AaveKandel"
                                      }
                                    ],
                                    "id": 85354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5295:7:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 85353,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5295:7:107",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 85356,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5295:13:107",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 85351,
                                  "name": "BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87949,
                                  "src": "5280:4:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 85352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5285:9:107",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18,
                                "src": "5280:14:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 85357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5280:29:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 85358,
                              "name": "QUOTE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87953,
                              "src": "5311:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 85363,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5342:4:107",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AaveKandel_$85390",
                                        "typeString": "contract AaveKandel"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AaveKandel_$85390",
                                        "typeString": "contract AaveKandel"
                                      }
                                    ],
                                    "id": 85362,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5334:7:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 85361,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5334:7:107",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 85364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5334:13:107",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 85359,
                                  "name": "QUOTE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87953,
                                  "src": "5318:5:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$88",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 85360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5324:9:107",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 18,
                                "src": "5318:15:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 85365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5318:30:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 85366,
                              "name": "RESERVE_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84656,
                              "src": "5350:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 85347,
                                "name": "pooledRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85172,
                                "src": "5236:12:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AavePooledRouter_$89541_$",
                                  "typeString": "function () view returns (contract AavePooledRouter)"
                                }
                              },
                              "id": 85348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5236:14:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AavePooledRouter_$89541",
                                "typeString": "contract AavePooledRouter"
                              }
                            },
                            "id": 85349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5251:13:107",
                            "memberName": "pushAndSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 89181,
                            "src": "5236:28:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (contract IERC20,uint256,contract IERC20,uint256,address) external returns (uint256,uint256)"
                            }
                          },
                          "id": 85367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5236:132:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "id": 85368,
                        "nodeType": "ExpressionStatement",
                        "src": "5236:132:107"
                      },
                      {
                        "expression": {
                          "id": 85375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 85369,
                            "name": "repostStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85338,
                            "src": "5487:12:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 85372,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85332,
                                "src": "5536:5:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              {
                                "id": 85373,
                                "name": "makerData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85334,
                                "src": "5543:9:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 85370,
                                "name": "MangroveOffer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82367,
                                "src": "5502:13:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MangroveOffer_$82367_$",
                                  "typeString": "type(contract MangroveOffer)"
                                }
                              },
                              "id": 85371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5516:19:107",
                              "memberName": "__posthookSuccess__",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 82316,
                              "src": "5502:33:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (struct MgvLib.SingleOrder calldata,bytes32) returns (bytes32)"
                              }
                            },
                            "id": 85374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5502:51:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5487:66:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 85376,
                        "nodeType": "ExpressionStatement",
                        "src": "5487:66:107"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              85037
            ],
            "documentation": {
              "id": 85329,
              "nodeType": "StructuredDocumentation",
              "src": "4654:191:107",
              "text": "@notice overrides and replaces Direct's posthook in order to push and supply on AAVE with a single call when offer logic is the first to pull funds from AAVE\n@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__posthookSuccess__",
            "nameLocation": "4857:19:107",
            "overrides": {
              "id": 85336,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4948:8:107"
            },
            "parameters": {
              "id": 85335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85332,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "4905:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85389,
                  "src": "4877:33:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 85331,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85330,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "4877:6:107",
                        "4884:11:107"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "4877:18:107"
                    },
                    "referencedDeclaration": 55969,
                    "src": "4877:18:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85334,
                  "mutability": "mutable",
                  "name": "makerData",
                  "nameLocation": "4920:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85389,
                  "src": "4912:17:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85333,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4912:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4876:54:107"
            },
            "returnParameters": {
              "id": 85339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85338,
                  "mutability": "mutable",
                  "name": "repostStatus",
                  "nameLocation": "4978:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 85389,
                  "src": "4970:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85337,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4969:22:107"
            },
            "scope": 85390,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85089,
              "name": "GeometricKandel",
              "nameLocations": [
                "789:15:107"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87283,
              "src": "789:15:107"
            },
            "id": 85090,
            "nodeType": "InheritanceSpecifier",
            "src": "789:15:107"
          }
        ],
        "canonicalName": "AaveKandel",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 85088,
          "nodeType": "StructuredDocumentation",
          "src": "662:104:107",
          "text": "@title A Kandel strat with geometric price progression which stores funds on AAVE to generate yield."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          85390,
          87283,
          86559,
          88101,
          87048,
          87442,
          87942,
          85066,
          82367,
          83578,
          56211,
          89841
        ],
        "name": "AaveKandel",
        "nameLocation": "775:10:107",
        "scope": 85391,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83467,
          83473,
          84653,
          85817,
          85822,
          85827,
          85835,
          85843,
          86584,
          86587,
          86590,
          86593,
          87071,
          87296,
          87306,
          87961,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 107
}