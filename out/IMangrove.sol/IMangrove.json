{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CleanComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offersToBeCleaned",
          "type": "uint256"
        }
      ],
      "name": "CleanStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Kill",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "NewMgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "OfferFailWithPosthookData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "deprovision",
          "type": "bool"
        }
      ],
      "name": "OfferRetract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        }
      ],
      "name": "OfferSuccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "posthookData",
          "type": "bytes32"
        }
      ],
      "name": "OfferSuccessWithPosthookData",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "tick",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "OfferWrite",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "OrderComplete",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "Tick",
          "name": "maxTick",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fillVolume",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        }
      ],
      "name": "OrderStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tickSpacing",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetDensity96X32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "SetGasbase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasmax",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetMaxGasreqForFailingOffers",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetMaxRecursionDepth",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "SetMonitor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetNotify",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "SetUseOracle",
      "type": "event"
    },
    {
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "density96X32",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "name": "best",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.CleanTarget[]",
          "name": "targets",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        }
      ],
      "name": "cleanByImpersonation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "successes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "name": "config",
      "outputs": [
        {
          "internalType": "Global",
          "name": "_global",
          "type": "uint256"
        },
        {
          "internalType": "Local",
          "name": "_local",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "name": "deactivate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "sor",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        }
      ],
      "name": "flashloan",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "gasused",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "global",
      "outputs": [
        {
          "internalType": "Global",
          "name": "_global",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "tick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        }
      ],
      "name": "internalCleanByImpersonation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "int256",
          "name": "index",
          "type": "int256"
        }
      ],
      "name": "leafs",
      "outputs": [
        {
          "internalType": "Leaf",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "int256",
          "name": "index",
          "type": "int256"
        }
      ],
      "name": "level1s",
      "outputs": [
        {
          "internalType": "Field",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "int256",
          "name": "index",
          "type": "int256"
        }
      ],
      "name": "level2s",
      "outputs": [
        {
          "internalType": "Field",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "int256",
          "name": "index",
          "type": "int256"
        }
      ],
      "name": "level3s",
      "outputs": [
        {
          "internalType": "Field",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "name": "local",
      "outputs": [
        {
          "internalType": "Local",
          "name": "_local",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "name": "locked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "Tick",
          "name": "maxTick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "fillVolume",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        }
      ],
      "name": "marketOrderByTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "Tick",
          "name": "maxTick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "fillVolume",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "maxGasreqForFailingOffers",
          "type": "uint256"
        }
      ],
      "name": "marketOrderByTickCustom",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        }
      ],
      "name": "marketOrderByVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "Tick",
          "name": "maxTick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "fillVolume",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        }
      ],
      "name": "marketOrderForByTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "takerWants",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGives",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "fillWants",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "taker",
          "type": "address"
        }
      ],
      "name": "marketOrderForByVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "takerGot",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "takerGave",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bounty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feePaid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "Tick",
          "name": "tick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        }
      ],
      "name": "newOfferByTick",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        }
      ],
      "name": "newOfferByVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "offerData",
      "outputs": [
        {
          "internalType": "Offer",
          "name": "offer",
          "type": "uint256"
        },
        {
          "internalType": "OfferDetail",
          "name": "offerDetail",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "offerDetails",
      "outputs": [
        {
          "internalType": "OfferDetail",
          "name": "offerDetail",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "Offer",
          "name": "offer",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "olKeys",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "outbound_tkn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "inbound_tkn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "deprovision",
          "type": "bool"
        }
      ],
      "name": "retractOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        }
      ],
      "name": "root",
      "outputs": [
        {
          "internalType": "Field",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "density96X32",
          "type": "uint256"
        }
      ],
      "name": "setDensity96X32",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offer_gasbase",
          "type": "uint256"
        }
      ],
      "name": "setGasbase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasmax",
          "type": "uint256"
        }
      ],
      "name": "setGasmax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        }
      ],
      "name": "setGasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "governanceAddress",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxGasreqForFailingOffers",
          "type": "uint256"
        }
      ],
      "name": "setMaxGasreqForFailingOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxRecursionDepth",
          "type": "uint256"
        }
      ],
      "name": "setMaxRecursionDepth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "monitor",
          "type": "address"
        }
      ],
      "name": "setMonitor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "notify",
          "type": "bool"
        }
      ],
      "name": "setNotify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "useOracle",
          "type": "bool"
        }
      ],
      "name": "setUseOracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "Tick",
          "name": "tick",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "updateOfferByTick",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "wants",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "updateOfferByVolume",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "noRevert",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "PERMIT_TYPEHASH()": "30adf81f",
    "activate((address,address,uint256),uint256,uint256,uint256)": "96b4c30f",
    "allowance(address,address,address,address)": "cd6a7ca7",
    "approve(address,address,address,uint256)": "59eba454",
    "balanceOf(address)": "70a08231",
    "best((address,address,uint256))": "90245530",
    "cleanByImpersonation((address,address,uint256),(uint256,int256,uint256,uint256)[],address)": "32810dd6",
    "config((address,address,uint256))": "5275b212",
    "deactivate((address,address,uint256))": "5b275296",
    "flashloan(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),address)": "78393c88",
    "fund()": "b60d4288",
    "fund(address)": "23024408",
    "global()": "a05f9906",
    "governance()": "5aa6e675",
    "internalCleanByImpersonation((address,address,uint256),uint256,int256,uint256,uint256,address)": "7d3e6162",
    "kill()": "41c0e1b5",
    "leafs((address,address,uint256),int256)": "ce5bbece",
    "level1s((address,address,uint256),int256)": "6c6fda56",
    "level2s((address,address,uint256),int256)": "0adf51a9",
    "level3s((address,address,uint256),int256)": "fec777b4",
    "local((address,address,uint256))": "1c043215",
    "locked((address,address,uint256))": "0469bb66",
    "marketOrderByTick((address,address,uint256),int256,uint256,bool)": "d6a522ce",
    "marketOrderByTickCustom((address,address,uint256),int256,uint256,bool,uint256)": "e030e04b",
    "marketOrderByVolume((address,address,uint256),uint256,uint256,bool)": "1440e604",
    "marketOrderForByTick((address,address,uint256),int256,uint256,bool,address)": "e9801a29",
    "marketOrderForByVolume((address,address,uint256),uint256,uint256,bool,address)": "2275123f",
    "newOfferByTick((address,address,uint256),int256,uint256,uint256,uint256)": "f95902aa",
    "newOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256)": "b268813c",
    "nonces(address)": "7ecebe00",
    "offerData((address,address,uint256),uint256)": "c7b06e87",
    "offerDetails((address,address,uint256),uint256)": "e982fb8d",
    "offers((address,address,uint256),uint256)": "04a7a1b4",
    "olKeys(bytes32)": "5d49dc11",
    "permit(address,address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "b09d2a16",
    "retractOffer((address,address,uint256),uint256,bool)": "6e7a5cb8",
    "root((address,address,uint256))": "41b12acf",
    "setDensity96X32((address,address,uint256),uint256)": "f5142444",
    "setFee((address,address,uint256),uint256)": "443759fb",
    "setGasbase((address,address,uint256),uint256)": "eeba3368",
    "setGasmax(uint256)": "95999ee3",
    "setGasprice(uint256)": "fcaa7e2e",
    "setGovernance(address)": "ab033ea9",
    "setMaxGasreqForFailingOffers(uint256)": "74bfac33",
    "setMaxRecursionDepth(uint256)": "e37de38b",
    "setMonitor(address)": "5cd82390",
    "setNotify(bool)": "5a611f4e",
    "setUseOracle(bool)": "6804f613",
    "updateOfferByTick((address,address,uint256),int256,uint256,uint256,uint256,uint256)": "a84b08c8",
    "updateOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256,uint256)": "129d19a7",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawERC20(address,uint256)": "a1db9782"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CleanComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offersToBeCleaned\",\"type\":\"uint256\"}],\"name\":\"CleanStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Credit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Debit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Kill\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NewMgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"OfferFail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"posthookData\",\"type\":\"bytes32\"}],\"name\":\"OfferFailWithPosthookData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"deprovision\",\"type\":\"bool\"}],\"name\":\"OfferRetract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"}],\"name\":\"OfferSuccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"posthookData\",\"type\":\"bytes32\"}],\"name\":\"OfferSuccessWithPosthookData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tick\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"OfferWrite\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"OrderComplete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"Tick\",\"name\":\"maxTick\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fillVolume\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"}],\"name\":\"OrderStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetDensity96X32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offer_gasbase\",\"type\":\"uint256\"}],\"name\":\"SetGasbase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasmax\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasprice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"SetGovernance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMaxGasreqForFailingOffers\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetMaxRecursionDepth\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"SetMonitor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetNotify\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"SetUseOracle\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"density96X32\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offer_gasbase\",\"type\":\"uint256\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"name\":\"best\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.CleanTarget[]\",\"name\":\"targets\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"cleanByImpersonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"successes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"name\":\"config\",\"outputs\":[{\"internalType\":\"Global\",\"name\":\"_global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"_local\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"name\":\"deactivate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"sor\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"flashloan\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gasused\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"global\",\"outputs\":[{\"internalType\":\"Global\",\"name\":\"_global\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"internalCleanByImpersonation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"leafs\",\"outputs\":[{\"internalType\":\"Leaf\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"level1s\",\"outputs\":[{\"internalType\":\"Field\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"level2s\",\"outputs\":[{\"internalType\":\"Field\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"int256\",\"name\":\"index\",\"type\":\"int256\"}],\"name\":\"level3s\",\"outputs\":[{\"internalType\":\"Field\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"name\":\"local\",\"outputs\":[{\"internalType\":\"Local\",\"name\":\"_local\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"Tick\",\"name\":\"maxTick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"fillVolume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"}],\"name\":\"marketOrderByTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"takerGot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGave\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"Tick\",\"name\":\"maxTick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"fillVolume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"maxGasreqForFailingOffers\",\"type\":\"uint256\"}],\"name\":\"marketOrderByTickCustom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"takerGot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGave\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"}],\"name\":\"marketOrderByVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"takerGot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGave\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"Tick\",\"name\":\"maxTick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"fillVolume\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"marketOrderForByTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"takerGot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGave\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fillWants\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"}],\"name\":\"marketOrderForByVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"takerGot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGave\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bounty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePaid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"}],\"name\":\"newOfferByTick\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"wants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"}],\"name\":\"newOfferByVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"offerData\",\"outputs\":[{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"offerDetails\",\"outputs\":[{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"}],\"name\":\"olKeys\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"deprovision\",\"type\":\"bool\"}],\"name\":\"retractOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"}],\"name\":\"root\",\"outputs\":[{\"internalType\":\"Field\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"density96X32\",\"type\":\"uint256\"}],\"name\":\"setDensity96X32\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offer_gasbase\",\"type\":\"uint256\"}],\"name\":\"setGasbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasmax\",\"type\":\"uint256\"}],\"name\":\"setGasmax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"}],\"name\":\"setGasprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governanceAddress\",\"type\":\"address\"}],\"name\":\"setGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxGasreqForFailingOffers\",\"type\":\"uint256\"}],\"name\":\"setMaxGasreqForFailingOffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxRecursionDepth\",\"type\":\"uint256\"}],\"name\":\"setMaxRecursionDepth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"monitor\",\"type\":\"address\"}],\"name\":\"setMonitor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"notify\",\"type\":\"bool\"}],\"name\":\"setNotify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"useOracle\",\"type\":\"bool\"}],\"name\":\"setUseOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"updateOfferByTick\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"wants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"updateOfferByVolume\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"noRevert\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"the domain separator.\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The permit type hash.\"}},\"activate((address,address,uint256),uint256,uint256,uint256)\":{\"details\":\"If the flipped offer list is active then the offer lists are expected to have the same `tickSpacing`.\",\"params\":{\"density96X32\":\"The density of the offer list used to define a minimum offer volume. See `setDensity96X32`.\",\"fee\":\"in basis points, of `olKey.outbound_tkn` given to the taker. This fee is sent to Mangrove. Fee is capped to ~2.5%.\",\"offer_gasbase\":\"The gasbase of the offer list used to define a minimum provision necessary for offers. See `setGasbase`.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"}},\"allowance(address,address,address,address)\":{\"params\":{\"inbound_tkn\":\"The address of the (maker) inbound token.\",\"outbound_tkn\":\"The address of the (maker) outbound token.\",\"owner\":\"The address of the owner.\",\"spender\":\"The address of the spender.\"},\"returns\":{\"amount\":\"The amount of tokens the spender is allowed to spend on behalf of the owner.\"}},\"approve(address,address,address,uint256)\":{\"params\":{\"inbound_tkn\":\"The address of the (maker) inbound token.\",\"outbound_tkn\":\"The address of the (maker) outbound token.\",\"spender\":\"The address of the spender.\",\"value\":\"The amount of tokens to approve.\"},\"returns\":{\"_0\":\"true if the approval succeeded; always true.\"}},\"balanceOf(address)\":{\"params\":{\"maker\":\"The maker to get the balance for.\"},\"returns\":{\"balance\":\"The maker's free balance of native tokens (funds for provisioning offers not locked by an offer).\"}},\"best((address,address,uint256))\":{\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"offerId\":\"The `offerId` of the best offer on the offer list.\"}},\"cleanByImpersonation((address,address,uint256),(uint256,int256,uint256,uint256)[],address)\":{\"details\":\"If an offer succeeds, the execution of that offer is reverted, it stays in the book, and no bounty is paid; The `cleanByImpersonation` function itself will not revert.Note that Mangrove won't attempt to execute an offer if the values in a target don't match its offer. To distinguish between a non-executed clean and a fail clean (due to the offer itself not failing), you must inspect the log (see `MgvLib.sol`) or check the received bounty.Any `taker` can be impersonated when cleaning because:- The function reverts if the offer succeeds, reverting any token transfers.- After a `clean` where the offer has failed, all ERC20 token transfers have also been reverted -- but the sender will still have received the bounty of the failing offers. */\",\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"taker\":\"The taker used for transfers (should be able to deliver token amounts).\",\"targets\":\"The offers to clean, identified by their (`offerId, tick, gasreq, takerWants`) that will make them fail.\"},\"returns\":{\"bounty\":\"The total bounty received by the caller.\",\"successes\":\"The number of successfully cleaned offers.\"}},\"config((address,address,uint256))\":{\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_global\":\"The global configuration for Mangrove.\",\"_local\":\"The local configuration for the offer list.\"}},\"deactivate((address,address,uint256))\":{\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"}},\"flashloan(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),address)\":{\"details\":\"not to be called externally - only external to be able to revert.\",\"params\":{\"sor\":\"data about an order-offer match.\",\"taker\":\"the taker.\"},\"returns\":{\"gasused\":\"the amount of gas used for `makerExecute`.\",\"makerData\":\"the data returned by `makerExecute`.\"}},\"fund(address)\":{\"params\":{\"maker\":\"The maker to add funds for.\"}},\"global()\":{\"returns\":{\"_global\":\"The global configuration for Mangrove.\"}},\"governance()\":{\"returns\":{\"_0\":\"the governance address.\"}},\"internalCleanByImpersonation((address,address,uint256),uint256,int256,uint256,uint256,address)\":{\"details\":\"not to be called externally - only external to be able to revert.\",\"params\":{\"gasreq\":\"The gas required for the offer.\",\"offerId\":\"The id of the offer on Mangrove.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`\",\"taker\":\"The taker used for transfers (should be able to deliver token amounts).\",\"takerWants\":\"Must be `<= MAX_SAFE_VOLUME`. The amount of `olKey.outbound_tkn` the taker wants.\",\"tick\":\"Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick.\"},\"returns\":{\"bounty\":\"the bounty paid.\"}},\"leafs((address,address,uint256),int256)\":{\"params\":{\"index\":\"The index.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_0\":\"the leaf.\"}},\"level1s((address,address,uint256),int256)\":{\"params\":{\"index\":\"The index.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_0\":\"the field\"}},\"level2s((address,address,uint256),int256)\":{\"params\":{\"index\":\"The index.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_0\":\"the field\"}},\"level3s((address,address,uint256),int256)\":{\"params\":{\"index\":\"The index.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_0\":\"the field\"}},\"local((address,address,uint256))\":{\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_local\":\"The local configuration for the offer list.\"}},\"locked((address,address,uint256))\":{\"details\":\"The lock protects modifying or inspecting the offer list while an order is in progress.\",\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_0\":\"true if locked; otherwise, false.\"}},\"marketOrderByTick((address,address,uint256),int256,uint256,bool)\":{\"details\":\"The market order stops when there are no more offers at or below `maxTick`, when the end of the book has been reached, or:- If `fillWants` is true, the market order stops when `fillVolume` units of `olKey.outbound_tkn` have been obtained. To buy a specific volume of `olKey.outbound_tkn` at any price, set `fillWants` to true, set `fillVolume` to the volume you want to buy, and set `maxTick` to the `MAX_TICK` constant.- If `fillWants` is false, the market order stops when `fillVolume` units of `olKey.inbound_tkn` have been paid. To sell a specific volume of `olKey.inbound_tkn` at any price, set `fillWants` to false, set `fillVolume` to the volume you want to sell, and set `maxTick` to the `MAX_TICK` constant.\",\"params\":{\"fillVolume\":\"Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.\",\"fillWants\":\"if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\",\"maxTick\":\"Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens)\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"bounty\":\"The amount of native token the taker got as a bounty due to failing offers (in wei)\",\"feePaid\":\"The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\",\"takerGave\":\"The amount of `olKey.inbound_tkn` the taker gave.\",\"takerGot\":\"The amount of `olKey.outbound_tkn` the taker got.\"}},\"marketOrderByTickCustom((address,address,uint256),int256,uint256,bool,uint256)\":{\"details\":\"Mangrove stops a market order after it has gone through failing offers such that their cumulative `gasreq` is greater than the global `maxGasreqForFailingOffers` parameter. This function can be used by the taker to override the default `maxGasreqForFailingOffers` parameter.\",\"params\":{\"fillVolume\":\"Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.\",\"fillWants\":\"if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\",\"maxGasreqForFailingOffers\":\"The maximum allowed gas required for failing offers (in wei).\",\"maxTick\":\"Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of the limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens).\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"bounty\":\"The amount of native token the taker got as a bounty due to failing offers (in wei)\",\"feePaid\":\"The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\",\"takerGave\":\"The amount of `olKey.inbound_tkn` the taker gave.\",\"takerGot\":\"The amount of `olKey.outbound_tkn` the taker got.\"}},\"marketOrderByVolume((address,address,uint256),uint256,uint256,bool)\":{\"details\":\"This function is just a wrapper for `marketOrderByTick`, see that function for details.When deriving the tick, then `takerWants = 0` has a special meaning and the tick for the highest possible ratio between wants and gives will be used,and if `takerGives = 0` and `takerWants != 0`, then the tick for the lowest possible ratio will be used.\",\"params\":{\"fillWants\":\"if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"takerGives\":\"Must be `<= MAX_SAFE_VOLUME`. The amount the taker gives. This is used along with `takerWants` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\",\"takerWants\":\"Must be `<= MAX_SAFE_VOLUME`. The amount the taker wants. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\"},\"returns\":{\"bounty\":\"The amount of native token the taker got as a bounty due to failing offers (in wei)\",\"feePaid\":\"The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\",\"takerGave\":\"The amount of `olKey.inbound_tkn` the taker gave.\",\"takerGot\":\"The amount of `olKey.outbound_tkn` the taker got.\"}},\"marketOrderForByTick((address,address,uint256),int256,uint256,bool,address)\":{\"details\":\"The `bounty` will be send to `msg.sender` but transfers will be for `taker`. Requires prior permission.See also `marketOrderByTick`.\",\"params\":{\"fillVolume\":\"Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.\",\"fillWants\":\"if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\",\"maxTick\":\"Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of the limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens).\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"taker\":\"The taker from which amounts will be transferred from and to. If the `msg.sender`'s allowance for the given `olKey.outbound_tkn`,`olKey.inbound_tkn` is strictly less than the total amount eventually spent by `taker`, the call will fail.\"},\"returns\":{\"bounty\":\"The amount of native token the taker got as a bounty due to failing offers (in wei)\",\"feePaid\":\"The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\",\"takerGave\":\"The amount of `olKey.inbound_tkn` the taker gave.\",\"takerGot\":\"The amount of `olKey.outbound_tkn` the taker got.\"}},\"marketOrderForByVolume((address,address,uint256),uint256,uint256,bool,address)\":{\"details\":\"The `bounty` will be send to `msg.sender` but transfers will be for `taker`. Requires prior permission.See also `marketOrderByVolume`.\",\"params\":{\"fillWants\":\"if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"taker\":\"The taker from which amounts will be transferred from and to the. If the `msg.sender`'s allowance for the given `olKey.outbound_tkn`,`olKey.inbound_tkn` are strictly less than the total amount eventually spent by `taker`, the call will fail.\",\"takerGives\":\"Must be `<= MAX_SAFE_VOLUME`. The amount the taker gives. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\",\"takerWants\":\"Must be `<= MAX_SAFE_VOLUME`. The amount the taker wants. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\"},\"returns\":{\"bounty\":\"The amount of native token the taker got as a bounty due to failing offers (in wei)\",\"feePaid\":\"The amount of native token the taker paid as a fee (in wei of `olKey.outbound_tkn`)\",\"takerGave\":\"The amount of `olKey.inbound_tkn` the taker gave.\",\"takerGot\":\"The amount of `olKey.outbound_tkn` the taker got.\"}},\"newOfferByTick((address,address,uint256),int256,uint256,uint256,uint256)\":{\"details\":\"The gasreq and gasprice are used to derive the provision which will be used to pay a penalty if the offer fails.This function is payable to enable delivery of the provision along with the offer creation.\",\"params\":{\"gasprice\":\"The maximum gas price the maker is willing to pay a penalty for due to failing execution.\",\"gasreq\":\"The amount of gas required to execute the offer logic in the maker's `IMaker` implementation. This will limit the gas available, and the offer will fail if it spends more.\",\"gives\":\"Must be `<= MAX_SAFE_VOLUME`. The amount of `olKey.outbound_tkn` the maker gives.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"tick\":\"Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick (which is a power of 1.0001 and induces a price). The actual tick of the offer will be the smallest tick offerTick > tick that satisfies offerTick % tickSpacing == 0.\"},\"returns\":{\"offerId\":\"the id of the offer on Mangrove. Can be used to retract or update the offer (even to reuse a taken offer).\"}},\"newOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256)\":{\"details\":\"This function is just a wrapper for `newOfferByTick`, see that function for details.\",\"params\":{\"gasprice\":\"The maximum gas price the maker is willing to pay a penalty for due to failing execution.\",\"gasreq\":\"The amount of gas required to execute the offer logic in the maker's `IMaker` implementation. This will limit the gas available, and the offer will fail if it spends more.\",\"gives\":\"Must be less than MAX_SAFE_VOLUME. The amount of `olKey.outbound_tkn` the maker gives. This is used along with `wants` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`. Must be less than MAX_SAFE_VOLUME.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"wants\":\"Must be less than MAX_SAFE_VOLUME. The amount of `olKey.inbound_tkn` the maker wants. This is used along with `gives` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\"},\"returns\":{\"offerId\":\"the id of the offer on Mangrove. Can be used to retract or update the offer (even to reuse a taken offer).\"}},\"nonces(address)\":{\"params\":{\"owner\":\"The address of the owner.\"},\"returns\":{\"nonce\":\"The current nonce of the owner.\"}},\"offerData((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"The `offerId` of the offer on the offer list.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"offer\":\"The offer in packed format.\",\"offerDetail\":\"The offer details in packed format.\"}},\"offerDetails((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"The `offerId` of the offer on the offer list.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"offerDetail\":\"The offer details in packed format.\"}},\"offers((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"The `offerId` of the offer on the offer list.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"offer\":\"The offer in packed format.\"}},\"olKeys(bytes32)\":{\"params\":{\"olKeyHash\":\"the hash of the offer list key.\"},\"returns\":{\"olKey\":\"the olKey.\"}},\"permit(address,address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline after which the permit is no longer valid.\",\"inbound_tkn\":\"The address of the (maker) inbound token.\",\"outbound_tkn\":\"The address of the (maker) outbound token.\",\"owner\":\"The address of the owner.\",\"r\":\"The signature r parameter.\",\"s\":\"The signature s parameter.\",\"spender\":\"The address of the spender.\",\"v\":\"The signature v parameter.\",\"value\":\"The amount of tokens to approve.\"}},\"retractOffer((address,address,uint256),uint256,bool)\":{\"details\":\"`withdraw` can be used to withdraw the funds after deprovisioning.Leaving funds provisioned can be used to save gas if offer is later updated.\",\"params\":{\"deprovision\":\"Whether to deprovision the offer, i.e, return the provision to the maker's balance on Mangrove.\",\"offerId\":\"The id of the offer on Mangrove.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"provision\":\"The amount of native token deprovisioned for the offer (in wei).\"}},\"root((address,address,uint256))\":{\"params\":{\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"},\"returns\":{\"_0\":\"the root\"}},\"setDensity96X32((address,address,uint256),uint256)\":{\"details\":\"Useless if `global.useOracle != 0` and oracle returns a valid density.\",\"params\":{\"density96X32\":\"is given as a 96.32 fixed point number. It will be stored as a 9-bit float and be approximated towards 0. The maximum error is 20%. See `DensityLib` for more information.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"}},\"setFee((address,address,uint256),uint256)\":{\"params\":{\"fee\":\"in basis points, of `olKey.outbound_tkn` given to the taker. This fee is sent to Mangrove. Fee is capped to ~2.5%.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"}},\"setGasbase((address,address,uint256),uint256)\":{\"params\":{\"offer_gasbase\":\"The gasbase of the offer list used to define a minimum provision necessary for offers. Represents the gas overhead used by processing the offer inside Mangrove + the overhead of initiating an entire order. Stored in thousands in a maximum of 9 bits.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\"}},\"setGasmax(uint256)\":{\"params\":{\"gasmax\":\"The maximum amount of gas required to execute an offer. Must fit in 24 bits.\"}},\"setGasprice(uint256)\":{\"params\":{\"gasprice\":\"The gasprice (in Mwei, 26 bits)\"}},\"setGovernance(address)\":{\"params\":{\"governanceAddress\":\"The new governance address.\"}},\"setMaxGasreqForFailingOffers(uint256)\":{\"params\":{\"maxGasreqForFailingOffers\":\"The maximum cumulative `gasreq` for failing offers during a market order before doing a partial fill. 32 bits.\"}},\"setMaxRecursionDepth(uint256)\":{\"params\":{\"maxRecursionDepth\":\"The maximum number of times a market order can recursively execute offers.\"}},\"setMonitor(address)\":{\"params\":{\"monitor\":\"The new monitor/oracle address.\"}},\"setNotify(bool)\":{\"params\":{\"notify\":\"Whether Mangrove notifies the Monitor when and offer is taken\"}},\"setUseOracle(bool)\":{\"params\":{\"useOracle\":\"Whether Mangrove uses the monitor as oracle for `gasprice` and `density` values.\"}},\"updateOfferByTick((address,address,uint256),int256,uint256,uint256,uint256,uint256)\":{\"details\":\"See `newOfferByTick` for additional details.\",\"params\":{\"gasprice\":\"The maximum gas price the maker is willing to pay a penalty for due to failing execution.\",\"gasreq\":\"The amount of gas required to execute the offer logic in the maker's `IMaker` implementation.\",\"gives\":\"The amount of `olKey.outbound_tkn` the maker gives. Must be less than MAX_SAFE_VOLUME.\",\"offerId\":\"The id of the offer on Mangrove.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"tick\":\"Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick (which is a power of 1.0001 and induces a price).\"}},\"updateOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"This function is just a wrapper for `updateOfferByTick`, see that function for details.\",\"params\":{\"gasprice\":\"The maximum gas price the maker is willing to pay a penalty for due to failing execution.\",\"gasreq\":\"The amount of gas required to execute the offer logic in the maker's `IMaker` implementation.\",\"gives\":\"The amount of `olKey.outbound_tkn` the maker gives. This is used along with `wants` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`. Must be less than MAX_SAFE_VOLUME.\",\"offerId\":\"The id of the offer on Mangrove.\",\"olKey\":\"The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\",\"wants\":\"The amount of `olKey.inbound_tkn` the maker wants. This is used along with `gives` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"the amount to withdraw.\"},\"returns\":{\"noRevert\":\"whether the transfer succeeded.\"}},\"withdrawERC20(address,uint256)\":{\"params\":{\"tokenAddress\":\"The address of the ERC20 token.\",\"value\":\"The amount of tokens to transfer.\"}}},\"title\":\"Interface for the Mangrove contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"See {IERC20Permit-PERMIT_TYPEHASH}.\"},\"activate((address,address,uint256),uint256,uint256,uint256)\":{\"notice\":\"Activates an offer list.\"},\"allowance(address,address,address,address)\":{\"notice\":\"returns the allowance of the spender to spend tokens on behalf of the owner.\"},\"approve(address,address,address,uint256)\":{\"notice\":\"approves the spender to spend the amount of tokens on behalf of the caller.\"},\"balanceOf(address)\":{\"notice\":\"Gets the maker's free balance of native tokens (funds for provisioning offers not locked by an offer).\"},\"best((address,address,uint256))\":{\"notice\":\"Gets the `offerId` of the best offer in the offer list.\"},\"cleanByImpersonation((address,address,uint256),(uint256,int256,uint256,uint256)[],address)\":{\"notice\":\"Cleans multiple offers, i.e. executes them and remove them from the book if they fail, transferring the failure penalty as bounty to the caller.\"},\"config((address,address,uint256))\":{\"notice\":\"Gets the global configuration for Mangrove and local the configuration for a specific offer list.\"},\"deactivate((address,address,uint256))\":{\"notice\":\"Deactivates an offer list.\"},\"flashloan(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),address)\":{\"notice\":\"internal function used to flashloan tokens from taker to maker, for maker to source the promised liquidity.\"},\"fund()\":{\"notice\":\"Adds funds to Mangrove for the caller (the maker) to use for provisioning offers.\"},\"fund(address)\":{\"notice\":\"Adds funds to Mangrove for the maker to use for provisioning offers.\"},\"global()\":{\"notice\":\"Gets the global configuration for Mangrove.\"},\"governance()\":{\"notice\":\"Gets the governance address.\"},\"internalCleanByImpersonation((address,address,uint256),uint256,int256,uint256,uint256,address)\":{\"notice\":\"internal function used to clean failing offers.\"},\"kill()\":{\"notice\":\"Kills the Mangrove instance. A dead instance cannot have offers executed or funds received, but offers can be retracted and funds can be withdrawn.\"},\"leafs((address,address,uint256),int256)\":{\"notice\":\"Gets a leaf\"},\"level1s((address,address,uint256),int256)\":{\"notice\":\"Gets a level 1 field\"},\"level2s((address,address,uint256),int256)\":{\"notice\":\"Gets a level 2 field\"},\"level3s((address,address,uint256),int256)\":{\"notice\":\"Gets a level 3 field\"},\"local((address,address,uint256))\":{\"notice\":\"Gets the local configuration for a specific offer list.\"},\"locked((address,address,uint256))\":{\"notice\":\"Determines whether the reentrancy lock is in effect for the offer list.\"},\"marketOrderByTick((address,address,uint256),int256,uint256,bool)\":{\"notice\":\"Performs a market order on a specified offer list taking offers up to a limit price.\"},\"marketOrderByTickCustom((address,address,uint256),int256,uint256,bool,uint256)\":{\"notice\":\"Performs a market order on a specified offer list taking offers up to a limit price, while allowing to specify a custom `maxGasreqForFailingOffers`.\"},\"marketOrderByVolume((address,address,uint256),uint256,uint256,bool)\":{\"notice\":\"Performs a market order on a specified offer list taking offers up to a limit price defined by a ratio `inbound_tkn/outbound_tkn` of volumes.\"},\"marketOrderForByTick((address,address,uint256),int256,uint256,bool,address)\":{\"notice\":\"Performs a market order on a specified offer list taking offers up to a limit price for a specified taker.\"},\"marketOrderForByVolume((address,address,uint256),uint256,uint256,bool,address)\":{\"notice\":\"Performs a market order on a specified offer list taking offers up to a limit price defined by a ratio `inbound_tkn/outbound_tkn` of volumes for a specified taker.\"},\"newOfferByTick((address,address,uint256),int256,uint256,uint256,uint256)\":{\"notice\":\"Creates a new offer on Mangrove, where the caller is the maker. The maker can implement the `IMaker` interface to be called during offer execution.\"},\"newOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a new offer on Mangrove, where the caller is the maker. The maker can implement the `IMaker` interface to be called during offer execution.\"},\"nonces(address)\":{\"notice\":\"See {IERC20Permit-nonces}.\"},\"offerData((address,address,uint256),uint256)\":{\"notice\":\"Gets both an offer and its details in packed format.\"},\"offerDetails((address,address,uint256),uint256)\":{\"notice\":\"Gets an offer's details in packed format.\"},\"offers((address,address,uint256),uint256)\":{\"notice\":\"Gets an offer in packed format.\"},\"olKeys(bytes32)\":{\"notice\":\"Gets the offer list key with the given hash (if the offer list key has been activated at least once).\"},\"permit(address,address,address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Adapted from [Uniswap v2 contract](https://github.com/Uniswap/uniswap-v2-core/blob/55ae25109b7918565867e5c39f1e84b7edd19b2a/contracts/UniswapV2ERC20.sol#L81)\"},\"retractOffer((address,address,uint256),uint256,bool)\":{\"notice\":\"Retracts an offer from Mangrove, where the caller is the maker.\"},\"root((address,address,uint256))\":{\"notice\":\"Gets the root from local.\"},\"setDensity96X32((address,address,uint256),uint256)\":{\"notice\":\"Sets the density.\"},\"setFee((address,address,uint256),uint256)\":{\"notice\":\"Sets the fee for the offer list.\"},\"setGasbase((address,address,uint256),uint256)\":{\"notice\":\"Sets the gasbase for the offer list.\"},\"setGasmax(uint256)\":{\"notice\":\"Sets the gasmax for Mangrove, the maximum amount of gas an offer can require to execute.\"},\"setGasprice(uint256)\":{\"notice\":\"Sets the gasprice (in Mwei, 26 bits)\"},\"setGovernance(address)\":{\"notice\":\"Sets a new governance address.\"},\"setMaxGasreqForFailingOffers(uint256)\":{\"notice\":\"Sets the maximum cumulative `gasreq` for failing offers during a market order before doing a partial fill.\"},\"setMaxRecursionDepth(uint256)\":{\"notice\":\"Sets the maximum number of times a market order can recursively execute offers. This is a protection against stack overflows.\"},\"setMonitor(address)\":{\"notice\":\"Sets the monitor/oracle. The `monitor/oracle` can provide real-time values for `gasprice` and `density` to Mangrove. It can also receive liquidity event notifications.\"},\"setNotify(bool)\":{\"notice\":\"Sets whether Mangrove notifies the Monitor when and offer is taken\"},\"setUseOracle(bool)\":{\"notice\":\"Sets whether Mangrove uses the monitor as oracle for `gasprice` and `density` values.\"},\"updateOfferByTick((address,address,uint256),int256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Updates an existing offer on Mangrove, where the caller is the maker.\"},\"updateOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Updates an existing, owned offer on Mangrove, where the caller is the maker.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws the caller's (the maker's) free native tokens (funds for provisioning offers not locked by an offer) by transferring them to the caller.\"},\"withdrawERC20(address,uint256)\":{\"notice\":\"Transfer ERC20 tokens to governance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":\"IMangrove\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "CleanComplete",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offersToBeCleaned",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CleanStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Credit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Debit",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "Kill",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "NewMgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferFail",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "posthookData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferFailWithPosthookData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "deprovision",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferRetract",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferSuccess",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "posthookData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferSuccessWithPosthookData",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "tick",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferWrite",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderComplete",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "Tick",
              "name": "maxTick",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fillVolume",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OrderStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetActive",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetDensity96X32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetFee",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offer_gasbase",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasbase",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasmax",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasprice",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGovernance",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMaxGasreqForFailingOffers",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMaxRecursionDepth",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMonitor",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetNotify",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "value",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetUseOracle",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "PERMIT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "density96X32",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offer_gasbase",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "best",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.CleanTarget[]",
              "name": "targets",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasreq",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cleanByImpersonation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "successes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "config",
          "outputs": [
            {
              "internalType": "Global",
              "name": "_global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "_local",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deactivate"
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "sor",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flashloan",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "gasused",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "fund"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "fund"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "global",
          "outputs": [
            {
              "internalType": "Global",
              "name": "_global",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "governance",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "internalCleanByImpersonation",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "kill"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "int256",
              "name": "index",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "leafs",
          "outputs": [
            {
              "internalType": "Leaf",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "int256",
              "name": "index",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "level1s",
          "outputs": [
            {
              "internalType": "Field",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "int256",
              "name": "index",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "level2s",
          "outputs": [
            {
              "internalType": "Field",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "int256",
              "name": "index",
              "type": "int256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "level3s",
          "outputs": [
            {
              "internalType": "Field",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "local",
          "outputs": [
            {
              "internalType": "Local",
              "name": "_local",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "Tick",
              "name": "maxTick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "fillVolume",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketOrderByTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "takerGot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGave",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "Tick",
              "name": "maxTick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "fillVolume",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "maxGasreqForFailingOffers",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketOrderByTickCustom",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "takerGot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGave",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketOrderByVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "takerGot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGave",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "Tick",
              "name": "maxTick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "fillVolume",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketOrderForByTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "takerGot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGave",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fillWants",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "marketOrderForByVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "takerGot",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGave",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bounty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feePaid",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "newOfferByTick",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "newOfferByVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerData",
          "outputs": [
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerDetails",
          "outputs": [
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offers",
          "outputs": [
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "olKeys",
          "outputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "deprovision",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "root",
          "outputs": [
            {
              "internalType": "Field",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "density96X32",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDensity96X32"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFee"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offer_gasbase",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasbase"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasmax",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasmax"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasprice"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "governanceAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGovernance"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxGasreqForFailingOffers",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxGasreqForFailingOffers"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "maxRecursionDepth",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMaxRecursionDepth"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "monitor",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMonitor"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "notify",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNotify"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "useOracle",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUseOracle"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "Tick",
              "name": "tick",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateOfferByTick"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "wants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updateOfferByVolume"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "bool",
              "name": "noRevert",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "returns": {
              "_0": "the domain separator."
            }
          },
          "PERMIT_TYPEHASH()": {
            "returns": {
              "_0": "The permit type hash."
            }
          },
          "activate((address,address,uint256),uint256,uint256,uint256)": {
            "details": "If the flipped offer list is active then the offer lists are expected to have the same `tickSpacing`.",
            "params": {
              "density96X32": "The density of the offer list used to define a minimum offer volume. See `setDensity96X32`.",
              "fee": "in basis points, of `olKey.outbound_tkn` given to the taker. This fee is sent to Mangrove. Fee is capped to ~2.5%.",
              "offer_gasbase": "The gasbase of the offer list used to define a minimum provision necessary for offers. See `setGasbase`.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            }
          },
          "allowance(address,address,address,address)": {
            "params": {
              "inbound_tkn": "The address of the (maker) inbound token.",
              "outbound_tkn": "The address of the (maker) outbound token.",
              "owner": "The address of the owner.",
              "spender": "The address of the spender."
            },
            "returns": {
              "amount": "The amount of tokens the spender is allowed to spend on behalf of the owner."
            }
          },
          "approve(address,address,address,uint256)": {
            "params": {
              "inbound_tkn": "The address of the (maker) inbound token.",
              "outbound_tkn": "The address of the (maker) outbound token.",
              "spender": "The address of the spender.",
              "value": "The amount of tokens to approve."
            },
            "returns": {
              "_0": "true if the approval succeeded; always true."
            }
          },
          "balanceOf(address)": {
            "params": {
              "maker": "The maker to get the balance for."
            },
            "returns": {
              "balance": "The maker's free balance of native tokens (funds for provisioning offers not locked by an offer)."
            }
          },
          "best((address,address,uint256))": {
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "offerId": "The `offerId` of the best offer on the offer list."
            }
          },
          "cleanByImpersonation((address,address,uint256),(uint256,int256,uint256,uint256)[],address)": {
            "details": "If an offer succeeds, the execution of that offer is reverted, it stays in the book, and no bounty is paid; The `cleanByImpersonation` function itself will not revert.Note that Mangrove won't attempt to execute an offer if the values in a target don't match its offer. To distinguish between a non-executed clean and a fail clean (due to the offer itself not failing), you must inspect the log (see `MgvLib.sol`) or check the received bounty.Any `taker` can be impersonated when cleaning because:- The function reverts if the offer succeeds, reverting any token transfers.- After a `clean` where the offer has failed, all ERC20 token transfers have also been reverted -- but the sender will still have received the bounty of the failing offers. */",
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "taker": "The taker used for transfers (should be able to deliver token amounts).",
              "targets": "The offers to clean, identified by their (`offerId, tick, gasreq, takerWants`) that will make them fail."
            },
            "returns": {
              "bounty": "The total bounty received by the caller.",
              "successes": "The number of successfully cleaned offers."
            }
          },
          "config((address,address,uint256))": {
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_global": "The global configuration for Mangrove.",
              "_local": "The local configuration for the offer list."
            }
          },
          "deactivate((address,address,uint256))": {
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            }
          },
          "flashloan(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),address)": {
            "details": "not to be called externally - only external to be able to revert.",
            "params": {
              "sor": "data about an order-offer match.",
              "taker": "the taker."
            },
            "returns": {
              "gasused": "the amount of gas used for `makerExecute`.",
              "makerData": "the data returned by `makerExecute`."
            }
          },
          "fund(address)": {
            "params": {
              "maker": "The maker to add funds for."
            }
          },
          "global()": {
            "returns": {
              "_global": "The global configuration for Mangrove."
            }
          },
          "governance()": {
            "returns": {
              "_0": "the governance address."
            }
          },
          "internalCleanByImpersonation((address,address,uint256),uint256,int256,uint256,uint256,address)": {
            "details": "not to be called externally - only external to be able to revert.",
            "params": {
              "gasreq": "The gas required for the offer.",
              "offerId": "The id of the offer on Mangrove.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`",
              "taker": "The taker used for transfers (should be able to deliver token amounts).",
              "takerWants": "Must be `<= MAX_SAFE_VOLUME`. The amount of `olKey.outbound_tkn` the taker wants.",
              "tick": "Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick."
            },
            "returns": {
              "bounty": "the bounty paid."
            }
          },
          "leafs((address,address,uint256),int256)": {
            "params": {
              "index": "The index.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_0": "the leaf."
            }
          },
          "level1s((address,address,uint256),int256)": {
            "params": {
              "index": "The index.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_0": "the field"
            }
          },
          "level2s((address,address,uint256),int256)": {
            "params": {
              "index": "The index.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_0": "the field"
            }
          },
          "level3s((address,address,uint256),int256)": {
            "params": {
              "index": "The index.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_0": "the field"
            }
          },
          "local((address,address,uint256))": {
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_local": "The local configuration for the offer list."
            }
          },
          "locked((address,address,uint256))": {
            "details": "The lock protects modifying or inspecting the offer list while an order is in progress.",
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_0": "true if locked; otherwise, false."
            }
          },
          "marketOrderByTick((address,address,uint256),int256,uint256,bool)": {
            "details": "The market order stops when there are no more offers at or below `maxTick`, when the end of the book has been reached, or:- If `fillWants` is true, the market order stops when `fillVolume` units of `olKey.outbound_tkn` have been obtained. To buy a specific volume of `olKey.outbound_tkn` at any price, set `fillWants` to true, set `fillVolume` to the volume you want to buy, and set `maxTick` to the `MAX_TICK` constant.- If `fillWants` is false, the market order stops when `fillVolume` units of `olKey.inbound_tkn` have been paid. To sell a specific volume of `olKey.inbound_tkn` at any price, set `fillWants` to false, set `fillVolume` to the volume you want to sell, and set `maxTick` to the `MAX_TICK` constant.",
            "params": {
              "fillVolume": "Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.",
              "fillWants": "if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.",
              "maxTick": "Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens)",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "bounty": "The amount of native token the taker got as a bounty due to failing offers (in wei)",
              "feePaid": "The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.",
              "takerGave": "The amount of `olKey.inbound_tkn` the taker gave.",
              "takerGot": "The amount of `olKey.outbound_tkn` the taker got."
            }
          },
          "marketOrderByTickCustom((address,address,uint256),int256,uint256,bool,uint256)": {
            "details": "Mangrove stops a market order after it has gone through failing offers such that their cumulative `gasreq` is greater than the global `maxGasreqForFailingOffers` parameter. This function can be used by the taker to override the default `maxGasreqForFailingOffers` parameter.",
            "params": {
              "fillVolume": "Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.",
              "fillWants": "if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.",
              "maxGasreqForFailingOffers": "The maximum allowed gas required for failing offers (in wei).",
              "maxTick": "Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of the limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens).",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "bounty": "The amount of native token the taker got as a bounty due to failing offers (in wei)",
              "feePaid": "The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.",
              "takerGave": "The amount of `olKey.inbound_tkn` the taker gave.",
              "takerGot": "The amount of `olKey.outbound_tkn` the taker got."
            }
          },
          "marketOrderByVolume((address,address,uint256),uint256,uint256,bool)": {
            "details": "This function is just a wrapper for `marketOrderByTick`, see that function for details.When deriving the tick, then `takerWants = 0` has a special meaning and the tick for the highest possible ratio between wants and gives will be used,and if `takerGives = 0` and `takerWants != 0`, then the tick for the lowest possible ratio will be used.",
            "params": {
              "fillWants": "if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "takerGives": "Must be `<= MAX_SAFE_VOLUME`. The amount the taker gives. This is used along with `takerWants` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.",
              "takerWants": "Must be `<= MAX_SAFE_VOLUME`. The amount the taker wants. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`."
            },
            "returns": {
              "bounty": "The amount of native token the taker got as a bounty due to failing offers (in wei)",
              "feePaid": "The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.",
              "takerGave": "The amount of `olKey.inbound_tkn` the taker gave.",
              "takerGot": "The amount of `olKey.outbound_tkn` the taker got."
            }
          },
          "marketOrderForByTick((address,address,uint256),int256,uint256,bool,address)": {
            "details": "The `bounty` will be send to `msg.sender` but transfers will be for `taker`. Requires prior permission.See also `marketOrderByTick`.",
            "params": {
              "fillVolume": "Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.",
              "fillWants": "if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.",
              "maxTick": "Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of the limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens).",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "taker": "The taker from which amounts will be transferred from and to. If the `msg.sender`'s allowance for the given `olKey.outbound_tkn`,`olKey.inbound_tkn` is strictly less than the total amount eventually spent by `taker`, the call will fail."
            },
            "returns": {
              "bounty": "The amount of native token the taker got as a bounty due to failing offers (in wei)",
              "feePaid": "The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.",
              "takerGave": "The amount of `olKey.inbound_tkn` the taker gave.",
              "takerGot": "The amount of `olKey.outbound_tkn` the taker got."
            }
          },
          "marketOrderForByVolume((address,address,uint256),uint256,uint256,bool,address)": {
            "details": "The `bounty` will be send to `msg.sender` but transfers will be for `taker`. Requires prior permission.See also `marketOrderByVolume`.",
            "params": {
              "fillWants": "if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "taker": "The taker from which amounts will be transferred from and to the. If the `msg.sender`'s allowance for the given `olKey.outbound_tkn`,`olKey.inbound_tkn` are strictly less than the total amount eventually spent by `taker`, the call will fail.",
              "takerGives": "Must be `<= MAX_SAFE_VOLUME`. The amount the taker gives. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.",
              "takerWants": "Must be `<= MAX_SAFE_VOLUME`. The amount the taker wants. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`."
            },
            "returns": {
              "bounty": "The amount of native token the taker got as a bounty due to failing offers (in wei)",
              "feePaid": "The amount of native token the taker paid as a fee (in wei of `olKey.outbound_tkn`)",
              "takerGave": "The amount of `olKey.inbound_tkn` the taker gave.",
              "takerGot": "The amount of `olKey.outbound_tkn` the taker got."
            }
          },
          "newOfferByTick((address,address,uint256),int256,uint256,uint256,uint256)": {
            "details": "The gasreq and gasprice are used to derive the provision which will be used to pay a penalty if the offer fails.This function is payable to enable delivery of the provision along with the offer creation.",
            "params": {
              "gasprice": "The maximum gas price the maker is willing to pay a penalty for due to failing execution.",
              "gasreq": "The amount of gas required to execute the offer logic in the maker's `IMaker` implementation. This will limit the gas available, and the offer will fail if it spends more.",
              "gives": "Must be `<= MAX_SAFE_VOLUME`. The amount of `olKey.outbound_tkn` the maker gives.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "tick": "Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick (which is a power of 1.0001 and induces a price). The actual tick of the offer will be the smallest tick offerTick > tick that satisfies offerTick % tickSpacing == 0."
            },
            "returns": {
              "offerId": "the id of the offer on Mangrove. Can be used to retract or update the offer (even to reuse a taken offer)."
            }
          },
          "newOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256)": {
            "details": "This function is just a wrapper for `newOfferByTick`, see that function for details.",
            "params": {
              "gasprice": "The maximum gas price the maker is willing to pay a penalty for due to failing execution.",
              "gasreq": "The amount of gas required to execute the offer logic in the maker's `IMaker` implementation. This will limit the gas available, and the offer will fail if it spends more.",
              "gives": "Must be less than MAX_SAFE_VOLUME. The amount of `olKey.outbound_tkn` the maker gives. This is used along with `wants` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`. Must be less than MAX_SAFE_VOLUME.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "wants": "Must be less than MAX_SAFE_VOLUME. The amount of `olKey.inbound_tkn` the maker wants. This is used along with `gives` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`."
            },
            "returns": {
              "offerId": "the id of the offer on Mangrove. Can be used to retract or update the offer (even to reuse a taken offer)."
            }
          },
          "nonces(address)": {
            "params": {
              "owner": "The address of the owner."
            },
            "returns": {
              "nonce": "The current nonce of the owner."
            }
          },
          "offerData((address,address,uint256),uint256)": {
            "params": {
              "offerId": "The `offerId` of the offer on the offer list.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "offer": "The offer in packed format.",
              "offerDetail": "The offer details in packed format."
            }
          },
          "offerDetails((address,address,uint256),uint256)": {
            "params": {
              "offerId": "The `offerId` of the offer on the offer list.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "offerDetail": "The offer details in packed format."
            }
          },
          "offers((address,address,uint256),uint256)": {
            "params": {
              "offerId": "The `offerId` of the offer on the offer list.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "offer": "The offer in packed format."
            }
          },
          "olKeys(bytes32)": {
            "params": {
              "olKeyHash": "the hash of the offer list key."
            },
            "returns": {
              "olKey": "the olKey."
            }
          },
          "permit(address,address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "params": {
              "deadline": "The deadline after which the permit is no longer valid.",
              "inbound_tkn": "The address of the (maker) inbound token.",
              "outbound_tkn": "The address of the (maker) outbound token.",
              "owner": "The address of the owner.",
              "r": "The signature r parameter.",
              "s": "The signature s parameter.",
              "spender": "The address of the spender.",
              "v": "The signature v parameter.",
              "value": "The amount of tokens to approve."
            }
          },
          "retractOffer((address,address,uint256),uint256,bool)": {
            "details": "`withdraw` can be used to withdraw the funds after deprovisioning.Leaving funds provisioned can be used to save gas if offer is later updated.",
            "params": {
              "deprovision": "Whether to deprovision the offer, i.e, return the provision to the maker's balance on Mangrove.",
              "offerId": "The id of the offer on Mangrove.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "provision": "The amount of native token deprovisioned for the offer (in wei)."
            }
          },
          "root((address,address,uint256))": {
            "params": {
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "returns": {
              "_0": "the root"
            }
          },
          "setDensity96X32((address,address,uint256),uint256)": {
            "details": "Useless if `global.useOracle != 0` and oracle returns a valid density.",
            "params": {
              "density96X32": "is given as a 96.32 fixed point number. It will be stored as a 9-bit float and be approximated towards 0. The maximum error is 20%. See `DensityLib` for more information.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            }
          },
          "setFee((address,address,uint256),uint256)": {
            "params": {
              "fee": "in basis points, of `olKey.outbound_tkn` given to the taker. This fee is sent to Mangrove. Fee is capped to ~2.5%.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            }
          },
          "setGasbase((address,address,uint256),uint256)": {
            "params": {
              "offer_gasbase": "The gasbase of the offer list used to define a minimum provision necessary for offers. Represents the gas overhead used by processing the offer inside Mangrove + the overhead of initiating an entire order. Stored in thousands in a maximum of 9 bits.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            }
          },
          "setGasmax(uint256)": {
            "params": {
              "gasmax": "The maximum amount of gas required to execute an offer. Must fit in 24 bits."
            }
          },
          "setGasprice(uint256)": {
            "params": {
              "gasprice": "The gasprice (in Mwei, 26 bits)"
            }
          },
          "setGovernance(address)": {
            "params": {
              "governanceAddress": "The new governance address."
            }
          },
          "setMaxGasreqForFailingOffers(uint256)": {
            "params": {
              "maxGasreqForFailingOffers": "The maximum cumulative `gasreq` for failing offers during a market order before doing a partial fill. 32 bits."
            }
          },
          "setMaxRecursionDepth(uint256)": {
            "params": {
              "maxRecursionDepth": "The maximum number of times a market order can recursively execute offers."
            }
          },
          "setMonitor(address)": {
            "params": {
              "monitor": "The new monitor/oracle address."
            }
          },
          "setNotify(bool)": {
            "params": {
              "notify": "Whether Mangrove notifies the Monitor when and offer is taken"
            }
          },
          "setUseOracle(bool)": {
            "params": {
              "useOracle": "Whether Mangrove uses the monitor as oracle for `gasprice` and `density` values."
            }
          },
          "updateOfferByTick((address,address,uint256),int256,uint256,uint256,uint256,uint256)": {
            "details": "See `newOfferByTick` for additional details.",
            "params": {
              "gasprice": "The maximum gas price the maker is willing to pay a penalty for due to failing execution.",
              "gasreq": "The amount of gas required to execute the offer logic in the maker's `IMaker` implementation.",
              "gives": "The amount of `olKey.outbound_tkn` the maker gives. Must be less than MAX_SAFE_VOLUME.",
              "offerId": "The id of the offer on Mangrove.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "tick": "Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick (which is a power of 1.0001 and induces a price)."
            }
          },
          "updateOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256,uint256)": {
            "details": "This function is just a wrapper for `updateOfferByTick`, see that function for details.",
            "params": {
              "gasprice": "The maximum gas price the maker is willing to pay a penalty for due to failing execution.",
              "gasreq": "The amount of gas required to execute the offer logic in the maker's `IMaker` implementation.",
              "gives": "The amount of `olKey.outbound_tkn` the maker gives. This is used along with `wants` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`. Must be less than MAX_SAFE_VOLUME.",
              "offerId": "The id of the offer on Mangrove.",
              "olKey": "The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.",
              "wants": "The amount of `olKey.inbound_tkn` the maker wants. This is used along with `gives` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`."
            }
          },
          "withdraw(uint256)": {
            "params": {
              "amount": "the amount to withdraw."
            },
            "returns": {
              "noRevert": "whether the transfer succeeded."
            }
          },
          "withdrawERC20(address,uint256)": {
            "params": {
              "tokenAddress": "The address of the ERC20 token.",
              "value": "The amount of tokens to transfer."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "notice": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "PERMIT_TYPEHASH()": {
            "notice": "See {IERC20Permit-PERMIT_TYPEHASH}."
          },
          "activate((address,address,uint256),uint256,uint256,uint256)": {
            "notice": "Activates an offer list."
          },
          "allowance(address,address,address,address)": {
            "notice": "returns the allowance of the spender to spend tokens on behalf of the owner."
          },
          "approve(address,address,address,uint256)": {
            "notice": "approves the spender to spend the amount of tokens on behalf of the caller."
          },
          "balanceOf(address)": {
            "notice": "Gets the maker's free balance of native tokens (funds for provisioning offers not locked by an offer)."
          },
          "best((address,address,uint256))": {
            "notice": "Gets the `offerId` of the best offer in the offer list."
          },
          "cleanByImpersonation((address,address,uint256),(uint256,int256,uint256,uint256)[],address)": {
            "notice": "Cleans multiple offers, i.e. executes them and remove them from the book if they fail, transferring the failure penalty as bounty to the caller."
          },
          "config((address,address,uint256))": {
            "notice": "Gets the global configuration for Mangrove and local the configuration for a specific offer list."
          },
          "deactivate((address,address,uint256))": {
            "notice": "Deactivates an offer list."
          },
          "flashloan(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),address)": {
            "notice": "internal function used to flashloan tokens from taker to maker, for maker to source the promised liquidity."
          },
          "fund()": {
            "notice": "Adds funds to Mangrove for the caller (the maker) to use for provisioning offers."
          },
          "fund(address)": {
            "notice": "Adds funds to Mangrove for the maker to use for provisioning offers."
          },
          "global()": {
            "notice": "Gets the global configuration for Mangrove."
          },
          "governance()": {
            "notice": "Gets the governance address."
          },
          "internalCleanByImpersonation((address,address,uint256),uint256,int256,uint256,uint256,address)": {
            "notice": "internal function used to clean failing offers."
          },
          "kill()": {
            "notice": "Kills the Mangrove instance. A dead instance cannot have offers executed or funds received, but offers can be retracted and funds can be withdrawn."
          },
          "leafs((address,address,uint256),int256)": {
            "notice": "Gets a leaf"
          },
          "level1s((address,address,uint256),int256)": {
            "notice": "Gets a level 1 field"
          },
          "level2s((address,address,uint256),int256)": {
            "notice": "Gets a level 2 field"
          },
          "level3s((address,address,uint256),int256)": {
            "notice": "Gets a level 3 field"
          },
          "local((address,address,uint256))": {
            "notice": "Gets the local configuration for a specific offer list."
          },
          "locked((address,address,uint256))": {
            "notice": "Determines whether the reentrancy lock is in effect for the offer list."
          },
          "marketOrderByTick((address,address,uint256),int256,uint256,bool)": {
            "notice": "Performs a market order on a specified offer list taking offers up to a limit price."
          },
          "marketOrderByTickCustom((address,address,uint256),int256,uint256,bool,uint256)": {
            "notice": "Performs a market order on a specified offer list taking offers up to a limit price, while allowing to specify a custom `maxGasreqForFailingOffers`."
          },
          "marketOrderByVolume((address,address,uint256),uint256,uint256,bool)": {
            "notice": "Performs a market order on a specified offer list taking offers up to a limit price defined by a ratio `inbound_tkn/outbound_tkn` of volumes."
          },
          "marketOrderForByTick((address,address,uint256),int256,uint256,bool,address)": {
            "notice": "Performs a market order on a specified offer list taking offers up to a limit price for a specified taker."
          },
          "marketOrderForByVolume((address,address,uint256),uint256,uint256,bool,address)": {
            "notice": "Performs a market order on a specified offer list taking offers up to a limit price defined by a ratio `inbound_tkn/outbound_tkn` of volumes for a specified taker."
          },
          "newOfferByTick((address,address,uint256),int256,uint256,uint256,uint256)": {
            "notice": "Creates a new offer on Mangrove, where the caller is the maker. The maker can implement the `IMaker` interface to be called during offer execution."
          },
          "newOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256)": {
            "notice": "Creates a new offer on Mangrove, where the caller is the maker. The maker can implement the `IMaker` interface to be called during offer execution."
          },
          "nonces(address)": {
            "notice": "See {IERC20Permit-nonces}."
          },
          "offerData((address,address,uint256),uint256)": {
            "notice": "Gets both an offer and its details in packed format."
          },
          "offerDetails((address,address,uint256),uint256)": {
            "notice": "Gets an offer's details in packed format."
          },
          "offers((address,address,uint256),uint256)": {
            "notice": "Gets an offer in packed format."
          },
          "olKeys(bytes32)": {
            "notice": "Gets the offer list key with the given hash (if the offer list key has been activated at least once)."
          },
          "permit(address,address,address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Adapted from [Uniswap v2 contract](https://github.com/Uniswap/uniswap-v2-core/blob/55ae25109b7918565867e5c39f1e84b7edd19b2a/contracts/UniswapV2ERC20.sol#L81)"
          },
          "retractOffer((address,address,uint256),uint256,bool)": {
            "notice": "Retracts an offer from Mangrove, where the caller is the maker."
          },
          "root((address,address,uint256))": {
            "notice": "Gets the root from local."
          },
          "setDensity96X32((address,address,uint256),uint256)": {
            "notice": "Sets the density."
          },
          "setFee((address,address,uint256),uint256)": {
            "notice": "Sets the fee for the offer list."
          },
          "setGasbase((address,address,uint256),uint256)": {
            "notice": "Sets the gasbase for the offer list."
          },
          "setGasmax(uint256)": {
            "notice": "Sets the gasmax for Mangrove, the maximum amount of gas an offer can require to execute."
          },
          "setGasprice(uint256)": {
            "notice": "Sets the gasprice (in Mwei, 26 bits)"
          },
          "setGovernance(address)": {
            "notice": "Sets a new governance address."
          },
          "setMaxGasreqForFailingOffers(uint256)": {
            "notice": "Sets the maximum cumulative `gasreq` for failing offers during a market order before doing a partial fill."
          },
          "setMaxRecursionDepth(uint256)": {
            "notice": "Sets the maximum number of times a market order can recursively execute offers. This is a protection against stack overflows."
          },
          "setMonitor(address)": {
            "notice": "Sets the monitor/oracle. The `monitor/oracle` can provide real-time values for `gasprice` and `density` to Mangrove. It can also receive liquidity event notifications."
          },
          "setNotify(bool)": {
            "notice": "Sets whether Mangrove notifies the Monitor when and offer is taken"
          },
          "setUseOracle(bool)": {
            "notice": "Sets whether Mangrove uses the monitor as oracle for `gasprice` and `density` values."
          },
          "updateOfferByTick((address,address,uint256),int256,uint256,uint256,uint256,uint256)": {
            "notice": "Updates an existing offer on Mangrove, where the caller is the maker."
          },
          "updateOfferByVolume((address,address,uint256),uint256,uint256,uint256,uint256,uint256)": {
            "notice": "Updates an existing, owned offer on Mangrove, where the caller is the maker."
          },
          "withdraw(uint256)": {
            "notice": "Withdraws the caller's (the maker's) free native tokens (funds for provisioning offers not locked by an offer) by transferring them to the caller."
          },
          "withdrawERC20(address,uint256)": {
            "notice": "Transfer ERC20 tokens to governance."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": "IMangrove"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
    "id": 54128,
    "exportedSymbols": {
      "Bin": [
        6855
      ],
      "BitLib": [
        4329
      ],
      "Density": [
        4458
      ],
      "DensityLib": [
        4847
      ],
      "DirtyField": [
        8083
      ],
      "DirtyFieldLib": [
        8164
      ],
      "DirtyLeaf": [
        8016
      ],
      "DirtyLeafLib": [
        8081
      ],
      "Field": [
        7296
      ],
      "FieldLib": [
        8014
      ],
      "Global": [
        63500
      ],
      "GlobalLib": [
        64895
      ],
      "GlobalUnpacked": [
        63498
      ],
      "HasMgvEvents": [
        56193
      ],
      "IERC20": [
        88
      ],
      "IMaker": [
        56211
      ],
      "IMangrove": [
        54127
      ],
      "IMgvMonitor": [
        56239
      ],
      "INITIAL_MAX_GASREQ_FOR_FAILING_OFFERS_MULTIPLIER": [
        4442
      ],
      "INITIAL_MAX_RECURSION_DEPTH": [
        4439
      ],
      "LEAF_SIZE": [
        4368
      ],
      "LEAF_SIZE_BITS": [
        4359
      ],
      "LEAF_SIZE_MASK": [
        4377
      ],
      "LEVEL_SIZE": [
        4371
      ],
      "LEVEL_SIZE_BITS": [
        4362
      ],
      "LEVEL_SIZE_MASK": [
        4380
      ],
      "LOG_BP_2X235": [
        4448
      ],
      "LOG_BP_SHIFT": [
        4445
      ],
      "Leaf": [
        6414
      ],
      "LeafLib": [
        6853
      ],
      "Local": [
        64937
      ],
      "LocalLib": [
        66925
      ],
      "LocalUnpacked": [
        64935
      ],
      "MANTISSA_BITS": [
        4430
      ],
      "MANTISSA_BITS_MINUS_ONE": [
        4433
      ],
      "MAX_BIN": [
        4408
      ],
      "MAX_FIELD_SIZE": [
        4356
      ],
      "MAX_RATIO_EXP": [
        4427
      ],
      "MAX_RATIO_MANTISSA": [
        4424
      ],
      "MAX_SAFE_VOLUME": [
        4436
      ],
      "MAX_TICK": [
        4415
      ],
      "MIN_BIN": [
        4405
      ],
      "MIN_RATIO_EXP": [
        4421
      ],
      "MIN_RATIO_MANTISSA": [
        4418
      ],
      "MIN_TICK": [
        4412
      ],
      "MgvLib": [
        55985
      ],
      "NOT_TOPBIT": [
        4347
      ],
      "NUM_BINS": [
        4401
      ],
      "NUM_LEAFS": [
        4398
      ],
      "NUM_LEVEL1": [
        4389
      ],
      "NUM_LEVEL2": [
        4392
      ],
      "NUM_LEVEL3": [
        4395
      ],
      "OFFER_BITS": [
        4353
      ],
      "OFFER_MASK": [
        4386
      ],
      "OLKey": [
        55875
      ],
      "OLLib": [
        55947
      ],
      "ONE": [
        4334
      ],
      "ONES": [
        4341
      ],
      "Offer": [
        66949
      ],
      "OfferDetail": [
        67755
      ],
      "OfferDetailLib": [
        68529
      ],
      "OfferDetailUnpacked": [
        67753
      ],
      "OfferLib": [
        67732
      ],
      "OfferUnpacked": [
        66947
      ],
      "ROOT_SIZE": [
        4374
      ],
      "ROOT_SIZE_BITS": [
        4365
      ],
      "ROOT_SIZE_MASK": [
        4383
      ],
      "TICK_BITS": [
        4350
      ],
      "TOPBIT": [
        4344
      ],
      "Tick": [
        5280
      ],
      "TickLib": [
        6401
      ],
      "TickTreeLib": [
        7294
      ],
      "csf": [
        37519
      ]
    },
    "nodeType": "SourceUnit",
    "src": "112:31877:41",
    "nodes": [
      {
        "id": 53500,
        "nodeType": "PragmaDirective",
        "src": "112:31:41",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 53501,
        "nodeType": "ImportDirective",
        "src": "145:34:41",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54128,
        "sourceUnit": 56240,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 54127,
        "nodeType": "ContractDefinition",
        "src": "228:31760:41",
        "nodes": [
          {
            "id": 53510,
            "nodeType": "FunctionDefinition",
            "src": "378:60:41",
            "nodes": [],
            "documentation": {
              "id": 53505,
              "nodeType": "StructuredDocumentation",
              "src": "293:82:41",
              "text": "@notice See {IERC20Permit-DOMAIN_SEPARATOR}.\n@return the domain separator."
            },
            "functionSelector": "3644e515",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "387:16:41",
            "parameters": {
              "id": 53506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "403:2:41"
            },
            "returnParameters": {
              "id": 53509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53508,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53510,
                  "src": "429:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53507,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "428:9:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53516,
            "nodeType": "FunctionDefinition",
            "src": "526:59:41",
            "nodes": [],
            "documentation": {
              "id": 53511,
              "nodeType": "StructuredDocumentation",
              "src": "442:81:41",
              "text": "@notice See {IERC20Permit-PERMIT_TYPEHASH}.\n@return The permit type hash."
            },
            "functionSelector": "30adf81f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "PERMIT_TYPEHASH",
            "nameLocation": "535:15:41",
            "parameters": {
              "id": 53512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "550:2:41"
            },
            "returnParameters": {
              "id": 53515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53514,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53516,
                  "src": "576:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53513,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "576:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "575:9:41"
            },
            "scope": 54127,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53530,
            "nodeType": "FunctionDefinition",
            "src": "969:113:41",
            "nodes": [],
            "documentation": {
              "id": 53517,
              "nodeType": "StructuredDocumentation",
              "src": "589:377:41",
              "text": "@notice approves the spender to spend the amount of tokens on behalf of the caller.\n@param outbound_tkn The address of the (maker) outbound token.\n@param inbound_tkn The address of the (maker) inbound token.\n@param spender The address of the spender.\n@param value The amount of tokens to approve.\n@return true if the approval succeeded; always true."
            },
            "functionSelector": "59eba454",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "978:7:41",
            "parameters": {
              "id": 53526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53519,
                  "mutability": "mutable",
                  "name": "outbound_tkn",
                  "nameLocation": "994:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53530,
                  "src": "986:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53521,
                  "mutability": "mutable",
                  "name": "inbound_tkn",
                  "nameLocation": "1016:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53530,
                  "src": "1008:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53523,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1037:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53530,
                  "src": "1029:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1029:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53525,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1051:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53530,
                  "src": "1046:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53524,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:72:41"
            },
            "returnParameters": {
              "id": 53529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53528,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53530,
                  "src": "1076:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53527,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:6:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53544,
            "nodeType": "FunctionDefinition",
            "src": "1499:142:41",
            "nodes": [],
            "documentation": {
              "id": 53531,
              "nodeType": "StructuredDocumentation",
              "src": "1086:410:41",
              "text": "@notice returns the allowance of the spender to spend tokens on behalf of the owner.\n@param outbound_tkn The address of the (maker) outbound token.\n@param inbound_tkn The address of the (maker) inbound token.\n@param owner The address of the owner.\n@param spender The address of the spender.\n@return amount The amount of tokens the spender is allowed to spend on behalf of the owner."
            },
            "functionSelector": "cd6a7ca7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1508:9:41",
            "parameters": {
              "id": 53540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53533,
                  "mutability": "mutable",
                  "name": "outbound_tkn",
                  "nameLocation": "1526:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53544,
                  "src": "1518:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53535,
                  "mutability": "mutable",
                  "name": "inbound_tkn",
                  "nameLocation": "1548:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53544,
                  "src": "1540:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53537,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1569:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53544,
                  "src": "1561:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53539,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1584:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53544,
                  "src": "1576:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1576:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1517:75:41"
            },
            "returnParameters": {
              "id": 53543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53542,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1633:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53544,
                  "src": "1628:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53541,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1627:13:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53566,
            "nodeType": "FunctionDefinition",
            "src": "2293:198:41",
            "nodes": [],
            "documentation": {
              "id": 53545,
              "nodeType": "StructuredDocumentation",
              "src": "1645:645:41",
              "text": "@notice Adapted from [Uniswap v2 contract](https://github.com/Uniswap/uniswap-v2-core/blob/55ae25109b7918565867e5c39f1e84b7edd19b2a/contracts/UniswapV2ERC20.sol#L81)\n@param outbound_tkn The address of the (maker) outbound token.\n@param inbound_tkn The address of the (maker) inbound token.\n@param owner The address of the owner.\n@param spender The address of the spender.\n@param value The amount of tokens to approve.\n@param deadline The deadline after which the permit is no longer valid.\n@param v The signature v parameter.\n@param r The signature r parameter.\n@param s The signature s parameter."
            },
            "functionSelector": "b09d2a16",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "2302:6:41",
            "parameters": {
              "id": 53564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53547,
                  "mutability": "mutable",
                  "name": "outbound_tkn",
                  "nameLocation": "2322:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2314:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53549,
                  "mutability": "mutable",
                  "name": "inbound_tkn",
                  "nameLocation": "2348:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2340:19:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53548,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2340:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53551,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2373:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2365:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53553,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2392:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2384:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53555,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2410:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2405:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53554,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2405:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53557,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2426:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2421:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53556,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53559,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "2446:1:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2440:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 53558,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2440:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53561,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "2461:1:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2453:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53560,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2453:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53563,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2476:1:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53566,
                  "src": "2468:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53562,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2468:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:173:41"
            },
            "returnParameters": {
              "id": 53565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2490:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53574,
            "nodeType": "FunctionDefinition",
            "src": "2630:66:41",
            "nodes": [],
            "documentation": {
              "id": 53567,
              "nodeType": "StructuredDocumentation",
              "src": "2495:132:41",
              "text": "@notice See {IERC20Permit-nonces}.\n@param owner The address of the owner.\n@return nonce The current nonce of the owner."
            },
            "functionSelector": "7ecebe00",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "2639:6:41",
            "parameters": {
              "id": 53570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53569,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2654:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53574,
                  "src": "2646:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2646:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2645:15:41"
            },
            "returnParameters": {
              "id": 53573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53572,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2689:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53574,
                  "src": "2684:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53571,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2684:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2683:12:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53596,
            "nodeType": "FunctionDefinition",
            "src": "4626:178:41",
            "nodes": [],
            "documentation": {
              "id": 53575,
              "nodeType": "StructuredDocumentation",
              "src": "2724:1899:41",
              "text": "@notice Performs a market order on a specified offer list taking offers up to a limit price.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param maxTick Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens)\n@param fillVolume Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.\n@param fillWants if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\n@return takerGot The amount of `olKey.outbound_tkn` the taker got.\n@return takerGave The amount of `olKey.inbound_tkn` the taker gave.\n@return bounty The amount of native token the taker got as a bounty due to failing offers (in wei)\n@return feePaid The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\n@dev The market order stops when there are no more offers at or below `maxTick`, when the end of the book has been reached, or:\n@dev - If `fillWants` is true, the market order stops when `fillVolume` units of `olKey.outbound_tkn` have been obtained. To buy a specific volume of `olKey.outbound_tkn` at any price, set `fillWants` to true, set `fillVolume` to the volume you want to buy, and set `maxTick` to the `MAX_TICK` constant.\n@dev - If `fillWants` is false, the market order stops when `fillVolume` units of `olKey.inbound_tkn` have been paid. To sell a specific volume of `olKey.inbound_tkn` at any price, set `fillWants` to false, set `fillVolume` to the volume you want to sell, and set `maxTick` to the `MAX_TICK` constant."
            },
            "functionSelector": "d6a522ce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderByTick",
            "nameLocation": "4635:17:41",
            "parameters": {
              "id": 53586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53578,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "4666:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4653:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53576,
                      "name": "OLKey",
                      "nameLocations": [
                        "4653:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "4653:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "4653:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53581,
                  "mutability": "mutable",
                  "name": "maxTick",
                  "nameLocation": "4678:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4673:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 53580,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53579,
                      "name": "Tick",
                      "nameLocations": [
                        "4673:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "4673:4:41"
                    },
                    "referencedDeclaration": 5280,
                    "src": "4673:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53583,
                  "mutability": "mutable",
                  "name": "fillVolume",
                  "nameLocation": "4692:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4687:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53582,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53585,
                  "mutability": "mutable",
                  "name": "fillWants",
                  "nameLocation": "4709:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4704:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53584,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4704:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4652:67:41"
            },
            "returnParameters": {
              "id": 53595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53588,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "4751:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4746:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53587,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4746:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53590,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "4766:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4761:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53589,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4761:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53592,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "4782:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4777:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53591,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4777:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53594,
                  "mutability": "mutable",
                  "name": "feePaid",
                  "nameLocation": "4795:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53596,
                  "src": "4790:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53593,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4790:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4745:58:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53620,
            "nodeType": "FunctionDefinition",
            "src": "6415:232:41",
            "nodes": [],
            "documentation": {
              "id": 53597,
              "nodeType": "StructuredDocumentation",
              "src": "4808:1604:41",
              "text": "@notice Performs a market order on a specified offer list taking offers up to a limit price, while allowing to specify a custom `maxGasreqForFailingOffers`.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param maxTick Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of the limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens).\n@param fillVolume Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.\n@param fillWants if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\n@param maxGasreqForFailingOffers The maximum allowed gas required for failing offers (in wei).\n@return takerGot The amount of `olKey.outbound_tkn` the taker got.\n@return takerGave The amount of `olKey.inbound_tkn` the taker gave.\n@return bounty The amount of native token the taker got as a bounty due to failing offers (in wei)\n@return feePaid The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\n@dev Mangrove stops a market order after it has gone through failing offers such that their cumulative `gasreq` is greater than the global `maxGasreqForFailingOffers` parameter. This function can be used by the taker to override the default `maxGasreqForFailingOffers` parameter."
            },
            "functionSelector": "e030e04b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderByTickCustom",
            "nameLocation": "6424:23:41",
            "parameters": {
              "id": 53610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53600,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "6466:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6453:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53599,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53598,
                      "name": "OLKey",
                      "nameLocations": [
                        "6453:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "6453:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "6453:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53603,
                  "mutability": "mutable",
                  "name": "maxTick",
                  "nameLocation": "6482:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6477:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 53602,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53601,
                      "name": "Tick",
                      "nameLocations": [
                        "6477:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "6477:4:41"
                    },
                    "referencedDeclaration": 5280,
                    "src": "6477:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53605,
                  "mutability": "mutable",
                  "name": "fillVolume",
                  "nameLocation": "6500:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6495:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53604,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6495:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53607,
                  "mutability": "mutable",
                  "name": "fillWants",
                  "nameLocation": "6521:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6516:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6516:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53609,
                  "mutability": "mutable",
                  "name": "maxGasreqForFailingOffers",
                  "nameLocation": "6541:25:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6536:30:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53608,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6536:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6447:123:41"
            },
            "returnParameters": {
              "id": 53619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53612,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "6594:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6589:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53611,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6589:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53614,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "6609:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6604:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53613,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6604:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53616,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "6625:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6620:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53615,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6620:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53618,
                  "mutability": "mutable",
                  "name": "feePaid",
                  "nameLocation": "6638:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53620,
                  "src": "6633:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53617,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6588:58:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53641,
            "nodeType": "FunctionDefinition",
            "src": "8357:183:41",
            "nodes": [],
            "documentation": {
              "id": 53621,
              "nodeType": "StructuredDocumentation",
              "src": "6651:1703:41",
              "text": "@notice Performs a market order on a specified offer list taking offers up to a limit price defined by a ratio `inbound_tkn/outbound_tkn` of volumes.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param takerWants Must be `<= MAX_SAFE_VOLUME`. The amount the taker wants. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\n@param takerGives Must be `<= MAX_SAFE_VOLUME`. The amount the taker gives. This is used along with `takerWants` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\n@param fillWants if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\n@return takerGot The amount of `olKey.outbound_tkn` the taker got.\n@return takerGave The amount of `olKey.inbound_tkn` the taker gave.\n@return bounty The amount of native token the taker got as a bounty due to failing offers (in wei)\n@return feePaid The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\n@dev This function is just a wrapper for `marketOrderByTick`, see that function for details.\n@dev When deriving the tick, then `takerWants = 0` has a special meaning and the tick for the highest possible ratio between wants and gives will be used,\n@dev and if `takerGives = 0` and `takerWants != 0`, then the tick for the lowest possible ratio will be used."
            },
            "functionSelector": "1440e604",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderByVolume",
            "nameLocation": "8366:19:41",
            "parameters": {
              "id": 53631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53624,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "8399:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8386:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53623,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53622,
                      "name": "OLKey",
                      "nameLocations": [
                        "8386:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "8386:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "8386:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53626,
                  "mutability": "mutable",
                  "name": "takerWants",
                  "nameLocation": "8411:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8406:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53625,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8406:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53628,
                  "mutability": "mutable",
                  "name": "takerGives",
                  "nameLocation": "8428:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8423:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8423:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53630,
                  "mutability": "mutable",
                  "name": "fillWants",
                  "nameLocation": "8445:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8440:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53629,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8440:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8385:70:41"
            },
            "returnParameters": {
              "id": 53640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53633,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "8487:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8482:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53632,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8482:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53635,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "8502:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8497:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53634,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8497:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53637,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "8518:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8513:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53636,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8513:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53639,
                  "mutability": "mutable",
                  "name": "feePaid",
                  "nameLocation": "8531:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53641,
                  "src": "8526:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53638,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8526:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8481:58:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53665,
            "nodeType": "FunctionDefinition",
            "src": "10133:196:41",
            "nodes": [],
            "documentation": {
              "id": 53642,
              "nodeType": "StructuredDocumentation",
              "src": "8544:1586:41",
              "text": "@notice Performs a market order on a specified offer list taking offers up to a limit price for a specified taker.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param maxTick Must be `>= MIN_TICK` and `<= MAX_TICK`. The log of the limit price the taker is ready to pay (meaning: the log base 1.0001 of the ratio of inbound tokens over outbound tokens).\n@param fillVolume Must be `<= MAX_SAFE_VOLUME`. If `fillWants` is true, the amount of `olKey.outbound_tkn` the taker wants to buy; otherwise, the amount of `olKey.inbound_tkn` the taker wants to sell.\n@param fillWants if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\n@param taker The taker from which amounts will be transferred from and to. If the `msg.sender`'s allowance for the given `olKey.outbound_tkn`,`olKey.inbound_tkn` is strictly less than the total amount eventually spent by `taker`, the call will fail.\n@return takerGot The amount of `olKey.outbound_tkn` the taker got.\n@return takerGave The amount of `olKey.inbound_tkn` the taker gave.\n@return bounty The amount of native token the taker got as a bounty due to failing offers (in wei)\n@return feePaid The amount of `olKey.outbound_tkn` the taker paid as a fee to Mangrove.\n@dev The `bounty` will be send to `msg.sender` but transfers will be for `taker`. Requires prior permission.\n@dev See also `marketOrderByTick`."
            },
            "functionSelector": "e9801a29",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderForByTick",
            "nameLocation": "10142:20:41",
            "parameters": {
              "id": 53655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53645,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "10176:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10163:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53644,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53643,
                      "name": "OLKey",
                      "nameLocations": [
                        "10163:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "10163:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "10163:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53648,
                  "mutability": "mutable",
                  "name": "maxTick",
                  "nameLocation": "10188:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10183:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 53647,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53646,
                      "name": "Tick",
                      "nameLocations": [
                        "10183:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "10183:4:41"
                    },
                    "referencedDeclaration": 5280,
                    "src": "10183:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53650,
                  "mutability": "mutable",
                  "name": "fillVolume",
                  "nameLocation": "10202:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10197:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53649,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10197:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53652,
                  "mutability": "mutable",
                  "name": "fillWants",
                  "nameLocation": "10219:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10214:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53651,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10214:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53654,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "10238:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10230:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10230:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10162:82:41"
            },
            "returnParameters": {
              "id": 53664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53657,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "10276:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10271:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53656,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10271:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53659,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "10291:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10286:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53658,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10286:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53661,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "10307:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10302:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53660,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10302:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53663,
                  "mutability": "mutable",
                  "name": "feePaid",
                  "nameLocation": "10320:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53665,
                  "src": "10315:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10315:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10270:58:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53688,
            "nodeType": "FunctionDefinition",
            "src": "12116:201:41",
            "nodes": [],
            "documentation": {
              "id": 53666,
              "nodeType": "StructuredDocumentation",
              "src": "10333:1780:41",
              "text": "@notice Performs a market order on a specified offer list taking offers up to a limit price defined by a ratio `inbound_tkn/outbound_tkn` of volumes for a specified taker.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param takerWants Must be `<= MAX_SAFE_VOLUME`. The amount the taker wants. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\n@param takerGives Must be `<= MAX_SAFE_VOLUME`. The amount the taker gives. This is used along with `takerGives` to derive a max price (`maxTick`) which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\n@param fillWants if true, the matching engine tries to get the taker all they want; otherwise, the matching engine tries to sell all that the taker gives. In both cases subject to the price limit.\n@param taker The taker from which amounts will be transferred from and to the. If the `msg.sender`'s allowance for the given `olKey.outbound_tkn`,`olKey.inbound_tkn` are strictly less than the total amount eventually spent by `taker`, the call will fail.\n@return takerGot The amount of `olKey.outbound_tkn` the taker got.\n@return takerGave The amount of `olKey.inbound_tkn` the taker gave.\n@return bounty The amount of native token the taker got as a bounty due to failing offers (in wei)\n@return feePaid The amount of native token the taker paid as a fee (in wei of `olKey.outbound_tkn`)\n@dev The `bounty` will be send to `msg.sender` but transfers will be for `taker`. Requires prior permission.\n@dev See also `marketOrderByVolume`."
            },
            "functionSelector": "2275123f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "marketOrderForByVolume",
            "nameLocation": "12125:22:41",
            "parameters": {
              "id": 53678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53669,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "12161:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12148:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53667,
                      "name": "OLKey",
                      "nameLocations": [
                        "12148:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "12148:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "12148:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53671,
                  "mutability": "mutable",
                  "name": "takerWants",
                  "nameLocation": "12173:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12168:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53670,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12168:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53673,
                  "mutability": "mutable",
                  "name": "takerGives",
                  "nameLocation": "12190:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12185:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12185:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53675,
                  "mutability": "mutable",
                  "name": "fillWants",
                  "nameLocation": "12207:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12202:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53674,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12202:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53677,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "12226:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12218:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12218:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12147:85:41"
            },
            "returnParameters": {
              "id": 53687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53680,
                  "mutability": "mutable",
                  "name": "takerGot",
                  "nameLocation": "12264:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12259:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53679,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12259:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53682,
                  "mutability": "mutable",
                  "name": "takerGave",
                  "nameLocation": "12279:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12274:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53681,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12274:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53684,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "12295:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12290:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53683,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12290:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53686,
                  "mutability": "mutable",
                  "name": "feePaid",
                  "nameLocation": "12308:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53688,
                  "src": "12303:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53685,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12303:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12258:58:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53705,
            "nodeType": "FunctionDefinition",
            "src": "13781:159:41",
            "nodes": [],
            "documentation": {
              "id": 53689,
              "nodeType": "StructuredDocumentation",
              "src": "12367:1411:41",
              "text": "@notice Cleans multiple offers, i.e. executes them and remove them from the book if they fail, transferring the failure penalty as bounty to the caller.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param targets The offers to clean, identified by their (`offerId, tick, gasreq, takerWants`) that will make them fail.\n@param taker The taker used for transfers (should be able to deliver token amounts).\n@return successes The number of successfully cleaned offers.\n@return bounty The total bounty received by the caller.\n@dev If an offer succeeds, the execution of that offer is reverted, it stays in the book, and no bounty is paid; The `cleanByImpersonation` function itself will not revert.\n@dev Note that Mangrove won't attempt to execute an offer if the values in a target don't match its offer. To distinguish between a non-executed clean and a fail clean (due to the offer itself not failing), you must inspect the log (see `MgvLib.sol`) or check the received bounty.\n@dev Any `taker` can be impersonated when cleaning because:\n@dev - The function reverts if the offer succeeds, reverting any token transfers.\n@dev - After a `clean` where the offer has failed, all ERC20 token transfers have also been reverted -- but the sender will still have received the bounty of the failing offers. */"
            },
            "functionSelector": "32810dd6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "cleanByImpersonation",
            "nameLocation": "13790:20:41",
            "parameters": {
              "id": 53699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53692,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "13824:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53705,
                  "src": "13811:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53691,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53690,
                      "name": "OLKey",
                      "nameLocations": [
                        "13811:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "13811:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "13811:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53696,
                  "mutability": "mutable",
                  "name": "targets",
                  "nameLocation": "13861:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53705,
                  "src": "13831:37:41",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_CleanTarget_$55984_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct MgvLib.CleanTarget[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 53694,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 53693,
                        "name": "MgvLib.CleanTarget",
                        "nameLocations": [
                          "13831:6:41",
                          "13838:11:41"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 55984,
                        "src": "13831:18:41"
                      },
                      "referencedDeclaration": 55984,
                      "src": "13831:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_CleanTarget_$55984_storage_ptr",
                        "typeString": "struct MgvLib.CleanTarget"
                      }
                    },
                    "id": 53695,
                    "nodeType": "ArrayTypeName",
                    "src": "13831:20:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_CleanTarget_$55984_storage_$dyn_storage_ptr",
                      "typeString": "struct MgvLib.CleanTarget[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53698,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "13878:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53705,
                  "src": "13870:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53697,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13870:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13810:74:41"
            },
            "returnParameters": {
              "id": 53704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53701,
                  "mutability": "mutable",
                  "name": "successes",
                  "nameLocation": "13916:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53705,
                  "src": "13911:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53700,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13911:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53703,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "13932:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53705,
                  "src": "13927:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53702,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13927:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13910:29:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53709,
            "nodeType": "FunctionDefinition",
            "src": "14063:33:41",
            "nodes": [],
            "documentation": {
              "id": 53706,
              "nodeType": "StructuredDocumentation",
              "src": "13968:92:41",
              "text": "@notice Adds funds to Mangrove for the caller (the maker) to use for provisioning offers."
            },
            "functionSelector": "b60d4288",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nameLocation": "14072:4:41",
            "parameters": {
              "id": 53707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14076:2:41"
            },
            "returnParameters": {
              "id": 53708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14095:0:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53713,
            "nodeType": "FunctionDefinition",
            "src": "14195:27:41",
            "nodes": [],
            "documentation": {
              "id": 53710,
              "nodeType": "StructuredDocumentation",
              "src": "14100:92:41",
              "text": "@notice Adds funds to Mangrove for the caller (the maker) to use for provisioning offers."
            },
            "implemented": false,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14202:2:41"
            },
            "returnParameters": {
              "id": 53712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14221:0:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53719,
            "nodeType": "FunctionDefinition",
            "src": "14354:46:41",
            "nodes": [],
            "documentation": {
              "id": 53714,
              "nodeType": "StructuredDocumentation",
              "src": "14226:125:41",
              "text": "@notice Adds funds to Mangrove for the maker to use for provisioning offers.\n@param maker The maker to add funds for."
            },
            "functionSelector": "23024408",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nameLocation": "14363:4:41",
            "parameters": {
              "id": 53717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53716,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "14376:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53719,
                  "src": "14368:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14368:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14367:15:41"
            },
            "returnParameters": {
              "id": 53718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14399:0:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53727,
            "nodeType": "FunctionDefinition",
            "src": "14661:64:41",
            "nodes": [],
            "documentation": {
              "id": 53720,
              "nodeType": "StructuredDocumentation",
              "src": "14404:254:41",
              "text": "@notice Withdraws the caller's (the maker's) free native tokens (funds for provisioning offers not locked by an offer) by transferring them to the caller.\n@param amount the amount to withdraw.\n@return noRevert whether the transfer succeeded."
            },
            "functionSelector": "2e1a7d4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "14670:8:41",
            "parameters": {
              "id": 53723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53722,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14684:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53727,
                  "src": "14679:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53721,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14679:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14678:13:41"
            },
            "returnParameters": {
              "id": 53726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53725,
                  "mutability": "mutable",
                  "name": "noRevert",
                  "nameLocation": "14715:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53727,
                  "src": "14710:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14710:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14709:15:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53735,
            "nodeType": "FunctionDefinition",
            "src": "15016:71:41",
            "nodes": [],
            "documentation": {
              "id": 53728,
              "nodeType": "StructuredDocumentation",
              "src": "14729:284:41",
              "text": "@notice Gets the maker's free balance of native tokens (funds for provisioning offers not locked by an offer).\n@param maker The maker to get the balance for.\n@return balance The maker's free balance of native tokens (funds for provisioning offers not locked by an offer)."
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "15025:9:41",
            "parameters": {
              "id": 53731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53730,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "15043:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53735,
                  "src": "15035:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15035:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15034:15:41"
            },
            "returnParameters": {
              "id": 53734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53733,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "15078:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53735,
                  "src": "15073:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53732,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "15073:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15072:14:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53753,
            "nodeType": "FunctionDefinition",
            "src": "16353:147:41",
            "nodes": [],
            "documentation": {
              "id": 53736,
              "nodeType": "StructuredDocumentation",
              "src": "15091:1259:41",
              "text": "@notice Creates a new offer on Mangrove, where the caller is the maker. The maker can implement the `IMaker` interface to be called during offer execution.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param tick Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick (which is a power of 1.0001 and induces a price). The actual tick of the offer will be the smallest tick offerTick > tick that satisfies offerTick % tickSpacing == 0.\n@param gives Must be `<= MAX_SAFE_VOLUME`. The amount of `olKey.outbound_tkn` the maker gives.\n@param gasreq The amount of gas required to execute the offer logic in the maker's `IMaker` implementation. This will limit the gas available, and the offer will fail if it spends more.\n@param gasprice The maximum gas price the maker is willing to pay a penalty for due to failing execution.\n@return offerId the id of the offer on Mangrove. Can be used to retract or update the offer (even to reuse a taken offer).\n@dev The gasreq and gasprice are used to derive the provision which will be used to pay a penalty if the offer fails.\n@dev This function is payable to enable delivery of the provision along with the offer creation."
            },
            "functionSelector": "f95902aa",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newOfferByTick",
            "nameLocation": "16362:14:41",
            "parameters": {
              "id": 53749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53739,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "16390:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53753,
                  "src": "16377:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53738,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53737,
                      "name": "OLKey",
                      "nameLocations": [
                        "16377:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "16377:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "16377:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53742,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "16402:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53753,
                  "src": "16397:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 53741,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53740,
                      "name": "Tick",
                      "nameLocations": [
                        "16397:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "16397:4:41"
                    },
                    "referencedDeclaration": 5280,
                    "src": "16397:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53744,
                  "mutability": "mutable",
                  "name": "gives",
                  "nameLocation": "16413:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53753,
                  "src": "16408:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53743,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16408:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53746,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "16425:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53753,
                  "src": "16420:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16420:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53748,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "16438:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53753,
                  "src": "16433:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53747,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16433:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16376:71:41"
            },
            "returnParameters": {
              "id": 53752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53751,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "16491:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53753,
                  "src": "16486:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "16486:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16485:14:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53770,
            "nodeType": "FunctionDefinition",
            "src": "17880:150:41",
            "nodes": [],
            "documentation": {
              "id": 53754,
              "nodeType": "StructuredDocumentation",
              "src": "16504:1373:41",
              "text": "@notice Creates a new offer on Mangrove, where the caller is the maker. The maker can implement the `IMaker` interface to be called during offer execution.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param wants Must be less than MAX_SAFE_VOLUME. The amount of `olKey.inbound_tkn` the maker wants. This is used along with `gives` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\n@param gives Must be less than MAX_SAFE_VOLUME. The amount of `olKey.outbound_tkn` the maker gives. This is used along with `wants` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`. Must be less than MAX_SAFE_VOLUME.\n@param gasreq The amount of gas required to execute the offer logic in the maker's `IMaker` implementation. This will limit the gas available, and the offer will fail if it spends more.\n@param gasprice The maximum gas price the maker is willing to pay a penalty for due to failing execution.\n@return offerId the id of the offer on Mangrove. Can be used to retract or update the offer (even to reuse a taken offer).\n@dev This function is just a wrapper for `newOfferByTick`, see that function for details."
            },
            "functionSelector": "b268813c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newOfferByVolume",
            "nameLocation": "17889:16:41",
            "parameters": {
              "id": 53766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53757,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "17919:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53770,
                  "src": "17906:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53756,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53755,
                      "name": "OLKey",
                      "nameLocations": [
                        "17906:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "17906:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "17906:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53759,
                  "mutability": "mutable",
                  "name": "wants",
                  "nameLocation": "17931:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53770,
                  "src": "17926:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53758,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17926:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53761,
                  "mutability": "mutable",
                  "name": "gives",
                  "nameLocation": "17943:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53770,
                  "src": "17938:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53760,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17938:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53763,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "17955:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53770,
                  "src": "17950:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53762,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17950:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53765,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "17968:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53770,
                  "src": "17963:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53764,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "17963:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17905:72:41"
            },
            "returnParameters": {
              "id": 53769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53768,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "18021:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53770,
                  "src": "18016:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53767,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18016:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18015:14:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53788,
            "nodeType": "FunctionDefinition",
            "src": "18783:137:41",
            "nodes": [],
            "documentation": {
              "id": 53771,
              "nodeType": "StructuredDocumentation",
              "src": "18034:746:41",
              "text": "@notice Updates an existing offer on Mangrove, where the caller is the maker.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param tick Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick (which is a power of 1.0001 and induces a price).\n@param gives The amount of `olKey.outbound_tkn` the maker gives. Must be less than MAX_SAFE_VOLUME.\n@param gasreq The amount of gas required to execute the offer logic in the maker's `IMaker` implementation.\n@param gasprice The maximum gas price the maker is willing to pay a penalty for due to failing execution.\n@param offerId The id of the offer on Mangrove.\n@dev See `newOfferByTick` for additional details."
            },
            "functionSelector": "a84b08c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOfferByTick",
            "nameLocation": "18792:17:41",
            "parameters": {
              "id": 53786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53774,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "18823:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53788,
                  "src": "18810:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53773,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53772,
                      "name": "OLKey",
                      "nameLocations": [
                        "18810:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "18810:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "18810:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53777,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "18835:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53788,
                  "src": "18830:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 53776,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53775,
                      "name": "Tick",
                      "nameLocations": [
                        "18830:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "18830:4:41"
                    },
                    "referencedDeclaration": 5280,
                    "src": "18830:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53779,
                  "mutability": "mutable",
                  "name": "gives",
                  "nameLocation": "18846:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53788,
                  "src": "18841:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53778,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18841:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53781,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "18858:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53788,
                  "src": "18853:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18853:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53783,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "18871:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53788,
                  "src": "18866:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53782,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18866:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53785,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "18886:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53788,
                  "src": "18881:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18881:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18809:85:41"
            },
            "returnParameters": {
              "id": 53787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18919:0:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53805,
            "nodeType": "FunctionDefinition",
            "src": "20009:140:41",
            "nodes": [],
            "documentation": {
              "id": 53789,
              "nodeType": "StructuredDocumentation",
              "src": "18924:1082:41",
              "text": "@notice Updates an existing, owned offer on Mangrove, where the caller is the maker.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param wants The amount of `olKey.inbound_tkn` the maker wants. This is used along with `gives` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`.\n@param gives The amount of `olKey.outbound_tkn` the maker gives. This is used along with `wants` to derive a tick (price). which is the lowest allowed tick in the offer list such that `log_1.0001(takerGives/takerWants) <= maxTick`. Must be less than MAX_SAFE_VOLUME.\n@param gasreq The amount of gas required to execute the offer logic in the maker's `IMaker` implementation.\n@param gasprice The maximum gas price the maker is willing to pay a penalty for due to failing execution.\n@param offerId The id of the offer on Mangrove.\n@dev This function is just a wrapper for `updateOfferByTick`, see that function for details."
            },
            "functionSelector": "129d19a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateOfferByVolume",
            "nameLocation": "20018:19:41",
            "parameters": {
              "id": 53803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53792,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "20051:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53805,
                  "src": "20038:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53791,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53790,
                      "name": "OLKey",
                      "nameLocations": [
                        "20038:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "20038:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "20038:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53794,
                  "mutability": "mutable",
                  "name": "wants",
                  "nameLocation": "20063:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53805,
                  "src": "20058:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53793,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20058:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53796,
                  "mutability": "mutable",
                  "name": "gives",
                  "nameLocation": "20075:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53805,
                  "src": "20070:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53795,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20070:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53798,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "20087:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53805,
                  "src": "20082:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20082:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53800,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "20100:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53805,
                  "src": "20095:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53799,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20095:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53802,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "20115:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53805,
                  "src": "20110:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53801,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20110:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20037:86:41"
            },
            "returnParameters": {
              "id": 53804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20148:0:41"
            },
            "scope": 54127,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53818,
            "nodeType": "FunctionDefinition",
            "src": "20767:108:41",
            "nodes": [],
            "documentation": {
              "id": 53806,
              "nodeType": "StructuredDocumentation",
              "src": "20153:611:41",
              "text": "@notice Retracts an offer from Mangrove, where the caller is the maker.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param offerId The id of the offer on Mangrove.\n@param deprovision Whether to deprovision the offer, i.e, return the provision to the maker's balance on Mangrove.\n@return provision The amount of native token deprovisioned for the offer (in wei).\n@dev `withdraw` can be used to withdraw the funds after deprovisioning.\n@dev Leaving funds provisioned can be used to save gas if offer is later updated."
            },
            "functionSelector": "6e7a5cb8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "retractOffer",
            "nameLocation": "20776:12:41",
            "parameters": {
              "id": 53814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53809,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "20802:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53818,
                  "src": "20789:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53808,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53807,
                      "name": "OLKey",
                      "nameLocations": [
                        "20789:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "20789:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "20789:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53811,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "20814:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53818,
                  "src": "20809:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53810,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20809:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53813,
                  "mutability": "mutable",
                  "name": "deprovision",
                  "nameLocation": "20828:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53818,
                  "src": "20823:16:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53812,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20823:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20788:52:41"
            },
            "returnParameters": {
              "id": 53817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53816,
                  "mutability": "mutable",
                  "name": "provision",
                  "nameLocation": "20864:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53818,
                  "src": "20859:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53815,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20859:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20858:16:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53825,
            "nodeType": "FunctionDefinition",
            "src": "21033:57:41",
            "nodes": [],
            "documentation": {
              "id": 53819,
              "nodeType": "StructuredDocumentation",
              "src": "20916:114:41",
              "text": "@notice Gets the global configuration for Mangrove.\n@return _global The global configuration for Mangrove."
            },
            "functionSelector": "a05f9906",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "global",
            "nameLocation": "21042:6:41",
            "parameters": {
              "id": 53820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21048:2:41"
            },
            "returnParameters": {
              "id": 53824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53823,
                  "mutability": "mutable",
                  "name": "_global",
                  "nameLocation": "21081:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53825,
                  "src": "21074:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Global_$63500",
                    "typeString": "Global"
                  },
                  "typeName": {
                    "id": 53822,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53821,
                      "name": "Global",
                      "nameLocations": [
                        "21074:6:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63500,
                      "src": "21074:6:41"
                    },
                    "referencedDeclaration": 63500,
                    "src": "21074:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Global_$63500",
                      "typeString": "Global"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21073:16:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53835,
            "nodeType": "FunctionDefinition",
            "src": "21373:72:41",
            "nodes": [],
            "documentation": {
              "id": 53826,
              "nodeType": "StructuredDocumentation",
              "src": "21128:242:41",
              "text": "@notice Gets the local configuration for a specific offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@return _local The local configuration for the offer list."
            },
            "functionSelector": "1c043215",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "local",
            "nameLocation": "21382:5:41",
            "parameters": {
              "id": 53830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53829,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "21401:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53835,
                  "src": "21388:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53828,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53827,
                      "name": "OLKey",
                      "nameLocations": [
                        "21388:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "21388:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "21388:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21387:20:41"
            },
            "returnParameters": {
              "id": 53834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53833,
                  "mutability": "mutable",
                  "name": "_local",
                  "nameLocation": "21437:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53835,
                  "src": "21431:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                    "typeString": "Local"
                  },
                  "typeName": {
                    "id": 53832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53831,
                      "name": "Local",
                      "nameLocations": [
                        "21431:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64937,
                      "src": "21431:5:41"
                    },
                    "referencedDeclaration": 64937,
                    "src": "21431:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                      "typeString": "Local"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21430:14:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53848,
            "nodeType": "FunctionDefinition",
            "src": "21796:89:41",
            "nodes": [],
            "documentation": {
              "id": 53836,
              "nodeType": "StructuredDocumentation",
              "src": "21449:344:41",
              "text": "@notice Gets the global configuration for Mangrove and local the configuration for a specific offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@return _global The global configuration for Mangrove.\n@return _local The local configuration for the offer list."
            },
            "functionSelector": "5275b212",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "config",
            "nameLocation": "21805:6:41",
            "parameters": {
              "id": 53840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53839,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "21825:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53848,
                  "src": "21812:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53838,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53837,
                      "name": "OLKey",
                      "nameLocations": [
                        "21812:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "21812:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "21812:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21811:20:41"
            },
            "returnParameters": {
              "id": 53847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53843,
                  "mutability": "mutable",
                  "name": "_global",
                  "nameLocation": "21862:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53848,
                  "src": "21855:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Global_$63500",
                    "typeString": "Global"
                  },
                  "typeName": {
                    "id": 53842,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53841,
                      "name": "Global",
                      "nameLocations": [
                        "21855:6:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63500,
                      "src": "21855:6:41"
                    },
                    "referencedDeclaration": 63500,
                    "src": "21855:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Global_$63500",
                      "typeString": "Global"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53846,
                  "mutability": "mutable",
                  "name": "_local",
                  "nameLocation": "21877:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53848,
                  "src": "21871:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                    "typeString": "Local"
                  },
                  "typeName": {
                    "id": 53845,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53844,
                      "name": "Local",
                      "nameLocations": [
                        "21871:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 64937,
                      "src": "21871:5:41"
                    },
                    "referencedDeclaration": 64937,
                    "src": "21871:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Local_$64937",
                      "typeString": "Local"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21854:30:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53857,
            "nodeType": "FunctionDefinition",
            "src": "22231:65:41",
            "nodes": [],
            "documentation": {
              "id": 53849,
              "nodeType": "StructuredDocumentation",
              "src": "21889:339:41",
              "text": "@notice Determines whether the reentrancy lock is in effect for the offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@return true if locked; otherwise, false.\n@dev The lock protects modifying or inspecting the offer list while an order is in progress."
            },
            "functionSelector": "0469bb66",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "locked",
            "nameLocation": "22240:6:41",
            "parameters": {
              "id": 53853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53852,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "22260:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53857,
                  "src": "22247:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53851,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53850,
                      "name": "OLKey",
                      "nameLocations": [
                        "22247:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "22247:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "22247:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22246:20:41"
            },
            "returnParameters": {
              "id": 53856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53855,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53857,
                  "src": "22290:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53854,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22290:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22289:6:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53866,
            "nodeType": "FunctionDefinition",
            "src": "22553:71:41",
            "nodes": [],
            "documentation": {
              "id": 53858,
              "nodeType": "StructuredDocumentation",
              "src": "22300:250:41",
              "text": "@notice Gets the `offerId` of the best offer in the offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@return offerId The `offerId` of the best offer on the offer list."
            },
            "functionSelector": "90245530",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "best",
            "nameLocation": "22562:4:41",
            "parameters": {
              "id": 53862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53861,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "22580:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53866,
                  "src": "22567:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53860,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53859,
                      "name": "OLKey",
                      "nameLocations": [
                        "22567:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "22567:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "22567:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22566:20:41"
            },
            "returnParameters": {
              "id": 53865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53864,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "22615:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53866,
                  "src": "22610:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53863,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22610:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22609:14:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53875,
            "nodeType": "FunctionDefinition",
            "src": "22827:78:41",
            "nodes": [],
            "documentation": {
              "id": 53867,
              "nodeType": "StructuredDocumentation",
              "src": "22628:196:41",
              "text": "@notice Gets the offer list key with the given hash (if the offer list key has been activated at least once).\n@param olKeyHash the hash of the offer list key.\n@return olKey the olKey."
            },
            "functionSelector": "5d49dc11",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "olKeys",
            "nameLocation": "22836:6:41",
            "parameters": {
              "id": 53870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53869,
                  "mutability": "mutable",
                  "name": "olKeyHash",
                  "nameLocation": "22851:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53875,
                  "src": "22843:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53868,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22843:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22842:19:41"
            },
            "returnParameters": {
              "id": 53874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53873,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "22898:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53875,
                  "src": "22885:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53872,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53871,
                      "name": "OLKey",
                      "nameLocations": [
                        "22885:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "22885:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "22885:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22884:20:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53887,
            "nodeType": "FunctionDefinition",
            "src": "23208:86:41",
            "nodes": [],
            "documentation": {
              "id": 53876,
              "nodeType": "StructuredDocumentation",
              "src": "22938:267:41",
              "text": "@notice Gets an offer in packed format.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param offerId The `offerId` of the offer on the offer list.\n@return offer The offer in packed format."
            },
            "functionSelector": "04a7a1b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "offers",
            "nameLocation": "23217:6:41",
            "parameters": {
              "id": 53882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53879,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "23237:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53887,
                  "src": "23224:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53878,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53877,
                      "name": "OLKey",
                      "nameLocations": [
                        "23224:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "23224:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "23224:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53881,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "23249:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53887,
                  "src": "23244:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23244:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23223:34:41"
            },
            "returnParameters": {
              "id": 53886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53885,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "23287:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53887,
                  "src": "23281:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                    "typeString": "Offer"
                  },
                  "typeName": {
                    "id": 53884,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53883,
                      "name": "Offer",
                      "nameLocations": [
                        "23281:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66949,
                      "src": "23281:5:41"
                    },
                    "referencedDeclaration": 66949,
                    "src": "23281:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                      "typeString": "Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23280:13:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53899,
            "nodeType": "FunctionDefinition",
            "src": "23592:104:41",
            "nodes": [],
            "documentation": {
              "id": 53888,
              "nodeType": "StructuredDocumentation",
              "src": "23298:291:41",
              "text": "@notice Gets an offer's details in packed format.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param offerId The `offerId` of the offer on the offer list.\n@return offerDetail The offer details in packed format."
            },
            "functionSelector": "e982fb8d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "offerDetails",
            "nameLocation": "23601:12:41",
            "parameters": {
              "id": 53894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53891,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "23627:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53899,
                  "src": "23614:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53890,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53889,
                      "name": "OLKey",
                      "nameLocations": [
                        "23614:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "23614:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "23614:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53893,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "23639:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53899,
                  "src": "23634:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53892,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23634:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23613:34:41"
            },
            "returnParameters": {
              "id": 53898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53897,
                  "mutability": "mutable",
                  "name": "offerDetail",
                  "nameLocation": "23683:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53899,
                  "src": "23671:23:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                    "typeString": "OfferDetail"
                  },
                  "typeName": {
                    "id": 53896,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53895,
                      "name": "OfferDetail",
                      "nameLocations": [
                        "23671:11:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67755,
                      "src": "23671:11:41"
                    },
                    "referencedDeclaration": 67755,
                    "src": "23671:11:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                      "typeString": "OfferDetail"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23670:25:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53914,
            "nodeType": "FunctionDefinition",
            "src": "24052:114:41",
            "nodes": [],
            "documentation": {
              "id": 53900,
              "nodeType": "StructuredDocumentation",
              "src": "23700:349:41",
              "text": "@notice Gets both an offer and its details in packed format.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param offerId The `offerId` of the offer on the offer list.\n@return offer The offer in packed format.\n@return offerDetail The offer details in packed format."
            },
            "functionSelector": "c7b06e87",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "offerData",
            "nameLocation": "24061:9:41",
            "parameters": {
              "id": 53906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53903,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "24084:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53914,
                  "src": "24071:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53901,
                      "name": "OLKey",
                      "nameLocations": [
                        "24071:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "24071:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "24071:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53905,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "24096:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53914,
                  "src": "24091:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53904,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24091:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24070:34:41"
            },
            "returnParameters": {
              "id": 53913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53909,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "24134:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53914,
                  "src": "24128:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                    "typeString": "Offer"
                  },
                  "typeName": {
                    "id": 53908,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53907,
                      "name": "Offer",
                      "nameLocations": [
                        "24128:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66949,
                      "src": "24128:5:41"
                    },
                    "referencedDeclaration": 66949,
                    "src": "24128:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                      "typeString": "Offer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53912,
                  "mutability": "mutable",
                  "name": "offerDetail",
                  "nameLocation": "24153:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53914,
                  "src": "24141:23:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                    "typeString": "OfferDetail"
                  },
                  "typeName": {
                    "id": 53911,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53910,
                      "name": "OfferDetail",
                      "nameLocations": [
                        "24141:11:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67755,
                      "src": "24141:11:41"
                    },
                    "referencedDeclaration": 67755,
                    "src": "24141:11:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_OfferDetail_$67755",
                      "typeString": "OfferDetail"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24127:38:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53920,
            "nodeType": "FunctionDefinition",
            "src": "24278:54:41",
            "nodes": [],
            "documentation": {
              "id": 53915,
              "nodeType": "StructuredDocumentation",
              "src": "24199:76:41",
              "text": "@notice Gets the governance address.\n@return the governance address."
            },
            "functionSelector": "5aa6e675",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "governance",
            "nameLocation": "24287:10:41",
            "parameters": {
              "id": 53916,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24297:2:41"
            },
            "returnParameters": {
              "id": 53919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53920,
                  "src": "24323:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24323:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24322:9:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53933,
            "nodeType": "FunctionDefinition",
            "src": "24977:96:41",
            "nodes": [],
            "documentation": {
              "id": 53921,
              "nodeType": "StructuredDocumentation",
              "src": "24336:638:41",
              "text": "@notice Activates an offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param fee in basis points, of `olKey.outbound_tkn` given to the taker. This fee is sent to Mangrove. Fee is capped to ~2.5%.\n@param density96X32 The density of the offer list used to define a minimum offer volume. See `setDensity96X32`.\n@param offer_gasbase The gasbase of the offer list used to define a minimum provision necessary for offers. See `setGasbase`.\n@dev If the flipped offer list is active then the offer lists are expected to have the same `tickSpacing`."
            },
            "functionSelector": "96b4c30f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "activate",
            "nameLocation": "24986:8:41",
            "parameters": {
              "id": 53931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53924,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "25008:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53933,
                  "src": "24995:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53922,
                      "name": "OLKey",
                      "nameLocations": [
                        "24995:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "24995:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "24995:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53926,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "25020:3:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53933,
                  "src": "25015:8:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53925,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25015:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53928,
                  "mutability": "mutable",
                  "name": "density96X32",
                  "nameLocation": "25030:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53933,
                  "src": "25025:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53927,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25025:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53930,
                  "mutability": "mutable",
                  "name": "offer_gasbase",
                  "nameLocation": "25049:13:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53933,
                  "src": "25044:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53929,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25044:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24994:69:41"
            },
            "returnParameters": {
              "id": 53932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25072:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53940,
            "nodeType": "FunctionDefinition",
            "src": "25229:49:41",
            "nodes": [],
            "documentation": {
              "id": 53934,
              "nodeType": "StructuredDocumentation",
              "src": "25077:149:41",
              "text": "@notice Deactivates an offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`."
            },
            "functionSelector": "5b275296",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deactivate",
            "nameLocation": "25238:10:41",
            "parameters": {
              "id": 53938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53937,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "25262:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53940,
                  "src": "25249:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53936,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53935,
                      "name": "OLKey",
                      "nameLocations": [
                        "25249:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "25249:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "25249:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25248:20:41"
            },
            "returnParameters": {
              "id": 53939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25277:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53944,
            "nodeType": "FunctionDefinition",
            "src": "25443:25:41",
            "nodes": [],
            "documentation": {
              "id": 53941,
              "nodeType": "StructuredDocumentation",
              "src": "25282:158:41",
              "text": "@notice Kills the Mangrove instance. A dead instance cannot have offers executed or funds received, but offers can be retracted and funds can be withdrawn."
            },
            "functionSelector": "41c0e1b5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "kill",
            "nameLocation": "25452:4:41",
            "parameters": {
              "id": 53942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25456:2:41"
            },
            "returnParameters": {
              "id": 53943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25467:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53953,
            "nodeType": "FunctionDefinition",
            "src": "25892:73:41",
            "nodes": [],
            "documentation": {
              "id": 53945,
              "nodeType": "StructuredDocumentation",
              "src": "25472:417:41",
              "text": "@notice Sets the density.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param density96X32 is given as a 96.32 fixed point number. It will be stored as a 9-bit float and be approximated towards 0. The maximum error is 20%. See `DensityLib` for more information.\n@dev Useless if `global.useOracle != 0` and oracle returns a valid density."
            },
            "functionSelector": "f5142444",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDensity96X32",
            "nameLocation": "25901:15:41",
            "parameters": {
              "id": 53951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53948,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "25930:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53953,
                  "src": "25917:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53947,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53946,
                      "name": "OLKey",
                      "nameLocations": [
                        "25917:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "25917:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "25917:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53950,
                  "mutability": "mutable",
                  "name": "density96X32",
                  "nameLocation": "25942:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53953,
                  "src": "25937:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53949,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25937:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25916:39:41"
            },
            "returnParameters": {
              "id": 53952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25964:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53962,
            "nodeType": "FunctionDefinition",
            "src": "26258:55:41",
            "nodes": [],
            "documentation": {
              "id": 53954,
              "nodeType": "StructuredDocumentation",
              "src": "25969:286:41",
              "text": "@notice Sets the fee for the offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param fee in basis points, of `olKey.outbound_tkn` given to the taker. This fee is sent to Mangrove. Fee is capped to ~2.5%."
            },
            "functionSelector": "443759fb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "26267:6:41",
            "parameters": {
              "id": 53960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53957,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "26287:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53962,
                  "src": "26274:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53956,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53955,
                      "name": "OLKey",
                      "nameLocations": [
                        "26274:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "26274:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "26274:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53959,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "26299:3:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53962,
                  "src": "26294:8:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53958,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26294:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26273:30:41"
            },
            "returnParameters": {
              "id": 53961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26312:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53971,
            "nodeType": "FunctionDefinition",
            "src": "26755:69:41",
            "nodes": [],
            "documentation": {
              "id": 53963,
              "nodeType": "StructuredDocumentation",
              "src": "26317:435:41",
              "text": "@notice Sets the gasbase for the offer list.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param offer_gasbase The gasbase of the offer list used to define a minimum provision necessary for offers. Represents the gas overhead used by processing the offer inside Mangrove + the overhead of initiating an entire order. Stored in thousands in a maximum of 9 bits."
            },
            "functionSelector": "eeba3368",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGasbase",
            "nameLocation": "26764:10:41",
            "parameters": {
              "id": 53969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53966,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "26788:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53971,
                  "src": "26775:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 53965,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53964,
                      "name": "OLKey",
                      "nameLocations": [
                        "26775:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "26775:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "26775:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53968,
                  "mutability": "mutable",
                  "name": "offer_gasbase",
                  "nameLocation": "26800:13:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53971,
                  "src": "26795:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53967,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26795:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26774:40:41"
            },
            "returnParameters": {
              "id": 53970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26823:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53977,
            "nodeType": "FunctionDefinition",
            "src": "27026:41:41",
            "nodes": [],
            "documentation": {
              "id": 53972,
              "nodeType": "StructuredDocumentation",
              "src": "26828:195:41",
              "text": "@notice Sets the gasmax for Mangrove, the maximum amount of gas an offer can require to execute.\n@param gasmax The maximum amount of gas required to execute an offer. Must fit in 24 bits."
            },
            "functionSelector": "95999ee3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGasmax",
            "nameLocation": "27035:9:41",
            "parameters": {
              "id": 53975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53974,
                  "mutability": "mutable",
                  "name": "gasmax",
                  "nameLocation": "27050:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53977,
                  "src": "27045:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53973,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "27045:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27044:13:41"
            },
            "returnParameters": {
              "id": 53976,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27066:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53983,
            "nodeType": "FunctionDefinition",
            "src": "27315:63:41",
            "nodes": [],
            "documentation": {
              "id": 53978,
              "nodeType": "StructuredDocumentation",
              "src": "27071:241:41",
              "text": "@notice Sets the maximum number of times a market order can recursively execute offers. This is a protection against stack overflows.\n@param maxRecursionDepth The maximum number of times a market order can recursively execute offers."
            },
            "functionSelector": "e37de38b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxRecursionDepth",
            "nameLocation": "27324:20:41",
            "parameters": {
              "id": 53981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53980,
                  "mutability": "mutable",
                  "name": "maxRecursionDepth",
                  "nameLocation": "27350:17:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53983,
                  "src": "27345:22:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53979,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "27345:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27344:24:41"
            },
            "returnParameters": {
              "id": 53982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27377:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53989,
            "nodeType": "FunctionDefinition",
            "src": "27651:79:41",
            "nodes": [],
            "documentation": {
              "id": 53984,
              "nodeType": "StructuredDocumentation",
              "src": "27382:266:41",
              "text": "@notice Sets the maximum cumulative `gasreq` for failing offers during a market order before doing a partial fill.\n@param maxGasreqForFailingOffers The maximum cumulative `gasreq` for failing offers during a market order before doing a partial fill. 32 bits."
            },
            "functionSelector": "74bfac33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMaxGasreqForFailingOffers",
            "nameLocation": "27660:28:41",
            "parameters": {
              "id": 53987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53986,
                  "mutability": "mutable",
                  "name": "maxGasreqForFailingOffers",
                  "nameLocation": "27694:25:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53989,
                  "src": "27689:30:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53985,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "27689:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27688:32:41"
            },
            "returnParameters": {
              "id": 53988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27729:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53995,
            "nodeType": "FunctionDefinition",
            "src": "27837:45:41",
            "nodes": [],
            "documentation": {
              "id": 53990,
              "nodeType": "StructuredDocumentation",
              "src": "27734:100:41",
              "text": "@notice Sets the gasprice (in Mwei, 26 bits)\n@param gasprice The gasprice (in Mwei, 26 bits)"
            },
            "functionSelector": "fcaa7e2e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGasprice",
            "nameLocation": "27846:11:41",
            "parameters": {
              "id": 53993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53992,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "27863:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 53995,
                  "src": "27858:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53991,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "27858:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27857:15:41"
            },
            "returnParameters": {
              "id": 53994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27881:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54001,
            "nodeType": "FunctionDefinition",
            "src": "27988:59:41",
            "nodes": [],
            "documentation": {
              "id": 53996,
              "nodeType": "StructuredDocumentation",
              "src": "27886:99:41",
              "text": "@notice Sets a new governance address.\n@param governanceAddress The new governance address."
            },
            "functionSelector": "ab033ea9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setGovernance",
            "nameLocation": "27997:13:41",
            "parameters": {
              "id": 53999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53998,
                  "mutability": "mutable",
                  "name": "governanceAddress",
                  "nameLocation": "28019:17:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54001,
                  "src": "28011:25:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28011:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28010:27:41"
            },
            "returnParameters": {
              "id": 54000,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28046:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54007,
            "nodeType": "FunctionDefinition",
            "src": "28284:46:41",
            "nodes": [],
            "documentation": {
              "id": 54002,
              "nodeType": "StructuredDocumentation",
              "src": "28051:230:41",
              "text": "@notice Sets the monitor/oracle. The `monitor/oracle` can provide real-time values for `gasprice` and `density` to Mangrove. It can also receive liquidity event notifications.\n@param monitor The new monitor/oracle address."
            },
            "functionSelector": "5cd82390",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setMonitor",
            "nameLocation": "28293:10:41",
            "parameters": {
              "id": 54005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54004,
                  "mutability": "mutable",
                  "name": "monitor",
                  "nameLocation": "28312:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54007,
                  "src": "28304:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28304:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28303:17:41"
            },
            "returnParameters": {
              "id": 54006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28329:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54013,
            "nodeType": "FunctionDefinition",
            "src": "28495:41:41",
            "nodes": [],
            "documentation": {
              "id": 54008,
              "nodeType": "StructuredDocumentation",
              "src": "28334:158:41",
              "text": "@notice Sets whether Mangrove notifies the Monitor when and offer is taken\n@param notify Whether Mangrove notifies the Monitor when and offer is taken"
            },
            "functionSelector": "5a611f4e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setNotify",
            "nameLocation": "28504:9:41",
            "parameters": {
              "id": 54011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54010,
                  "mutability": "mutable",
                  "name": "notify",
                  "nameLocation": "28519:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54013,
                  "src": "28514:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28514:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28513:13:41"
            },
            "returnParameters": {
              "id": 54012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28535:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54019,
            "nodeType": "FunctionDefinition",
            "src": "28742:47:41",
            "nodes": [],
            "documentation": {
              "id": 54014,
              "nodeType": "StructuredDocumentation",
              "src": "28540:199:41",
              "text": "@notice Sets whether Mangrove uses the monitor as oracle for `gasprice` and `density` values.\n@param useOracle Whether Mangrove uses the monitor as oracle for `gasprice` and `density` values."
            },
            "functionSelector": "6804f613",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setUseOracle",
            "nameLocation": "28751:12:41",
            "parameters": {
              "id": 54017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54016,
                  "mutability": "mutable",
                  "name": "useOracle",
                  "nameLocation": "28769:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54019,
                  "src": "28764:14:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54015,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28764:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28763:16:41"
            },
            "returnParameters": {
              "id": 54018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28788:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54027,
            "nodeType": "FunctionDefinition",
            "src": "28952:66:41",
            "nodes": [],
            "documentation": {
              "id": 54020,
              "nodeType": "StructuredDocumentation",
              "src": "28793:156:41",
              "text": "@notice Transfer ERC20 tokens to governance.\n@param tokenAddress The address of the ERC20 token.\n@param value The amount of tokens to transfer."
            },
            "functionSelector": "a1db9782",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawERC20",
            "nameLocation": "28961:13:41",
            "parameters": {
              "id": 54025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54022,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "28983:12:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54027,
                  "src": "28975:20:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28975:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54024,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "29002:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54027,
                  "src": "28997:10:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54023,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "28997:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28974:34:41"
            },
            "returnParameters": {
              "id": 54026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29017:0:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54039,
            "nodeType": "FunctionDefinition",
            "src": "29244:75:41",
            "nodes": [],
            "documentation": {
              "id": 54028,
              "nodeType": "StructuredDocumentation",
              "src": "29055:186:41",
              "text": "@notice Gets a leaf\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param index The index.\n@return the leaf."
            },
            "functionSelector": "ce5bbece",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "leafs",
            "nameLocation": "29253:5:41",
            "parameters": {
              "id": 54034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54031,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "29272:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54039,
                  "src": "29259:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 54030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54029,
                      "name": "OLKey",
                      "nameLocations": [
                        "29259:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "29259:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "29259:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54033,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "29283:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54039,
                  "src": "29279:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54032,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "29279:3:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29258:31:41"
            },
            "returnParameters": {
              "id": 54038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54039,
                  "src": "29313:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Leaf_$6414",
                    "typeString": "Leaf"
                  },
                  "typeName": {
                    "id": 54036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54035,
                      "name": "Leaf",
                      "nameLocations": [
                        "29313:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6414,
                      "src": "29313:4:41"
                    },
                    "referencedDeclaration": 6414,
                    "src": "29313:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Leaf_$6414",
                      "typeString": "Leaf"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29312:6:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54051,
            "nodeType": "FunctionDefinition",
            "src": "29521:78:41",
            "nodes": [],
            "documentation": {
              "id": 54040,
              "nodeType": "StructuredDocumentation",
              "src": "29323:195:41",
              "text": "@notice Gets a level 3 field\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param index The index.\n@return the field"
            },
            "functionSelector": "fec777b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "level3s",
            "nameLocation": "29530:7:41",
            "parameters": {
              "id": 54046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54043,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "29551:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54051,
                  "src": "29538:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 54042,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54041,
                      "name": "OLKey",
                      "nameLocations": [
                        "29538:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "29538:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "29538:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54045,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "29562:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54051,
                  "src": "29558:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54044,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "29558:3:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29537:31:41"
            },
            "returnParameters": {
              "id": 54050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54051,
                  "src": "29592:5:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                    "typeString": "Field"
                  },
                  "typeName": {
                    "id": 54048,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54047,
                      "name": "Field",
                      "nameLocations": [
                        "29592:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7296,
                      "src": "29592:5:41"
                    },
                    "referencedDeclaration": 7296,
                    "src": "29592:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                      "typeString": "Field"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29591:7:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54063,
            "nodeType": "FunctionDefinition",
            "src": "29801:78:41",
            "nodes": [],
            "documentation": {
              "id": 54052,
              "nodeType": "StructuredDocumentation",
              "src": "29603:195:41",
              "text": "@notice Gets a level 2 field\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param index The index.\n@return the field"
            },
            "functionSelector": "0adf51a9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "level2s",
            "nameLocation": "29810:7:41",
            "parameters": {
              "id": 54058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54055,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "29831:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54063,
                  "src": "29818:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 54054,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54053,
                      "name": "OLKey",
                      "nameLocations": [
                        "29818:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "29818:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "29818:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54057,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "29842:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54063,
                  "src": "29838:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54056,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "29838:3:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29817:31:41"
            },
            "returnParameters": {
              "id": 54062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54061,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54063,
                  "src": "29872:5:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                    "typeString": "Field"
                  },
                  "typeName": {
                    "id": 54060,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54059,
                      "name": "Field",
                      "nameLocations": [
                        "29872:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7296,
                      "src": "29872:5:41"
                    },
                    "referencedDeclaration": 7296,
                    "src": "29872:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                      "typeString": "Field"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29871:7:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54075,
            "nodeType": "FunctionDefinition",
            "src": "30081:78:41",
            "nodes": [],
            "documentation": {
              "id": 54064,
              "nodeType": "StructuredDocumentation",
              "src": "29883:195:41",
              "text": "@notice Gets a level 1 field\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@param index The index.\n@return the field"
            },
            "functionSelector": "6c6fda56",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "level1s",
            "nameLocation": "30090:7:41",
            "parameters": {
              "id": 54070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54067,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "30111:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54075,
                  "src": "30098:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 54066,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54065,
                      "name": "OLKey",
                      "nameLocations": [
                        "30098:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "30098:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "30098:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54069,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "30122:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54075,
                  "src": "30118:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 54068,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "30118:3:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30097:31:41"
            },
            "returnParameters": {
              "id": 54074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54075,
                  "src": "30152:5:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                    "typeString": "Field"
                  },
                  "typeName": {
                    "id": 54072,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54071,
                      "name": "Field",
                      "nameLocations": [
                        "30152:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7296,
                      "src": "30152:5:41"
                    },
                    "referencedDeclaration": 7296,
                    "src": "30152:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                      "typeString": "Field"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30151:7:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54085,
            "nodeType": "FunctionDefinition",
            "src": "30336:64:41",
            "nodes": [],
            "documentation": {
              "id": 54076,
              "nodeType": "StructuredDocumentation",
              "src": "30163:170:41",
              "text": "@notice Gets the root from local.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`.\n@return the root"
            },
            "functionSelector": "41b12acf",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "root",
            "nameLocation": "30345:4:41",
            "parameters": {
              "id": 54080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54079,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "30363:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54085,
                  "src": "30350:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 54078,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54077,
                      "name": "OLKey",
                      "nameLocations": [
                        "30350:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "30350:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "30350:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30349:20:41"
            },
            "returnParameters": {
              "id": 54084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54085,
                  "src": "30393:5:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                    "typeString": "Field"
                  },
                  "typeName": {
                    "id": 54082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54081,
                      "name": "Field",
                      "nameLocations": [
                        "30393:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7296,
                      "src": "30393:5:41"
                    },
                    "referencedDeclaration": 7296,
                    "src": "30393:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Field_$7296",
                      "typeString": "Field"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30392:7:41"
            },
            "scope": 54127,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54098,
            "nodeType": "FunctionDefinition",
            "src": "30830:116:41",
            "nodes": [],
            "documentation": {
              "id": 54086,
              "nodeType": "StructuredDocumentation",
              "src": "30431:396:41",
              "text": "@notice internal function used to flashloan tokens from taker to maker, for maker to source the promised liquidity.\n@param sor data about an order-offer match.\n@param taker the taker.\n@return gasused the amount of gas used for `makerExecute`.\n@return makerData the data returned by `makerExecute`.\n@dev not to be called externally - only external to be able to revert."
            },
            "functionSelector": "78393c88",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "flashloan",
            "nameLocation": "30839:9:41",
            "parameters": {
              "id": 54092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54089,
                  "mutability": "mutable",
                  "name": "sor",
                  "nameLocation": "30875:3:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54098,
                  "src": "30849:29:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_memory_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 54088,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54087,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "30849:6:41",
                        "30856:11:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "30849:18:41"
                    },
                    "referencedDeclaration": 55969,
                    "src": "30849:18:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54091,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "30888:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54098,
                  "src": "30880:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54090,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30880:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30848:46:41"
            },
            "returnParameters": {
              "id": 54097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54094,
                  "mutability": "mutable",
                  "name": "gasused",
                  "nameLocation": "30918:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54098,
                  "src": "30913:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54093,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "30913:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54096,
                  "mutability": "mutable",
                  "name": "makerData",
                  "nameLocation": "30935:9:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54098,
                  "src": "30927:17:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 54095,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "30927:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30912:33:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54118,
            "nodeType": "FunctionDefinition",
            "src": "31602:187:41",
            "nodes": [],
            "documentation": {
              "id": 54099,
              "nodeType": "StructuredDocumentation",
              "src": "30950:649:41",
              "text": "@notice internal function used to clean failing offers.\n@param olKey The offer list key given by (maker) `outbound_tkn`, (maker) `inbound_tkn`, and `tickSpacing`\n@param offerId The id of the offer on Mangrove.\n@param tick Must be `>= MIN_TICK` and `<= MAX_TICK`. The tick.\n@param gasreq The gas required for the offer.\n@param takerWants Must be `<= MAX_SAFE_VOLUME`. The amount of `olKey.outbound_tkn` the taker wants.\n@param taker The taker used for transfers (should be able to deliver token amounts).\n@return bounty the bounty paid.\n@dev not to be called externally - only external to be able to revert."
            },
            "functionSelector": "7d3e6162",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "internalCleanByImpersonation",
            "nameLocation": "31611:28:41",
            "parameters": {
              "id": 54114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54102,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "31658:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31645:18:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 54101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54100,
                      "name": "OLKey",
                      "nameLocations": [
                        "31645:5:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "31645:5:41"
                    },
                    "referencedDeclaration": 55875,
                    "src": "31645:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54104,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "31674:7:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31669:12:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54103,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "31669:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54107,
                  "mutability": "mutable",
                  "name": "tick",
                  "nameLocation": "31692:4:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31687:9:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                    "typeString": "Tick"
                  },
                  "typeName": {
                    "id": 54106,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 54105,
                      "name": "Tick",
                      "nameLocations": [
                        "31687:4:41"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5280,
                      "src": "31687:4:41"
                    },
                    "referencedDeclaration": 5280,
                    "src": "31687:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54109,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "31707:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31702:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "31702:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54111,
                  "mutability": "mutable",
                  "name": "takerWants",
                  "nameLocation": "31724:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31719:15:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54110,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "31719:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54113,
                  "mutability": "mutable",
                  "name": "taker",
                  "nameLocation": "31748:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31740:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54112,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31740:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31639:118:41"
            },
            "returnParameters": {
              "id": 54117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54116,
                  "mutability": "mutable",
                  "name": "bounty",
                  "nameLocation": "31781:6:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54118,
                  "src": "31776:11:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54115,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "31776:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31775:13:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54126,
            "nodeType": "FunctionDefinition",
            "src": "31920:66:41",
            "nodes": [],
            "documentation": {
              "id": 54119,
              "nodeType": "StructuredDocumentation",
              "src": "31793:124:41",
              "text": "@notice Fall back function (forwards calls to `MgvAppendix`)\n@param callData The call data.\n@return the result."
            },
            "implemented": false,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 54122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54121,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "31944:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 54126,
                  "src": "31929:23:41",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54120,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "31929:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31928:25:41"
            },
            "returnParameters": {
              "id": 54125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54126,
                  "src": "31972:12:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54123,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "31972:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31971:14:41"
            },
            "scope": 54127,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53503,
              "name": "HasMgvEvents",
              "nameLocations": [
                "251:12:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 56193,
              "src": "251:12:41"
            },
            "id": 53504,
            "nodeType": "InheritanceSpecifier",
            "src": "251:12:41"
          }
        ],
        "canonicalName": "IMangrove",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 53502,
          "nodeType": "StructuredDocumentation",
          "src": "181:47:41",
          "text": "@title Interface for the Mangrove contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          54127,
          56193
        ],
        "name": "IMangrove",
        "nameLocation": "238:9:41",
        "scope": 54128,
        "usedErrors": [],
        "usedEvents": [
          55987,
          55993,
          55999,
          56011,
          56017,
          56023,
          56027,
          56031,
          56035,
          56039,
          56043,
          56049,
          56053,
          56057,
          56061,
          56069,
          56071,
          56084,
          56092,
          56104,
          56118,
          56134,
          56152,
          56164,
          56166,
          56182,
          56192
        ]
      }
    ],
    "license": "Unlicense"
  },
  "id": 41
}