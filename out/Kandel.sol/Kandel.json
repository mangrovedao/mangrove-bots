{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKeyBaseQuote",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "OfferListKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetBaseQuoteTickOffset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasreq",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "SetIndexMapping",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetLength",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "SetReserveId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetStepSize",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE_ID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TICK_SPACING",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseQuoteTickOffset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "baseQuoteTickIndex0",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_baseQuoteTickOffset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "firstAskIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pricePoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stepSize",
          "type": "uint256"
        }
      ],
      "name": "createDistribution",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "depositFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "Offer",
          "name": "offer",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "indexOfOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "offerIdOfIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "offeredVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "volume",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "gasprice",
          "type": "uint32"
        },
        {
          "internalType": "uint24",
          "name": "gasreq",
          "type": "uint24"
        },
        {
          "internalType": "uint88",
          "name": "stepSize",
          "type": "uint88"
        },
        {
          "internalType": "uint112",
          "name": "pricePoints",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "pending",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ],
          "internalType": "struct CoreKandel.Params",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "populate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        }
      ],
      "name": "populateChunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "baseQuoteTickIndex0",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "firstAskIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askGives",
          "type": "uint256"
        }
      ],
      "name": "populateChunkFromOffset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "Tick",
          "name": "baseQuoteTickIndex0",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_baseQuoteTickOffset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "firstAskIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bidGives",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "askGives",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ],
          "internalType": "struct CoreKandel.Params",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "populateFromOffset",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "reserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "freeWei",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retractAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "retractOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_baseQuoteTickOffset",
          "type": "uint256"
        }
      ],
      "name": "setBaseQuoteTickOffset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        }
      ],
      "name": "setGasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "setGasreq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stepSize",
          "type": "uint256"
        }
      ],
      "name": "setStepSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101406040523480156200001257600080fd5b506040516200545a3803806200545a833981016040819052620000359162000695565b8383838383838383828483838260008383838233806200009c5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b039290921691909117905562ffffff81168114620001125760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f6761737265714f766572666c6f77000000000000000000604482015260640162000093565b6001600160a01b03821660a081905260808290526040519081527f23274a2ea157bc8b802cd1ca98faaaf1e5ed5472079061e406176ba38449d6879060200160405180910390a150506001600160a01b03831615620001765762000176836200026f565b60006001600160a01b038216156200018f578162000191565b305b6001600160a01b03811660c0819052604051919250907f1efc2ac62377bfc2967149995d76b6a9a1ad2809a99afd6106b5ba742698217f90600090a2505086516001600160a01b0390811660e052602088015116610100525050506040840151610120525050606082207fa1824a64387381916c722ef6d39d525cb7c1dcbdfc58fc2dcd8cf57c061fc4e9915060405190815260200160405180910390a15050505050505050506200024b60e0516200031f60201b60201c565b610100516200025a906200031f565b62000265826200046a565b50505050620007b4565b6000546001600160a01b03163314620002cb5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604482015260640162000093565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559060200160405180910390a150565b6000620003346001546001600160a01b031690565b90506200034d8260a0516000196200057760201b60201c565b6200039b5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c000000604482015260640162000093565b6001600160a01b038116156200046657620003ba828260001962000577565b620004085760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c000000000000604482015260640162000093565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b1580156200044c57600080fd5b505af115801562000461573d6000803e3d6000fd5b505050505b5050565b6000546001600160a01b03163314620004c65760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604482015260640162000093565b8062ffffff811681146200051d5760405162461bcd60e51b815260206004820152601460248201527f4b616e64656c2f676173726571546f6f48696768000000000000000000000000604482015260640162000093565b6007805462ffffff60201b191664010000000062ffffff8416908102919091179091556040519081527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d9060200160405180910390a15050565b6000620005868484846200058e565b949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291516000928392839291881691620005ee919062000758565b6000604051808303816000865af19150503d80600081146200062d576040519150601f19603f3d011682016040523d82523d6000602084013e62000632565b606091505b5091509150818015620006605750805115806200066057508080602001905181019062000660919062000789565b9695505050505050565b6001600160a01b03811681146200068057600080fd5b50565b805162000690816200066a565b919050565b60008060008084860360c0811215620006ad57600080fd5b8551620006ba816200066a565b94506060601f1982011215620006cf57600080fd5b50604051606081016001600160401b03811182821017156200070157634e487b7160e01b600052604160045260246000fd5b604052602086015162000714816200066a565b8152604086015162000726816200066a565b602082015260608601516040820152608086015190935091506200074d60a0860162000683565b905092959194509250565b6000825160005b818110156200077b57602081860181015185830152016200075f565b506000920191825250919050565b6000602082840312156200079c57600080fd5b81518015158114620007ad57600080fd5b9392505050565b60805160a05160c05160e0516101005161012051614b61620008f96000396000818161037301528181612584015261261601526000818161051b01528181610fba0152818161102f01528181611612015281816120bd0152818161255501526125b80152600081816107aa01528181610edf01528181610f54015281816115e7015281816120e301528181612526015281816125e7015261307f01526000818161081a01528181611ce6015281816122110152612eed0152600081816104e701528181610a2801528181610b57015281816111b10152818161123d015281816113cd0152818161190101528181611ae8015281816122d90152818161274c01528181612891015281816129b001528181612d580152818161319f015281816132a0015261354f01526000818161054f0152818161153d015261156b0152614b616000f3fe60806040526004361061024a5760003560e01c80639c57983911610139578063cfcd2679116100b6578063ea0f394d1161007a578063ea0f394d14610778578063ec342ad014610798578063f851a440146107cc578063f887ea40146107ea578063fbc7d10b14610808578063fcaa7e2e1461083c57600080fd5b8063cfcd267914610671578063cff0ab9614610686578063d2e498fe14610715578063e1f21c6714610735578063e4f248f41461076557600080fd5b8063a2e241af116100fd578063a2e241af146105d1578063ace67902146105f1578063bfc353f914610611578063c0d7865514610631578063c7e1bb441461065157600080fd5b80639c579839146105095780639eb7d4fe1461053d5780639ee8a91c14610571578063a224b5e914610591578063a24f2b2d146105b157600080fd5b80635293840d116101c75780637692c3281161018b5780637692c32814610455578063790532a114610475578063820db1f71461049557806398ed5340146104b557806399fa5e2d146104d557600080fd5b80635293840d146103a85780635570db1d146103c857806361638ed5146103f5578063704b6c02146104155780637144df241461043557600080fd5b80632380fafd1161020e5780632380fafd146102f457806334bd8931146103145780633fce15c91461033457806346ca626b146103615780634f605c5b1461039557600080fd5b806303eb17e2146102565780631450acd214610278578063148b7cea1461029857806314ee02bd146102ab57806318acf82f146102d457600080fd5b3661025157005b600080fd5b34801561026257600080fd5b50610276610271366004613dd3565b61085c565b005b34801561028457600080fd5b50610276610293366004613e48565b6108ab565b6102766102a6366004614036565b6109f6565b3480156102b757600080fd5b506102c160085481565b6040519081526020015b60405180910390f35b3480156102e057600080fd5b506102c16102ef3660046140a8565b610ad5565b34801561030057600080fd5b506102c161030f3660046140d6565b610b53565b34801561032057600080fd5b5061027661032f366004613e48565b610c03565b34801561034057600080fd5b5061035461034f3660046140f3565b610ccc565b6040516102cb91906141a3565b34801561036d57600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b6102766103a33660046141dc565b610d9e565b3480156103b457600080fd5b506102766103c3366004613dd3565b610e66565b3480156103d457600080fd5b506103dd600081565b6040516001600160a01b0390911681526020016102cb565b34801561040157600080fd5b5061027661041036600461421f565b610eda565b34801561042157600080fd5b50610276610430366004614256565b611094565b34801561044157600080fd5b50610276610450366004614273565b611169565b34801561046157600080fd5b506102c16104703660046142a3565b611399565b34801561048157600080fd5b506102766104903660046142cd565b61144e565b3480156104a157600080fd5b506102c16104b0366004614322565b61149f565b3480156104c157600080fd5b506102c16104d03660046140a8565b61159a565b3480156104e157600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561051557600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561054957600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561057d57600080fd5b5061027661058c366004614350565b6115b8565b34801561059d57600080fd5b506102766105ac366004613e48565b611638565b3480156105bd57600080fd5b506102c16105cc3660046143db565b6116f7565b3480156105dd57600080fd5b506102766105ec36600461421f565b611703565b3480156105fd57600080fd5b5061027661060c366004614418565b61179b565b34801561061d57600080fd5b506102c161062c3660046142a3565b611843565b34801561063d57600080fd5b5061027661064c366004614256565b611887565b34801561065d57600080fd5b5061027661066c36600461444d565b6118ff565b34801561067d57600080fd5b506102c16119d1565b34801561069257600080fd5b506007546106d39063ffffffff811690600160201b810462ffffff1690600160381b81046001600160581b031690600160901b90046001600160701b031684565b6040805163ffffffff909516855262ffffff90931660208501526001600160581b03909116918301919091526001600160701b031660608201526080016102cb565b34801561072157600080fd5b506102c16107303660046140a8565b6119e3565b34801561074157600080fd5b50610755610750366004614484565b611a2a565b60405190151581526020016102cb565b6102766107733660046144c5565b611ab6565b34801561078457600080fd5b506102c16107933660046142a3565b611b91565b3480156107a457600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107d857600080fd5b506000546001600160a01b03166103dd565b3480156107f657600080fd5b506001546001600160a01b03166103dd565b34801561081457600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561084857600080fd5b50610276610857366004613e48565b611bd5565b60005b818110156108a65761089683838381811061087c5761087c614541565b90506020020160208101906108919190614256565b611c90565b61089f8161456d565b905061085f565b505050565b6000546001600160a01b031633146108de5760405162461bcd60e51b81526004016108d590614586565b60405180910390fd5b80806109245760405162461bcd60e51b81526020600482015260156024820152744b616e64656c2f7374657053697a65546f6f4c6f7760581b60448201526064016108d5565b81816001600160581b031614801561094d5750600754600160901b90046001600160701b031682105b6109925760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ee6e8cae0a6d2f4caa8dede90d2ced60531b60448201526064016108d5565b6007805471ffffffffffffffffffffff000000000000001916600160381b6001600160581b038416021790556040518281527f0408193baae9f2730f7be76d9be93983ed2dd45af2305c085920b8f00c25bbcd906020015b60405180910390a15050565b6000546001600160a01b03163314610a205760405162461bcd60e51b81526004016108d590614586565b3415610a9b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b50505050505b610aa483611d4d565b610aae8282610eda565b600754610acf90859062ffffff600160201b8204169063ffffffff16611fbd565b50505050565b600080610ae1836120a0565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c91906145bd565b9392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610b9e5760405162461bcd60e51b81526004016108d590614586565b60009150610bb08360a0013584612108565b15610bfd5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c6564000000000000000060448201526064016108d5565b50919050565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b81526004016108d590614586565b8062ffffff81168114610c795760405162461bcd60e51b8152602060048201526014602482015273096c2dcc8cad85ecec2e6e4cae2a8dede90d2ced60631b60448201526064016108d5565b6007805466ffffff000000001916600160201b62ffffff8416908102919091179091556040519081527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d906020016109ea565b60408051808201825260608082526020820152905163fbbd4a6560e01b8152600481018b9052602481018a905260448101899052606481018890526084810187905260a4810186905260c4810185905260e48101849052610104810183905273__$c9b0e4557995336ec140d025d87b634e02$__9063fbbd4a659061012401600060405180830381865af4158015610d68573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d909190810190614669565b9a9950505050505050505050565b6000546001600160a01b03163314610dc85760405162461bcd60e51b81526004016108d590614586565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b0316928201839052600160901b90046001600160701b0316606082018190526008549192600092610e3c928b928b928b9290918b918b918b9190610ccc565b9050610e5c81836020015162ffffff16846000015163ffffffff16611fbd565b5050505050505050565b6000546001600160a01b03163314610e905760405162461bcd60e51b81526004016108d590614586565b60005b818110156108a657610eca838383818110610eb057610eb0614541565b9050602002016020810190610ec59190614256565b6122bd565b610ed38161456d565b9050610e93565b610f067f000000000000000000000000000000000000000000000000000000000000000033308561240b565b610f525760405162461bcd60e51b815260206004820152601760248201527f4b616e64656c2f626173655472616e736665724661696c00000000000000000060448201526064016108d5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09483604051610fad91815260200190565b60405180910390a2610fe17f000000000000000000000000000000000000000000000000000000000000000033308461240b565b61102d5760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f71756f74655472616e736665724661696c000000000000000060448201526064016108d5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0948260405161108891815260200190565b60405180910390a25050565b6000546001600160a01b031633146110be5760405162461bcd60e51b81526004016108d590614586565b6001600160a01b0381166111145760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016108d5565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b031633146111935760405162461bcd60e51b81526004016108d590614586565b6000198203611227576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611200573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122491906145bd565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af115801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b291906146fe565b6112f65760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b60448201526064016108d5565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611343576040519150601f19603f3d011682016040523d82523d6000602084013e611348565b606091505b50509050806108a65760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f7765695472616e736665724661696c000000000000000060448201526064016108d5565b6000806113a68484611843565b905060006113b3856124e5565b604051630129e86d60e21b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304a7a1b4906114049084908690600401614747565b602060405180830381865afa158015611421573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144591906145bd565b95945050505050565b6000546001600160a01b031633146114785760405162461bcd60e51b81526004016108d590614586565b6114828686611703565b61148d8484836115b8565b6114978282611169565b505050505050565b6000806114b46001546001600160a01b031690565b90506001600160a01b038116156115695760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa158015611513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153791906145bd565b611561907f0000000000000000000000000000000000000000000000000000000000000000614762565b915050611594565b7f0000000000000000000000000000000000000000000000000000000000000000915050611594565b505b92915050565b60006115a5826119e3565b6115ae83610ad5565b6115949190614775565b6000546001600160a01b031633146115e25760405162461bcd60e51b81526004016108d590614586565b61160d7f0000000000000000000000000000000000000000000000000000000000000000848361263e565b6108a67f0000000000000000000000000000000000000000000000000000000000000000838361263e565b6000546001600160a01b031633146116625760405162461bcd60e51b81526004016108d590614586565b808162ffffff16146116b65760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f7469636b4f6666736574546f6f48696768000000000000000060448201526064016108d5565b80600854146116f45760088190556040518181527f286da08673f0eb4b3843f2824fb8e3e412534a62f6094fdc8b4008cfeba4ba669060200161115e565b50565b6000610b4c8383612747565b6000546001600160a01b0316331461172d5760405162461bcd60e51b81526004016108d590614586565b6040517f97714c1c48a0b9a1a347710cb6a62f056f5a811d4006655e3b41959e1e72a40990600090a161176282826001612808565b61176e82826000612808565b6040517fa9bc12cd7db30bdfe60fece3ec52cfa7c8d60e396e2ea5df439a7d458f05f9b690600090a15050565b6000546001600160a01b031633146117c55760405162461bcd60e51b81526004016108d590614586565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b0316606082015261183f61182583614795565b826020015162ffffff16836000015163ffffffff16611fbd565b5050565b60006001836001811115611859576118596147a1565b1461187257600082815260046020526040902054610b4c565b50600090815260036020526040902054919050565b6000546001600160a01b031633146118b15760405162461bcd60e51b81526004016108d590614586565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559060200161115e565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146119485760405162461bcd60e51b81526004016108d590614586565b81602001356f6d67762f74726164655375636365737360801b0361197157610acf838335612852565b606083013561198f611988368690038601866147b7565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b60006119de60008061149f565b905090565b6000805b600254811015610bfd5760006119fd8483611399565b9050611a1660016001607f1b03602c83901c1684614762565b92505080611a239061456d565b90506119e7565b600080546001600160a01b03163314611a555760405162461bcd60e51b81526004016108d590614586565b611a60848484612867565b611aac5760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c656400000000000000000060448201526064016108d5565b5060019392505050565b6000546001600160a01b03163314611ae05760405162461bcd60e51b81526004016108d590614586565b3415611b5b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b4157600080fd5b505af1158015611b55573d6000803e3d6000fd5b50505050505b611b6483611d4d565b611b6d87611638565b611b778282610eda565b611b858a8a8a898989610d9e565b50505050505050505050565b60006001836001811115611ba757611ba76147a1565b14611bc057600082815260066020526040902054610b4c565b50600090815260056020526040902054919050565b6000546001600160a01b03163314611bff5760405162461bcd60e51b81526004016108d590614586565b63040000008110611c4b5760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ecec2e6e0e4d2c6caa8dede90d2ced60531b60448201526064016108d5565b6007805463ffffffff191663ffffffff83161790556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd9060200161115e565b611c9981612874565b6000611cad6001546001600160a01b031690565b6001600160a01b0316146116f4576001546001600160a01b0316604051631403b99b60e31b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063a01dccd89060440160006040518083038186803b158015611d3257600080fd5b505afa158015611d46573d6000803e3d6000fd5b5050505050565b604080516080808201835260075463ffffffff81168352600160201b810462ffffff166020840152600160381b81046001600160581b031693830193909352600160901b9092046001600160701b03166060808301919091529091611db7919084019084016147d3565b6001600160701b031681606001516001600160701b031614611eb1576000611de560808401606085016147d3565b9050611df760808401606085016147d3565b6001600160701b0316816001600160701b0316148015611e2157506002816001600160701b031610155b611e6d5760405162461bcd60e51b815260206004820152601960248201527f4b616e64656c2f696e76616c69645072696365506f696e74730000000000000060448201526064016108d5565b611e7f816001600160701b031661295f565b600780546001600160701b03909216600160901b0271ffffffffffffffffffffffffffffffffffff9092169190911790555b611ec160608301604084016147fc565b6001600160581b031681604001516001600160581b031614611efe57611efe611ef060608401604085016147fc565b6001600160581b03166108ab565b611f0b6020830183614825565b63ffffffff1615801590611f385750805163ffffffff16611f2f6020840184614825565b63ffffffff1614155b15611f5857611f58611f4d6020840184614825565b63ffffffff16611bd5565b611f68604083016020840161484b565b62ffffff1615801590611f9b5750806020015162ffffff16826020016020810190611f93919061484b565b62ffffff1614155b1561183f5761183f611fb3604084016020850161484b565b62ffffff16610c03565b6040517faab0a16d4cef87072f3977d7f1c066be401e0e6486526674f5f6172d42703db190600090a1611fee613d79565b606081018390526080810182905261200660006124e5565b8152602084015161201990600083612994565b80516040805160608082018352600080835260208084018290529284015282519081018352818401516001600160a01b0390811682528451169181019190915291810151908201528152835161207190600183612994565b6040517fac65490b93de6b3189ca1e1653852249eb8680e816c258cff6ccf73d8501d3d090600090a150505050565b600060018260018111156120b6576120b66147a1565b146120e1577f0000000000000000000000000000000000000000000000000000000000000000611594565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b6000806121186020840184614256565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561215e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218291906145bd565b9050838110612195576000915050611594565b61219f8185614870565b905060006121b56001546001600160a01b031690565b90506001600160a01b0381166121cd57509050611594565b60006001600160a01b03821663333dbb0d6121eb6020880188614256565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482018190526044820187905230141560648201526084016020604051808303816000875af115801561226b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228f91906145bd565b9050828110156122a8576122a38184614870565b6122ab565b60005b9350505050611594565b505092915050565b60006122d16001546001600160a01b031690565b9050612300827f0000000000000000000000000000000000000000000000000000000000000000600019612867565b61234c5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c00000060448201526064016108d5565b6001600160a01b0381161561183f576123688282600019612867565b6123b45760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c00000000000060448201526064016108d5565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b1580156123f757600080fd5b505af1158015611497573d6000803e3d6000fd5b60008160000361241d575060016124dd565b826001600160a01b0316846001600160a01b0316036124ac576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa15801561247f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a391906145bd565b101590506124dd565b306001600160a01b038516036124ce576124c7858484612ac2565b90506124dd565b6124da85858585612ba8565b90505b949350505050565b6040805160608101825260008082526020820181905291810182905290826001811115612514576125146147a1565b146125ab5760405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f0000000000000000000000000000000000000000000000000000000000000000815250611594565b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525092915050565b60001982036126b2576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561268b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126af91906145bd565b91505b6126bd838284612c85565b6126ff5760405162461bcd60e51b815260206004820152601360248201527212d85b99195b0bdd1c985b9cd9995c91985a5b606a1b60448201526064016108d5565b826001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc60468360405161273a91815260200190565b60405180910390a2505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b8152600401612798929190614747565b602060405180830381865afa1580156127b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d991906145bd565b9050604881901c62ffffff166127ee82612d28565b01602582901c6303ffffff1602620f424002949350505050565b6000612813826124e5565b9050835b83811015611d4657600061282b8483611843565b905080156128415761283f83826001612d3e565b505b5061284b8161456d565b9050612817565b600061285d83612dd4565b610b4c8383612e17565b60006124dd848484612f53565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa1580156128e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061290891906145bd565b116116f45760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b60648201526084016108d5565b60028190556040518181527f26003f10937c9ed98d59e0d595a28bc7d35537a044aeaad037fedaab24d179989060200161115e565b8051604051631c04321560e01b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691631c043215916129e391600401614883565b602060405180830381865afa158015612a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2491906145bd565b90506000612a52612a3483612f89565b8460600151612a439190614762565b60ee84901c6101ff1690612f99565b905060005b8551811015611497576000868281518110612a7457612a74614541565b60209081029190910181015180518183015192880192909252604080820151908801529150612aaf87612aa78184611843565b838988612fd2565b505080612abb9061456d565b9050612a57565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612b3291906148b5565b6000604051808303816000865af19150503d8060008114612b6f576040519150601f19603f3d011682016040523d82523d6000602084013e612b74565b606091505b5091509150818015612b9e575080511580612b9e575080806020019051810190612b9e91906146fe565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691612c0e91906148b5565b6000604051808303816000865af19150503d8060008114612c4b576040519150601f19603f3d011682016040523d82523d6000602084013e612c50565b606091505b5091509150818015612c7a575080511580612c7a575080806020019051810190612c7a91906146fe565b979650505050505050565b600081600003612c9757506001610b4c565b306001600160a01b03841603612d1d576040516370a0823160e01b81526001600160a01b0384811660048301528391908616906370a0823190602401602060405180830381865afa158015612cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1491906145bd565b10159050610b4c565b6124dd848484612ac2565b6000603f82901c6101ff165b6103e80292915050565b604051630dcf4b9760e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e7a5cb890612d91908790879087906004016148d1565b6020604051808303816000875af1158015612db0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124dd91906145bd565b6000612deb612de66020840184614256565b61307b565b9050600080612dfa83856130c5565b915091506000612e0a828461329c565b9050611d468383836133b5565b600080612e2c6001546001600160a01b031690565b90506001600160a01b03811615612f4957604080516002808252606082018352600092602083019080368337019050509050612e6b6020860186614256565b81600081518110612e7e57612e7e614541565b6001600160a01b03909216602092830291909101820152612ea59060408701908701614256565b81600181518110612eb857612eb8614541565b6001600160a01b039283166020918202929092010152604051633e142a0760e21b81529083169063f850a81c90612f159084907f0000000000000000000000000000000000000000000000000000000000000000906004016148f5565b600060405180830381600087803b158015612f2f57600080fd5b505af1158015612f43573d6000803e3d6000fd5b50505050505b6124dd8484613463565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063095ea7b360e01b90606401612af4565b6000602182901c6101ff16612d34565b600080612fa584613523565b83029050640200000000810615612fbd576001612fc0565b60005b60ff16602082901c0191505092915050565b836000036130375760408201511561300057612fed8261354a565b509350612ffb85848661366f565b611d46565b604082018190526130108261354a565b50600060408401819052835191955061302b91908690612d3e565b50612ffb85848661366f565b81604001516000036130715760408201819052613054828561329c565b50600060408301819052825161306b918690612d3e565b50611d46565b611497828561329c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146130bd576000611594565b600192915050565b60006130cf613d79565b60006130df858560600135611b91565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b03166060820152909150600061314187613718565b9050600061316b828585604001516001600160581b031686606001516001600160701b0316613754565b90506131778282611843565b9550613182826124e5565b808652604051630129e86d60e21b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916304a7a1b4916131d4918b90600401614747565b602060405180830381865afa1580156131f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061321591906145bd565b905061323260016001607f1b03602c83901c1660c08a0135614762565b6040870181905260016001607f1b0310156132555760016001607f1b0360408701525b6132628160401b60eb1d90565b602080880191909152600160c0880152845163ffffffff166080880152939093015162ffffff166060860152509396929550919350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88460a0015185600001518660200151876040015188606001518960800151896040518863ffffffff1660e01b815260040161330d96959493929190614952565b6000604051808303818588803b15801561332657600080fd5b505af193505050508015613338575060015b61339d57613344614989565b806308c379a00361339157506133586149a5565b806133635750613393565b8360c0015181906133875760405162461bcd60e51b81526004016108d59190614a2f565b5061156181614a62565b505b3d6000803e3d6000fd5b506c1bd999995c8bdd5c19185d1959609a1b92915050565b6c1bd999995c8bdd5c19185d1959609a1b8114806133f25750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b156133fc57505050565b8151606090208390604080517f4b616e64656c2f7570646174654f666665724661696c656400000000000000008152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c391015b60405180910390a3505050565b6000806000613471856137a3565b91509150816000148061348b575061348981836137d8565b155b156134a9576b1bd999995c8bd99a5b1b195960a21b92505050611594565b6040805160e0810190915261351690806134c8368990038901896147b7565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff168152600060208201526001604090910152606087013561329c565b92506122b5858585613801565b600060078211613534575060031690565b506004600382161760029190911c600119011b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f95902aa8460a00151856000015186602001518760400151886060015189608001516040518763ffffffff1660e01b81526004016135ba959493929190614a86565b60206040518083038185885af1935050505080156135f5575060408051601f3d908101601f191682019092526135f2918101906145bd565b60015b61365657613601614989565b806308c379a00361339157506136156149a5565b806136205750613393565b8360c0015181906136445760405162461bcd60e51b81526004016108d59190614a2f565b5061364e81614a62565b915050915091565b936c1bd999995c8bd8dc99585d1959609a1b9350915050565b6001836001811115613683576136836147a1565b036136ae576000818152600560209081526040808320859055848352600390915290208190556136d0565b6000818152600660209081526040808320859055848352600490915290208190555b8260018111156136e2576136e26147a1565b60408051848152602081018490527f4414bf83296b9500de34e173e9e5b7ca010ff6de3f093002103e680a3a105127910161273a565b6000600282600181111561372e5761372e6147a1565b613739906001614762565b6137439190614ab6565b6001811115611594576115946147a1565b6000600185600181111561376a5761376a6147a1565b03613792576137798385614762565b905081811061378d576124c7600183614870565b6124dd565b8284106124dd576124da8385614870565b6000806137c460a084013560016001607f1b036080860135602c1c16614870565b9150608083013560401b60eb1d9050915091565b60008060006137e6856138ae565b9092509050806137f68584614ad8565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b81148061382d57506c1bd999995c8bdd5c19185d1959609a1b81145b806138575750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b1561386157505050565b6060830135613878611988368690038601866147b7565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c39101613456565b6000806138ba83613920565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e1982850101908113156139085793841c93613912565b8060000385901b94505b81607f039350505050915091565b6000806000808412613932578361393b565b61393b84614aef565b9050620d89e88111156139905760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e647300000000000000000060448201526064016108d5565b600060018216156139b3576ffff97272373d413259a46990580e213993506139bb565b600160801b93505b60028216156139e55760806139e0856ffff2e50f5f656932ef12357cf3c7fdcb614ad8565b901c93505b6004821615613a0f576080613a0a856fffe5caca7e10e4e61c3624eaa0941ccf614ad8565b901c93505b6008821615613a39576080613a34856fffcb9843d60f6159c9db58835c926643614ad8565b901c93505b6010821615613a63576080613a5e856fff973b41fa98c081472e6896dfb254bf614ad8565b901c93505b6020821615613a8d576080613a88856fff2ea16466c96a3843ec78b326b52860614ad8565b901c93505b6040821615613ab7576080613ab2856ffe5dee046a99a2a811c461f1969c3052614ad8565b901c93505b6080821615613ae1576080613adc856ffcbe86c7900a88aedcffc83b479aa3a3614ad8565b901c93505b610100821615613b0c576080613b07856ff987a7253ac413176f2b074cf7815e53614ad8565b901c93505b610200821615613b37576080613b32856ff3392b0822b70005940c7a398e4b70f2614ad8565b901c93505b610400821615613b62576080613b5d856fe7159475a2c29b7443b29c7fa6e889d8614ad8565b901c93505b610800821615613b8d576080613b88856fd097f3bdfd2022b8845ad8f792aa5825614ad8565b901c93505b611000821615613bb8576080613bb3856fa9f746462d870fdf8a65dc1f90e061e4614ad8565b901c93505b612000821615613bf0576080613bde856fe1b0d342ada5437121767bec575e65ed614ad8565b901c9350613bed600182614b0b565b90505b614000821615613c28576080613c16856fc6f84d7e5f423f66048c541550bf3e96614ad8565b901c9350613c25600282614b0b565b90505b618000821615613c60576080613c4e856f9aa508b5b7a84e1c677de54f3e99bc8f614ad8565b901c9350613c5d600482614b0b565b90505b62010000821615613c99576080613c87856fbad5f1bdb70232cd33865244bdcc089c614ad8565b901c9350613c96600982614b0b565b90505b62020000821615613cd2576080613cc0856f885b9613d7e87aa498106fb7fa5edd37614ad8565b901c9350613ccf601282614b0b565b90505b62040000821615613d0b576080613cf9856f9142e0723efb884889d1f447715afacd614ad8565b901c9350613d08602582614b0b565b90505b62080000821615613d44576080613d32856fa4d9a773d61316918f140bd96e8e6814614ad8565b901c9350613d41604b82614b0b565b90505b6000851315613d6557600184856000030401935080613d6290614aef565b90505b613d70816080614b0b565b92505050915091565b604080516101408101909152600060e0820181815261010083018290526101208301919091528190815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b60008060208385031215613de657600080fd5b823567ffffffffffffffff80821115613dfe57600080fd5b818501915085601f830112613e1257600080fd5b813581811115613e2157600080fd5b8660208260051b8501011115613e3657600080fd5b60209290920196919550909350505050565b600060208284031215613e5a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6060810181811067ffffffffffffffff82111715613e9757613e97613e61565b60405250565b6040810181811067ffffffffffffffff82111715613e9757613e97613e61565b601f8201601f1916810167ffffffffffffffff81118282101715613ee357613ee3613e61565b6040525050565b600067ffffffffffffffff821115613f0457613f04613e61565b5060051b60200190565b600082601f830112613f1f57600080fd5b81356020613f2c82613eea565b60408051613f3a8382613ebd565b84815260609485028701840194848201935088861115613f5957600080fd5b8488015b86811015613fa15781818b031215613f755760008081fd5b8351613f8081613e77565b81358152868201358782015284820135858201528552938501938101613f5d565b509098975050505050505050565b600060408284031215613fc157600080fd5b604051613fcd81613e9d565b809150823567ffffffffffffffff80821115613fe857600080fd5b613ff486838701613f0e565b8352602085013591508082111561400a57600080fd5b5061401785828601613f0e565b6020830152505092915050565b600060808284031215610bfd57600080fd5b60008060008060e0858703121561404c57600080fd5b843567ffffffffffffffff81111561406357600080fd5b61406f87828801613faf565b94505061407f8660208701614024565b939693955050505060a08201359160c0013590565b8035600281106140a357600080fd5b919050565b6000602082840312156140ba57600080fd5b610b4c82614094565b60006101408284031215610bfd57600080fd5b600061014082840312156140e957600080fd5b610b4c83836140c3565b60008060008060008060008060006101208a8c03121561411257600080fd5b505087359960208901359950604089013598606081013598506080810135975060a0810135965060c0810135955060e08101359450610100013592509050565b600081518084526020808501945080840160005b838110156141985781518051885283810151848901526040908101519088015260609096019590820190600101614166565b509495945050505050565b6020815260008251604060208401526141bf6060840182614152565b90506020840151601f198483030160408501526114458282614152565b60008060008060008060c087890312156141f557600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000806040838503121561423257600080fd5b50508035926020909101359150565b6001600160a01b03811681146116f457600080fd5b60006020828403121561426857600080fd5b8135610b4c81614241565b6000806040838503121561428657600080fd5b82359150602083013561429881614241565b809150509250929050565b600080604083850312156142b657600080fd5b6142bf83614094565b946020939093013593505050565b60008060008060008060c087890312156142e657600080fd5b863595506020870135945060408701359350606087013592506080870135915060a087013561431481614241565b809150509295509295509295565b6000806040838503121561433557600080fd5b823561434081614241565b9150602083013561429881614241565b60008060006060848603121561436557600080fd5b8335925060208401359150604084013561437e81614241565b809150509250925092565b60006060828403121561439b57600080fd5b6040516143a781613e77565b80915082356143b581614241565b815260208301356143c581614241565b6020820152604092830135920191909152919050565b600080608083850312156143ee57600080fd5b6143f88484614389565b946060939093013593505050565b600060408284031215610bfd57600080fd5b60006020828403121561442a57600080fd5b813567ffffffffffffffff81111561444157600080fd5b6124dd84828501614406565b600080610180838503121561446157600080fd5b61446b84846140c3565b915061447b846101408501614406565b90509250929050565b60008060006060848603121561449957600080fd5b83356144a481614241565b925060208401356144b481614241565b929592945050506040919091013590565b6000806000806000806000806000806101a08b8d0312156144e557600080fd5b8a35995060208b0135985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013593506145208c60e08d01614024565b92506101608b013591506101808b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161457f5761457f614557565b5060010190565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b6000602082840312156145cf57600080fd5b5051919050565b600082601f8301126145e757600080fd5b815160206145f482613eea565b604080516146028382613ebd565b8481526060948502870184019484820193508886111561462157600080fd5b8488015b86811015613fa15781818b03121561463d5760008081fd5b835161464881613e77565b81518152868201518782015284820151858201528552938501938101614625565b60006020828403121561467b57600080fd5b815167ffffffffffffffff8082111561469357600080fd5b90830190604082860312156146a757600080fd5b6040516146b381613e9d565b8251828111156146c257600080fd5b6146ce878286016145d6565b8252506020830151828111156146e357600080fd5b6146ef878286016145d6565b60208301525095945050505050565b60006020828403121561471057600080fd5b81518015158114610b4c57600080fd5b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b608081016147558285614720565b8260608301529392505050565b8082018082111561159457611594614557565b818103600083128015838313168383128216171561159257611592614557565b60006115943683613faf565b634e487b7160e01b600052602160045260246000fd5b6000606082840312156147c957600080fd5b610b4c8383614389565b6000602082840312156147e557600080fd5b81356001600160701b0381168114610b4c57600080fd5b60006020828403121561480e57600080fd5b81356001600160581b0381168114610b4c57600080fd5b60006020828403121561483757600080fd5b813563ffffffff81168114610b4c57600080fd5b60006020828403121561485d57600080fd5b813562ffffff81168114610b4c57600080fd5b8181038181111561159457611594614557565b606081016115948284614720565b60005b838110156148ac578181015183820152602001614894565b50506000910152565b600082516148c7818460208701614891565b9190910192915050565b60a081016148df8286614720565b8360608301528215156080830152949350505050565b604080825283519082018190526000906020906060840190828701845b828110156149375781516001600160a01b031684529284019290840190600101614912565b5050506001600160a01b039490941692019190915250919050565b61010081016149618289614720565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600060033d11156149a25760046000803e5060005160e01c5b90565b600060443d10156149b35790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156149e357505050505090565b82850191508151818111156149fb5750505050505090565b843d8701016020828501011115614a155750505050505090565b614a2460208286010187613ebd565b509095945050505050565b6020815260008251806020840152614a4e816040850160208701614891565b601f01601f19169190910160400192915050565b80516020808301519190811015610bfd5760001960209190910360031b1b16919050565b60e08101614a948288614720565b8560608301528460808301528360a08301528260c08301529695505050505050565b600082614ad357634e487b7160e01b600052601260045260246000fd5b500690565b808202811582820484141761159457611594614557565b6000600160ff1b8201614b0457614b04614557565b5060000390565b80820182811260008312801582168215821617156122b5576122b561455756fea2646970667358221220db51490e85ac4d616b9e2ff7b5dc7d2d927ebef8c376a18ac544d6ec0a38765364736f6c63430008140033",
    "sourceMap": "375:1066:109:-:0;;;780:360;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;888:3;893:14;909:6;917:9;888:3;893:14;909:6;917:9;893:14;888:3;909:6;917:9;888:3;1609:1:99;909:6:109;917:9;888:3;909:6;2955:10:99;;977:57:123;;;;-1:-1:-1;;;977:57:123;;1734:2:131;977:57:123;;;1716:21:131;1773:2;1753:18;;;1746:30;1812:26;1792:18;;;1785:54;1856:18;;977:57:123;;;;;;;;;1040:6;:15;;-1:-1:-1;;;;;;1040:15:123;-1:-1:-1;;;;;1040:15:123;;;;;;;;;;2981:24:99::1;::::0;::::1;::::0;::::1;2973:60;;;::::0;-1:-1:-1;;;2973:60:99;;2087:2:131;2973:60:99::1;::::0;::::1;2069:21:131::0;2126:2;2106:18;;;2099:30;2165:25;2145:18;;;2138:53;2208:18;;2973:60:99::1;1885:347:131::0;2973:60:99::1;-1:-1:-1::0;;;;;3039:9:99;::::1;;::::0;;;3054:24:::1;::::0;;;3089:8:::1;::::0;2410:51:131;;;3089:8:99::1;::::0;-1:-1:-1;2383:18:131;3089:8:99::1;;;;;;;-1:-1:-1::0;;;;;;;2052:20:106;::::1;::::0;2048:59:::1;;2082:18;2092:7:::0;2082:9:::1;:18::i;:::-;2112;-1:-1:-1::0;;;;;2133:23:106;::::1;::::0;:51:::1;;2175:9;2133:51;;;2167:4;2133:51;-1:-1:-1::0;;;;;2190:23:106;::::1;;::::0;;;2224:24:::1;::::0;2112:72;;-1:-1:-1;2190:23:106;2224:24:::1;::::0;;;::::1;-1:-1:-1::0;;2327:27:117;;-1:-1:-1;;;;;2313:42:117;;;;;2376:26;;;;2361:42;;;-1:-1:-1;;;2424:26:117;;;;2409:41;;-1:-1:-1;;1552:2:47;1535:20;;2461:35:117;;-1:-1:-1;2461:35:117;;2618:25:131;;;2606:2;2591:18;2461:35:117;;;;;;;2266:235;4806:194:112;;;;1607:147:114;;;;1069:18:109::1;1082:4;;1069:12;;;:18;;:::i;:::-;1106:5;::::0;1093:19:::1;::::0;:12:::1;:19::i;:::-;1118:17;1128:6:::0;1118:9:::1;:17::i;:::-;780:360:::0;;;;375:1066;;7512:127:99;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;2856:2:131;1171:57:123;;;2838:21:131;2895:2;2875:18;;;2868:30;2934:26;2914:18;;;2907:54;2978:18;;1171:57:123;2654:348:131;1171:57:123;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;2410:51:131;;;7616:18:99::1;::::0;2398:2:131;2383:18;7616::99::1;;;;;;;7512:127:::0;:::o;8617:808::-;8676:22;8701:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;8701:8;8676:33;;8824:61;8849:5;8864:3;;-1:-1:-1;;8824:24:99;;;:61;;:::i;:::-;8816:103;;;;-1:-1:-1;;;8816:103:99;;3441:2:131;8816:103:99;;;3423:21:131;3480:2;3460:18;;;3453:30;3519:31;3499:18;;;3492:59;3568:18;;8816:103:99;3239:353:131;8816:103:99;-1:-1:-1;;;;;8929:20:99;;;8925:496;;9067:65;9092:5;9107:7;-1:-1:-1;;9067:24:99;:65::i;:::-;9059:104;;;;-1:-1:-1;;;9059:104:99;;3799:2:131;9059:104:99;;;3781:21:131;3838:2;3818:18;;;3811:30;3877:28;3857:18;;;3850:56;3923:18;;9059:104:99;3597:350:131;9059:104:99;9391:23;;-1:-1:-1;;;9391:23:99;;-1:-1:-1;;;;;2428:32:131;;;9391:23:99;;;2410:51:131;9391:16:99;;;;;2383:18:131;;9391:23:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8925:496;8670:755;8617:808;:::o;3395:205:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;2856:2:131;1171:57:123;;;2838:21:131;2895:2;2875:18;;;2868:30;2934:26;2914:18;;;2907:54;2978:18;;1171:57:123;2654:348:131;1171:57:123;3474:6:112;3495:17:::1;::::0;::::1;::::0;::::1;3487:50;;;::::0;-1:-1:-1;;;3487:50:112;;4375:2:131;3487:50:112::1;::::0;::::1;4357:21:131::0;4414:2;4394:18;;;4387:30;4453:22;4433:18;;;4426:50;4493:18;;3487:50:112::1;4173:344:131::0;3487:50:112::1;3543:6;:23:::0;;-1:-1:-1;;;;3543:23:112::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3577:18:::1;::::0;4667:40:131;;;3577:18:112::1;::::0;4655:2:131;4640:18;3577::112::1;;;;;;;3444:156;3395:205:::0;:::o;5061:145:5:-;5145:4;5164:37;5178:5;5185:7;5194:6;5164:13;:37::i;:::-;5157:44;5061:145;-1:-1:-1;;;;5061:145:5:o;4155:623::-;4637:63;;;-1:-1:-1;;;;;4910:32:131;;;4637:63:5;;;4892:51:131;4959:18;;;;4952:34;;;4637:63:5;;;;;;;;;;4865:18:131;;;;4637:63:5;;;;;;;-1:-1:-1;;;;;4637:63:5;-1:-1:-1;;;4637:63:5;;;4617:84;;-1:-1:-1;;;;;;4617:19:5;;;;:84;;4637:63;4617:84;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4575:126;;;;4715:7;:57;;;;-1:-1:-1;4727:11:5;;:16;;:44;;;4758:4;4747:24;;;;;;;;;;;;:::i;:::-;4707:66;4155:623;-1:-1:-1;;;;;;4155:623:5:o;14:142:131:-;-1:-1:-1;;;;;100:31:131;;90:42;;80:70;;146:1;143;136:12;80:70;14:142;:::o;161:149::-;240:13;;262:42;240:13;262:42;:::i;:::-;161:149;;;:::o;315:1212::-;455:6;463;471;479;523:9;514:7;510:23;553:3;549:2;545:12;542:32;;;570:1;567;560:12;542:32;602:9;596:16;621:42;657:5;621:42;:::i;:::-;682:5;-1:-1:-1;721:4:131;-1:-1:-1;;703:16:131;;699:27;696:47;;;739:1;736;729:12;696:47;-1:-1:-1;772:2:131;766:9;814:4;802:17;;-1:-1:-1;;;;;834:34:131;;870:22;;;831:62;828:185;;;935:10;930:3;926:20;923:1;916:31;970:4;967:1;960:15;998:4;995:1;988:15;828:185;1029:2;1022:22;1089:2;1074:18;;1068:25;1102:44;1068:25;1102:44;:::i;:::-;1155:23;;1223:2;1208:18;;1202:25;1236:44;1202:25;1236:44;:::i;:::-;1308:2;1296:15;;1289:32;1375:4;1360:20;;1354:27;1349:2;1337:15;;1330:52;1447:3;1432:19;;1426:26;1300:6;;-1:-1:-1;1426:26:131;-1:-1:-1;1471:50:131;1516:3;1501:19;;1471:50;:::i;:::-;1461:60;;315:1212;;;;;;;:::o;4997:412::-;5126:3;5164:6;5158:13;5189:1;5199:129;5213:6;5210:1;5207:13;5199:129;;;5311:4;5295:14;;;5291:25;;5285:32;5272:11;;;5265:53;5228:12;5199:129;;;-1:-1:-1;5383:1:131;5347:16;;5372:13;;;-1:-1:-1;5347:16:131;4997:412;-1:-1:-1;4997:412:131:o;5414:277::-;5481:6;5534:2;5522:9;5513:7;5509:23;5505:32;5502:52;;;5550:1;5547;5540:12;5502:52;5582:9;5576:16;5635:5;5628:13;5621:21;5614:5;5611:32;5601:60;;5657:1;5654;5647:12;5601:60;5680:5;5414:277;-1:-1:-1;;;5414:277:131:o;:::-;375:1066:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "KandelLib": [
          {
            "start": 5670,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061024a5760003560e01c80639c57983911610139578063cfcd2679116100b6578063ea0f394d1161007a578063ea0f394d14610778578063ec342ad014610798578063f851a440146107cc578063f887ea40146107ea578063fbc7d10b14610808578063fcaa7e2e1461083c57600080fd5b8063cfcd267914610671578063cff0ab9614610686578063d2e498fe14610715578063e1f21c6714610735578063e4f248f41461076557600080fd5b8063a2e241af116100fd578063a2e241af146105d1578063ace67902146105f1578063bfc353f914610611578063c0d7865514610631578063c7e1bb441461065157600080fd5b80639c579839146105095780639eb7d4fe1461053d5780639ee8a91c14610571578063a224b5e914610591578063a24f2b2d146105b157600080fd5b80635293840d116101c75780637692c3281161018b5780637692c32814610455578063790532a114610475578063820db1f71461049557806398ed5340146104b557806399fa5e2d146104d557600080fd5b80635293840d146103a85780635570db1d146103c857806361638ed5146103f5578063704b6c02146104155780637144df241461043557600080fd5b80632380fafd1161020e5780632380fafd146102f457806334bd8931146103145780633fce15c91461033457806346ca626b146103615780634f605c5b1461039557600080fd5b806303eb17e2146102565780631450acd214610278578063148b7cea1461029857806314ee02bd146102ab57806318acf82f146102d457600080fd5b3661025157005b600080fd5b34801561026257600080fd5b50610276610271366004613dd3565b61085c565b005b34801561028457600080fd5b50610276610293366004613e48565b6108ab565b6102766102a6366004614036565b6109f6565b3480156102b757600080fd5b506102c160085481565b6040519081526020015b60405180910390f35b3480156102e057600080fd5b506102c16102ef3660046140a8565b610ad5565b34801561030057600080fd5b506102c161030f3660046140d6565b610b53565b34801561032057600080fd5b5061027661032f366004613e48565b610c03565b34801561034057600080fd5b5061035461034f3660046140f3565b610ccc565b6040516102cb91906141a3565b34801561036d57600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b6102766103a33660046141dc565b610d9e565b3480156103b457600080fd5b506102766103c3366004613dd3565b610e66565b3480156103d457600080fd5b506103dd600081565b6040516001600160a01b0390911681526020016102cb565b34801561040157600080fd5b5061027661041036600461421f565b610eda565b34801561042157600080fd5b50610276610430366004614256565b611094565b34801561044157600080fd5b50610276610450366004614273565b611169565b34801561046157600080fd5b506102c16104703660046142a3565b611399565b34801561048157600080fd5b506102766104903660046142cd565b61144e565b3480156104a157600080fd5b506102c16104b0366004614322565b61149f565b3480156104c157600080fd5b506102c16104d03660046140a8565b61159a565b3480156104e157600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561051557600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561054957600080fd5b506102c17f000000000000000000000000000000000000000000000000000000000000000081565b34801561057d57600080fd5b5061027661058c366004614350565b6115b8565b34801561059d57600080fd5b506102766105ac366004613e48565b611638565b3480156105bd57600080fd5b506102c16105cc3660046143db565b6116f7565b3480156105dd57600080fd5b506102766105ec36600461421f565b611703565b3480156105fd57600080fd5b5061027661060c366004614418565b61179b565b34801561061d57600080fd5b506102c161062c3660046142a3565b611843565b34801561063d57600080fd5b5061027661064c366004614256565b611887565b34801561065d57600080fd5b5061027661066c36600461444d565b6118ff565b34801561067d57600080fd5b506102c16119d1565b34801561069257600080fd5b506007546106d39063ffffffff811690600160201b810462ffffff1690600160381b81046001600160581b031690600160901b90046001600160701b031684565b6040805163ffffffff909516855262ffffff90931660208501526001600160581b03909116918301919091526001600160701b031660608201526080016102cb565b34801561072157600080fd5b506102c16107303660046140a8565b6119e3565b34801561074157600080fd5b50610755610750366004614484565b611a2a565b60405190151581526020016102cb565b6102766107733660046144c5565b611ab6565b34801561078457600080fd5b506102c16107933660046142a3565b611b91565b3480156107a457600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107d857600080fd5b506000546001600160a01b03166103dd565b3480156107f657600080fd5b506001546001600160a01b03166103dd565b34801561081457600080fd5b506103dd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561084857600080fd5b50610276610857366004613e48565b611bd5565b60005b818110156108a65761089683838381811061087c5761087c614541565b90506020020160208101906108919190614256565b611c90565b61089f8161456d565b905061085f565b505050565b6000546001600160a01b031633146108de5760405162461bcd60e51b81526004016108d590614586565b60405180910390fd5b80806109245760405162461bcd60e51b81526020600482015260156024820152744b616e64656c2f7374657053697a65546f6f4c6f7760581b60448201526064016108d5565b81816001600160581b031614801561094d5750600754600160901b90046001600160701b031682105b6109925760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ee6e8cae0a6d2f4caa8dede90d2ced60531b60448201526064016108d5565b6007805471ffffffffffffffffffffff000000000000001916600160381b6001600160581b038416021790556040518281527f0408193baae9f2730f7be76d9be93983ed2dd45af2305c085920b8f00c25bbcd906020015b60405180910390a15050565b6000546001600160a01b03163314610a205760405162461bcd60e51b81526004016108d590614586565b3415610a9b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610a8157600080fd5b505af1158015610a95573d6000803e3d6000fd5b50505050505b610aa483611d4d565b610aae8282610eda565b600754610acf90859062ffffff600160201b8204169063ffffffff16611fbd565b50505050565b600080610ae1836120a0565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa158015610b28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4c91906145bd565b9392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b03821614610b9e5760405162461bcd60e51b81526004016108d590614586565b60009150610bb08360a0013584612108565b15610bfd5760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f61626f72742f6765744661696c6564000000000000000060448201526064016108d5565b50919050565b6000546001600160a01b03163314610c2d5760405162461bcd60e51b81526004016108d590614586565b8062ffffff81168114610c795760405162461bcd60e51b8152602060048201526014602482015273096c2dcc8cad85ecec2e6e4cae2a8dede90d2ced60631b60448201526064016108d5565b6007805466ffffff000000001916600160201b62ffffff8416908102919091179091556040519081527fafef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d906020016109ea565b60408051808201825260608082526020820152905163fbbd4a6560e01b8152600481018b9052602481018a905260448101899052606481018890526084810187905260a4810186905260c4810185905260e48101849052610104810183905273__$c9b0e4557995336ec140d025d87b634e02$__9063fbbd4a659061012401600060405180830381865af4158015610d68573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d909190810190614669565b9a9950505050505050505050565b6000546001600160a01b03163314610dc85760405162461bcd60e51b81526004016108d590614586565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b0316928201839052600160901b90046001600160701b0316606082018190526008549192600092610e3c928b928b928b9290918b918b918b9190610ccc565b9050610e5c81836020015162ffffff16846000015163ffffffff16611fbd565b5050505050505050565b6000546001600160a01b03163314610e905760405162461bcd60e51b81526004016108d590614586565b60005b818110156108a657610eca838383818110610eb057610eb0614541565b9050602002016020810190610ec59190614256565b6122bd565b610ed38161456d565b9050610e93565b610f067f000000000000000000000000000000000000000000000000000000000000000033308561240b565b610f525760405162461bcd60e51b815260206004820152601760248201527f4b616e64656c2f626173655472616e736665724661696c00000000000000000060448201526064016108d5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa09483604051610fad91815260200190565b60405180910390a2610fe17f000000000000000000000000000000000000000000000000000000000000000033308461240b565b61102d5760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f71756f74655472616e736665724661696c000000000000000060448201526064016108d5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa0948260405161108891815260200190565b60405180910390a25050565b6000546001600160a01b031633146110be5760405162461bcd60e51b81526004016108d590614586565b6001600160a01b0381166111145760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e000000000000000060448201526064016108d5565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a1906020015b60405180910390a150565b6000546001600160a01b031633146111935760405162461bcd60e51b81526004016108d590614586565b6000198203611227576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611200573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122491906145bd565b91505b604051632e1a7d4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af115801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b291906146fe565b6112f65760405162461bcd60e51b81526020600482015260156024820152741b59dd93d999995c8bddda5d1a191c985dd1985a5b605a1b60448201526064016108d5565b6000816001600160a01b03168360405160006040518083038185875af1925050503d8060008114611343576040519150601f19603f3d011682016040523d82523d6000602084013e611348565b606091505b50509050806108a65760405162461bcd60e51b815260206004820152601860248201527f6d67764f666665722f7765695472616e736665724661696c000000000000000060448201526064016108d5565b6000806113a68484611843565b905060006113b3856124e5565b604051630129e86d60e21b81529091506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906304a7a1b4906114049084908690600401614747565b602060405180830381865afa158015611421573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144591906145bd565b95945050505050565b6000546001600160a01b031633146114785760405162461bcd60e51b81526004016108d590614586565b6114828686611703565b61148d8484836115b8565b6114978282611169565b505050505050565b6000806114b46001546001600160a01b031690565b90506001600160a01b038116156115695760405163143b7da760e11b81526001600160a01b0385811660048301528481166024830152821690632876fb4e90604401602060405180830381865afa158015611513573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153791906145bd565b611561907f0000000000000000000000000000000000000000000000000000000000000000614762565b915050611594565b7f0000000000000000000000000000000000000000000000000000000000000000915050611594565b505b92915050565b60006115a5826119e3565b6115ae83610ad5565b6115949190614775565b6000546001600160a01b031633146115e25760405162461bcd60e51b81526004016108d590614586565b61160d7f0000000000000000000000000000000000000000000000000000000000000000848361263e565b6108a67f0000000000000000000000000000000000000000000000000000000000000000838361263e565b6000546001600160a01b031633146116625760405162461bcd60e51b81526004016108d590614586565b808162ffffff16146116b65760405162461bcd60e51b815260206004820152601860248201527f4b616e64656c2f7469636b4f6666736574546f6f48696768000000000000000060448201526064016108d5565b80600854146116f45760088190556040518181527f286da08673f0eb4b3843f2824fb8e3e412534a62f6094fdc8b4008cfeba4ba669060200161115e565b50565b6000610b4c8383612747565b6000546001600160a01b0316331461172d5760405162461bcd60e51b81526004016108d590614586565b6040517f97714c1c48a0b9a1a347710cb6a62f056f5a811d4006655e3b41959e1e72a40990600090a161176282826001612808565b61176e82826000612808565b6040517fa9bc12cd7db30bdfe60fece3ec52cfa7c8d60e396e2ea5df439a7d458f05f9b690600090a15050565b6000546001600160a01b031633146117c55760405162461bcd60e51b81526004016108d590614586565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b0316606082015261183f61182583614795565b826020015162ffffff16836000015163ffffffff16611fbd565b5050565b60006001836001811115611859576118596147a1565b1461187257600082815260046020526040902054610b4c565b50600090815260036020526040902054919050565b6000546001600160a01b031633146118b15760405162461bcd60e51b81526004016108d590614586565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6de4326a8b9054d72d9dbab97d27bc4edffadee7d966f5af9cc4eafdaf8e54559060200161115e565b7f0000000000000000000000000000000000000000000000000000000000000000336001600160a01b038216146119485760405162461bcd60e51b81526004016108d590614586565b81602001356f6d67762f74726164655375636365737360801b0361197157610acf838335612852565b606083013561198f611988368690038601866147b7565b6060902090565b6040805185358152602080870135908201527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c3910160405180910390a3505050565b60006119de60008061149f565b905090565b6000805b600254811015610bfd5760006119fd8483611399565b9050611a1660016001607f1b03602c83901c1684614762565b92505080611a239061456d565b90506119e7565b600080546001600160a01b03163314611a555760405162461bcd60e51b81526004016108d590614586565b611a60848484612867565b611aac5760405162461bcd60e51b815260206004820152601760248201527f6d67764f666665722f617070726f76652f6661696c656400000000000000000060448201526064016108d5565b5060019392505050565b6000546001600160a01b03163314611ae05760405162461bcd60e51b81526004016108d590614586565b3415611b5b577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b60d4288346040518263ffffffff1660e01b81526004016000604051808303818588803b158015611b4157600080fd5b505af1158015611b55573d6000803e3d6000fd5b50505050505b611b6483611d4d565b611b6d87611638565b611b778282610eda565b611b858a8a8a898989610d9e565b50505050505050505050565b60006001836001811115611ba757611ba76147a1565b14611bc057600082815260066020526040902054610b4c565b50600090815260056020526040902054919050565b6000546001600160a01b03163314611bff5760405162461bcd60e51b81526004016108d590614586565b63040000008110611c4b5760405162461bcd60e51b8152602060048201526016602482015275096c2dcc8cad85ecec2e6e0e4d2c6caa8dede90d2ced60531b60448201526064016108d5565b6007805463ffffffff191663ffffffff83161790556040518181527fdbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd9060200161115e565b611c9981612874565b6000611cad6001546001600160a01b031690565b6001600160a01b0316146116f4576001546001600160a01b0316604051631403b99b60e31b81526001600160a01b0383811660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152919091169063a01dccd89060440160006040518083038186803b158015611d3257600080fd5b505afa158015611d46573d6000803e3d6000fd5b5050505050565b604080516080808201835260075463ffffffff81168352600160201b810462ffffff166020840152600160381b81046001600160581b031693830193909352600160901b9092046001600160701b03166060808301919091529091611db7919084019084016147d3565b6001600160701b031681606001516001600160701b031614611eb1576000611de560808401606085016147d3565b9050611df760808401606085016147d3565b6001600160701b0316816001600160701b0316148015611e2157506002816001600160701b031610155b611e6d5760405162461bcd60e51b815260206004820152601960248201527f4b616e64656c2f696e76616c69645072696365506f696e74730000000000000060448201526064016108d5565b611e7f816001600160701b031661295f565b600780546001600160701b03909216600160901b0271ffffffffffffffffffffffffffffffffffff9092169190911790555b611ec160608301604084016147fc565b6001600160581b031681604001516001600160581b031614611efe57611efe611ef060608401604085016147fc565b6001600160581b03166108ab565b611f0b6020830183614825565b63ffffffff1615801590611f385750805163ffffffff16611f2f6020840184614825565b63ffffffff1614155b15611f5857611f58611f4d6020840184614825565b63ffffffff16611bd5565b611f68604083016020840161484b565b62ffffff1615801590611f9b5750806020015162ffffff16826020016020810190611f93919061484b565b62ffffff1614155b1561183f5761183f611fb3604084016020850161484b565b62ffffff16610c03565b6040517faab0a16d4cef87072f3977d7f1c066be401e0e6486526674f5f6172d42703db190600090a1611fee613d79565b606081018390526080810182905261200660006124e5565b8152602084015161201990600083612994565b80516040805160608082018352600080835260208084018290529284015282519081018352818401516001600160a01b0390811682528451169181019190915291810151908201528152835161207190600183612994565b6040517fac65490b93de6b3189ca1e1653852249eb8680e816c258cff6ccf73d8501d3d090600090a150505050565b600060018260018111156120b6576120b66147a1565b146120e1577f0000000000000000000000000000000000000000000000000000000000000000611594565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b6000806121186020840184614256565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561215e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218291906145bd565b9050838110612195576000915050611594565b61219f8185614870565b905060006121b56001546001600160a01b031690565b90506001600160a01b0381166121cd57509050611594565b60006001600160a01b03821663333dbb0d6121eb6020880188614256565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201527f0000000000000000000000000000000000000000000000000000000000000000909116602482018190526044820187905230141560648201526084016020604051808303816000875af115801561226b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228f91906145bd565b9050828110156122a8576122a38184614870565b6122ab565b60005b9350505050611594565b505092915050565b60006122d16001546001600160a01b031690565b9050612300827f0000000000000000000000000000000000000000000000000000000000000000600019612867565b61234c5760405162461bcd60e51b815260206004820152601d60248201527f6d67764f666665722f617070726f76654d616e67726f76652f4661696c00000060448201526064016108d5565b6001600160a01b0381161561183f576123688282600019612867565b6123b45760405162461bcd60e51b815260206004820152601a60248201527f6d67764f666665722f617070726f7665526f757465724661696c00000000000060448201526064016108d5565b604051630716a76760e21b81526001600160a01b038381166004830152821690631c5a9d9c90602401600060405180830381600087803b1580156123f757600080fd5b505af1158015611497573d6000803e3d6000fd5b60008160000361241d575060016124dd565b826001600160a01b0316846001600160a01b0316036124ac576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa15801561247f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124a391906145bd565b101590506124dd565b306001600160a01b038516036124ce576124c7858484612ac2565b90506124dd565b6124da85858585612ba8565b90505b949350505050565b6040805160608101825260008082526020820181905291810182905290826001811115612514576125146147a1565b146125ab5760405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f0000000000000000000000000000000000000000000000000000000000000000815250611594565b60405180606001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031681526020017f000000000000000000000000000000000000000000000000000000000000000081525092915050565b60001982036126b2576040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa15801561268b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126af91906145bd565b91505b6126bd838284612c85565b6126ff5760405162461bcd60e51b815260206004820152601360248201527212d85b99195b0bdd1c985b9cd9995c91985a5b606a1b60448201526064016108d5565b826001600160a01b03167f59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc60468360405161273a91815260200190565b60405180910390a2505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e982fb8d85856040518363ffffffff1660e01b8152600401612798929190614747565b602060405180830381865afa1580156127b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127d991906145bd565b9050604881901c62ffffff166127ee82612d28565b01602582901c6303ffffff1602620f424002949350505050565b6000612813826124e5565b9050835b83811015611d4657600061282b8483611843565b905080156128415761283f83826001612d3e565b505b5061284b8161456d565b9050612817565b600061285d83612dd4565b610b4c8383612e17565b60006124dd848484612f53565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919083169063dd62ed3e90604401602060405180830381865afa1580156128e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061290891906145bd565b116116f45760405162461bcd60e51b815260206004820152602160248201527f6d67764f666665722f4c6f6769634d757374417070726f76654d616e67726f766044820152606560f81b60648201526084016108d5565b60028190556040518181527f26003f10937c9ed98d59e0d595a28bc7d35537a044aeaad037fedaab24d179989060200161115e565b8051604051631c04321560e01b81526000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691631c043215916129e391600401614883565b602060405180830381865afa158015612a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a2491906145bd565b90506000612a52612a3483612f89565b8460600151612a439190614762565b60ee84901c6101ff1690612f99565b905060005b8551811015611497576000868281518110612a7457612a74614541565b60209081029190910181015180518183015192880192909252604080820151908801529150612aaf87612aa78184611843565b838988612fd2565b505080612abb9061456d565b9050612a57565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063a9059cbb60e01b906064015b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612b3291906148b5565b6000604051808303816000865af19150503d8060008114612b6f576040519150601f19603f3d011682016040523d82523d6000602084013e612b74565b606091505b5091509150818015612b9e575080511580612b9e575080806020019051810190612b9e91906146fe565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691612c0e91906148b5565b6000604051808303816000865af19150503d8060008114612c4b576040519150601f19603f3d011682016040523d82523d6000602084013e612c50565b606091505b5091509150818015612c7a575080511580612c7a575080806020019051810190612c7a91906146fe565b979650505050505050565b600081600003612c9757506001610b4c565b306001600160a01b03841603612d1d576040516370a0823160e01b81526001600160a01b0384811660048301528391908616906370a0823190602401602060405180830381865afa158015612cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1491906145bd565b10159050610b4c565b6124dd848484612ac2565b6000603f82901c6101ff165b6103e80292915050565b604051630dcf4b9760e31b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636e7a5cb890612d91908790879087906004016148d1565b6020604051808303816000875af1158015612db0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124dd91906145bd565b6000612deb612de66020840184614256565b61307b565b9050600080612dfa83856130c5565b915091506000612e0a828461329c565b9050611d468383836133b5565b600080612e2c6001546001600160a01b031690565b90506001600160a01b03811615612f4957604080516002808252606082018352600092602083019080368337019050509050612e6b6020860186614256565b81600081518110612e7e57612e7e614541565b6001600160a01b03909216602092830291909101820152612ea59060408701908701614256565b81600181518110612eb857612eb8614541565b6001600160a01b039283166020918202929092010152604051633e142a0760e21b81529083169063f850a81c90612f159084907f0000000000000000000000000000000000000000000000000000000000000000906004016148f5565b600060405180830381600087803b158015612f2f57600080fd5b505af1158015612f43573d6000803e3d6000fd5b50505050505b6124dd8484613463565b6040516001600160a01b03838116602483015260448201839052600091829182919087169063095ea7b360e01b90606401612af4565b6000602182901c6101ff16612d34565b600080612fa584613523565b83029050640200000000810615612fbd576001612fc0565b60005b60ff16602082901c0191505092915050565b836000036130375760408201511561300057612fed8261354a565b509350612ffb85848661366f565b611d46565b604082018190526130108261354a565b50600060408401819052835191955061302b91908690612d3e565b50612ffb85848661366f565b81604001516000036130715760408201819052613054828561329c565b50600060408301819052825161306b918690612d3e565b50611d46565b611497828561329c565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316146130bd576000611594565b600192915050565b60006130cf613d79565b60006130df858560600135611b91565b6040805160808101825260075463ffffffff81168252600160201b810462ffffff166020830152600160381b81046001600160581b031692820192909252600160901b9091046001600160701b03166060820152909150600061314187613718565b9050600061316b828585604001516001600160581b031686606001516001600160701b0316613754565b90506131778282611843565b9550613182826124e5565b808652604051630129e86d60e21b81526000916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916304a7a1b4916131d4918b90600401614747565b602060405180830381865afa1580156131f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061321591906145bd565b905061323260016001607f1b03602c83901c1660c08a0135614762565b6040870181905260016001607f1b0310156132555760016001607f1b0360408701525b6132628160401b60eb1d90565b602080880191909152600160c0880152845163ffffffff166080880152939093015162ffffff166060860152509396929550919350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a84b08c88460a0015185600001518660200151876040015188606001518960800151896040518863ffffffff1660e01b815260040161330d96959493929190614952565b6000604051808303818588803b15801561332657600080fd5b505af193505050508015613338575060015b61339d57613344614989565b806308c379a00361339157506133586149a5565b806133635750613393565b8360c0015181906133875760405162461bcd60e51b81526004016108d59190614a2f565b5061156181614a62565b505b3d6000803e3d6000fd5b506c1bd999995c8bdd5c19185d1959609a1b92915050565b6c1bd999995c8bdd5c19185d1959609a1b8114806133f25750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b156133fc57505050565b8151606090208390604080517f4b616e64656c2f7570646174654f666665724661696c656400000000000000008152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c391015b60405180910390a3505050565b6000806000613471856137a3565b91509150816000148061348b575061348981836137d8565b155b156134a9576b1bd999995c8bd99a5b1b195960a21b92505050611594565b6040805160e0810190915261351690806134c8368990038901896147b7565b8152602081018490526040810185905260600160e088013560481c62ffffff16815260200160e088013560251c6303ffffff168152600060208201526001604090910152606087013561329c565b92506122b5858585613801565b600060078211613534575060031690565b506004600382161760029190911c600119011b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f95902aa8460a00151856000015186602001518760400151886060015189608001516040518763ffffffff1660e01b81526004016135ba959493929190614a86565b60206040518083038185885af1935050505080156135f5575060408051601f3d908101601f191682019092526135f2918101906145bd565b60015b61365657613601614989565b806308c379a00361339157506136156149a5565b806136205750613393565b8360c0015181906136445760405162461bcd60e51b81526004016108d59190614a2f565b5061364e81614a62565b915050915091565b936c1bd999995c8bd8dc99585d1959609a1b9350915050565b6001836001811115613683576136836147a1565b036136ae576000818152600560209081526040808320859055848352600390915290208190556136d0565b6000818152600660209081526040808320859055848352600490915290208190555b8260018111156136e2576136e26147a1565b60408051848152602081018490527f4414bf83296b9500de34e173e9e5b7ca010ff6de3f093002103e680a3a105127910161273a565b6000600282600181111561372e5761372e6147a1565b613739906001614762565b6137439190614ab6565b6001811115611594576115946147a1565b6000600185600181111561376a5761376a6147a1565b03613792576137798385614762565b905081811061378d576124c7600183614870565b6124dd565b8284106124dd576124da8385614870565b6000806137c460a084013560016001607f1b036080860135602c1c16614870565b9150608083013560401b60eb1d9050915091565b60008060006137e6856138ae565b9092509050806137f68584614ad8565b901c95945050505050565b6b1bd999995c8bd99a5b1b195960a21b81148061382d57506c1bd999995c8bdd5c19185d1959609a1b81145b806138575750807f6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77000000145b1561386157505050565b6060830135613878611988368690038601866147b7565b60408051858152602081018590527f45b7a2e43f35c7d127ad18416b3d34235d187b2060d4050bb82bb11de272a7c39101613456565b6000806138ba83613920565b909250905060eb83901b60007ed89e8c075c4155dd3213326cbbcf86fd1f63f5c205dd2ad2cf44f9349b39e180830782139083050390607e1982850101908113156139085793841c93613912565b8060000385901b94505b81607f039350505050915091565b6000806000808412613932578361393b565b61393b84614aef565b9050620d89e88111156139905760405162461bcd60e51b815260206004820152601760248201527f6d67762f6162735469636b2f6f75744f66426f756e647300000000000000000060448201526064016108d5565b600060018216156139b3576ffff97272373d413259a46990580e213993506139bb565b600160801b93505b60028216156139e55760806139e0856ffff2e50f5f656932ef12357cf3c7fdcb614ad8565b901c93505b6004821615613a0f576080613a0a856fffe5caca7e10e4e61c3624eaa0941ccf614ad8565b901c93505b6008821615613a39576080613a34856fffcb9843d60f6159c9db58835c926643614ad8565b901c93505b6010821615613a63576080613a5e856fff973b41fa98c081472e6896dfb254bf614ad8565b901c93505b6020821615613a8d576080613a88856fff2ea16466c96a3843ec78b326b52860614ad8565b901c93505b6040821615613ab7576080613ab2856ffe5dee046a99a2a811c461f1969c3052614ad8565b901c93505b6080821615613ae1576080613adc856ffcbe86c7900a88aedcffc83b479aa3a3614ad8565b901c93505b610100821615613b0c576080613b07856ff987a7253ac413176f2b074cf7815e53614ad8565b901c93505b610200821615613b37576080613b32856ff3392b0822b70005940c7a398e4b70f2614ad8565b901c93505b610400821615613b62576080613b5d856fe7159475a2c29b7443b29c7fa6e889d8614ad8565b901c93505b610800821615613b8d576080613b88856fd097f3bdfd2022b8845ad8f792aa5825614ad8565b901c93505b611000821615613bb8576080613bb3856fa9f746462d870fdf8a65dc1f90e061e4614ad8565b901c93505b612000821615613bf0576080613bde856fe1b0d342ada5437121767bec575e65ed614ad8565b901c9350613bed600182614b0b565b90505b614000821615613c28576080613c16856fc6f84d7e5f423f66048c541550bf3e96614ad8565b901c9350613c25600282614b0b565b90505b618000821615613c60576080613c4e856f9aa508b5b7a84e1c677de54f3e99bc8f614ad8565b901c9350613c5d600482614b0b565b90505b62010000821615613c99576080613c87856fbad5f1bdb70232cd33865244bdcc089c614ad8565b901c9350613c96600982614b0b565b90505b62020000821615613cd2576080613cc0856f885b9613d7e87aa498106fb7fa5edd37614ad8565b901c9350613ccf601282614b0b565b90505b62040000821615613d0b576080613cf9856f9142e0723efb884889d1f447715afacd614ad8565b901c9350613d08602582614b0b565b90505b62080000821615613d44576080613d32856fa4d9a773d61316918f140bd96e8e6814614ad8565b901c9350613d41604b82614b0b565b90505b6000851315613d6557600184856000030401935080613d6290614aef565b90505b613d70816080614b0b565b92505050915091565b604080516101408101909152600060e0820181815261010083018290526101208301919091528190815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b60008060208385031215613de657600080fd5b823567ffffffffffffffff80821115613dfe57600080fd5b818501915085601f830112613e1257600080fd5b813581811115613e2157600080fd5b8660208260051b8501011115613e3657600080fd5b60209290920196919550909350505050565b600060208284031215613e5a57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6060810181811067ffffffffffffffff82111715613e9757613e97613e61565b60405250565b6040810181811067ffffffffffffffff82111715613e9757613e97613e61565b601f8201601f1916810167ffffffffffffffff81118282101715613ee357613ee3613e61565b6040525050565b600067ffffffffffffffff821115613f0457613f04613e61565b5060051b60200190565b600082601f830112613f1f57600080fd5b81356020613f2c82613eea565b60408051613f3a8382613ebd565b84815260609485028701840194848201935088861115613f5957600080fd5b8488015b86811015613fa15781818b031215613f755760008081fd5b8351613f8081613e77565b81358152868201358782015284820135858201528552938501938101613f5d565b509098975050505050505050565b600060408284031215613fc157600080fd5b604051613fcd81613e9d565b809150823567ffffffffffffffff80821115613fe857600080fd5b613ff486838701613f0e565b8352602085013591508082111561400a57600080fd5b5061401785828601613f0e565b6020830152505092915050565b600060808284031215610bfd57600080fd5b60008060008060e0858703121561404c57600080fd5b843567ffffffffffffffff81111561406357600080fd5b61406f87828801613faf565b94505061407f8660208701614024565b939693955050505060a08201359160c0013590565b8035600281106140a357600080fd5b919050565b6000602082840312156140ba57600080fd5b610b4c82614094565b60006101408284031215610bfd57600080fd5b600061014082840312156140e957600080fd5b610b4c83836140c3565b60008060008060008060008060006101208a8c03121561411257600080fd5b505087359960208901359950604089013598606081013598506080810135975060a0810135965060c0810135955060e08101359450610100013592509050565b600081518084526020808501945080840160005b838110156141985781518051885283810151848901526040908101519088015260609096019590820190600101614166565b509495945050505050565b6020815260008251604060208401526141bf6060840182614152565b90506020840151601f198483030160408501526114458282614152565b60008060008060008060c087890312156141f557600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000806040838503121561423257600080fd5b50508035926020909101359150565b6001600160a01b03811681146116f457600080fd5b60006020828403121561426857600080fd5b8135610b4c81614241565b6000806040838503121561428657600080fd5b82359150602083013561429881614241565b809150509250929050565b600080604083850312156142b657600080fd5b6142bf83614094565b946020939093013593505050565b60008060008060008060c087890312156142e657600080fd5b863595506020870135945060408701359350606087013592506080870135915060a087013561431481614241565b809150509295509295509295565b6000806040838503121561433557600080fd5b823561434081614241565b9150602083013561429881614241565b60008060006060848603121561436557600080fd5b8335925060208401359150604084013561437e81614241565b809150509250925092565b60006060828403121561439b57600080fd5b6040516143a781613e77565b80915082356143b581614241565b815260208301356143c581614241565b6020820152604092830135920191909152919050565b600080608083850312156143ee57600080fd5b6143f88484614389565b946060939093013593505050565b600060408284031215610bfd57600080fd5b60006020828403121561442a57600080fd5b813567ffffffffffffffff81111561444157600080fd5b6124dd84828501614406565b600080610180838503121561446157600080fd5b61446b84846140c3565b915061447b846101408501614406565b90509250929050565b60008060006060848603121561449957600080fd5b83356144a481614241565b925060208401356144b481614241565b929592945050506040919091013590565b6000806000806000806000806000806101a08b8d0312156144e557600080fd5b8a35995060208b0135985060408b0135975060608b0135965060808b0135955060a08b0135945060c08b013593506145208c60e08d01614024565b92506101608b013591506101808b013590509295989b9194979a5092959850565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161457f5761457f614557565b5060010190565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b6000602082840312156145cf57600080fd5b5051919050565b600082601f8301126145e757600080fd5b815160206145f482613eea565b604080516146028382613ebd565b8481526060948502870184019484820193508886111561462157600080fd5b8488015b86811015613fa15781818b03121561463d5760008081fd5b835161464881613e77565b81518152868201518782015284820151858201528552938501938101614625565b60006020828403121561467b57600080fd5b815167ffffffffffffffff8082111561469357600080fd5b90830190604082860312156146a757600080fd5b6040516146b381613e9d565b8251828111156146c257600080fd5b6146ce878286016145d6565b8252506020830151828111156146e357600080fd5b6146ef878286016145d6565b60208301525095945050505050565b60006020828403121561471057600080fd5b81518015158114610b4c57600080fd5b80516001600160a01b03908116835260208083015190911690830152604090810151910152565b608081016147558285614720565b8260608301529392505050565b8082018082111561159457611594614557565b818103600083128015838313168383128216171561159257611592614557565b60006115943683613faf565b634e487b7160e01b600052602160045260246000fd5b6000606082840312156147c957600080fd5b610b4c8383614389565b6000602082840312156147e557600080fd5b81356001600160701b0381168114610b4c57600080fd5b60006020828403121561480e57600080fd5b81356001600160581b0381168114610b4c57600080fd5b60006020828403121561483757600080fd5b813563ffffffff81168114610b4c57600080fd5b60006020828403121561485d57600080fd5b813562ffffff81168114610b4c57600080fd5b8181038181111561159457611594614557565b606081016115948284614720565b60005b838110156148ac578181015183820152602001614894565b50506000910152565b600082516148c7818460208701614891565b9190910192915050565b60a081016148df8286614720565b8360608301528215156080830152949350505050565b604080825283519082018190526000906020906060840190828701845b828110156149375781516001600160a01b031684529284019290840190600101614912565b5050506001600160a01b039490941692019190915250919050565b61010081016149618289614720565b6060820196909652608081019490945260a084019290925260c083015260e090910152919050565b600060033d11156149a25760046000803e5060005160e01c5b90565b600060443d10156149b35790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156149e357505050505090565b82850191508151818111156149fb5750505050505090565b843d8701016020828501011115614a155750505050505090565b614a2460208286010187613ebd565b509095945050505050565b6020815260008251806020840152614a4e816040850160208701614891565b601f01601f19169190910160400192915050565b80516020808301519190811015610bfd5760001960209190910360031b1b16919050565b60e08101614a948288614720565b8560608301528460808301528360a08301528260c08301529695505050505050565b600082614ad357634e487b7160e01b600052601260045260246000fd5b500690565b808202811582820484141761159457611594614557565b6000600160ff1b8201614b0457614b04614557565b5060000390565b80820182811260008312801582168215821617156122b5576122b561455756fea2646970667358221220db51490e85ac4d616b9e2ff7b5dc7d2d927ebef8c376a18ac544d6ec0a38765364736f6c63430008140033",
    "sourceMap": "375:1066:109:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8197:158:99;;;;;;;;;;-1:-1:-1;8197:158:99;;;;;:::i;:::-;;:::i;:::-;;2711:311:112;;;;;;;;;;-1:-1:-1;2711:311:112;;;;;:::i;:::-;;:::i;6031:371::-;;;;;;:::i;:::-;;:::i;1205:31:114:-;;;;;;;;;;;;;;;;;;;4681:25:131;;;4669:2;4654:18;1205:31:114;;;;;;;;7364:173:112;;;;;;;;;;-1:-1:-1;7364:173:112;;;;;:::i;:::-;;:::i;4721:649:99:-;;;;;;;;;;-1:-1:-1;4721:649:99;;;;;:::i;:::-;;:::i;3395:205:112:-;;;;;;;;;;-1:-1:-1;3395:205:112;;;;;:::i;:::-;;:::i;5061:457:114:-;;;;;;;;;;-1:-1:-1;5061:457:114;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1695:34:117:-;;;;;;;;;;;;;;;8674:558:114;;;;;;:::i;:::-;;:::i;7921:161:99:-;;;;;;;;;;-1:-1:-1;7921:161:99;;;;;:::i;:::-;;:::i;1543:69::-;;;;;;;;;;;;1609:1;1543:69;;;;;-1:-1:-1;;;;;8414:32:131;;;8396:51;;8384:2;8369:18;1543:69:99;8226:227:131;11337:384:112;;;;;;;;;;-1:-1:-1;11337:384:112;;;;;:::i;:::-;;:::i;2221:167:123:-;;;;;;;;;;-1:-1:-1;2221:167:123;;;;;:::i;:::-;;:::i;9908:470:99:-;;;;;;;;;;-1:-1:-1;9908:470:99;;;;;:::i;:::-;;:::i;8178:220:113:-;;;;;;;;;;-1:-1:-1;8178:220:113;;;;;:::i;:::-;;:::i;13646:306:112:-;;;;;;;;;;-1:-1:-1;13646:306:112;;;;;:::i;:::-;;:::i;3405:277:99:-;;;;;;;;;;-1:-1:-1;3405:277:99;;;;;:::i;:::-;;:::i;11030:125:112:-;;;;;;;;;;-1:-1:-1;11030:125:112;;;;;:::i;:::-;;:::i;1473:30:99:-;;;;;;;;;;;;;;;1606:29:117;;;;;;;;;;;;;;;1330:37:99;;;;;;;;;;;;;;;12196:221:112;;;;;;;;;;-1:-1:-1;12196:221:112;;;;;:::i;:::-;;:::i;1874:344:114:-;;;;;;;;;;-1:-1:-1;1874:344:114;;;;;:::i;:::-;;:::i;4500:154:106:-;;;;;;;;;;-1:-1:-1;4500:154:106;;;;;:::i;:::-;;:::i;7186:223:113:-;;;;;;;;;;-1:-1:-1;7186:223:113;;;;;:::i;:::-;;:::i;6977:203:112:-;;;;;;;;;;-1:-1:-1;6977:203:112;;;;;:::i;:::-;;:::i;1786:176:115:-;;;;;;;;;;-1:-1:-1;1786:176:115;;;;;:::i;:::-;;:::i;7512:127:99:-;;;;;;;;;;-1:-1:-1;7512:127:99;;;;;:::i;:::-;;:::i;6005:568::-;;;;;;;;;;-1:-1:-1;6005:568:99;;;;;:::i;:::-;;:::i;3260:111::-;;;;;;;;;;;;;:::i;2618:20:112:-;;;;;;;;;;-1:-1:-1;2618:20:112;;;;;;;;-1:-1:-1;;;2618:20:112;;;;;-1:-1:-1;;;2618:20:112;;-1:-1:-1;;;;;2618:20:112;;-1:-1:-1;;;2618:20:112;;-1:-1:-1;;;;;2618:20:112;;;;;;;14262:10:131;14250:23;;;14232:42;;14322:8;14310:21;;;14305:2;14290:18;;14283:49;-1:-1:-1;;;;;14368:37:131;;;14348:18;;;14341:65;;;;-1:-1:-1;;;;;14442:43:131;14437:2;14422:18;;14415:71;14219:3;14204:19;2618:20:112;14007:485:131;8633:206:113;;;;;;;;;;-1:-1:-1;8633:206:113;;;;;:::i;:::-;;:::i;7673:214:99:-;;;;;;;;;;-1:-1:-1;7673:214:99;;;;;:::i;:::-;;:::i;:::-;;;15136:14:131;;15129:22;15111:41;;15099:2;15084:18;7673:214:99;14971:187:131;6971:572:114;;;;;;:::i;:::-;;:::i;2133:180:115:-;;;;;;;;;;-1:-1:-1;2133:180:115;;;;;:::i;:::-;;:::i;1524:28:117:-;;;;;;;;;;;;;;;1989:79:123;;;;;;;;;;-1:-1:-1;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;1989:79;;3136:90:99;;;;;;;;;;-1:-1:-1;3213:8:99;;-1:-1:-1;;;;;3213:8:99;3136:90;;1430:35:106;;;;;;;;;;;;;;;3103:189:112;;;;;;;;;;-1:-1:-1;3103:189:112;;;;;:::i;:::-;;:::i;8197:158:99:-;8276:6;8271:80;8288:17;;;8271:80;;;8320:24;8334:6;;8341:1;8334:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8320:13;:24::i;:::-;8307:3;;;:::i;:::-;;;8271:80;;;;8197:158;;:::o;2711:311:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;;;;;;;;;2796:8:112;2819:12;2811:46:::1;;;::::0;-1:-1:-1;;;2811:46:112;;17481:2:131;2811:46:112::1;::::0;::::1;17463:21:131::0;17520:2;17500:18;;;17493:30;-1:-1:-1;;;17539:18:131;;;17532:51;17600:18;;2811:46:112::1;17279:345:131::0;2811:46:112::1;2884:8;2871:9;-1:-1:-1::0;;;;;2871:21:112::1;;:54;;;;-1:-1:-1::0;2907:6:112::1;:18:::0;-1:-1:-1;;;2907:18:112;::::1;-1:-1:-1::0;;;;;2907:18:112::1;2896:29:::0;::::1;2871:54;2863:89;;;::::0;-1:-1:-1;;;2863:89:112;;17831:2:131;2863:89:112::1;::::0;::::1;17813:21:131::0;17870:2;17850:18;;;17843:30;-1:-1:-1;;;17889:18:131;;;17882:52;17951:18;;2863:89:112::1;17629:346:131::0;2863:89:112::1;2958:6;:27:::0;;-1:-1:-1;;2958:27:112::1;-1:-1:-1::0;;;;;;;;2958:27:112;::::1;;;::::0;;2996:21:::1;::::0;4681:25:131;;;2996:21:112::1;::::0;4669:2:131;4654:18;2996:21:112::1;;;;;;;;2764:258;2711:311:::0;:::o;6031:371::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;6195:9:112::1;:13:::0;6191:62:::1;;6218:3;-1:-1:-1::0;;;;;6218:8:112::1;;6234:9;6218:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;6191:62;6258:21;6268:10;6258:9;:21::i;:::-;6286:37;6299:10;6311:11;6286:12;:37::i;:::-;6366:6;:13:::0;6330:67:::1;::::0;6352:12;;6366:13:::1;-1:-1:-1::0;;;6366:13:112;::::1;;::::0;6381:15:::1;;6330:21;:67::i;:::-;6031:371:::0;;;;:::o;7364:173::-;7431:12;7451;7466:23;7486:2;7466:19;:23::i;:::-;7502:30;;-1:-1:-1;;;7502:30:112;;7526:4;7502:30;;;8396:51:131;7451:38:112;;-1:-1:-1;;;;;;7502:15:112;;;;;8369:18:131;;7502:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7495:37;7364:173;-1:-1:-1;;;7364:173:112:o;4721:649:99:-;4846:11;4827:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;12674:12:99;;-1:-1:-1;5299:32:99::1;5307:5;:16;;;5325:5;5299:7;:32::i;:::-;:37:::0;5291:74:::1;;;::::0;-1:-1:-1;;;5291:74:99;;18724:2:131;5291:74:99::1;::::0;::::1;18706:21:131::0;18763:2;18743:18;;;18736:30;18802:26;18782:18;;;18775:54;18846:18;;5291:74:99::1;18522:348:131::0;5291:74:99::1;4721:649:::0;;;;:::o;3395:205:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;3474:6:112;3495:17:::1;::::0;::::1;::::0;::::1;3487:50;;;::::0;-1:-1:-1;;;3487:50:112;;19077:2:131;3487:50:112::1;::::0;::::1;19059:21:131::0;19116:2;19096:18;;;19089:30;-1:-1:-1;;;19135:18:131;;;19128:50;19195:18;;3487:50:112::1;18875:344:131::0;3487:50:112::1;3543:6;:23:::0;;-1:-1:-1;;3543:23:112::1;-1:-1:-1::0;;;3543:23:112::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;3577:18:::1;::::0;19369:40:131;;;3577:18:112::1;::::0;19357:2:131;19342:18;3577::112::1;19224:191:131::0;5061:457:114;-1:-1:-1;;;;;;;;;;;;;;;;5353:160:114;;-1:-1:-1;;;5353:160:114;;;;;19823:25:131;;;19864:18;;;19857:34;;;19907:18;;;19900:34;;;19950:18;;;19943:34;;;19993:19;;;19986:35;;;20037:19;;;20030:35;;;20081:19;;;20074:35;;;20125:19;;;20118:35;;;20169:19;;;20162:35;;;5353:9:114;;:37;;19795:19:131;;5353:160:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5353:160:114;;;;;;;;;;;;:::i;:::-;5346:167;5061:457;-1:-1:-1;;;;;;;;;;5061:457:114:o;8674:558::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;8862:33:114::1;::::0;;::::1;::::0;::::1;::::0;;8889:6:::1;8862:33:::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;8862:33:114;::::1;;;;::::0;::::1;::::0;-1:-1:-1;;;8862:33:114;::::1;-1:-1:-1::0;;;;;8862:33:114::1;::::0;;;;;;-1:-1:-1;;;8862:33:114;::::1;-1:-1:-1::0;;;;;8862:33:114::1;::::0;;;;;;9011:19:::1;::::0;8862:33;;-1:-1:-1;;8936:210:114::1;::::0;8962:4;;8974:2;;8984:19;;9011;;9038:13;;9059:8;;9075;;8862:33;8936:18:::1;:210::i;:::-;8901:245;;9152:75;9174:12;9188:10;:17;;;9152:75;;9207:10;:19;;;9152:75;;:21;:75::i;:::-;8856:376;;8674:558:::0;;;;;;:::o;7921:161:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;8004:6:99::1;7999:79;8016:17:::0;;::::1;7999:79;;;8048:23;8061:6;;8068:1;8061:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;8048:12;:23::i;:::-;8035:3;::::0;::::1;:::i;:::-;;;7999:79;;11337:384:112::0;11423:74;11453:4;11459:10;11479:4;11486:10;11423:29;:74::i;:::-;11415:110;;;;-1:-1:-1;;;11415:110:112;;22477:2:131;11415:110:112;;;22459:21:131;22516:2;22496:18;;;22489:30;22555:25;22535:18;;;22528:53;22598:18;;11415:110:112;22275:347:131;11415:110:112;11543:4;-1:-1:-1;;;;;11536:24:112;;11549:10;11536:24;;;;4681:25:131;;4669:2;4654:18;;4535:177;11536:24:112;;;;;;;;11574:76;11604:5;11611:10;11631:4;11638:11;11574:29;:76::i;:::-;11566:113;;;;-1:-1:-1;;;11566:113:112;;22829:2:131;11566:113:112;;;22811:21:131;22868:2;22848:18;;;22841:30;22907:26;22887:18;;;22880:54;22951:18;;11566:113:112;22627:348:131;11566:113:112;11697:5;-1:-1:-1;;;;;11690:26:112;;11704:11;11690:26;;;;4681:25:131;;4669:2;4654:18;;4535:177;11690:26:112;;;;;;;;11337:384;;:::o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;23182:2:131;2278:57:123::1;::::0;::::1;23164:21:131::0;23221:2;23201:18;;;23194:30;23260:26;23240:18;;;23233:54;23304:18;;2278:57:123::1;22980:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;8396:51:131;;;2367:16:123::1;::::0;8384:2:131;8369:18;2367:16:123::1;;;;;;;;2221:167:::0;:::o;9908:470:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;10004:6:99::1;:24:::0;10000:82:::1;;10047:28;::::0;-1:-1:-1;;;10047:28:99;;10069:4:::1;10047:28;::::0;::::1;8396:51:131::0;10047:3:99::1;-1:-1:-1::0;;;;;10047:13:99::1;::::0;::::1;::::0;8369:18:131;;10047:28:99::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10038:37;;10000:82;10174:20;::::0;-1:-1:-1;;;10174:20:99;;::::1;::::0;::::1;4681:25:131::0;;;10174:3:99::1;-1:-1:-1::0;;;;;10174:12:99::1;::::0;::::1;::::0;4654:18:131;;10174:20:99::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10166:54;;;::::0;-1:-1:-1;;;10166:54:99;;23817:2:131;10166:54:99::1;::::0;::::1;23799:21:131::0;23856:2;23836:18;;;23829:30;-1:-1:-1;;;23875:18:131;;;23868:51;23936:18;;10166:54:99::1;23615:345:131::0;10166:54:99::1;10227:13;10245:8;-1:-1:-1::0;;;;;10245:13:99::1;10266:6;10245:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10226:51;;;10336:8;10328:45;;;::::0;-1:-1:-1;;;10328:45:99;;24377:2:131;10328:45:99::1;::::0;::::1;24359:21:131::0;24416:2;24396:18;;;24389:30;24455:26;24435:18;;;24428:54;24499:18;;10328:45:99::1;24175:348:131::0;8178:220:113;8243:11;8262:12;8277:25;8292:2;8296:5;8277:14;:25::i;:::-;8262:40;;8308:18;8329:24;8350:2;8329:20;:24::i;:::-;8367:26;;-1:-1:-1;;;8367:26:113;;8308:45;;-1:-1:-1;;;;;;8367:3:113;:10;;;;:26;;8308:45;;8385:7;;8367:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8359:34;8178:220;-1:-1:-1;;;;;8178:220:113:o;13646:306:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;13823:23:112::1;13837:4;13843:2;13823:13;:23::i;:::-;13852:49;13866:10;13878:11;13891:9;13852:13;:49::i;:::-;13907:40;13928:7;13937:9;13907:20;:40::i;:::-;13646:306:::0;;;;;;:::o;3405:277:99:-;3480:4;3492:22;3517:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;3517:8;3492:33;-1:-1:-1;;;;;;3535:20:99;;;3531:147;;3590:38;;-1:-1:-1;;;3590:38:99;;-1:-1:-1;;;;;25569:15:131;;;3590:38:99;;;25551:34:131;25621:15;;;25601:18;;;25594:43;3590:20:99;;;;;25486:18:131;;3590:38:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3572:56;;:15;:56;:::i;:::-;3565:63;;;;;3531:147;3656:15;3649:22;;;;;3531:147;3486:196;3405:277;;;;;:::o;11030:125:112:-;11084:3;11132:17;11146:2;11132:13;:17::i;:::-;11106:18;11121:2;11106:14;:18::i;:::-;11102:48;;;;:::i;12196:221::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;12304:50:112::1;12326:4;12332:10;12344:9;12304:21;:50::i;:::-;12360:52;12382:5;12389:11;12402:9;12360:21;:52::i;1874:344:114:-:0;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;1996:20:114::1;1971;1964:52;;;1956:89;;;::::0;-1:-1:-1;;;1956:89:114;;26185:2:131;1956:89:114::1;::::0;::::1;26167:21:131::0;26224:2;26204:18;;;26197:30;26263:26;26243:18;;;26236:54;26307:18;;1956:89:114::1;25983:348:131::0;1956:89:114::1;2078:20;2055:19;;:43;2051:163;;2108:19;:42:::0;;;2163:44:::1;::::0;4681:25:131;;;2163:44:114::1;::::0;4669:2:131;4654:18;2163:44:114::1;4535:177:131::0;2051:163:114::1;1874:344:::0;:::o;4500:154:106:-;4587:14;4621:28;4634:5;4641:7;4621:12;:28::i;7186:223:113:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7257:14:113::1;::::0;::::1;::::0;;;::::1;7277:49;7302:4;7308:2;7312:13;7277:24;:49::i;:::-;7332;7357:4;7363:2;7367:13;7332:24;:49::i;:::-;7392:12;::::0;::::1;::::0;;;::::1;7186:223:::0;;:::o;6977:203:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7061:33:112::1;::::0;;::::1;::::0;::::1;::::0;;7088:6:::1;7061:33:::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;7061:33:112;::::1;;;;::::0;::::1;::::0;-1:-1:-1;;;7061:33:112;::::1;-1:-1:-1::0;;;;;7061:33:112::1;::::0;;;;;;;-1:-1:-1;;;7061:33:112;;::::1;-1:-1:-1::0;;;;;7061:33:112::1;::::0;;;;7100:75:::1;;7122:12:::0;7100:75:::1;:::i;:::-;7136:10;:17;;;7100:75;;7155:10;:19;;;7100:75;;:21;:75::i;:::-;7055:125;6977:203:::0;:::o;1786:176:115:-;1857:12;1890:13;1884:2;:19;;;;;;;;:::i;:::-;;:73;;1933:24;;;;:17;:24;;;;;;1884:73;;;-1:-1:-1;1906:24:115;;;;:17;:24;;;;;;;1786:176;-1:-1:-1;1786:176:115:o;7512:127:99:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7587:8:99::1;:18:::0;;-1:-1:-1;;;;;;7587:18:99::1;-1:-1:-1::0;;;;;7587:18:99;::::1;::::0;;::::1;::::0;;;7616::::1;::::0;8396:51:131;;;7616:18:99::1;::::0;8384:2:131;8369:18;7616::99::1;8226:227:131::0;6005:568:99;6148:3;1459:10:123;-1:-1:-1;;;;;1459:20:123;;;1451:57;;;;-1:-1:-1;;;1451:57:123;;;;;;;:::i;:::-;6166:6:99::1;:14;;;-1:-1:-1::0;;;6166:36:99;6162:407:::1;;6212:44;6232:5:::0;6239:16;::::1;6212:19;:44::i;6162:407::-;6369:13;::::0;::::1;;6349:18;:16;;::::0;;::::1;::::0;::::1;6369:5:::0;6349:16:::1;:::i;:::-;1552:2:47::0;1535:20;;;1419:146;6349:18:99::1;6337:80;::::0;;6384:16;::::1;27086:25:131::0;;6402:14:99::1;::::0;;::::1;;27127:18:131::0;;;27120:34;6337:80:99::1;::::0;27059:18:131;6337:80:99::1;;;;;;;8271::::0;8197:158;;:::o;3260:111::-;3304:4;3323:43;3350:1;3363;3323:11;:43::i;:::-;3316:50;;3260:111;:::o;8633:206:113:-;8691:11;;8710:125;8739:6;;8731:5;:14;8710:125;;;8764:11;8778:19;8787:2;8791:5;8778:8;:19::i;:::-;8764:33;-1:-1:-1;8805:23:113;-1:-1:-1;;;;;5058:66:56;;;;;8805:23:113;;:::i;:::-;;;8756:79;8747:7;;;;:::i;:::-;;;8710:125;;7673:214:99;7769:4;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7789:48:99::1;7814:5;7821:7;7830:6;7789:24;:48::i;:::-;7781:84;;;::::0;-1:-1:-1;;;7781:84:99;;27367:2:131;7781:84:99::1;::::0;::::1;27349:21:131::0;27406:2;27386:18;;;27379:30;27445:25;27425:18;;;27418:53;27488:18;;7781:84:99::1;27165:347:131::0;7781:84:99::1;-1:-1:-1::0;7878:4:99::1;7673:214:::0;;;;;:::o;6971:572:114:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;7264:9:114::1;:13:::0;7260:62:::1;;7287:3;-1:-1:-1::0;;;;;7287:8:114::1;;7303:9;7287:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;7260:62;7327:21;7337:10;7327:9;:21::i;:::-;7354:44;7377:20;7354:22;:44::i;:::-;7405:37;7418:10;7430:11;7405:12;:37::i;:::-;7449:89;7473:4;7479:2;7483:19;7504:13;7519:8;7529;7449:23;:89::i;:::-;6971:572:::0;;;;;;;;;;:::o;2133:180:115:-;2206:10;2237:13;2231:2;:19;;;;;;;;:::i;:::-;;:77;;2282:26;;;;:17;:26;;;;;;2231:77;;;-1:-1:-1;2253:26:115;;;;:17;:26;;;;;;;2133:180;-1:-1:-1;2133:180:115:o;3103:189:112:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;3181:7:112::1;3170:8;:18;3162:53;;;::::0;-1:-1:-1;;;3162:53:112;;27719:2:131;3162:53:112::1;::::0;::::1;27701:21:131::0;27758:2;27738:18;;;27731:30;-1:-1:-1;;;27777:18:131;;;27770:52;27839:18;;3162:53:112::1;27517:346:131::0;3162:53:112::1;3221:6;:34:::0;;-1:-1:-1;;3221:34:112::1;;::::0;::::1;;::::0;;3266:21:::1;::::0;4681:25:131;;;3266:21:112::1;::::0;4669:2:131;4654:18;3266:21:112::1;4535:177:131::0;6942:189:106;7016:26;7036:5;7016:19;:26::i;:::-;1609:1:99;7052:8:106;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;7052:8:106;-1:-1:-1;;;;;7052:21:106;;7048:79;;3213:8:99;;-1:-1:-1;;;;;3213:8:99;7083:37:106;;-1:-1:-1;;;7083:37:106;;-1:-1:-1;;;;;25569:15:131;;;7083:37:106;;;25551:34:131;7109:10:106;25621:15:131;;25601:18;;;25594:43;7083:18:106;;;;;;;25486::131;;7083:37:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6942:189;:::o;3698:738:112:-;3759:32;;;;;;;;;3785:6;3759:32;;;;;;-1:-1:-1;;;3759:32:112;;;;;;;;-1:-1:-1;;;3759:32:112;;-1:-1:-1;;;;;3759:32:112;;;;;;;;-1:-1:-1;;;3759:32:112;;;-1:-1:-1;;;;;3759:32:112;;;;;;;;;;;3827:21;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3802:46:112;:9;:21;;;-1:-1:-1;;;;;3802:46:112;;3798:296;;3858:20;3889:21;;;;;;;;:::i;:::-;3858:53;-1:-1:-1;3943:21:112;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3927:37:112;:12;-1:-1:-1;;;;;3927:37:112;;:58;;;;;3984:1;3968:12;-1:-1:-1;;;;;3968:17:112;;;3927:58;3919:96;;;;-1:-1:-1;;;3919:96:112;;28372:2:131;3919:96:112;;;28354:21:131;28411:2;28391:18;;;28384:30;28450:27;28430:18;;;28423:55;28495:18;;3919:96:112;28170:349:131;3919:96:112;4023:23;4033:12;-1:-1:-1;;;;;4023:23:112;:9;:23::i;:::-;4054:6;:33;;-1:-1:-1;;;;;4054:33:112;;;-1:-1:-1;;;4054:33:112;;;;;;;;;;;3798:296;4126:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:40:112;:9;:18;;;-1:-1:-1;;;;;4104:40:112;;4100:92;;4154:31;4166:18;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4154:31:112;:11;:31::i;:::-;4202:18;;;;:9;:18;:::i;:::-;:23;;;;;;:67;;-1:-1:-1;4251:18:112;;4229:40;;:18;;;;:9;:18;:::i;:::-;:40;;;;4202:67;4198:119;;;4279:31;4291:18;;;;:9;:18;:::i;:::-;4279:31;;:11;:31::i;:::-;4327:16;;;;;;;;:::i;:::-;:21;;;;;;:61;;;4372:9;:16;;;4352:36;;:9;:16;;;;;;;;;;:::i;:::-;:36;;;;4327:61;4323:109;;;4398:27;4408:16;;;;;;;;:::i;:::-;4398:27;;:9;:27::i;2847:682:113:-;2960:15;;;;;;;3021:21;;:::i;:::-;3160:11;;;:20;;;3186:13;;;:24;;;3251:35;-1:-1:-1;3251:20:113;:35::i;:::-;3238:48;;3323:17;;;;3292:70;;3238:10;:4;3292:30;:70::i;:::-;3403:10;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1727:63:47;;;;;;;1733:17;;;;-1:-1:-1;;;;;1727:63:47;;;;;1752:18;;1727:63;;;;;;;;1772:17;;;;1727:63;;;;3390:33:113;;3460:17;;3429:70;;3479:13;3390:4;3429:30;:70::i;:::-;3511:13;;;;;;;2949:580;2847:682;;;:::o;3053:142:117:-;3128:12;3162:13;3156:2;:19;;;;;;;;:::i;:::-;;:34;;3185:5;3156:34;;;3178:4;3148:42;3053:142;-1:-1:-1;;3053:142:117:o;5244:773:106:-;5344:4;;5378:24;;;;:5;:24;:::i;:::-;5371:57;;-1:-1:-1;;;5371:57:106;;5422:4;5371:57;;;8396:51:131;-1:-1:-1;;;;;5371:42:106;;;;;;;8369:18:131;;5371:57:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5356:72;;5449:6;5438:7;:17;5434:46;;5472:1;5465:8;;;;;5434:46;5495:16;5504:7;5495:6;:16;:::i;:::-;5485:26;;5517:22;5542:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;5542:8:106;5517:33;-1:-1:-1;;;;;;5560:20:106;;5556:457;;-1:-1:-1;5597:7:106;-1:-1:-1;5590:14:106;;5556:457;5841:11;-1:-1:-1;;;;;5855:12:106;;;5875:24;;;;:5;:24;:::i;:::-;5855:96;;-1:-1:-1;;;;;;5855:96:106;;;;;;;-1:-1:-1;;;;;29806:15:131;;;5855:96:106;;;29788:34:131;5902:10:106;5923:27;;;29838:18:131;;;29831:43;;;29890:18;;;29883:34;;;5945:4:106;5923:27;;29933:18:131;;;29926:50;29722:19;;5855:96:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5841:110;;5976:7;5966:6;:17;;:40;;5990:16;6000:6;5990:7;:16;:::i;:::-;5966:40;;;5986:1;5966:40;5959:47;;;;;;;5556:457;5350:667;;5244:773;;;;:::o;8617:808:99:-;8676:22;8701:8;3213;;-1:-1:-1;;;;;3213:8:99;;3136:90;8701:8;8676:33;;8824:61;8849:5;8864:3;-1:-1:-1;;8824:24:99;:61::i;:::-;8816:103;;;;-1:-1:-1;;;8816:103:99;;30189:2:131;8816:103:99;;;30171:21:131;30228:2;30208:18;;;30201:30;30267:31;30247:18;;;30240:59;30316:18;;8816:103:99;29987:353:131;8816:103:99;-1:-1:-1;;;;;8929:20:99;;;8925:496;;9067:65;9092:5;9107:7;-1:-1:-1;;9067:24:99;:65::i;:::-;9059:104;;;;-1:-1:-1;;;9059:104:99;;30547:2:131;9059:104:99;;;30529:21:131;30586:2;30566:18;;;30559:30;30625:28;30605:18;;;30598:56;30671:18;;9059:104:99;30345:350:131;9059:104:99;9391:23;;-1:-1:-1;;;9391:23:99;;-1:-1:-1;;;;;8414:32:131;;;9391:23:99;;;8396:51:131;9391:16:99;;;;;8369:18:131;;9391:23:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2297:483:5;2405:4;2421:6;2431:1;2421:11;2417:43;;-1:-1:-1;2449:4:5;2442:11;;2417:43;2480:9;-1:-1:-1;;;;;2469:20:5;:7;-1:-1:-1;;;;;2469:20:5;;2465:82;;2506:24;;-1:-1:-1;;;2506:24:5;;-1:-1:-1;;;;;8414:32:131;;;2506:24:5;;;8396:51:131;2534:6:5;;2506:15;;;;;;8369:18:131;;2506:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;2499:41;;;;2465:82;2641:4;-1:-1:-1;;;;;2622:24:5;;;2618:92;;2663:40;2678:5;2685:9;2696:6;2663:14;:40::i;:::-;2656:47;;;;2618:92;2722:53;2741:5;2748:7;2757:9;2768:6;2722:18;:53::i;:::-;2715:60;;2297:483;;;;;;;:::o;2547:251:117:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;2656:2:117;:19;;;;;;;;:::i;:::-;;:137;;2743:50;;;;;;;;2757:4;-1:-1:-1;;;;;2743:50:117;;;;;2772:5;-1:-1:-1;;;;;2743:50:117;;;;;2780:12;2743:50;;;2656:137;;;2684:50;;;;;;;;2698:5;-1:-1:-1;;;;;2684:50:117;;;;;2714:4;-1:-1:-1;;;;;2684:50:117;;;;;2721:12;2684:50;;;2649:144;2547:251;-1:-1:-1;;2547:251:117:o;12731:308:112:-;-1:-1:-1;;12835:6:112;:24;12831:84;;12878:30;;-1:-1:-1;;;12878:30:112;;12902:4;12878:30;;;8396:51:131;-1:-1:-1;;;;;12878:15:112;;;;;8369:18:131;;12878:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12869:39;;12831:84;12928:51;12954:5;12961:9;12972:6;12928:25;:51::i;:::-;12920:83;;;;-1:-1:-1;;;12920:83:112;;30902:2:131;12920:83:112;;;30884:21:131;30941:2;30921:18;;;30914:30;-1:-1:-1;;;30960:18:131;;;30953:49;31019:18;;12920:83:112;30700:343:131;12920:83:112;13020:5;-1:-1:-1;;;;;13014:20:112;;13027:6;13014:20;;;;4681:25:131;;4669:2;4654:18;;4535:177;13014:20:112;;;;;;;;12731:308;;;:::o;17606:289:99:-;17685:14;17707:23;17733:3;-1:-1:-1;;;;;17733:16:99;;17750:5;17757:7;17733:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17707:58;-1:-1:-1;5160:74:57;;;;;;17833:27:99;:11;:25;:27::i;:::-;:50;6080:78:57;;;;;;17801:83:99;17826:3;17801:83;;17606:289;-1:-1:-1;;;;17606:289:99:o;7622:377:113:-;7705:18;7726:24;7747:2;7726:20;:24::i;:::-;7705:45;-1:-1:-1;7774:4:113;7756:239;7788:2;7780:5;:10;7756:239;;;7869:12;7884:25;7899:2;7903:5;7884:14;:25::i;:::-;7869:40;-1:-1:-1;7921:12:113;;7917:72;;7945:35;7959:5;7966:7;7975:4;7945:13;:35::i;:::-;;7917:72;-1:-1:-1;7792:7:113;;;:::i;:::-;;;7756:239;;1175:264:109;1309:20;1339:31;1364:5;1339:24;:31::i;:::-;1391:43;1417:5;1424:9;1391:25;:43::i;5061:145:5:-;5145:4;5164:37;5178:5;5185:7;5194:6;5164:13;:37::i;9710:164:99:-;9783:44;;-1:-1:-1;;;9783:44:99;;9807:4;9783:44;;;25551:34:131;-1:-1:-1;;;;;9822:3:99;25621:15:131;;25601:18;;;25594:43;-1:-1:-1;;9783:15:99;;;;;;25486:18:131;;9783:44:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;9775:94;;;;-1:-1:-1;;;9775:94:99;;31781:2:131;9775:94:99;;;31763:21:131;31820:2;31800:18;;;31793:30;31859:34;31839:18;;;31832:62;-1:-1:-1;;;31910:18:131;;;31903:31;31951:19;;9775:94:99;31579:397:131;2911:98:115;2959:6;:16;;;2986:18;;4681:25:131;;;2986:18:115;;4669:2:131;4654:18;2986::115;4535:177:131;3781:580:113;3938:10;;3928:21;;-1:-1:-1;;;3928:21:113;;3914:11;;-1:-1:-1;;;;;3928:3:113;:9;;;;:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3914:35;;4009:13;4025:63;4066:21;:5;:19;:21::i;:::-;4052:4;:11;;;:35;;;;:::i;:::-;10051:70:55;;;;;;4025:26:113;;:63::i;:::-;4009:79;;4099:6;4094:263;4111:6;:13;4107:1;:17;4094:263;;;4139:30;4172:6;4179:1;4172:9;;;;;;;;:::i;:::-;;;;;;;;;;;;4202:11;;4233:10;;;;4221:9;;;:22;;;;4264:11;;;;;4251:10;;;:24;4172:9;-1:-1:-1;4283:67:113;4297:2;4301:25;4297:2;4202:11;4301:14;:25::i;:::-;4328:5;4335:4;4341:8;4283:13;:67::i;:::-;4131:226;;4126:3;;;;:::i;:::-;;;4094:263;;1241:629:5;1726:66;;-1:-1:-1;;;;;32636:32:131;;;1726:66:5;;;32618:51:131;32685:18;;;32678:34;;;1328:4:5;;;;;;1706:19;;;;-1:-1:-1;;;1749:23:5;32591:18:131;;1726:66:5;;;;-1:-1:-1;;1726:66:5;;;;;;;;;;;;;;-1:-1:-1;;;;;1726:66:5;-1:-1:-1;;;;;;1726:66:5;;;;;;;;;;1706:87;;;;1726:66;1706:87;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:129;;;;1807:7;:57;;;;-1:-1:-1;1819:11:5;;:16;;:44;;;1850:4;1839:24;;;;;;;;;;;;:::i;:::-;1799:66;1241:629;-1:-1:-1;;;;;;1241:629:5:o;3207:665::-;3715:79;;;-1:-1:-1;;;;;33528:15:131;;;3715:79:5;;;33510:34:131;33580:15;;;33560:18;;;33553:43;33612:18;;;;33605:34;;;3715:79:5;;;;;;;;;;33445:18:131;;;;3715:79:5;;;;;;;-1:-1:-1;;;;;3715:79:5;-1:-1:-1;;;3715:79:5;;;3695:100;;-1:-1:-1;;;;;;3695:19:5;;;;:100;;3715:79;3695:100;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:142;;;;3809:7;:57;;;;-1:-1:-1;3821:11:5;;:16;;:44;;;3852:4;3841:24;;;;;;;;;;;;:::i;:::-;3801:66;3207:665;-1:-1:-1;;;;;;;3207:665:5:o;634:294::-;721:4;737:6;747:1;737:11;733:43;;-1:-1:-1;765:4:5;758:11;;733:43;806:4;-1:-1:-1;;;;;785:26:5;;;781:90;;828:26;;-1:-1:-1;;;828:26:5;;-1:-1:-1;;;;;8414:32:131;;;828:26:5;;;8396:51:131;858:6:5;;828:15;;;;;;8369:18:131;;828:26:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;821:43;;;;781:90;883:40;898:5;905:9;916:6;883:14;:40::i;231:146:10:-;302:4;5589:98:57;;;;;;333:32:10;368:3;333:38;;231:146;-1:-1:-1;;231:146:10:o;4170:297:106:-;4417:45;;-1:-1:-1;;;4417:45:106;;4387:12;;-1:-1:-1;;;;;4417:3:106;:16;;;;:45;;4434:5;;4441:7;;4450:11;;4417:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8418:554:112:-;8502:12;8517:53;8544:24;;;;:5;:24;:::i;:::-;8517:19;:53::i;:::-;8502:68;;8685:12;8699:21;8724:25;8739:2;8743:5;8724:14;:25::i;:::-;8684:65;;;;8852:25;8880:27;8893:4;8899:7;8880:12;:27::i;:::-;8852:55;;8913:54;8934:7;8943:4;8949:17;8913:20;:54::i;6144:656:106:-;6278:7;6295:22;6320:8;3213::99;;-1:-1:-1;;;;;3213:8:99;;3136:90;6320:8:106;6295:33;-1:-1:-1;;;;;;6338:20:106;;;6334:367;;6393:15;;;6406:1;6393:15;;;;;;;;6368:22;;6393:15;;;;;;;;;;-1:-1:-1;;6368:40:106;-1:-1:-1;6435:24:106;;;;:5;:24;:::i;:::-;6416:6;6423:1;6416:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6416:44:106;;;:9;;;;;;;;;;:44;6590:23;;;;;;;;;:::i;:::-;6571:6;6578:1;6571:9;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6571:43:106;;;:9;;;;;;;;;:43;6661:33;;-1:-1:-1;;;6661:33:106;;:13;;;;;;:33;;6675:6;;6683:10;;6661:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6360:341;6334:367;6752:43;6778:5;6785:9;6752:25;:43::i;4155:623:5:-;4637:63;;-1:-1:-1;;;;;32636:32:131;;;4637:63:5;;;32618:51:131;32685:18;;;32678:34;;;4239:4:5;;;;;;4617:19;;;;-1:-1:-1;;;4660:22:5;32591:18:131;;4637:63:5;32444:274:131;986:128:9;1045:4;12515:92:55;;;;;;1076:26:9;12418:195:55;4996:186:8;5064:4;5088:9;5104:17;:7;:15;:17::i;:::-;5100:21;;;-1:-1:-1;5156:5:8;5100:21;5150:12;:17;:25;;5174:1;5150:25;;;5170:1;5150:25;5134:42;;5143:2;5135:4;:10;;5134:42;5127:49;;;4996:186;;;;:::o;4846:2079:113:-;5013:7;5024:1;5013:12;5009:1912;;5073:10;;;;:14;5069:915;;5210:15;5220:4;5210:9;:15::i;:::-;-1:-1:-1;5197:28:113;-1:-1:-1;5235:35:113;5251:2;5255:5;5197:28;5235:15;:35::i;:::-;5009:1912;;5069:915;5552:10;;;:21;;;5694:15;5552:4;5694:9;:15::i;:::-;-1:-1:-1;5781:1:113;5768:10;;;:14;;;5903:10;;5681:28;;-1:-1:-1;5889:41:113;;5903:10;5681:28;;5889:13;:41::i;:::-;;5940:35;5956:2;5960:5;5967:7;5940:15;:35::i;5009:1912::-;6092:4;:10;;;6106:1;6092:15;6088:827;;6394:10;;;:21;;;6502:27;6394:4;6521:7;6502:12;:27::i;:::-;-1:-1:-1;6601:1:113;6588:10;;;:14;;;6723:10;;6709:41;;6735:7;;6709:13;:41::i;:::-;;6088:827;;;6879:27;6892:4;6898:7;6879:12;:27::i;2844:163:117:-;2926:9;2966:4;-1:-1:-1;;;;;2950:20:117;:12;-1:-1:-1;;;;;2950:20:117;;:52;;2989:13;2950:52;;;2973:13;2943:59;2844:163;-1:-1:-1;;2844:163:117:o;9284:1474:112:-;9395:16;9413:21;;:::i;:::-;9444:10;9457:33;9472:2;9476:5;:13;;;9457:14;:33::i;:::-;9496:35;;;;;;;;9525:6;9496:35;;;;;;-1:-1:-1;;;9496:35:112;;;;;;;;-1:-1:-1;;;9496:35:112;;-1:-1:-1;;;;;9496:35:112;;;;;;;;-1:-1:-1;;;9496:35:112;;;-1:-1:-1;;;;;9496:35:112;;;;;9444:46;;-1:-1:-1;;9556:8:112;9561:2;9556:4;:8::i;:::-;9537:27;;9571:14;9588:94;9619:6;9627:5;9634:12;:21;;;-1:-1:-1;;;;;9588:94:112;9657:12;:24;;;-1:-1:-1;;;;;9588:94:112;:30;:94::i;:::-;9571:111;;9703:33;9718:6;9726:9;9703:14;:33::i;:::-;9689:47;;9755:28;9776:6;9755:20;:28::i;:::-;9742:41;;;9807:35;;-1:-1:-1;;;9807:35:112;;9742:10;;-1:-1:-1;;;;;9807:3:112;:10;;;;:35;;9830:11;;9807:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9789:53;-1:-1:-1;9942:36:112;-1:-1:-1;;;;;5058:66:56;;;;;9942:16:112;;;;:36;:::i;:::-;9929:10;;;:49;;;-1:-1:-1;;;;;;9984:403:112;;;-1:-1:-1;;;;;10267:10:112;;;:28;9984:403;10441:16;:9;1421:23:56;4674:37;4717:15;4670:63;;4573:168;10441:16:112;10429:9;;;;:28;;;;10629:4;10613:13;;;:20;10693:21;;10677:37;;:13;;;:37;10734:19;;;;;10720:33;;:11;;;:33;-1:-1:-1;9284:1474:112;;10429:4;;-1:-1:-1;9284:1474:112;;-1:-1:-1;;;;9284:1474:112:o;3116:389:106:-;3202:14;3228:3;-1:-1:-1;;;;;3228:21:106;;3257:4;:9;;;3268:4;:10;;;3280:4;:9;;;3291:4;:10;;;3303:4;:11;;;3316:4;:13;;;3331:7;3228:111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3224:277;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3433:4;:13;;;3448:6;3425:30;;;;;-1:-1:-1;;;3425:30:106;;;;;;;;:::i;:::-;-1:-1:-1;3472:22:106;3486:6;3472:22;:::i;3224:277::-;;;;;;;;;;;-1:-1:-1;;;;3116:389:106;;;;:::o;7798:453:112:-;-1:-1:-1;;;7911:17:112;:35;:91;;;;7950:17;:52;;7911:91;7907:243;;;7798:453;;;:::o;7907:243::-;8172:10;;1552:2:47;1535:20;;8191:7:112;;8160:86;;;37407:26:131;37389:45;;37465:2;37450:18;;37443:34;;;8160:86:112;;37362:18:131;8160:86:112;;;;;;;;7798:453;;;:::o;15478:1256:99:-;15599:12;15659:13;15674:12;15690:25;15709:5;15690:18;:25::i;:::-;15658:57;;;;16266:8;16278:1;16266:13;:59;;;-1:-1:-1;16283:37:99;:7;16311:8;16283:27;:37::i;:::-;:42;16266:59;16262:100;;;-1:-1:-1;;;16335:20:99;;;;;;16262:100;16394:228;;;;;;;;;16374:275;;16394:228;;;;;;;;16421:5;16394:228;:::i;:::-;;;;;;;;;;;;;;;;;16498:17;;;;5160:74:57;;;;16394:228:99;;;;16544:17;;;;6080:78:57;;;;16394:228:99;;16612:1;16394:228;;;;16592:4;16394:228;;;;;16630:13;;;;16374:12;:275::i;:::-;16367:282;;16690:39;16706:5;16713:9;16724:4;16690:15;:39::i;3155:515:8:-;3212:4;1971:28;3317:42;;3313:109;;-1:-1:-1;2033:24:8;3376:39;;3155:515::o;3313:109::-;-1:-1:-1;2134:18:8;2033:24;3595:39;;3594:60;1934:1;3523:40;;;;-1:-1:-1;;3522:58:8;3593:71;;3155:515::o;2655:426:106:-;2715:12;2729:14;2755:3;-1:-1:-1;;;;;2755:18:106;;2781:4;:9;;;2792:4;:10;;;2804:4;:9;;;2815:4;:10;;;2827:4;:11;;;2840:4;:13;;;2755:99;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2755:99:106;;;;;;;;-1:-1:-1;;2755:99:106;;;;;;;;;;;;:::i;:::-;;;2751:326;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3009:4;:13;;;3024:6;3001:30;;;;;-1:-1:-1;;;3001:30:106;;;;;;;;:::i;:::-;-1:-1:-1;3048:22:106;3062:6;3048:22;:::i;:::-;3039:31;;2959:118;2655:426;;;:::o;2751:326::-;2909:8;-1:-1:-1;;;2934:17:106;-1:-1:-1;2655:426:106;-1:-1:-1;;2655:426:106:o;2487:343:115:-;2577:13;2571:2;:19;;;;;;;;:::i;:::-;;2567:213;;2600:26;;;;:17;:26;;;;;;;;:34;;;2642:24;;;:17;:24;;;;;:34;;;2567:213;;;2697:26;;;;:17;:26;;;;;;;;:34;;;2739:24;;;:17;:24;;;;;:34;;;2567:213;2806:2;2790:35;;;;;;;;:::i;:::-;;;;27086:25:131;;;27142:2;27127:18;;27120:34;;;2790:35:115;;27059:18:131;2790:35:115;26912:248:131;3364:116:117;3415:16;3473:1;3462:2;3457:8;;;;;;;;:::i;:::-;:12;;3468:1;3457:12;:::i;:::-;3456:18;;;;:::i;:::-;3446:29;;;;;;;;:::i;813:387:116:-;933:11;964:13;958:2;:19;;;;;;;;:::i;:::-;;954:242;;996:12;1004:4;996:5;:12;:::i;:::-;987:21;;1030:11;1020:6;:21;1016:70;;1062:15;1076:1;1062:11;:15;:::i;1016:70::-;954:242;;;1119:4;1110:5;:13;1106:59;;1144:12;1152:4;1144:5;:12;:::i;14189:212:99:-;14278:13;;14324:38;14346:16;;;;-1:-1:-1;;;;;14324:11:99;;;;5058:66:56;;;14324:38:99;:::i;:::-;14313:49;-1:-1:-1;14378:11:99;;;;1421:23:56;4674:37;4717:15;4670:63;14368:28:99;;14189:212;;;:::o;2156:179:12:-;2237:4;2250:8;2260;2272:19;2286:4;2272:13;:19::i;:::-;2249:42;;-1:-1:-1;2249:42:12;-1:-1:-1;2249:42:12;2305:17;2311:11;2249:42;2305:17;:::i;:::-;2304:26;;;2156:179;-1:-1:-1;;;;;2156:179:12:o;6902:576:99:-;-1:-1:-1;;;7166:12:99;:29;:63;;;;-1:-1:-1;;;7199:12:99;:30;7166:63;:114;;;;7233:12;:47;;7166:114;7155:319;;;6902:576;;;:::o;7155:319::-;7428:13;;;;7408:18;:16;;;;;;;7428:5;7408:16;:::i;:18::-;7396:71;;;27086:25:131;;;27142:2;27127:18;;27120:34;;;7396:71:99;;27059:18:131;7396:71:99;26912:248:131;10423:815:12;10480:8;10490;10537:32;10564:4;10537:26;:32::i;:::-;10524:45;;-1:-1:-1;10524:45:12;-1:-1:-1;5056:3:7;10595:33:12;;;10577:15;10777:12;10830:30;;;10826:37;-1:-1:-1;10760:30:12;;;10812:52;;-1:-1:-1;;10890:18:12;;;:47;;10949:8;;10945:177;;;11047:17;;;;10945:177;;;11108:4;11107:5;;11095:3;:18;;11089:24;;10945:177;11217:9;2943:3:7;11188:38:12;11177:50;;10506:728;;;10423:815;;;:::o;11962:2858::-;12032:8;12042;12058:12;12093:1;12085:4;12073:21;:74;;12141:4;12073:74;;;12102:18;12115:4;12102:18;:::i;:::-;12058:89;;2296:6:7;12161:7:12;:25;;12153:61;;;;-1:-1:-1;;;12153:61:12;;39030:2:131;12153:61:12;;;39012:21:131;39069:2;39049:18;;;39042:30;39108:25;39088:18;;;39081:53;39151:18;;12153:61:12;38828:347:131;12153:61:12;12221:15;12256:3;12246:13;;:18;12242:141;;12280:34;12274:40;;12242:141;;;-1:-1:-1;;;12335:41:12;;12242:141;12402:3;12392:13;;:18;12388:94;;12472:3;12427:40;:3;12433:34;12427:40;:::i;:::-;12426:49;;12420:55;;12388:94;12501:3;12491:13;;:18;12487:94;;12571:3;12526:40;:3;12532:34;12526:40;:::i;:::-;12525:49;;12519:55;;12487:94;12600:3;12590:13;;:18;12586:94;;12670:3;12625:40;:3;12631:34;12625:40;:::i;:::-;12624:49;;12618:55;;12586:94;12699:4;12689:14;;:19;12685:95;;12770:3;12725:40;:3;12731:34;12725:40;:::i;:::-;12724:49;;12718:55;;12685:95;12799:4;12789:14;;:19;12785:95;;12870:3;12825:40;:3;12831:34;12825:40;:::i;:::-;12824:49;;12818:55;;12785:95;12899:4;12889:14;;:19;12885:95;;12970:3;12925:40;:3;12931:34;12925:40;:::i;:::-;12924:49;;12918:55;;12885:95;12999:4;12989:14;;:19;12985:95;;13070:3;13025:40;:3;13031:34;13025:40;:::i;:::-;13024:49;;13018:55;;12985:95;13099:5;13089:15;;:20;13085:96;;13171:3;13126:40;:3;13132:34;13126:40;:::i;:::-;13125:49;;13119:55;;13085:96;13200:5;13190:15;;:20;13186:96;;13272:3;13227:40;:3;13233:34;13227:40;:::i;:::-;13226:49;;13220:55;;13186:96;13301:5;13291:15;;:20;13287:96;;13373:3;13328:40;:3;13334:34;13328:40;:::i;:::-;13327:49;;13321:55;;13287:96;13402:5;13392:15;;:20;13388:96;;13474:3;13429:40;:3;13435:34;13429:40;:::i;:::-;13428:49;;13422:55;;13388:96;13503:6;13493:16;;:21;13489:97;;13576:3;13531:40;:3;13537:34;13531:40;:::i;:::-;13530:49;;13524:55;;13489:97;13605:6;13595:16;;:21;13591:121;;13678:3;13633:40;:3;13639:34;13633:40;:::i;:::-;13632:49;;;-1:-1:-1;13689:16:12;13704:1;13689:16;;:::i;:::-;;;13591:121;13731:6;13721:16;;:21;13717:121;;13804:3;13759:40;:3;13765:34;13759:40;:::i;:::-;13758:49;;;-1:-1:-1;13815:16:12;13830:1;13815:16;;:::i;:::-;;;13717:121;13857:6;13847:16;;:21;13843:121;;13930:3;13885:40;:3;13891:34;13885:40;:::i;:::-;13884:49;;;-1:-1:-1;13941:16:12;13956:1;13941:16;;:::i;:::-;;;13843:121;13983:7;13973:17;;:22;13969:122;;14057:3;14012:40;:3;14018:34;14012:40;:::i;:::-;14011:49;;;-1:-1:-1;14068:16:12;14083:1;14068:16;;:::i;:::-;;;13969:122;14110:7;14100:17;;:22;14096:123;;14184:3;14139:40;:3;14145:34;14139:40;:::i;:::-;14138:49;;;-1:-1:-1;14195:17:12;14210:2;14195:17;;:::i;:::-;;;14096:123;14238:7;14228:17;;:22;14224:123;;14312:3;14267:40;:3;14273:34;14267:40;:::i;:::-;14266:49;;;-1:-1:-1;14323:17:12;14338:2;14323:17;;:::i;:::-;;;14224:123;14366:7;14356:17;;:22;14352:123;;14440:3;14395:40;:3;14401:34;14395:40;:::i;:::-;14394:49;;;-1:-1:-1;14451:17:12;14466:2;14451:17;;:::i;:::-;;;14352:123;14504:1;14496:4;14484:21;14480:300;;;14730:1;14724:3;14718;14715:1;14711:11;14707:21;14703:29;14696:36;;14762:11;14761:12;;;:::i;:::-;14747:26;;14480:300;14796:17;14802:11;14796:3;:17;:::i;:::-;14785:29;;12052:2768;;11962:2858;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:628:131:-;113:6;121;174:2;162:9;153:7;149:23;145:32;142:52;;;190:1;187;180:12;142:52;230:9;217:23;259:18;300:2;292:6;289:14;286:34;;;316:1;313;306:12;286:34;354:6;343:9;339:22;329:32;;399:7;392:4;388:2;384:13;380:27;370:55;;421:1;418;411:12;370:55;461:2;448:16;487:2;479:6;476:14;473:34;;;503:1;500;493:12;473:34;556:7;551:2;541:6;538:1;534:14;530:2;526:23;522:32;519:45;516:65;;;577:1;574;567:12;516:65;608:2;600:11;;;;;630:6;;-1:-1:-1;14:628:131;;-1:-1:-1;;;;14:628:131:o;647:180::-;706:6;759:2;747:9;738:7;734:23;730:32;727:52;;;775:1;772;765:12;727:52;-1:-1:-1;798:23:131;;647:180;-1:-1:-1;647:180:131:o;832:127::-;893:10;888:3;884:20;881:1;874:31;924:4;921:1;914:15;948:4;945:1;938:15;964:225;1050:4;1042:6;1038:17;1121:6;1109:10;1106:22;1085:18;1073:10;1070:34;1067:62;1064:88;;;1132:18;;:::i;:::-;1168:2;1161:22;-1:-1:-1;964:225:131:o;1194:227::-;1280:4;1272:6;1268:17;1351:6;1339:10;1336:22;1315:18;1303:10;1300:34;1297:62;1294:88;;;1362:18;;:::i;1426:249::-;1536:2;1517:13;;-1:-1:-1;;1513:27:131;1501:40;;1571:18;1556:34;;1592:22;;;1553:62;1550:88;;;1618:18;;:::i;:::-;1654:2;1647:22;-1:-1:-1;;1426:249:131:o;1680:200::-;1757:4;1790:18;1782:6;1779:30;1776:56;;;1812:18;;:::i;:::-;-1:-1:-1;1857:1:131;1853:14;1869:4;1849:25;;1680:200::o;1885:1184::-;1956:5;2009:3;2002:4;1994:6;1990:17;1986:27;1976:55;;2027:1;2024;2017:12;1976:55;2063:6;2050:20;2089:4;2112:60;2169:2;2112:60;:::i;:::-;2191:2;2222;2216:9;2234:31;2262:2;2254:6;2234:31;:::i;:::-;2300:18;;;2368:4;2411:11;;;2399:24;;2395:33;;;2334:15;;;;-1:-1:-1;2440:15:131;;;2437:35;;;2468:1;2465;2458:12;2437:35;2504:2;2496:6;2492:15;2516:523;2532:6;2527:3;2524:15;2516:523;;;2608:2;2602:3;2597;2593:13;2589:22;2586:112;;;2652:1;2681:2;2677;2670:14;2586:112;2733:2;2727:9;2749:34;2774:8;2749:34;:::i;:::-;2813:17;;2796:35;;2883:12;;;2870:26;2851:17;;;2844:53;2949:12;;;2936:26;2917:17;;;2910:53;2976:21;;3017:12;;;;2549;;2516:523;;;-1:-1:-1;3057:6:131;;1885:1184;-1:-1:-1;;;;;;;;1885:1184:131:o;3074:671::-;3133:5;3181:4;3169:9;3164:3;3160:19;3156:30;3153:50;;;3199:1;3196;3189:12;3153:50;3232:4;3226:11;3246:32;3271:6;3246:32;:::i;:::-;3296:6;3287:15;;3338:9;3325:23;3367:18;3408:2;3400:6;3397:14;3394:34;;;3424:1;3421;3414:12;3394:34;3452:74;3522:3;3513:6;3502:9;3498:22;3452:74;:::i;:::-;3444:6;3437:90;3580:2;3569:9;3565:18;3552:32;3536:48;;3609:2;3599:8;3596:16;3593:36;;;3625:1;3622;3615:12;3593:36;;3662:76;3734:3;3723:8;3712:9;3708:24;3662:76;:::i;:::-;3657:2;3649:6;3645:15;3638:101;;;3074:671;;;;:::o;3750:155::-;3809:5;3854:3;3845:6;3840:3;3836:16;3832:26;3829:46;;;3871:1;3868;3861:12;3910:620;4054:6;4062;4070;4078;4131:3;4119:9;4110:7;4106:23;4102:33;4099:53;;;4148:1;4145;4138:12;4099:53;4188:9;4175:23;4221:18;4213:6;4210:30;4207:50;;;4253:1;4250;4243:12;4207:50;4276:63;4331:7;4322:6;4311:9;4307:22;4276:63;:::i;:::-;4266:73;;;4358:62;4412:7;4407:2;4396:9;4392:18;4358:62;:::i;:::-;3910:620;;4348:72;;-1:-1:-1;;;;4467:3:131;4452:19;;4439:33;;4519:3;4504:19;4491:33;;3910:620::o;4717:150::-;4792:20;;4841:1;4831:12;;4821:40;;4857:1;4854;4847:12;4821:40;4717:150;;;:::o;4872:208::-;4946:6;4999:2;4987:9;4978:7;4974:23;4970:32;4967:52;;;5015:1;5012;5005:12;4967:52;5038:36;5064:9;5038:36;:::i;5085:160::-;5149:5;5194:3;5185:6;5180:3;5176:16;5172:26;5169:46;;;5211:1;5208;5201:12;5250:248;5341:6;5394:3;5382:9;5373:7;5369:23;5365:33;5362:53;;;5411:1;5408;5401:12;5362:53;5434:58;5484:7;5473:9;5434:58;:::i;5685:755::-;5841:6;5849;5857;5865;5873;5881;5889;5897;5905;5958:3;5946:9;5937:7;5933:23;5929:33;5926:53;;;5975:1;5972;5965:12;5926:53;-1:-1:-1;;5998:23:131;;;6068:2;6053:18;;6040:32;;-1:-1:-1;6119:2:131;6104:18;;6091:32;;6170:2;6155:18;;6142:32;;-1:-1:-1;6221:3:131;6206:19;;6193:33;;-1:-1:-1;6273:3:131;6258:19;;6245:33;;-1:-1:-1;6325:3:131;6310:19;;6297:33;;-1:-1:-1;6377:3:131;6362:19;;6349:33;;-1:-1:-1;6429:3:131;6414:19;6401:33;;-1:-1:-1;5685:755:131;-1:-1:-1;5685:755:131:o;6445:619::-;6515:3;6553:5;6547:12;6580:6;6575:3;6568:19;6606:4;6635:2;6630:3;6626:12;6619:19;;6672:2;6665:5;6661:14;6693:1;6703:336;6717:6;6714:1;6711:13;6703:336;;;6776:13;;6814:9;;6802:22;;6864:11;;;6858:18;6844:12;;;6837:40;6900:4;6944:11;;;6938:18;6924:12;;;6917:40;6986:4;6977:14;;;;7014:15;;;;6739:1;6732:9;6703:336;;;-1:-1:-1;7055:3:131;;6445:619;-1:-1:-1;;;;;6445:619:131:o;7069:599::-;7260:2;7249:9;7242:21;7223:4;7298:6;7292:13;7341:4;7336:2;7325:9;7321:18;7314:32;7369:79;7444:2;7433:9;7429:18;7415:12;7369:79;:::i;:::-;7355:93;;7497:2;7489:6;7485:15;7479:22;7571:2;7567:7;7555:9;7547:6;7543:22;7539:36;7532:4;7521:9;7517:20;7510:66;7593:69;7655:6;7639:14;7593:69;:::i;7673:548::-;7802:6;7810;7818;7826;7834;7842;7895:3;7883:9;7874:7;7870:23;7866:33;7863:53;;;7912:1;7909;7902:12;7863:53;-1:-1:-1;;7935:23:131;;;8005:2;7990:18;;7977:32;;-1:-1:-1;8056:2:131;8041:18;;8028:32;;8107:2;8092:18;;8079:32;;-1:-1:-1;8158:3:131;8143:19;;8130:33;;-1:-1:-1;8210:3:131;8195:19;8182:33;;-1:-1:-1;7673:548:131;-1:-1:-1;7673:548:131:o;8458:248::-;8526:6;8534;8587:2;8575:9;8566:7;8562:23;8558:32;8555:52;;;8603:1;8600;8593:12;8555:52;-1:-1:-1;;8626:23:131;;;8696:2;8681:18;;;8668:32;;-1:-1:-1;8458:248:131:o;8711:131::-;-1:-1:-1;;;;;8786:31:131;;8776:42;;8766:70;;8832:1;8829;8822:12;8847:247;8906:6;8959:2;8947:9;8938:7;8934:23;8930:32;8927:52;;;8975:1;8972;8965:12;8927:52;9014:9;9001:23;9033:31;9058:5;9033:31;:::i;9099:323::-;9175:6;9183;9236:2;9224:9;9215:7;9211:23;9207:32;9204:52;;;9252:1;9249;9242:12;9204:52;9288:9;9275:23;9265:33;;9348:2;9337:9;9333:18;9320:32;9361:31;9386:5;9361:31;:::i;:::-;9411:5;9401:15;;;9099:323;;;;;:::o;9427:276::-;9510:6;9518;9571:2;9559:9;9550:7;9546:23;9542:32;9539:52;;;9587:1;9584;9577:12;9539:52;9610:36;9636:9;9610:36;:::i;:::-;9600:46;9693:2;9678:18;;;;9665:32;;-1:-1:-1;;;9427:276:131:o;9917:598::-;10029:6;10037;10045;10053;10061;10069;10122:3;10110:9;10101:7;10097:23;10093:33;10090:53;;;10139:1;10136;10129:12;10090:53;10175:9;10162:23;10152:33;;10232:2;10221:9;10217:18;10204:32;10194:42;;10283:2;10272:9;10268:18;10255:32;10245:42;;10334:2;10323:9;10319:18;10306:32;10296:42;;10385:3;10374:9;10370:19;10357:33;10347:43;;10440:3;10429:9;10425:19;10412:33;10454:31;10479:5;10454:31;:::i;:::-;10504:5;10494:15;;;9917:598;;;;;;;;:::o;10520:401::-;10601:6;10609;10662:2;10650:9;10641:7;10637:23;10633:32;10630:52;;;10678:1;10675;10668:12;10630:52;10717:9;10704:23;10736:31;10761:5;10736:31;:::i;:::-;10786:5;-1:-1:-1;10843:2:131;10828:18;;10815:32;10856:33;10815:32;10856:33;:::i;11562:383::-;11639:6;11647;11655;11708:2;11696:9;11687:7;11683:23;11679:32;11676:52;;;11724:1;11721;11714:12;11676:52;11760:9;11747:23;11737:33;;11817:2;11806:9;11802:18;11789:32;11779:42;;11871:2;11860:9;11856:18;11843:32;11884:31;11909:5;11884:31;:::i;:::-;11934:5;11924:15;;;11562:383;;;;;:::o;11950:551::-;12002:5;12050:4;12038:9;12033:3;12029:19;12025:30;12022:50;;;12068:1;12065;12058:12;12022:50;12101:2;12095:9;12113:32;12138:6;12113:32;:::i;:::-;12163:6;12154:15;;12206:9;12193:23;12225:33;12250:7;12225:33;:::i;:::-;12267:23;;12342:2;12327:18;;12314:32;12355:33;12314:32;12355:33;:::i;:::-;12416:2;12404:15;;12397:32;12490:2;12475:18;;;12462:32;12445:15;;12438:57;;;;11950:551;;-1:-1:-1;11950:551:131:o;12506:293::-;12598:6;12606;12659:3;12647:9;12638:7;12634:23;12630:33;12627:53;;;12676:1;12673;12666:12;12627:53;12699:43;12734:7;12723:9;12699:43;:::i;:::-;12689:53;12789:2;12774:18;;;;12761:32;;-1:-1:-1;;;12506:293:131:o;12804:160::-;12869:5;12914:2;12905:6;12900:3;12896:16;12892:25;12889:45;;;12930:1;12927;12920:12;12969:367;13061:6;13114:2;13102:9;13093:7;13089:23;13085:32;13082:52;;;13130:1;13127;13120:12;13082:52;13170:9;13157:23;13203:18;13195:6;13192:30;13189:50;;;13235:1;13232;13225:12;13189:50;13258:72;13322:7;13313:6;13302:9;13298:22;13258:72;:::i;13617:385::-;13749:6;13757;13810:3;13798:9;13789:7;13785:23;13781:33;13778:53;;;13827:1;13824;13817:12;13778:53;13850:58;13900:7;13889:9;13850:58;:::i;:::-;13840:68;;13927:69;13988:7;13982:3;13971:9;13967:19;13927:69;:::i;:::-;13917:79;;13617:385;;;;;:::o;14497:469::-;14587:6;14595;14603;14656:2;14644:9;14635:7;14631:23;14627:32;14624:52;;;14672:1;14669;14662:12;14624:52;14711:9;14698:23;14730:31;14755:5;14730:31;:::i;:::-;14780:5;-1:-1:-1;14837:2:131;14822:18;;14809:32;14850:33;14809:32;14850:33;:::i;:::-;14497:469;;14902:7;;-1:-1:-1;;;14956:2:131;14941:18;;;;14928:32;;14497:469::o;15163:881::-;15355:6;15363;15371;15379;15387;15395;15403;15411;15419;15427;15480:3;15468:9;15459:7;15455:23;15451:33;15448:53;;;15497:1;15494;15487:12;15448:53;15533:9;15520:23;15510:33;;15590:2;15579:9;15575:18;15562:32;15552:42;;15641:2;15630:9;15626:18;15613:32;15603:42;;15692:2;15681:9;15677:18;15664:32;15654:42;;15743:3;15732:9;15728:19;15715:33;15705:43;;15795:3;15784:9;15780:19;15767:33;15757:43;;15847:3;15836:9;15832:19;15819:33;15809:43;;15871:63;15926:7;15920:3;15909:9;15905:19;15871:63;:::i;:::-;15861:73;;15981:3;15970:9;15966:19;15953:33;15943:43;;16033:3;16022:9;16018:19;16005:33;15995:43;;15163:881;;;;;;;;;;;;;:::o;16257:127::-;16318:10;16313:3;16309:20;16306:1;16299:31;16349:4;16346:1;16339:15;16373:4;16370:1;16363:15;16654:127;16715:10;16710:3;16706:20;16703:1;16696:31;16746:4;16743:1;16736:15;16770:4;16767:1;16760:15;16786:135;16825:3;16846:17;;;16843:43;;16866:18;;:::i;:::-;-1:-1:-1;16913:1:131;16902:13;;16786:135::o;16926:348::-;17128:2;17110:21;;;17167:2;17147:18;;;17140:30;17206:26;17201:2;17186:18;;17179:54;17265:2;17250:18;;16926:348::o;17980:184::-;18050:6;18103:2;18091:9;18082:7;18078:23;18074:32;18071:52;;;18119:1;18116;18109:12;18071:52;-1:-1:-1;18142:16:131;;17980:184;-1:-1:-1;17980:184:131:o;20208:1167::-;20290:5;20343:3;20336:4;20328:6;20324:17;20320:27;20310:55;;20361:1;20358;20351:12;20310:55;20390:6;20384:13;20416:4;20439:60;20496:2;20439:60;:::i;:::-;20518:2;20549;20543:9;20561:31;20589:2;20581:6;20561:31;:::i;:::-;20627:18;;;20695:4;20738:11;;;20726:24;;20722:33;;;20661:15;;;;-1:-1:-1;20767:15:131;;;20764:35;;;20795:1;20792;20785:12;20764:35;20831:2;20823:6;20819:15;20843:502;20859:6;20854:3;20851:15;20843:502;;;20935:2;20929:3;20924;20920:13;20916:22;20913:112;;;20979:1;21008:2;21004;20997:14;20913:112;21060:2;21054:9;21076:34;21101:8;21076:34;:::i;:::-;21140:10;;21123:28;;21196:12;;;21190:19;21171:17;;;21164:46;21255:12;;;21249:19;21230:17;;;21223:46;21282:21;;21323:12;;;;20876;;20843:502;;21380:890;21481:6;21534:2;21522:9;21513:7;21509:23;21505:32;21502:52;;;21550:1;21547;21540:12;21502:52;21583:9;21577:16;21612:18;21653:2;21645:6;21642:14;21639:34;;;21669:1;21666;21659:12;21639:34;21692:22;;;;21748:4;21730:16;;;21726:27;21723:47;;;21766:1;21763;21756:12;21723:47;21799:4;21793:11;21813:32;21838:6;21813:32;:::i;:::-;21876:2;21870:9;21904:2;21894:8;21891:16;21888:36;;;21920:1;21917;21910:12;21888:36;21948:84;22024:7;22013:8;22009:2;22005:17;21948:84;:::i;:::-;21940:6;21933:100;;22072:2;22068;22064:11;22058:18;22101:2;22091:8;22088:16;22085:36;;;22117:1;22114;22107:12;22085:36;22154:84;22230:7;22219:8;22215:2;22211:17;22154:84;:::i;:::-;22149:2;22137:15;;22130:109;-1:-1:-1;22141:6:131;21380:890;-1:-1:-1;;;;;21380:890:131:o;23333:277::-;23400:6;23453:2;23441:9;23432:7;23428:23;23424:32;23421:52;;;23469:1;23466;23459:12;23421:52;23501:9;23495:16;23554:5;23547:13;23540:21;23533:5;23530:32;23520:60;;23576:1;23573;23566:12;24528:258;24641:12;;-1:-1:-1;;;;;24637:21:131;;;24625:34;;24712:4;24701:16;;;24695:23;24691:32;;;24675:14;;;24668:56;24773:4;24762:16;;;24756:23;24740:14;;24733:47;24528:258::o;24791:314::-;25001:3;24986:19;;25014:42;24990:9;25038:6;25014:42;:::i;:::-;25092:6;25087:2;25076:9;25072:18;25065:34;24791:314;;;;;:::o;25648:125::-;25713:9;;;25734:10;;;25731:36;;;25747:18;;:::i;25778:200::-;25844:9;;;25817:4;25872:9;;25900:10;;25912:12;;;25896:29;25935:12;;;25927:21;;25893:56;25890:82;;;25952:18;;:::i;26336:210::-;26450:9;26487:53;26525:14;26518:5;26487:53;:::i;26551:127::-;26612:10;26607:3;26603:20;26600:1;26593:31;26643:4;26640:1;26633:15;26667:4;26664:1;26657:15;26683:224;26766:6;26819:2;26807:9;26798:7;26794:23;26790:32;26787:52;;;26835:1;26832;26825:12;26787:52;26858:43;26893:7;26882:9;26858:43;:::i;27868:297::-;27927:6;27980:2;27968:9;27959:7;27955:23;27951:32;27948:52;;;27996:1;27993;27986:12;27948:52;28035:9;28022:23;-1:-1:-1;;;;;28078:5:131;28074:42;28067:5;28064:53;28054:81;;28131:1;28128;28121:12;28524:290;28582:6;28635:2;28623:9;28614:7;28610:23;28606:32;28603:52;;;28651:1;28648;28641:12;28603:52;28690:9;28677:23;-1:-1:-1;;;;;28733:5:131;28729:36;28722:5;28719:47;28709:75;;28780:1;28777;28770:12;28819:276;28877:6;28930:2;28918:9;28909:7;28905:23;28901:32;28898:52;;;28946:1;28943;28936:12;28898:52;28985:9;28972:23;29035:10;29028:5;29024:22;29017:5;29014:33;29004:61;;29061:1;29058;29051:12;29100:274;29158:6;29211:2;29199:9;29190:7;29186:23;29182:32;29179:52;;;29227:1;29224;29217:12;29179:52;29266:9;29253:23;29316:8;29309:5;29305:20;29298:5;29295:31;29285:59;;29340:1;29337;29330:12;29379:128;29446:9;;;29467:11;;;29464:37;;;29481:18;;:::i;31981:242::-;32163:2;32148:18;;32175:42;32152:9;32199:6;32175:42;:::i;32723:250::-;32808:1;32818:113;32832:6;32829:1;32826:13;32818:113;;;32908:11;;;32902:18;32889:11;;;32882:39;32854:2;32847:10;32818:113;;;-1:-1:-1;;32965:1:131;32947:16;;32940:27;32723:250::o;32978:287::-;33107:3;33145:6;33139:13;33161:66;33220:6;33215:3;33208:4;33200:6;33196:17;33161:66;:::i;:::-;33243:16;;;;;32978:287;-1:-1:-1;;32978:287:131:o;33650:396::-;33882:3;33867:19;;33895:42;33871:9;33919:6;33895:42;:::i;:::-;33973:6;33968:2;33957:9;33953:18;33946:34;34031:6;34024:14;34017:22;34011:3;34000:9;33996:19;33989:51;33650:396;;;;;;:::o;34051:770::-;34282:2;34294:21;;;34364:13;;34267:18;;;34386:22;;;34234:4;;34461;;34439:2;34424:18;;;34488:15;;;34234:4;34531:195;34545:6;34542:1;34539:13;34531:195;;;34610:13;;-1:-1:-1;;;;;34606:39:131;34594:52;;34666:12;;;;34701:15;;;;34642:1;34560:9;34531:195;;;-1:-1:-1;;;;;;;;34782:32:131;;;;34762:18;;34755:60;;;;-1:-1:-1;34743:3:131;34051:770;-1:-1:-1;34051:770:131:o;34958:626::-;35304:3;35289:19;;35317:42;35293:9;35341:6;35317:42;:::i;:::-;35390:2;35375:18;;35368:34;;;;35433:3;35418:19;;35411:35;;;;35477:3;35462:19;;35455:35;;;;35521:3;35506:19;;35499:35;35565:3;35550:19;;;35543:35;34958:626;;-1:-1:-1;34958:626:131:o;35589:179::-;35624:3;35666:1;35648:16;35645:23;35642:120;;;35712:1;35709;35706;35691:23;-1:-1:-1;35749:1:131;35743:8;35738:3;35734:18;35642:120;35589:179;:::o;35773:671::-;35812:3;35854:4;35836:16;35833:26;35830:39;;;35773:671;:::o;35830:39::-;35896:2;35890:9;-1:-1:-1;;35961:16:131;35957:25;;35954:1;35890:9;35933:50;36012:4;36006:11;36036:16;36071:18;36142:2;36135:4;36127:6;36123:17;36120:25;36115:2;36107:6;36104:14;36101:45;36098:58;;;36149:5;;;;;35773:671;:::o;36098:58::-;36186:6;36180:4;36176:17;36165:28;;36222:3;36216:10;36249:2;36241:6;36238:14;36235:27;;;36255:5;;;;;;35773:671;:::o;36235:27::-;36339:2;36320:16;36314:4;36310:27;36306:36;36299:4;36290:6;36285:3;36281:16;36277:27;36274:69;36271:82;;;36346:5;;;;;;35773:671;:::o;36271:82::-;36362:57;36413:4;36404:6;36396;36392:19;36388:30;36382:4;36362:57;:::i;:::-;-1:-1:-1;36435:3:131;;35773:671;-1:-1:-1;;;;;35773:671:131:o;36449:396::-;36598:2;36587:9;36580:21;36561:4;36630:6;36624:13;36673:6;36668:2;36657:9;36653:18;36646:34;36689:79;36761:6;36756:2;36745:9;36741:18;36736:2;36728:6;36724:15;36689:79;:::i;:::-;36829:2;36808:15;-1:-1:-1;;36804:29:131;36789:45;;;;36836:2;36785:54;;36449:396;-1:-1:-1;;36449:396:131:o;36850:297::-;36968:12;;37015:4;37004:16;;;36998:23;;36968:12;37033:16;;37030:111;;;-1:-1:-1;;37107:4:131;37103:17;;;;37100:1;37096:25;37092:38;37081:50;;36850:297;-1:-1:-1;36850:297:131:o;37488:554::-;37806:3;37791:19;;37819:42;37795:9;37843:6;37819:42;:::i;:::-;37897:6;37892:2;37881:9;37877:18;37870:34;37941:6;37935:3;37924:9;37920:19;37913:35;37985:6;37979:3;37968:9;37964:19;37957:35;38029:6;38023:3;38012:9;38008:19;38001:35;37488:554;;;;;;;;:::o;38300:209::-;38332:1;38358;38348:132;;38402:10;38397:3;38393:20;38390:1;38383:31;38437:4;38434:1;38427:15;38465:4;38462:1;38455:15;38348:132;-1:-1:-1;38494:9:131;;38300:209::o;38514:168::-;38587:9;;;38618;;38635:15;;;38629:22;;38615:37;38605:71;;38656:18;;:::i;38687:136::-;38722:3;-1:-1:-1;;;38743:22:131;;38740:48;;38768:18;;:::i;:::-;-1:-1:-1;38808:1:131;38804:13;;38687:136::o;39180:216::-;39244:9;;;39272:11;;;39219:3;39302:9;;39330:10;;39326:19;;39355:10;;39347:19;;39323:44;39320:70;;;39370:18;;:::i",
    "linkReferences": {
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "KandelLib": [
          {
            "start": 3373,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "81625": [
        {
          "start": 1359,
          "length": 32
        },
        {
          "start": 5437,
          "length": 32
        },
        {
          "start": 5483,
          "length": 32
        }
      ],
      "81629": [
        {
          "start": 1255,
          "length": 32
        },
        {
          "start": 2600,
          "length": 32
        },
        {
          "start": 2903,
          "length": 32
        },
        {
          "start": 4529,
          "length": 32
        },
        {
          "start": 4669,
          "length": 32
        },
        {
          "start": 5069,
          "length": 32
        },
        {
          "start": 6401,
          "length": 32
        },
        {
          "start": 6888,
          "length": 32
        },
        {
          "start": 8921,
          "length": 32
        },
        {
          "start": 10060,
          "length": 32
        },
        {
          "start": 10385,
          "length": 32
        },
        {
          "start": 10672,
          "length": 32
        },
        {
          "start": 11608,
          "length": 32
        },
        {
          "start": 12703,
          "length": 32
        },
        {
          "start": 12960,
          "length": 32
        },
        {
          "start": 13647,
          "length": 32
        }
      ],
      "84656": [
        {
          "start": 2074,
          "length": 32
        },
        {
          "start": 7398,
          "length": 32
        },
        {
          "start": 8721,
          "length": 32
        },
        {
          "start": 12013,
          "length": 32
        }
      ],
      "87949": [
        {
          "start": 1962,
          "length": 32
        },
        {
          "start": 3807,
          "length": 32
        },
        {
          "start": 3924,
          "length": 32
        },
        {
          "start": 5607,
          "length": 32
        },
        {
          "start": 8419,
          "length": 32
        },
        {
          "start": 9510,
          "length": 32
        },
        {
          "start": 9703,
          "length": 32
        },
        {
          "start": 12415,
          "length": 32
        }
      ],
      "87953": [
        {
          "start": 1307,
          "length": 32
        },
        {
          "start": 4026,
          "length": 32
        },
        {
          "start": 4143,
          "length": 32
        },
        {
          "start": 5650,
          "length": 32
        },
        {
          "start": 8381,
          "length": 32
        },
        {
          "start": 9557,
          "length": 32
        },
        {
          "start": 9656,
          "length": 32
        }
      ],
      "87956": [
        {
          "start": 883,
          "length": 32
        },
        {
          "start": 9604,
          "length": 32
        },
        {
          "start": 9750,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BASE()": "ec342ad0",
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "QUOTE()": "9c579839",
    "RESERVE_ID()": "fbc7d10b",
    "TICK_SPACING()": "46ca626b",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "baseQuoteTickOffset()": "14ee02bd",
    "checkList(address[])": "03eb17e2",
    "createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)": "3fce15c9",
    "depositFunds(uint256,uint256)": "61638ed5",
    "getOffer(uint8,uint256)": "7692c328",
    "indexOfOfferId(uint8,uint256)": "ea0f394d",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "offerIdOfIndex(uint8,uint256)": "bfc353f9",
    "offeredVolume(uint8)": "d2e498fe",
    "params()": "cff0ab96",
    "pending(uint8)": "98ed5340",
    "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": "148b7cea",
    "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": "ace67902",
    "populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)": "4f605c5b",
    "populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)": "e4f248f4",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "reserveBalance(uint8)": "18acf82f",
    "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": "790532a1",
    "retractOffers(uint256,uint256)": "a2e241af",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setBaseQuoteTickOffset(uint256)": "a224b5e9",
    "setGasprice(uint256)": "fcaa7e2e",
    "setGasreq(uint256)": "34bd8931",
    "setRouter(address)": "c0d78655",
    "setStepSize(uint256)": "1450acd2",
    "withdrawFromMangrove(uint256,address)": "7144df24",
    "withdrawFunds(uint256,uint256,address)": "9ee8a91c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKeyBaseQuote\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Credit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Debit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"}],\"name\":\"OfferListKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetBaseQuoteTickOffset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasprice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasreq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"SetIndexMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetLength\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"SetReserveId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetStepSize\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TICK_SPACING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseQuoteTickOffset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"baseQuoteTickIndex0\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_baseQuoteTickOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stepSize\",\"type\":\"uint256\"}],\"name\":\"createDistribution\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"indexOfOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"offerIdOfIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"offeredVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"populate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"}],\"name\":\"populateChunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"baseQuoteTickIndex0\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askGives\",\"type\":\"uint256\"}],\"name\":\"populateChunkFromOffset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"baseQuoteTickIndex0\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_baseQuoteTickOffset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"firstAskIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidGives\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"askGives\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"populateFromOffset\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"freeWei\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"retractAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"retractOffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_baseQuoteTickOffset\",\"type\":\"uint256\"}],\"name\":\"setBaseQuoteTickOffset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"}],\"name\":\"setGasprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"}],\"name\":\"setGasreq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stepSize\",\"type\":\"uint256\"}],\"name\":\"setStepSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Credit(address,uint256)\":{\"params\":{\"amount\":\"the amount.\",\"token\":\"the asset. This is indexed so that RPC calls can filter on it.\"}},\"Debit(address,uint256)\":{\"params\":{\"amount\":\"the amount.\",\"token\":\"the asset. This is indexed so that RPC calls can filter on it.\"}},\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"OfferListKey(bytes32)\":{\"params\":{\"olKeyHash\":\"of the market Kandel is making\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetBaseQuoteTickOffset(uint256)\":{\"params\":{\"value\":\"the tick offset.\"}},\"SetGasprice(uint256)\":{\"params\":{\"value\":\"the gasprice for offers.\"}},\"SetGasreq(uint256)\":{\"params\":{\"value\":\"the gasreq (including router's gasreq) for offers\"}},\"SetIndexMapping(uint8,uint256,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\",\"offerId\":\"the Mangrove offer id.\"}},\"SetLength(uint256)\":{\"params\":{\"value\":\"the length.\"}},\"SetReserveId(address)\":{\"params\":{\"reserveId\":\"identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}},\"SetStepSize(uint256)\":{\"params\":{\"value\":\"the step size in amount of price points to jump for posting dual offer\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"constructor\":{\"params\":{\"gasreq\":\"the gasreq to use for offers\",\"mgv\":\"The Mangrove deployment.\",\"olKeyBaseQuote\":\"The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.\",\"reserveId\":\"identifier of this contract's reserve when using a router.\"}},\"createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"the absolute price of an offer is the ratio of quote/base volumes of tokens it tradesthe tick of offers on Mangrove are in relative taker price of maker's inbound/outbound volumes of tokens it tradesfor Bids, outbound_tkn=quote, inbound_tkn=base so relative taker price of a a bid is the inverse of the absolute price.for Asks, outbound_tkn=base, inbound_tkn=quote so relative taker price of an ask coincides with absolute price.Index0 will contain the ask with the lowest relative price and the bid with the highest relative price. Absolute price is geometrically increasing over indexes.tickOffset moves an offer relative price s.t. `AskTick_{i+1} = AskTick_i + tickOffset` and `BidTick_{i+1} = BidTick_i - tickOffset`A hole is left in the middle at the size of stepSize - either an offer or its dual is posted, not both.The caller should make sure the minimum and maximum tick does not exceed the MIN_TICK and MAX_TICK from respectively; otherwise, populate will fail for those offers.If type(uint).max is used for `bidGives` or `askGives` then very high or low prices can yield gives=0 (which results in both offer an dual being dead) or gives>=type(uin96).max which is not supported by Mangrove.\",\"params\":{\"_baseQuoteTickOffset\":\"the tick offset used for the geometric progression deployment. Must be at least 1. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"askGives\":\"The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.\",\"baseQuoteTickIndex0\":\"the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"bidGives\":\"The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.\",\"firstAskIndex\":\"the (inclusive) index after which offer should be an ask. Must be at most `pricePoints`.\",\"from\":\"populate offers starting from this index (inclusive). Must be at most `pricePoints`.\",\"pricePoints\":\"the number of price points for the Kandel instance. Must be at least 2.\",\"stepSize\":\"in amount of price points to jump for posting dual offer. Must be less than `pricePoints`.\",\"to\":\"populate offers until this index (exclusive). Must be at most `pricePoints`.\"},\"returns\":{\"distribution\":\"the distribution of bids and asks to populate\"}},\"depositFunds(uint256,uint256)\":{\"params\":{\"baseAmount\":\"the amount of base tokens to deposit.\",\"quoteAmount\":\"the amount of quote tokens to deposit.\"}},\"getOffer(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type.\",\"index\":\"the index.\"},\"returns\":{\"offer\":\"the Mangrove offer.\"}},\"indexOfOfferId(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"offerId\":\"the Mangrove offer id.\"},\"returns\":{\"index\":\"the index.\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"offerIdOfIndex(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\"},\"returns\":{\"offerId\":\"the Mangrove offer id.\"}},\"offeredVolume(uint8)\":{\"details\":\"function is very gas costly, for external calls only.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"volume\":\"the total gives of all offers of the offer type.\"}},\"pending(uint8)\":{\"details\":\"Gas costly function, better suited for off chain calls.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"_0\":\"the pending amount\"}},\"populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"details\":\"This function is used at initialization and can fund with provision for the offers.Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.If this function is invoked with different pricePoints or stepSize, then first retract all offers.msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens).\",\"params\":{\"baseAmount\":\"base amount to deposit\",\"distribution\":\"the distribution of bids and asks to populate\",\"parameters\":\"the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.\",\"quoteAmount\":\"quote amount to deposit\"}},\"populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))\":{\"params\":{\"distribution\":\"the distribution of bids and asks to populate\"}},\"populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)\":{\"details\":\"This is typically used after a call to `populateFromOffset` to populate the rest of the offers with the same parameters. See that function for further details.\",\"params\":{\"askGives\":\"The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.\",\"baseQuoteTickIndex0\":\"the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"bidGives\":\"The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.\",\"firstAskIndex\":\"the (inclusive) index after which offer should be an ask.\",\"from\":\"populate offers starting from this index (inclusive).\",\"to\":\"populate offers until this index (exclusive).\"}},\"populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"details\":\"See `createDistribution` for further details.\",\"params\":{\"_baseQuoteTickOffset\":\"the tick offset used for the geometric progression deployment. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"askGives\":\"The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.\",\"baseAmount\":\"base amount to deposit\",\"baseQuoteTickIndex0\":\"the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\",\"bidGives\":\"The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.\",\"firstAskIndex\":\"the (inclusive) index after which offer should be an ask.\",\"from\":\"populate offers starting from this index (inclusive).\",\"parameters\":\"the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.\",\"quoteAmount\":\"quote amount to deposit\",\"to\":\"populate offers until this index (exclusive).\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"reserveBalance(uint8)\":{\"params\":{\"ba\":\"the offer type.\"},\"returns\":{\"balance\":\"the balance of the token.\"}},\"retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"baseAmount\":\"the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"freeWei\":\"the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.\",\"from\":\"retract offers starting from this index.\",\"quoteAmount\":\"the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"recipient\":\"the recipient of the funds.\",\"to\":\"retract offers until this index.\"}},\"retractOffers(uint256,uint256)\":{\"details\":\"use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.\",\"params\":{\"from\":\"the start index.\",\"to\":\"the end index.\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setBaseQuoteTickOffset(uint256)\":{\"params\":{\"_baseQuoteTickOffset\":\"the new tick offset.\"}},\"setGasprice(uint256)\":{\"params\":{\"gasprice\":\"the gasprice.\"}},\"setGasreq(uint256)\":{\"params\":{\"gasreq\":\"the gasreq.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"setStepSize(uint256)\":{\"params\":{\"stepSize\":\"the step size.\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}},\"withdrawFunds(uint256,uint256,address)\":{\"details\":\"it is up to the caller to make sure there are still enough funds for live offers.\",\"params\":{\"baseAmount\":\"the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"quoteAmount\":\"the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"recipient\":\"the address to which the withdrawn funds should be sent to.\"}}},\"title\":\"The Kandel strat with geometric price progression.\",\"version\":1},\"userdoc\":{\"events\":{\"Credit(address,uint256)\":{\"notice\":\"the Kandel instance is credited of `amount` by its owner.By emitting this data, an indexer will be able to keep track of what credits are made.\"},\"Debit(address,uint256)\":{\"notice\":\"the Kandel instance is debited of `amount` by its owner.By emitting this data, an indexer will be able to keep track of what debits are made.\"},\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"OfferListKey(bytes32)\":{\"notice\":\"The traded offer listwe only emit this, so that the events for a Kandel is self contained. If one uses the KandelSeeder to deploy, then this information is already available from NewKandel or NewAaveKandel events.\"},\"PopulateEnd()\":{\"notice\":\"logs the end of a call to populateBy emitting this, an indexer will know that the previous PopulateStart event is over.\"},\"PopulateStart()\":{\"notice\":\"logs the start of a call to populateBy emitting this, an indexer will be able to know that the following events are in the context of populate.\"},\"RetractEnd()\":{\"notice\":\"logs the end of a call to retractOffersBy emitting this, an indexer will know that the previous RetractStart event is over.\"},\"RetractStart()\":{\"notice\":\"logs the start of a call to retractOffersBy emitting this, an indexer will be able to know that the following events are in the context of retract.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetBaseQuoteTickOffset(uint256)\":{\"notice\":\"The tick offset for absolute price used for the on-chain geometric progression deployment in `createDistribution`. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\"},\"SetGasprice(uint256)\":{\"notice\":\"the gasprice has been set.By emitting this data, an indexer will be able to keep track of what gasprice is used.\"},\"SetGasreq(uint256)\":{\"notice\":\"the gasreq has been set.By emitting this data, an indexer will be able to keep track of what gasreq is used.\"},\"SetIndexMapping(uint8,uint256,uint256)\":{\"notice\":\"a new offer of type `ba` with `offerId` was created at price `index`By emitting this data, an indexer will be able to keep track of what offer has what index.\"},\"SetLength(uint256)\":{\"notice\":\"the length of the index has been set.By emitting this data, an indexer will be able to keep track of what length is used.\"},\"SetReserveId(address)\":{\"notice\":\"`reserveId` is set in the constructorby emitting this event, an indexer will be able to keep track of what reserve is used.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"},\"SetStepSize(uint256)\":{\"notice\":\"the step size has been set.\"}},\"kind\":\"user\",\"methods\":{\"BASE()\":{\"notice\":\"base of the market Kandel is making\"},\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"QUOTE()\":{\"notice\":\"quote of the market Kandel is making\"},\"RESERVE_ID()\":{\"notice\":\"identifier of this contract's reserve when using a router\"},\"TICK_SPACING()\":{\"notice\":\"tickSpacing of the market Kandel is making\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"baseQuoteTickOffset()\":{\"notice\":\"The tick offset for absolute price used for the on-chain geometric progression deployment in `createDistribution`. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"constructor\":{\"notice\":\"Constructor\"},\"createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Creates a distribution of bids and asks given by the parameters. Dual offers are included with gives=0.\"},\"depositFunds(uint256,uint256)\":{\"notice\":\"Deposits funds to the contract's reserve\"},\"getOffer(uint8,uint256)\":{\"notice\":\"gets the Mangrove offer at the given index for the offer type.\"},\"indexOfOfferId(uint8,uint256)\":{\"notice\":\"Maps an offer type and Mangrove offer id to index.\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"offerIdOfIndex(uint8,uint256)\":{\"notice\":\"maps index of offers to offer id on Mangrove.\"},\"offeredVolume(uint8)\":{\"notice\":\"gets the total gives of all offers of the offer type.\"},\"params()\":{\"notice\":\"Storage of the parameters for the strat.\"},\"pending(uint8)\":{\"notice\":\"gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises.\"},\"populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"notice\":\"publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).\"},\"populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))\":{\"notice\":\"Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.This function is not payable, use `populate` to fund along with populate.\"},\"populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)\":{\"notice\":\"publishes bids/asks according to a geometric distribution, and reads parameters from the Kandel instance.\"},\"populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"notice\":\"publishes bids/asks according to a geometric distribution, and sets all parameters according to inputs.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"reserveBalance(uint8)\":{\"notice\":\"the total balance available for the strat of the offered token for the given offer type.\"},\"retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Retracts offers, withdraws funds, and withdraws free wei from Mangrove.\"},\"retractOffers(uint256,uint256)\":{\"notice\":\"retracts and deprovisions offers of the distribution interval `[from, to[`.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setBaseQuoteTickOffset(uint256)\":{\"notice\":\"sets the tick offset if different from existing.\"},\"setGasprice(uint256)\":{\"notice\":\"sets the gasprice for offers\"},\"setGasreq(uint256)\":{\"notice\":\"sets the gasreq (including router's gasreq) for offers\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"setStepSize(uint256)\":{\"notice\":\"sets the step size\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"},\"withdrawFunds(uint256,uint256,address)\":{\"notice\":\"withdraws funds from the contract's reserve\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol\":\"Kandel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol\":{\"keccak256\":\"0xad6cf41d92ed534d3f3cb63f0dec1dff71d7fa0b40e944aec300423c31111a97\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://04e8d69f4ae8463c6822ff77e402e12d97e914a59654af88f8852b83666b9c5f\",\"dweb:/ipfs/Qmf7Fv85HNvXEcYyUnkKyRCjwoyhh3A9oGDD6BKiEQ78ZR\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol\":{\"keccak256\":\"0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518\",\"dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol\":{\"keccak256\":\"0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f\",\"dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol\":{\"keccak256\":\"0x49bf32ef326950c199d8dc7aad069779696d2aa54a6aeb65924c68fe2c93956b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://450bf42af8faa7f56d8102436f778ef2c3c9b91d80f21f742de78bf3de7b842b\",\"dweb:/ipfs/QmfFguoZ5wFcptVY7fXj7XHG68Eu7XNMum9GxMogz4Fo75\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol\":{\"keccak256\":\"0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510\",\"dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol\":{\"keccak256\":\"0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b\",\"dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol\":{\"keccak256\":\"0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd\",\"dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address"
            },
            {
              "internalType": "struct OLKey",
              "name": "olKeyBaseQuote",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Credit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Debit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferListKey",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateStart",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetBaseQuoteTickOffset",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasprice",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasreq",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetIndexMapping",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetLength",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetReserveId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStepSize",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RESERVE_ID",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TICK_SPACING",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseQuoteTickOffset",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "baseQuoteTickIndex0",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_baseQuoteTickOffset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bidGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "pricePoints",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stepSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "createDistribution",
          "outputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFunds"
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexOfOfferId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerIdOfIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offeredVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "volume",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "params",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pending",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CoreKandel.Params",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populate"
        },
        {
          "inputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "populateChunk"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "baseQuoteTickIndex0",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bidGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askGives",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populateChunkFromOffset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "Tick",
              "name": "baseQuoteTickIndex0",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "_baseQuoteTickOffset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "firstAskIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "bidGives",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "askGives",
              "type": "uint256"
            },
            {
              "internalType": "struct CoreKandel.Params",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populateFromOffset"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "freeWei",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractAndWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_baseQuoteTickOffset",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseQuoteTickOffset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasprice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasreq"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stepSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStepSize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFunds"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "constructor": {
            "params": {
              "gasreq": "the gasreq to use for offers",
              "mgv": "The Mangrove deployment.",
              "olKeyBaseQuote": "The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.",
              "reserveId": "identifier of this contract's reserve when using a router."
            }
          },
          "createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)": {
            "details": "the absolute price of an offer is the ratio of quote/base volumes of tokens it tradesthe tick of offers on Mangrove are in relative taker price of maker's inbound/outbound volumes of tokens it tradesfor Bids, outbound_tkn=quote, inbound_tkn=base so relative taker price of a a bid is the inverse of the absolute price.for Asks, outbound_tkn=base, inbound_tkn=quote so relative taker price of an ask coincides with absolute price.Index0 will contain the ask with the lowest relative price and the bid with the highest relative price. Absolute price is geometrically increasing over indexes.tickOffset moves an offer relative price s.t. `AskTick_{i+1} = AskTick_i + tickOffset` and `BidTick_{i+1} = BidTick_i - tickOffset`A hole is left in the middle at the size of stepSize - either an offer or its dual is posted, not both.The caller should make sure the minimum and maximum tick does not exceed the MIN_TICK and MAX_TICK from respectively; otherwise, populate will fail for those offers.If type(uint).max is used for `bidGives` or `askGives` then very high or low prices can yield gives=0 (which results in both offer an dual being dead) or gives>=type(uin96).max which is not supported by Mangrove.",
            "params": {
              "_baseQuoteTickOffset": "the tick offset used for the geometric progression deployment. Must be at least 1. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "askGives": "The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.",
              "baseQuoteTickIndex0": "the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "bidGives": "The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.",
              "firstAskIndex": "the (inclusive) index after which offer should be an ask. Must be at most `pricePoints`.",
              "from": "populate offers starting from this index (inclusive). Must be at most `pricePoints`.",
              "pricePoints": "the number of price points for the Kandel instance. Must be at least 2.",
              "stepSize": "in amount of price points to jump for posting dual offer. Must be less than `pricePoints`.",
              "to": "populate offers until this index (exclusive). Must be at most `pricePoints`."
            },
            "returns": {
              "distribution": "the distribution of bids and asks to populate"
            }
          },
          "depositFunds(uint256,uint256)": {
            "params": {
              "baseAmount": "the amount of base tokens to deposit.",
              "quoteAmount": "the amount of quote tokens to deposit."
            }
          },
          "getOffer(uint8,uint256)": {
            "params": {
              "ba": "the offer type.",
              "index": "the index."
            },
            "returns": {
              "offer": "the Mangrove offer."
            }
          },
          "indexOfOfferId(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "offerId": "the Mangrove offer id."
            },
            "returns": {
              "index": "the index."
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "offerIdOfIndex(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "index": "the index"
            },
            "returns": {
              "offerId": "the Mangrove offer id."
            }
          },
          "offeredVolume(uint8)": {
            "details": "function is very gas costly, for external calls only.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "volume": "the total gives of all offers of the offer type."
            }
          },
          "pending(uint8)": {
            "details": "Gas costly function, better suited for off chain calls.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "_0": "the pending amount"
            }
          },
          "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "details": "This function is used at initialization and can fund with provision for the offers.Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.If this function is invoked with different pricePoints or stepSize, then first retract all offers.msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens).",
            "params": {
              "baseAmount": "base amount to deposit",
              "distribution": "the distribution of bids and asks to populate",
              "parameters": "the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.",
              "quoteAmount": "quote amount to deposit"
            }
          },
          "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": {
            "params": {
              "distribution": "the distribution of bids and asks to populate"
            }
          },
          "populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)": {
            "details": "This is typically used after a call to `populateFromOffset` to populate the rest of the offers with the same parameters. See that function for further details.",
            "params": {
              "askGives": "The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.",
              "baseQuoteTickIndex0": "the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "bidGives": "The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.",
              "firstAskIndex": "the (inclusive) index after which offer should be an ask.",
              "from": "populate offers starting from this index (inclusive).",
              "to": "populate offers until this index (exclusive)."
            }
          },
          "populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "details": "See `createDistribution` for further details.",
            "params": {
              "_baseQuoteTickOffset": "the tick offset used for the geometric progression deployment. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "askGives": "The initial amount of base to give for all asks. If 0, only book the offer, if type(uint).max then bidGives is used as quote for asks, and the base the ask gives is set to according to the price.",
              "baseAmount": "base amount to deposit",
              "baseQuoteTickIndex0": "the tick of base per quote for the price point at index 0. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding.",
              "bidGives": "The initial amount of quote to give for all bids. If 0, only book the offer, if type(uint).max then askGives is used as base for bids, and the quote the bid gives is set to according to the price.",
              "firstAskIndex": "the (inclusive) index after which offer should be an ask.",
              "from": "populate offers starting from this index (inclusive).",
              "parameters": "the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.",
              "quoteAmount": "quote amount to deposit",
              "to": "populate offers until this index (exclusive)."
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "reserveBalance(uint8)": {
            "params": {
              "ba": "the offer type."
            },
            "returns": {
              "balance": "the balance of the token."
            }
          },
          "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": {
            "params": {
              "baseAmount": "the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "freeWei": "the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.",
              "from": "retract offers starting from this index.",
              "quoteAmount": "the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "recipient": "the recipient of the funds.",
              "to": "retract offers until this index."
            }
          },
          "retractOffers(uint256,uint256)": {
            "details": "use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.",
            "params": {
              "from": "the start index.",
              "to": "the end index."
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setBaseQuoteTickOffset(uint256)": {
            "params": {
              "_baseQuoteTickOffset": "the new tick offset."
            }
          },
          "setGasprice(uint256)": {
            "params": {
              "gasprice": "the gasprice."
            }
          },
          "setGasreq(uint256)": {
            "params": {
              "gasreq": "the gasreq."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "setStepSize(uint256)": {
            "params": {
              "stepSize": "the step size."
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          },
          "withdrawFunds(uint256,uint256,address)": {
            "details": "it is up to the caller to make sure there are still enough funds for live offers.",
            "params": {
              "baseAmount": "the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "quoteAmount": "the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "recipient": "the address to which the withdrawn funds should be sent to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BASE()": {
            "notice": "base of the market Kandel is making"
          },
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "QUOTE()": {
            "notice": "quote of the market Kandel is making"
          },
          "RESERVE_ID()": {
            "notice": "identifier of this contract's reserve when using a router"
          },
          "TICK_SPACING()": {
            "notice": "tickSpacing of the market Kandel is making"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "baseQuoteTickOffset()": {
            "notice": "The tick offset for absolute price used for the on-chain geometric progression deployment in `createDistribution`. It is recommended that this is a multiple of tickSpacing for the offer lists to avoid rounding."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "createDistribution(uint256,uint256,int256,uint256,uint256,uint256,uint256,uint256,uint256)": {
            "notice": "Creates a distribution of bids and asks given by the parameters. Dual offers are included with gives=0."
          },
          "depositFunds(uint256,uint256)": {
            "notice": "Deposits funds to the contract's reserve"
          },
          "getOffer(uint8,uint256)": {
            "notice": "gets the Mangrove offer at the given index for the offer type."
          },
          "indexOfOfferId(uint8,uint256)": {
            "notice": "Maps an offer type and Mangrove offer id to index."
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "offerIdOfIndex(uint8,uint256)": {
            "notice": "maps index of offers to offer id on Mangrove."
          },
          "offeredVolume(uint8)": {
            "notice": "gets the total gives of all offers of the offer type."
          },
          "params()": {
            "notice": "Storage of the parameters for the strat."
          },
          "pending(uint8)": {
            "notice": "gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises."
          },
          "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "notice": "publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead)."
          },
          "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": {
            "notice": "Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.This function is not payable, use `populate` to fund along with populate."
          },
          "populateChunkFromOffset(uint256,uint256,int256,uint256,uint256,uint256)": {
            "notice": "publishes bids/asks according to a geometric distribution, and reads parameters from the Kandel instance."
          },
          "populateFromOffset(uint256,uint256,int256,uint256,uint256,uint256,uint256,(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "notice": "publishes bids/asks according to a geometric distribution, and sets all parameters according to inputs."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "reserveBalance(uint8)": {
            "notice": "the total balance available for the strat of the offered token for the given offer type."
          },
          "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": {
            "notice": "Retracts offers, withdraws funds, and withdraws free wei from Mangrove."
          },
          "retractOffers(uint256,uint256)": {
            "notice": "retracts and deprovisions offers of the distribution interval `[from, to[`."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setBaseQuoteTickOffset(uint256)": {
            "notice": "sets the tick offset if different from existing."
          },
          "setGasprice(uint256)": {
            "notice": "sets the gasprice for offers"
          },
          "setGasreq(uint256)": {
            "notice": "sets the gasreq (including router's gasreq) for offers"
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "setStepSize(uint256)": {
            "notice": "sets the step size"
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          },
          "withdrawFunds(uint256,uint256,address)": {
            "notice": "withdraws funds from the contract's reserve"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol": "Kandel"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol": {
        "keccak256": "0xad6cf41d92ed534d3f3cb63f0dec1dff71d7fa0b40e944aec300423c31111a97",
        "urls": [
          "bzz-raw://04e8d69f4ae8463c6822ff77e402e12d97e914a59654af88f8852b83666b9c5f",
          "dweb:/ipfs/Qmf7Fv85HNvXEcYyUnkKyRCjwoyhh3A9oGDD6BKiEQ78ZR"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol": {
        "keccak256": "0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd",
        "urls": [
          "bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518",
          "dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol": {
        "keccak256": "0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1",
        "urls": [
          "bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f",
          "dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol": {
        "keccak256": "0x49bf32ef326950c199d8dc7aad069779696d2aa54a6aeb65924c68fe2c93956b",
        "urls": [
          "bzz-raw://450bf42af8faa7f56d8102436f778ef2c3c9b91d80f21f742de78bf3de7b842b",
          "dweb:/ipfs/QmfFguoZ5wFcptVY7fXj7XHG68Eu7XNMum9GxMogz4Fo75"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol": {
        "keccak256": "0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09",
        "urls": [
          "bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510",
          "dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "keccak256": "0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c",
        "urls": [
          "bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b",
          "dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol": {
        "keccak256": "0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa",
        "urls": [
          "bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd",
          "dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/Kandel.sol",
    "id": 85603,
    "exportedSymbols": {
      "GeometricKandel": [
        87283
      ],
      "IMangrove": [
        54127
      ],
      "Kandel": [
        85602
      ],
      "MangroveOffer": [
        82367
      ],
      "MgvLib": [
        55985
      ],
      "OLKey": [
        55875
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:1401:109",
    "nodes": [
      {
        "id": 85531,
        "nodeType": "PragmaDirective",
        "src": "41:24:109",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 85533,
        "nodeType": "ImportDirective",
        "src": "67:75:109",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol",
        "file": "@mgv-strats/src/strategies/MangroveOffer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85603,
        "sourceUnit": 82368,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85532,
              "name": "MangroveOffer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82367,
              "src": "75:13:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85535,
        "nodeType": "ImportDirective",
        "src": "143:63:109",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/GeometricKandel.sol",
        "file": "./abstract/GeometricKandel.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85603,
        "sourceUnit": 87284,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85534,
              "name": "GeometricKandel",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87283,
              "src": "151:15:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85537,
        "nodeType": "ImportDirective",
        "src": "207:49:109",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
        "file": "@mgv/src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85603,
        "sourceUnit": 54128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85536,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54127,
              "src": "215:9:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85540,
        "nodeType": "ImportDirective",
        "src": "257:55:109",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85603,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85538,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55985,
              "src": "265:6:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 85539,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "273:5:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85602,
        "nodeType": "ContractDefinition",
        "src": "375:1066:109",
        "nodes": [
          {
            "id": 85576,
            "nodeType": "FunctionDefinition",
            "src": "780:360:109",
            "nodes": [],
            "body": {
              "id": 85575,
              "nodeType": "Block",
              "src": "930:210:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85564,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87949,
                        "src": "1082:4:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 85563,
                      "name": "__activate__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82070,
                      "src": "1069:12:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 85565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1069:18:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85566,
                  "nodeType": "ExpressionStatement",
                  "src": "1069:18:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85568,
                        "name": "QUOTE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87953,
                        "src": "1106:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 85567,
                      "name": "__activate__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82070,
                      "src": "1093:12:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 85569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1093:19:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85570,
                  "nodeType": "ExpressionStatement",
                  "src": "1093:19:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85572,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85552,
                        "src": "1128:6:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85571,
                      "name": "setGasreq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85966,
                      "src": "1118:9:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 85573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1118:17:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85574,
                  "nodeType": "ExpressionStatement",
                  "src": "1118:17:109"
                }
              ]
            },
            "documentation": {
              "id": 85544,
              "nodeType": "StructuredDocumentation",
              "src": "414:363:109",
              "text": "@notice Constructor\n@param mgv The Mangrove deployment.\n@param olKeyBaseQuote The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.\n@param gasreq the gasreq to use for offers\n@param reserveId identifier of this contract's reserve when using a router."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 85557,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85547,
                    "src": "888:3:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "id": 85558,
                    "name": "olKeyBaseQuote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85550,
                    "src": "893:14:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  {
                    "id": 85559,
                    "name": "gasreq",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85552,
                    "src": "909:6:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 85560,
                    "name": "reserveId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85554,
                    "src": "917:9:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 85561,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 85556,
                  "name": "GeometricKandel",
                  "nameLocations": [
                    "872:15:109"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87283,
                  "src": "872:15:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "872:55:109"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 85555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85547,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "802:3:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85576,
                  "src": "792:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 85546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85545,
                      "name": "IMangrove",
                      "nameLocations": [
                        "792:9:109"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "792:9:109"
                    },
                    "referencedDeclaration": 54127,
                    "src": "792:9:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85550,
                  "mutability": "mutable",
                  "name": "olKeyBaseQuote",
                  "nameLocation": "820:14:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85576,
                  "src": "807:27:109",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 85549,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85548,
                      "name": "OLKey",
                      "nameLocations": [
                        "807:5:109"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "807:5:109"
                    },
                    "referencedDeclaration": 55875,
                    "src": "807:5:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85552,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "841:6:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85576,
                  "src": "836:11:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85551,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:4:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85554,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "857:9:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85576,
                  "src": "849:17:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 85553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:76:109"
            },
            "returnParameters": {
              "id": 85562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:0:109"
            },
            "scope": 85602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85601,
            "nodeType": "FunctionDefinition",
            "src": "1175:264:109",
            "nodes": [],
            "body": {
              "id": 85600,
              "nodeType": "Block",
              "src": "1333:106:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85589,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85580,
                        "src": "1364:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      ],
                      "id": 85588,
                      "name": "transportSuccessfulOrder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86255,
                      "src": "1339:24:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$returns$__$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata)"
                      }
                    },
                    "id": 85590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:31:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85591,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:31:109"
                },
                {
                  "expression": {
                    "id": 85598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85592,
                      "name": "repostStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85586,
                      "src": "1376:12:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85595,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85580,
                          "src": "1417:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        {
                          "id": 85596,
                          "name": "makerData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85582,
                          "src": "1424:9:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 85593,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1391:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_Kandel_$85602_$",
                            "typeString": "type(contract super Kandel)"
                          }
                        },
                        "id": 85594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1397:19:109",
                        "memberName": "__posthookSuccess__",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85037,
                        "src": "1391:25:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                          "typeString": "function (struct MgvLib.SingleOrder calldata,bytes32) returns (bytes32)"
                        }
                      },
                      "id": 85597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1391:43:109",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1376:58:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 85599,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:58:109"
                }
              ]
            },
            "baseFunctions": [
              85037
            ],
            "documentation": {
              "id": 85577,
              "nodeType": "StructuredDocumentation",
              "src": "1144:28:109",
              "text": "@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__posthookSuccess__",
            "nameLocation": "1184:19:109",
            "overrides": {
              "id": 85584,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1287:8:109"
            },
            "parameters": {
              "id": 85583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85580,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "1232:5:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85601,
                  "src": "1204:33:109",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 85579,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85578,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "1204:6:109",
                        "1211:11:109"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "1204:18:109"
                    },
                    "referencedDeclaration": 55969,
                    "src": "1204:18:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85582,
                  "mutability": "mutable",
                  "name": "makerData",
                  "nameLocation": "1247:9:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85601,
                  "src": "1239:17:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85581,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1239:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:54:109"
            },
            "returnParameters": {
              "id": 85587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85586,
                  "mutability": "mutable",
                  "name": "repostStatus",
                  "nameLocation": "1317:12:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 85601,
                  "src": "1309:20:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 85585,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1309:7:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1308:22:109"
            },
            "scope": 85602,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 85542,
              "name": "GeometricKandel",
              "nameLocations": [
                "394:15:109"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87283,
              "src": "394:15:109"
            },
            "id": 85543,
            "nodeType": "InheritanceSpecifier",
            "src": "394:15:109"
          }
        ],
        "canonicalName": "Kandel",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 85541,
          "nodeType": "StructuredDocumentation",
          "src": "314:61:109",
          "text": "@title The Kandel strat with geometric price progression."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          85602,
          87283,
          86559,
          88101,
          87048,
          87442,
          87942,
          85066,
          82367,
          83578,
          56211,
          89841
        ],
        "name": "Kandel",
        "nameLocation": "384:6:109",
        "scope": 85603,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83467,
          83473,
          84653,
          85817,
          85822,
          85827,
          85835,
          85843,
          86584,
          86587,
          86590,
          86593,
          87071,
          87296,
          87306,
          87961,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 109
}