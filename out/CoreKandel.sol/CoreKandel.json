{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Credit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Debit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        }
      ],
      "name": "OfferListKey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "PopulateStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractEnd",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RetractStart",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasprice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetGasreq",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "SetIndexMapping",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetLength",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "SetReserveId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SetStepSize",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "QUOTE",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE_ID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TICK_SPACING",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "depositFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "Offer",
          "name": "offer",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "indexOfOfferId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "offerIdOfIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "offeredVolume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "volume",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "gasprice",
          "type": "uint32"
        },
        {
          "internalType": "uint24",
          "name": "gasreq",
          "type": "uint24"
        },
        {
          "internalType": "uint88",
          "name": "stepSize",
          "type": "uint88"
        },
        {
          "internalType": "uint112",
          "name": "pricePoints",
          "type": "uint112"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "pending",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ],
          "internalType": "struct CoreKandel.Params",
          "name": "parameters",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        }
      ],
      "name": "populate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "asks",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                },
                {
                  "internalType": "Tick",
                  "name": "tick",
                  "type": "int256"
                },
                {
                  "internalType": "uint256",
                  "name": "gives",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
          "name": "distribution",
          "type": "tuple"
        }
      ],
      "name": "populateChunk",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum OfferType",
          "name": "ba",
          "type": "uint8"
        }
      ],
      "name": "reserveBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "freeWei",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "retractAndWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "to",
          "type": "uint256"
        }
      ],
      "name": "retractOffers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasprice",
          "type": "uint256"
        }
      ],
      "name": "setGasprice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gasreq",
          "type": "uint256"
        }
      ],
      "name": "setGasreq",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stepSize",
          "type": "uint256"
        }
      ],
      "name": "setStepSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "baseAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "quoteAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "BASE()": "ec342ad0",
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "QUOTE()": "9c579839",
    "RESERVE_ID()": "fbc7d10b",
    "TICK_SPACING()": "46ca626b",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "checkList(address[])": "03eb17e2",
    "depositFunds(uint256,uint256)": "61638ed5",
    "getOffer(uint8,uint256)": "7692c328",
    "indexOfOfferId(uint8,uint256)": "ea0f394d",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "offerIdOfIndex(uint8,uint256)": "bfc353f9",
    "offeredVolume(uint8)": "d2e498fe",
    "params()": "cff0ab96",
    "pending(uint8)": "98ed5340",
    "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": "148b7cea",
    "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": "ace67902",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "reserveBalance(uint8)": "18acf82f",
    "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": "790532a1",
    "retractOffers(uint256,uint256)": "a2e241af",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setGasprice(uint256)": "fcaa7e2e",
    "setGasreq(uint256)": "34bd8931",
    "setRouter(address)": "c0d78655",
    "setStepSize(uint256)": "1450acd2",
    "withdrawFromMangrove(uint256,address)": "7144df24",
    "withdrawFunds(uint256,uint256,address)": "9ee8a91c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Credit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Debit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"}],\"name\":\"OfferListKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"PopulateStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractEnd\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RetractStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasprice\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetGasreq\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"SetIndexMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetLength\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"SetReserveId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SetStepSize\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUOTE\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TICK_SPACING\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"indexOfOfferId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"offerIdOfIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"offeredVolume\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"gasprice\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"gasreq\",\"type\":\"uint24\"},{\"internalType\":\"uint88\",\"name\":\"stepSize\",\"type\":\"uint88\"},{\"internalType\":\"uint112\",\"name\":\"pricePoints\",\"type\":\"uint112\"}],\"internalType\":\"struct CoreKandel.Params\",\"name\":\"parameters\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"name\":\"populate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"asks\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"Tick\",\"name\":\"tick\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"gives\",\"type\":\"uint256\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.DistributionOffer[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DirectWithBidsAndAsksDistribution.Distribution\",\"name\":\"distribution\",\"type\":\"tuple\"}],\"name\":\"populateChunk\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum OfferType\",\"name\":\"ba\",\"type\":\"uint8\"}],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"freeWei\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"retractAndWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"retractOffers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"}],\"name\":\"setGasprice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gasreq\",\"type\":\"uint256\"}],\"name\":\"setGasreq\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stepSize\",\"type\":\"uint256\"}],\"name\":\"setStepSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Credit(address,uint256)\":{\"params\":{\"amount\":\"the amount.\",\"token\":\"the asset. This is indexed so that RPC calls can filter on it.\"}},\"Debit(address,uint256)\":{\"params\":{\"amount\":\"the amount.\",\"token\":\"the asset. This is indexed so that RPC calls can filter on it.\"}},\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"OfferListKey(bytes32)\":{\"params\":{\"olKeyHash\":\"of the market Kandel is making\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetGasprice(uint256)\":{\"params\":{\"value\":\"the gasprice for offers.\"}},\"SetGasreq(uint256)\":{\"params\":{\"value\":\"the gasreq (including router's gasreq) for offers\"}},\"SetIndexMapping(uint8,uint256,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\",\"offerId\":\"the Mangrove offer id.\"}},\"SetLength(uint256)\":{\"params\":{\"value\":\"the length.\"}},\"SetReserveId(address)\":{\"params\":{\"reserveId\":\"identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}},\"SetStepSize(uint256)\":{\"params\":{\"value\":\"the step size in amount of price points to jump for posting dual offer\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"constructor\":{\"params\":{\"gasreq\":\"the gasreq to use for offers\",\"mgv\":\"The Mangrove deployment.\",\"olKeyBaseQuote\":\"The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.\",\"reserveId\":\"identifier of this contract's reserve when using a router.\"}},\"depositFunds(uint256,uint256)\":{\"params\":{\"baseAmount\":\"the amount of base tokens to deposit.\",\"quoteAmount\":\"the amount of quote tokens to deposit.\"}},\"getOffer(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type.\",\"index\":\"the index.\"},\"returns\":{\"offer\":\"the Mangrove offer.\"}},\"indexOfOfferId(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"offerId\":\"the Mangrove offer id.\"},\"returns\":{\"index\":\"the index.\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"offerIdOfIndex(uint8,uint256)\":{\"params\":{\"ba\":\"the offer type\",\"index\":\"the index\"},\"returns\":{\"offerId\":\"the Mangrove offer id.\"}},\"offeredVolume(uint8)\":{\"details\":\"function is very gas costly, for external calls only.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"volume\":\"the total gives of all offers of the offer type.\"}},\"pending(uint8)\":{\"details\":\"Gas costly function, better suited for off chain calls.\",\"params\":{\"ba\":\"offer type.\"},\"returns\":{\"_0\":\"the pending amount\"}},\"populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"details\":\"This function is used at initialization and can fund with provision for the offers.Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.If this function is invoked with different pricePoints or stepSize, then first retract all offers.msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens).\",\"params\":{\"baseAmount\":\"base amount to deposit\",\"distribution\":\"the distribution of bids and asks to populate\",\"parameters\":\"the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.\",\"quoteAmount\":\"quote amount to deposit\"}},\"populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))\":{\"params\":{\"distribution\":\"the distribution of bids and asks to populate\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"reserveBalance(uint8)\":{\"params\":{\"ba\":\"the offer type.\"},\"returns\":{\"balance\":\"the balance of the token.\"}},\"retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)\":{\"params\":{\"baseAmount\":\"the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"freeWei\":\"the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.\",\"from\":\"retract offers starting from this index.\",\"quoteAmount\":\"the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"recipient\":\"the recipient of the funds.\",\"to\":\"retract offers until this index.\"}},\"retractOffers(uint256,uint256)\":{\"details\":\"use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.\",\"params\":{\"from\":\"the start index.\",\"to\":\"the end index.\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setGasprice(uint256)\":{\"params\":{\"gasprice\":\"the gasprice.\"}},\"setGasreq(uint256)\":{\"params\":{\"gasreq\":\"the gasreq.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"setStepSize(uint256)\":{\"params\":{\"stepSize\":\"the step size.\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}},\"withdrawFunds(uint256,uint256,address)\":{\"details\":\"it is up to the caller to make sure there are still enough funds for live offers.\",\"params\":{\"baseAmount\":\"the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"quoteAmount\":\"the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\",\"recipient\":\"the address to which the withdrawn funds should be sent to.\"}}},\"title\":\"the core of Kandel strategies which creates or updates a dual offer whenever an offer is taken.\",\"version\":1},\"userdoc\":{\"events\":{\"Credit(address,uint256)\":{\"notice\":\"the Kandel instance is credited of `amount` by its owner.By emitting this data, an indexer will be able to keep track of what credits are made.\"},\"Debit(address,uint256)\":{\"notice\":\"the Kandel instance is debited of `amount` by its owner.By emitting this data, an indexer will be able to keep track of what debits are made.\"},\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"OfferListKey(bytes32)\":{\"notice\":\"The traded offer listwe only emit this, so that the events for a Kandel is self contained. If one uses the KandelSeeder to deploy, then this information is already available from NewKandel or NewAaveKandel events.\"},\"PopulateEnd()\":{\"notice\":\"logs the end of a call to populateBy emitting this, an indexer will know that the previous PopulateStart event is over.\"},\"PopulateStart()\":{\"notice\":\"logs the start of a call to populateBy emitting this, an indexer will be able to know that the following events are in the context of populate.\"},\"RetractEnd()\":{\"notice\":\"logs the end of a call to retractOffersBy emitting this, an indexer will know that the previous RetractStart event is over.\"},\"RetractStart()\":{\"notice\":\"logs the start of a call to retractOffersBy emitting this, an indexer will be able to know that the following events are in the context of retract.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetGasprice(uint256)\":{\"notice\":\"the gasprice has been set.By emitting this data, an indexer will be able to keep track of what gasprice is used.\"},\"SetGasreq(uint256)\":{\"notice\":\"the gasreq has been set.By emitting this data, an indexer will be able to keep track of what gasreq is used.\"},\"SetIndexMapping(uint8,uint256,uint256)\":{\"notice\":\"a new offer of type `ba` with `offerId` was created at price `index`By emitting this data, an indexer will be able to keep track of what offer has what index.\"},\"SetLength(uint256)\":{\"notice\":\"the length of the index has been set.By emitting this data, an indexer will be able to keep track of what length is used.\"},\"SetReserveId(address)\":{\"notice\":\"`reserveId` is set in the constructorby emitting this event, an indexer will be able to keep track of what reserve is used.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"},\"SetStepSize(uint256)\":{\"notice\":\"the step size has been set.\"}},\"kind\":\"user\",\"methods\":{\"BASE()\":{\"notice\":\"base of the market Kandel is making\"},\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"QUOTE()\":{\"notice\":\"quote of the market Kandel is making\"},\"RESERVE_ID()\":{\"notice\":\"identifier of this contract's reserve when using a router\"},\"TICK_SPACING()\":{\"notice\":\"tickSpacing of the market Kandel is making\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"constructor\":{\"notice\":\"Constructor\"},\"depositFunds(uint256,uint256)\":{\"notice\":\"Deposits funds to the contract's reserve\"},\"getOffer(uint8,uint256)\":{\"notice\":\"gets the Mangrove offer at the given index for the offer type.\"},\"indexOfOfferId(uint8,uint256)\":{\"notice\":\"Maps an offer type and Mangrove offer id to index.\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"offerIdOfIndex(uint8,uint256)\":{\"notice\":\"maps index of offers to offer id on Mangrove.\"},\"offeredVolume(uint8)\":{\"notice\":\"gets the total gives of all offers of the offer type.\"},\"params()\":{\"notice\":\"Storage of the parameters for the strat.\"},\"pending(uint8)\":{\"notice\":\"gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises.\"},\"populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)\":{\"notice\":\"publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).\"},\"populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))\":{\"notice\":\"Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.This function is not payable, use `populate` to fund along with populate.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"reserveBalance(uint8)\":{\"notice\":\"the total balance available for the strat of the offered token for the given offer type.\"},\"retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Retracts offers, withdraws funds, and withdraws free wei from Mangrove.\"},\"retractOffers(uint256,uint256)\":{\"notice\":\"retracts and deprovisions offers of the distribution interval `[from, to[`.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setGasprice(uint256)\":{\"notice\":\"sets the gasprice for offers\"},\"setGasreq(uint256)\":{\"notice\":\"sets the gasreq (including router's gasreq) for offers\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"setStepSize(uint256)\":{\"notice\":\"sets the step size\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"},\"withdrawFunds(uint256,uint256,address)\":{\"notice\":\"withdraws funds from the contract's reserve\"}},\"notice\":\"`CoreKandel` is agnostic to the chosen price distribution.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol\":\"CoreKandel\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol\":{\"keccak256\":\"0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518\",\"dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol\":{\"keccak256\":\"0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f\",\"dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol\":{\"keccak256\":\"0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510\",\"dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol\":{\"keccak256\":\"0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b\",\"dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol\":{\"keccak256\":\"0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd\",\"dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Credit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Debit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OfferListKey",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "PopulateStart",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractEnd",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "RetractStart",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasprice",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetGasreq",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetIndexMapping",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetLength",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetReserveId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetStepSize",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BASE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "QUOTE",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RESERVE_ID",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TICK_SPACING",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositFunds"
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "indexOfOfferId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerIdOfIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offeredVolume",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "volume",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "params",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "gasprice",
              "type": "uint32"
            },
            {
              "internalType": "uint24",
              "name": "gasreq",
              "type": "uint24"
            },
            {
              "internalType": "uint88",
              "name": "stepSize",
              "type": "uint88"
            },
            {
              "internalType": "uint112",
              "name": "pricePoints",
              "type": "uint112"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pending",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct CoreKandel.Params",
              "name": "parameters",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "gasprice",
                  "type": "uint32"
                },
                {
                  "internalType": "uint24",
                  "name": "gasreq",
                  "type": "uint24"
                },
                {
                  "internalType": "uint88",
                  "name": "stepSize",
                  "type": "uint88"
                },
                {
                  "internalType": "uint112",
                  "name": "pricePoints",
                  "type": "uint112"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "populate"
        },
        {
          "inputs": [
            {
              "internalType": "struct DirectWithBidsAndAsksDistribution.Distribution",
              "name": "distribution",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "asks",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct DirectWithBidsAndAsksDistribution.DistributionOffer[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "index",
                      "type": "uint256"
                    },
                    {
                      "internalType": "Tick",
                      "name": "tick",
                      "type": "int256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gives",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "populateChunk"
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum OfferType",
              "name": "ba",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "reserveBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "freeWei",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractAndWithdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "from",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "to",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retractOffers"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasprice",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasprice"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "gasreq",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setGasreq"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "stepSize",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStepSize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "baseAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quoteAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFunds"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "constructor": {
            "params": {
              "gasreq": "the gasreq to use for offers",
              "mgv": "The Mangrove deployment.",
              "olKeyBaseQuote": "The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.",
              "reserveId": "identifier of this contract's reserve when using a router."
            }
          },
          "depositFunds(uint256,uint256)": {
            "params": {
              "baseAmount": "the amount of base tokens to deposit.",
              "quoteAmount": "the amount of quote tokens to deposit."
            }
          },
          "getOffer(uint8,uint256)": {
            "params": {
              "ba": "the offer type.",
              "index": "the index."
            },
            "returns": {
              "offer": "the Mangrove offer."
            }
          },
          "indexOfOfferId(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "offerId": "the Mangrove offer id."
            },
            "returns": {
              "index": "the index."
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "offerIdOfIndex(uint8,uint256)": {
            "params": {
              "ba": "the offer type",
              "index": "the index"
            },
            "returns": {
              "offerId": "the Mangrove offer id."
            }
          },
          "offeredVolume(uint8)": {
            "details": "function is very gas costly, for external calls only.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "volume": "the total gives of all offers of the offer type."
            }
          },
          "pending(uint8)": {
            "details": "Gas costly function, better suited for off chain calls.",
            "params": {
              "ba": "offer type."
            },
            "returns": {
              "_0": "the pending amount"
            }
          },
          "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "details": "This function is used at initialization and can fund with provision for the offers.Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.If this function is invoked with different pricePoints or stepSize, then first retract all offers.msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens).",
            "params": {
              "baseAmount": "base amount to deposit",
              "distribution": "the distribution of bids and asks to populate",
              "parameters": "the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.",
              "quoteAmount": "quote amount to deposit"
            }
          },
          "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": {
            "params": {
              "distribution": "the distribution of bids and asks to populate"
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "reserveBalance(uint8)": {
            "params": {
              "ba": "the offer type."
            },
            "returns": {
              "balance": "the balance of the token."
            }
          },
          "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": {
            "params": {
              "baseAmount": "the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "freeWei": "the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.",
              "from": "retract offers starting from this index.",
              "quoteAmount": "the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "recipient": "the recipient of the funds.",
              "to": "retract offers until this index."
            }
          },
          "retractOffers(uint256,uint256)": {
            "details": "use in conjunction of `withdrawFromMangrove` if the user wishes to redeem the available WEIs.",
            "params": {
              "from": "the start index.",
              "to": "the end index."
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setGasprice(uint256)": {
            "params": {
              "gasprice": "the gasprice."
            }
          },
          "setGasreq(uint256)": {
            "params": {
              "gasreq": "the gasreq."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "setStepSize(uint256)": {
            "params": {
              "stepSize": "the step size."
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          },
          "withdrawFunds(uint256,uint256,address)": {
            "details": "it is up to the caller to make sure there are still enough funds for live offers.",
            "params": {
              "baseAmount": "the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "quoteAmount": "the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.",
              "recipient": "the address to which the withdrawn funds should be sent to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "BASE()": {
            "notice": "base of the market Kandel is making"
          },
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "QUOTE()": {
            "notice": "quote of the market Kandel is making"
          },
          "RESERVE_ID()": {
            "notice": "identifier of this contract's reserve when using a router"
          },
          "TICK_SPACING()": {
            "notice": "tickSpacing of the market Kandel is making"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "constructor": {
            "notice": "Constructor"
          },
          "depositFunds(uint256,uint256)": {
            "notice": "Deposits funds to the contract's reserve"
          },
          "getOffer(uint8,uint256)": {
            "notice": "gets the Mangrove offer at the given index for the offer type."
          },
          "indexOfOfferId(uint8,uint256)": {
            "notice": "Maps an offer type and Mangrove offer id to index."
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "offerIdOfIndex(uint8,uint256)": {
            "notice": "maps index of offers to offer id on Mangrove."
          },
          "offeredVolume(uint8)": {
            "notice": "gets the total gives of all offers of the offer type."
          },
          "params()": {
            "notice": "Storage of the parameters for the strat."
          },
          "pending(uint8)": {
            "notice": "gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises."
          },
          "populate(((uint256,int256,uint256)[],(uint256,int256,uint256)[]),(uint32,uint24,uint88,uint112),uint256,uint256)": {
            "notice": "publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead)."
          },
          "populateChunk(((uint256,int256,uint256)[],(uint256,int256,uint256)[]))": {
            "notice": "Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.This function is not payable, use `populate` to fund along with populate."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "reserveBalance(uint8)": {
            "notice": "the total balance available for the strat of the offered token for the given offer type."
          },
          "retractAndWithdraw(uint256,uint256,uint256,uint256,uint256,address)": {
            "notice": "Retracts offers, withdraws funds, and withdraws free wei from Mangrove."
          },
          "retractOffers(uint256,uint256)": {
            "notice": "retracts and deprovisions offers of the distribution interval `[from, to[`."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setGasprice(uint256)": {
            "notice": "sets the gasprice for offers"
          },
          "setGasreq(uint256)": {
            "notice": "sets the gasreq (including router's gasreq) for offers"
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "setStepSize(uint256)": {
            "notice": "sets the step size"
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          },
          "withdrawFunds(uint256,uint256,address)": {
            "notice": "withdraws funds from the contract's reserve"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol": "CoreKandel"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol": {
        "keccak256": "0x95a35ccefbafb8a79832f312b8fea6d3b84933521391c1396eb410a852e6bffd",
        "urls": [
          "bzz-raw://52c938e85d2d3227845345776977dbc6cd53fc27023f0decc08c66acab6d1518",
          "dweb:/ipfs/QmcSu24Udjh8nTy7VwzTjoLKmAUXfJXAv1jKbaD7PGvZiY"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol": {
        "keccak256": "0x6e424c8168ba612e53100f47ed27d73d2702d11a8ebee291944b6508f87df3c1",
        "urls": [
          "bzz-raw://6d71dc3b59c99071a5240764290f866a32f7114bf1c57a3d36c5ccc46f24544f",
          "dweb:/ipfs/QmRfe1i9751BfLiyWE9JpHJP6pxXzPvUWQMhiEj1qhbait"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/HasIndexedBidsAndAsks.sol": {
        "keccak256": "0xfb0f5e7bb82b3f7c32b05f404deeb56dcad54d61952b8b0126af006456228c09",
        "urls": [
          "bzz-raw://a83d4d9d0ffa6334e8ebaf2e8f3fadc4666348fe5e0da2b825630456c3316510",
          "dweb:/ipfs/QmTPYLRvhf6PTBDbFfBrjSxekvz9fPcfzaK8sKgZCazKb3"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol": {
        "keccak256": "0x58ff44666d4294134a998683f3ab26d5af8d722e299f794d5b928c8cf0fe134c",
        "urls": [
          "bzz-raw://7e5d9eb5c0ce7ed0e80f628289c785d81c16bdfe33d0c17aef333798820bac7b",
          "dweb:/ipfs/QmQ5VpGVx4XhpxZocQs7wFZMhV3SFoCf4xBCN7z86qiEGA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol": {
        "keccak256": "0x2891ec6af9a40dffeff023e5baed8f3be28b88a4a8c1bb8c6296ead493398eaa",
        "urls": [
          "bzz-raw://6e2b1f6a8411d23b7414866915dfe37f29aad66a9ffabae066d0d03ae0213bcd",
          "dweb:/ipfs/QmVYfbQfHqhzZnge33o92LTRPHpkGTxkv26GiMsJb3wd5N"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/CoreKandel.sol",
    "id": 86560,
    "exportedSymbols": {
      "CoreKandel": [
        86559
      ],
      "DirectWithBidsAndAsksDistribution": [
        87048
      ],
      "IERC20": [
        88
      ],
      "IMangrove": [
        54127
      ],
      "KandelLib": [
        87900
      ],
      "MAX_SAFE_VOLUME": [
        4436
      ],
      "MgvLib": [
        55985
      ],
      "OLKey": [
        55875
      ],
      "Offer": [
        66949
      ],
      "OfferType": [
        87910
      ],
      "TradesBaseQuotePair": [
        88101
      ],
      "TransferLib": [
        4306
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:13914:112",
    "nodes": [
      {
        "id": 85787,
        "nodeType": "PragmaDirective",
        "src": "41:24:112",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 85791,
        "nodeType": "ImportDirective",
        "src": "67:62:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85788,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55985,
              "src": "75:6:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 85789,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "83:5:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 85790,
              "name": "Offer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66949,
              "src": "90:5:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85793,
        "nodeType": "ImportDirective",
        "src": "130:49:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
        "file": "@mgv/src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 54128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85792,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54127,
              "src": "138:9:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85795,
        "nodeType": "ImportDirective",
        "src": "180:43:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85794,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "188:6:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85797,
        "nodeType": "ImportDirective",
        "src": "224:52:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol",
        "file": "./TradesBaseQuotePair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 88102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85796,
              "name": "OfferType",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87910,
              "src": "232:9:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85799,
        "nodeType": "ImportDirective",
        "src": "277:90:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/DirectWithBidsAndAsksDistribution.sol",
        "file": "./DirectWithBidsAndAsksDistribution.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 87049,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85798,
              "name": "DirectWithBidsAndAsksDistribution",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87048,
              "src": "285:33:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85801,
        "nodeType": "ImportDirective",
        "src": "368:62:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/TradesBaseQuotePair.sol",
        "file": "./TradesBaseQuotePair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 88102,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85800,
              "name": "TradesBaseQuotePair",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88101,
              "src": "376:19:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85803,
        "nodeType": "ImportDirective",
        "src": "431:53:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol",
        "file": "@mgv/lib/TransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 4307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85802,
              "name": "TransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4306,
              "src": "439:11:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85805,
        "nodeType": "ImportDirective",
        "src": "485:42:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/market_making/kandel/abstract/KandelLib.sol",
        "file": "./KandelLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 87901,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85804,
              "name": "KandelLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87900,
              "src": "493:9:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85807,
        "nodeType": "ImportDirective",
        "src": "528:60:112",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol",
        "file": "@mgv/lib/core/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 86560,
        "sourceUnit": 4449,
        "symbolAliases": [
          {
            "foreign": {
              "id": 85806,
              "name": "MAX_SAFE_VOLUME",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4436,
              "src": "536:15:112",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86559,
        "nodeType": "ContractDefinition",
        "src": "766:13188:112",
        "nodes": [
          {
            "id": 85817,
            "nodeType": "EventDefinition",
            "src": "1040:30:112",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 85813,
              "nodeType": "StructuredDocumentation",
              "src": "857:180:112",
              "text": "@notice the gasprice has been set.\n@param value the gasprice for offers.\n@notice By emitting this data, an indexer will be able to keep track of what gasprice is used."
            },
            "eventSelector": "dbebd814ae648f654dcc50c734aa76e55a32e96b7d85303a08e2ddf11874a0dd",
            "name": "SetGasprice",
            "nameLocation": "1046:11:112",
            "parameters": {
              "id": 85816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85815,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1063:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85817,
                  "src": "1058:10:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85814,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:12:112"
            }
          },
          {
            "id": 85822,
            "nodeType": "EventDefinition",
            "src": "1278:28:112",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 85818,
              "nodeType": "StructuredDocumentation",
              "src": "1074:201:112",
              "text": "@notice the gasreq has been set.\n@param value the gasreq (including router's gasreq) for offers\n@notice By emitting this data, an indexer will be able to keep track of what gasreq is used."
            },
            "eventSelector": "afef3ad374c0b972e3c793be825735801fa05cc4c67157d98d9a111b4027988d",
            "name": "SetGasreq",
            "nameLocation": "1284:9:112",
            "parameters": {
              "id": 85821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1299:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85822,
                  "src": "1294:10:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85819,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1293:12:112"
            }
          },
          {
            "id": 85827,
            "nodeType": "EventDefinition",
            "src": "1440:30:112",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 85823,
              "nodeType": "StructuredDocumentation",
              "src": "1310:127:112",
              "text": "@notice the step size has been set.\n@param value the step size in amount of price points to jump for posting dual offer"
            },
            "eventSelector": "0408193baae9f2730f7be76d9be93983ed2dd45af2305c085920b8f00c25bbcd",
            "name": "SetStepSize",
            "nameLocation": "1446:11:112",
            "parameters": {
              "id": 85826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85825,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1463:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85827,
                  "src": "1458:10:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85824,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:12:112"
            }
          },
          {
            "id": 85835,
            "nodeType": "EventDefinition",
            "src": "1757:48:112",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 85828,
              "nodeType": "StructuredDocumentation",
              "src": "1474:280:112",
              "text": "@notice the Kandel instance is credited of `amount` by its owner.\n@param token the asset. This is indexed so that RPC calls can filter on it.\n@param amount the amount.\n@notice By emitting this data, an indexer will be able to keep track of what credits are made."
            },
            "eventSelector": "1bbf55d483639f8103dc4e035af71a4fbdb16c80be740fa3eef81198acefa094",
            "name": "Credit",
            "nameLocation": "1763:6:112",
            "parameters": {
              "id": 85834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85831,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1785:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85835,
                  "src": "1770:20:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 85830,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85829,
                      "name": "IERC20",
                      "nameLocations": [
                        "1770:6:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "1770:6:112"
                    },
                    "referencedDeclaration": 88,
                    "src": "1770:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85833,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1797:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85835,
                  "src": "1792:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85832,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1769:35:112"
            }
          },
          {
            "id": 85843,
            "nodeType": "EventDefinition",
            "src": "2090:47:112",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 85836,
              "nodeType": "StructuredDocumentation",
              "src": "1809:278:112",
              "text": "@notice the Kandel instance is debited of `amount` by its owner.\n@param token the asset. This is indexed so that RPC calls can filter on it.\n@param amount the amount.\n@notice By emitting this data, an indexer will be able to keep track of what debits are made."
            },
            "eventSelector": "59c79d79be0fadf59fe689b6952b7ebe90201a3a1f00d4a31982377890bc6046",
            "name": "Debit",
            "nameLocation": "2096:5:112",
            "parameters": {
              "id": 85842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85839,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2117:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85843,
                  "src": "2102:20:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 85838,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85837,
                      "name": "IERC20",
                      "nameLocations": [
                        "2102:6:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "2102:6:112"
                    },
                    "referencedDeclaration": 88,
                    "src": "2102:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85841,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2129:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85843,
                  "src": "2124:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85840,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2124:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:35:112"
            }
          },
          {
            "id": 85853,
            "nodeType": "StructDefinition",
            "src": "2455:105:112",
            "nodes": [],
            "canonicalName": "CoreKandel.Params",
            "documentation": {
              "id": 85844,
              "nodeType": "StructuredDocumentation",
              "src": "2141:311:112",
              "text": "@notice Core Kandel parameters\n@param gasprice the gasprice to use for offers. Must hold on 26 bits.\n@param gasreq the gasreq to use for offers\n@param stepSize in amount of price points to jump for posting dual offer.\n@param pricePoints the number of price points for the Kandel instance."
            },
            "members": [
              {
                "constant": false,
                "id": 85846,
                "mutability": "mutable",
                "name": "gasprice",
                "nameLocation": "2482:8:112",
                "nodeType": "VariableDeclaration",
                "scope": 85853,
                "src": "2475:15:112",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 85845,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2475:6:112",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85848,
                "mutability": "mutable",
                "name": "gasreq",
                "nameLocation": "2503:6:112",
                "nodeType": "VariableDeclaration",
                "scope": 85853,
                "src": "2496:13:112",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint24",
                  "typeString": "uint24"
                },
                "typeName": {
                  "id": 85847,
                  "name": "uint24",
                  "nodeType": "ElementaryTypeName",
                  "src": "2496:6:112",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85850,
                "mutability": "mutable",
                "name": "stepSize",
                "nameLocation": "2522:8:112",
                "nodeType": "VariableDeclaration",
                "scope": 85853,
                "src": "2515:15:112",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint88",
                  "typeString": "uint88"
                },
                "typeName": {
                  "id": 85849,
                  "name": "uint88",
                  "nodeType": "ElementaryTypeName",
                  "src": "2515:6:112",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint88",
                    "typeString": "uint88"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 85852,
                "mutability": "mutable",
                "name": "pricePoints",
                "nameLocation": "2544:11:112",
                "nodeType": "VariableDeclaration",
                "scope": 85853,
                "src": "2536:19:112",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint112",
                  "typeString": "uint112"
                },
                "typeName": {
                  "id": 85851,
                  "name": "uint112",
                  "nodeType": "ElementaryTypeName",
                  "src": "2536:7:112",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Params",
            "nameLocation": "2462:6:112",
            "scope": 86559,
            "visibility": "public"
          },
          {
            "id": 85857,
            "nodeType": "VariableDeclaration",
            "src": "2618:20:112",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 85854,
              "nodeType": "StructuredDocumentation",
              "src": "2564:51:112",
              "text": "@notice Storage of the parameters for the strat."
            },
            "functionSelector": "cff0ab96",
            "mutability": "mutable",
            "name": "params",
            "nameLocation": "2632:6:112",
            "scope": 86559,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Params_$85853_storage",
              "typeString": "struct CoreKandel.Params"
            },
            "typeName": {
              "id": 85856,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 85855,
                "name": "Params",
                "nameLocations": [
                  "2618:6:112"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 85853,
                "src": "2618:6:112"
              },
              "referencedDeclaration": 85853,
              "src": "2618:6:112",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                "typeString": "struct CoreKandel.Params"
              }
            },
            "visibility": "public"
          },
          {
            "id": 85902,
            "nodeType": "FunctionDefinition",
            "src": "2711:311:112",
            "nodes": [],
            "body": {
              "id": 85901,
              "nodeType": "Block",
              "src": "2764:258:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85866
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85866,
                      "mutability": "mutable",
                      "name": "stepSize_",
                      "nameLocation": "2777:9:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 85901,
                      "src": "2770:16:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      },
                      "typeName": {
                        "id": 85865,
                        "name": "uint88",
                        "nodeType": "ElementaryTypeName",
                        "src": "2770:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85871,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85869,
                        "name": "stepSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85860,
                        "src": "2796:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2789:6:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint88_$",
                        "typeString": "type(uint88)"
                      },
                      "typeName": {
                        "id": 85867,
                        "name": "uint88",
                        "nodeType": "ElementaryTypeName",
                        "src": "2789:6:112",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 85870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2789:16:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint88",
                      "typeString": "uint88"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2770:35:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85873,
                          "name": "stepSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85860,
                          "src": "2819:8:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 85874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2830:1:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2819:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f7374657053697a65546f6f4c6f77",
                        "id": 85876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2833:23:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6931d95a9c056d5946b52d92c5a2d0570a5e403e4082ec5e4b0efbad9d7206",
                          "typeString": "literal_string \"Kandel/stepSizeTooLow\""
                        },
                        "value": "Kandel/stepSizeTooLow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6931d95a9c056d5946b52d92c5a2d0570a5e403e4082ec5e4b0efbad9d7206",
                          "typeString": "literal_string \"Kandel/stepSizeTooLow\""
                        }
                      ],
                      "id": 85872,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2811:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:46:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85878,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:46:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 85887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85880,
                            "name": "stepSize_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85866,
                            "src": "2871:9:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint88",
                              "typeString": "uint88"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 85881,
                            "name": "stepSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85860,
                            "src": "2884:8:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2871:21:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 85886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 85883,
                            "name": "stepSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85860,
                            "src": "2896:8:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 85884,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85857,
                              "src": "2907:6:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Params_$85853_storage",
                                "typeString": "struct CoreKandel.Params storage ref"
                              }
                            },
                            "id": 85885,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2914:11:112",
                            "memberName": "pricePoints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85852,
                            "src": "2907:18:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "2896:29:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2871:54:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f7374657053697a65546f6f48696768",
                        "id": 85888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2927:24:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1281b60395aeb7837872623be6e243ecf4cdeb3822fb2b6dd9c55da6f0dba6b",
                          "typeString": "literal_string \"Kandel/stepSizeTooHigh\""
                        },
                        "value": "Kandel/stepSizeTooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1281b60395aeb7837872623be6e243ecf4cdeb3822fb2b6dd9c55da6f0dba6b",
                          "typeString": "literal_string \"Kandel/stepSizeTooHigh\""
                        }
                      ],
                      "id": 85879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2863:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2863:89:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85890,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:89:112"
                },
                {
                  "expression": {
                    "id": 85895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 85891,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85857,
                        "src": "2958:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage",
                          "typeString": "struct CoreKandel.Params storage ref"
                        }
                      },
                      "id": 85893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2965:8:112",
                      "memberName": "stepSize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85850,
                      "src": "2958:15:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85894,
                      "name": "stepSize_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85866,
                      "src": "2976:9:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "src": "2958:27:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint88",
                      "typeString": "uint88"
                    }
                  },
                  "id": 85896,
                  "nodeType": "ExpressionStatement",
                  "src": "2958:27:112"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 85898,
                        "name": "stepSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85860,
                        "src": "3008:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85897,
                      "name": "SetStepSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85827,
                      "src": "2996:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 85899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:21:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85900,
                  "nodeType": "EmitStatement",
                  "src": "2991:26:112"
                }
              ]
            },
            "documentation": {
              "id": 85858,
              "nodeType": "StructuredDocumentation",
              "src": "2643:65:112",
              "text": "@notice sets the step size\n@param stepSize the step size."
            },
            "functionSelector": "1450acd2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85863,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85862,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "2754:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "2754:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "2754:9:112"
              }
            ],
            "name": "setStepSize",
            "nameLocation": "2720:11:112",
            "parameters": {
              "id": 85861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85860,
                  "mutability": "mutable",
                  "name": "stepSize",
                  "nameLocation": "2737:8:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85902,
                  "src": "2732:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85859,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2732:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2731:15:112"
            },
            "returnParameters": {
              "id": 85864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2764:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85933,
            "nodeType": "FunctionDefinition",
            "src": "3103:189:112",
            "nodes": [],
            "body": {
              "id": 85932,
              "nodeType": "Block",
              "src": "3156:136:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85911,
                          "name": "gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85905,
                          "src": "3170:8:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_67108864_by_1",
                            "typeString": "int_const 67108864"
                          },
                          "id": 85914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31",
                            "id": 85912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3181:1:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<<",
                          "rightExpression": {
                            "hexValue": "3236",
                            "id": 85913,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3186:2:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_26_by_1",
                              "typeString": "int_const 26"
                            },
                            "value": "26"
                          },
                          "src": "3181:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_67108864_by_1",
                            "typeString": "int_const 67108864"
                          }
                        },
                        "src": "3170:18:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f6761737072696365546f6f48696768",
                        "id": 85916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3190:24:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eedf11ec700edff58bd3a123962b072f16024c34baf591fd03183775d7bffc73",
                          "typeString": "literal_string \"Kandel/gaspriceTooHigh\""
                        },
                        "value": "Kandel/gaspriceTooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eedf11ec700edff58bd3a123962b072f16024c34baf591fd03183775d7bffc73",
                          "typeString": "literal_string \"Kandel/gaspriceTooHigh\""
                        }
                      ],
                      "id": 85910,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3162:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:53:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85918,
                  "nodeType": "ExpressionStatement",
                  "src": "3162:53:112"
                },
                {
                  "expression": {
                    "id": 85926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 85919,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85857,
                        "src": "3221:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage",
                          "typeString": "struct CoreKandel.Params storage ref"
                        }
                      },
                      "id": 85921,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3228:8:112",
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85846,
                      "src": "3221:15:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 85924,
                          "name": "gasprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85905,
                          "src": "3246:8:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 85923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3239:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 85922,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3239:6:112",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 85925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3239:16:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3221:34:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 85927,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:34:112"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 85929,
                        "name": "gasprice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85905,
                        "src": "3278:8:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85928,
                      "name": "SetGasprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85817,
                      "src": "3266:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 85930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3266:21:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85931,
                  "nodeType": "EmitStatement",
                  "src": "3261:26:112"
                }
              ]
            },
            "documentation": {
              "id": 85903,
              "nodeType": "StructuredDocumentation",
              "src": "3026:74:112",
              "text": "@notice sets the gasprice for offers\n@param gasprice the gasprice."
            },
            "functionSelector": "fcaa7e2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85908,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85907,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "3146:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "3146:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "3146:9:112"
              }
            ],
            "name": "setGasprice",
            "nameLocation": "3112:11:112",
            "parameters": {
              "id": 85906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85905,
                  "mutability": "mutable",
                  "name": "gasprice",
                  "nameLocation": "3129:8:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85933,
                  "src": "3124:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85904,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3123:15:112"
            },
            "returnParameters": {
              "id": 85909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3156:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 85966,
            "nodeType": "FunctionDefinition",
            "src": "3395:205:112",
            "nodes": [],
            "body": {
              "id": 85965,
              "nodeType": "Block",
              "src": "3444:156:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85942,
                      "mutability": "mutable",
                      "name": "gasreq_",
                      "nameLocation": "3457:7:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 85965,
                      "src": "3450:14:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 85941,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3450:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85947,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 85945,
                        "name": "gasreq",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85936,
                        "src": "3474:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 85944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3467:6:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint24_$",
                        "typeString": "type(uint24)"
                      },
                      "typeName": {
                        "id": 85943,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3467:6:112",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 85946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:14:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3450:31:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 85949,
                          "name": "gasreq_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85942,
                          "src": "3495:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 85950,
                          "name": "gasreq",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85936,
                          "src": "3506:6:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3495:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f676173726571546f6f48696768",
                        "id": 85952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:22:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25858da7776640e51e55c3679a469d880a316591705d84dfc8289e32f7958116",
                          "typeString": "literal_string \"Kandel/gasreqTooHigh\""
                        },
                        "value": "Kandel/gasreqTooHigh"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25858da7776640e51e55c3679a469d880a316591705d84dfc8289e32f7958116",
                          "typeString": "literal_string \"Kandel/gasreqTooHigh\""
                        }
                      ],
                      "id": 85948,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3487:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3487:50:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85954,
                  "nodeType": "ExpressionStatement",
                  "src": "3487:50:112"
                },
                {
                  "expression": {
                    "id": 85959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 85955,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85857,
                        "src": "3543:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage",
                          "typeString": "struct CoreKandel.Params storage ref"
                        }
                      },
                      "id": 85957,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3550:6:112",
                      "memberName": "gasreq",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85848,
                      "src": "3543:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 85958,
                      "name": "gasreq_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85942,
                      "src": "3559:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "3543:23:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 85960,
                  "nodeType": "ExpressionStatement",
                  "src": "3543:23:112"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 85962,
                        "name": "gasreq_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85942,
                        "src": "3587:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "id": 85961,
                      "name": "SetGasreq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85822,
                      "src": "3577:9:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 85963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3577:18:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85964,
                  "nodeType": "EmitStatement",
                  "src": "3572:23:112"
                }
              ]
            },
            "documentation": {
              "id": 85934,
              "nodeType": "StructuredDocumentation",
              "src": "3296:96:112",
              "text": "@notice sets the gasreq (including router's gasreq) for offers\n@param gasreq the gasreq."
            },
            "functionSelector": "34bd8931",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 85939,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 85938,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "3434:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "3434:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "3434:9:112"
              }
            ],
            "name": "setGasreq",
            "nameLocation": "3404:9:112",
            "parameters": {
              "id": 85937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85936,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "3419:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 85966,
                  "src": "3414:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85935,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3414:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3413:13:112"
            },
            "returnParameters": {
              "id": 85940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3444:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86062,
            "nodeType": "FunctionDefinition",
            "src": "3698:738:112",
            "nodes": [],
            "body": {
              "id": 86061,
              "nodeType": "Block",
              "src": "3753:683:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    85975
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 85975,
                      "mutability": "mutable",
                      "name": "oldParams",
                      "nameLocation": "3773:9:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86061,
                      "src": "3759:23:112",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                        "typeString": "struct CoreKandel.Params"
                      },
                      "typeName": {
                        "id": 85974,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 85973,
                          "name": "Params",
                          "nameLocations": [
                            "3759:6:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85853,
                          "src": "3759:6:112"
                        },
                        "referencedDeclaration": 85853,
                        "src": "3759:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                          "typeString": "struct CoreKandel.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85977,
                  "initialValue": {
                    "id": 85976,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85857,
                    "src": "3785:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$85853_storage",
                      "typeString": "struct CoreKandel.Params storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3759:32:112"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    },
                    "id": 85982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 85978,
                        "name": "oldParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85975,
                        "src": "3802:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      "id": 85979,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3812:11:112",
                      "memberName": "pricePoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85852,
                      "src": "3802:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 85980,
                        "name": "newParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85970,
                        "src": "3827:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                          "typeString": "struct CoreKandel.Params calldata"
                        }
                      },
                      "id": 85981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3837:11:112",
                      "memberName": "pricePoints",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85852,
                      "src": "3827:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      }
                    },
                    "src": "3802:46:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86014,
                  "nodeType": "IfStatement",
                  "src": "3798:296:112",
                  "trueBody": {
                    "id": 86013,
                    "nodeType": "Block",
                    "src": "3850:244:112",
                    "statements": [
                      {
                        "assignments": [
                          85984
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 85984,
                            "mutability": "mutable",
                            "name": "pricePoints_",
                            "nameLocation": "3866:12:112",
                            "nodeType": "VariableDeclaration",
                            "scope": 86013,
                            "src": "3858:20:112",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 85983,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "3858:7:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 85990,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 85987,
                                "name": "newParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85970,
                                "src": "3889:9:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                                  "typeString": "struct CoreKandel.Params calldata"
                                }
                              },
                              "id": 85988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3899:11:112",
                              "memberName": "pricePoints",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85852,
                              "src": "3889:21:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 85986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3881:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint112_$",
                              "typeString": "type(uint112)"
                            },
                            "typeName": {
                              "id": 85985,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "3881:7:112",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 85989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3881:30:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3858:53:112"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 85999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                },
                                "id": 85995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 85992,
                                  "name": "pricePoints_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85984,
                                  "src": "3927:12:112",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 85993,
                                    "name": "newParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 85970,
                                    "src": "3943:9:112",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                                      "typeString": "struct CoreKandel.Params calldata"
                                    }
                                  },
                                  "id": 85994,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3953:11:112",
                                  "memberName": "pricePoints",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 85852,
                                  "src": "3943:21:112",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "src": "3927:37:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                },
                                "id": 85998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 85996,
                                  "name": "pricePoints_",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 85984,
                                  "src": "3968:12:112",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint112",
                                    "typeString": "uint112"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 85997,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3984:1:112",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "3968:17:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3927:58:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4b616e64656c2f696e76616c69645072696365506f696e7473",
                              "id": 86000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3987:27:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1de70fecf8a4c85573f18ff0a2e4ae80941d1ef52265a8fbaa7086dd2c7aa100",
                                "typeString": "literal_string \"Kandel/invalidPricePoints\""
                              },
                              "value": "Kandel/invalidPricePoints"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1de70fecf8a4c85573f18ff0a2e4ae80941d1ef52265a8fbaa7086dd2c7aa100",
                                "typeString": "literal_string \"Kandel/invalidPricePoints\""
                              }
                            ],
                            "id": 85991,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3919:7:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 86001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3919:96:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86002,
                        "nodeType": "ExpressionStatement",
                        "src": "3919:96:112"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86004,
                              "name": "pricePoints_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85984,
                              "src": "4033:12:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            ],
                            "id": 86003,
                            "name": "setLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87441,
                            "src": "4023:9:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 86005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4023:23:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86006,
                        "nodeType": "ExpressionStatement",
                        "src": "4023:23:112"
                      },
                      {
                        "expression": {
                          "id": 86011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 86007,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85857,
                              "src": "4054:6:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Params_$85853_storage",
                                "typeString": "struct CoreKandel.Params storage ref"
                              }
                            },
                            "id": 86009,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4061:11:112",
                            "memberName": "pricePoints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 85852,
                            "src": "4054:18:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 86010,
                            "name": "pricePoints_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85984,
                            "src": "4075:12:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "src": "4054:33:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "id": 86012,
                        "nodeType": "ExpressionStatement",
                        "src": "4054:33:112"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint88",
                      "typeString": "uint88"
                    },
                    "id": 86019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 86015,
                        "name": "oldParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85975,
                        "src": "4104:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      "id": 86016,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4114:8:112",
                      "memberName": "stepSize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85850,
                      "src": "4104:18:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 86017,
                        "name": "newParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85970,
                        "src": "4126:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                          "typeString": "struct CoreKandel.Params calldata"
                        }
                      },
                      "id": 86018,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4136:8:112",
                      "memberName": "stepSize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85850,
                      "src": "4126:18:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint88",
                        "typeString": "uint88"
                      }
                    },
                    "src": "4104:40:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86026,
                  "nodeType": "IfStatement",
                  "src": "4100:92:112",
                  "trueBody": {
                    "id": 86025,
                    "nodeType": "Block",
                    "src": "4146:46:112",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86021,
                                "name": "newParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85970,
                                "src": "4166:9:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                                  "typeString": "struct CoreKandel.Params calldata"
                                }
                              },
                              "id": 86022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4176:8:112",
                              "memberName": "stepSize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85850,
                              "src": "4166:18:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint88",
                                "typeString": "uint88"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint88",
                                "typeString": "uint88"
                              }
                            ],
                            "id": 86020,
                            "name": "setStepSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85902,
                            "src": "4154:11:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 86023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4154:31:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86024,
                        "nodeType": "ExpressionStatement",
                        "src": "4154:31:112"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 86036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 86030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 86027,
                          "name": "newParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85970,
                          "src": "4202:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                            "typeString": "struct CoreKandel.Params calldata"
                          }
                        },
                        "id": 86028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4212:8:112",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85846,
                        "src": "4202:18:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 86029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4224:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4202:23:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 86035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 86031,
                          "name": "newParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85970,
                          "src": "4229:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                            "typeString": "struct CoreKandel.Params calldata"
                          }
                        },
                        "id": 86032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4239:8:112",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85846,
                        "src": "4229:18:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 86033,
                          "name": "oldParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85975,
                          "src": "4251:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          }
                        },
                        "id": 86034,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4261:8:112",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85846,
                        "src": "4251:18:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "src": "4229:40:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4202:67:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86043,
                  "nodeType": "IfStatement",
                  "src": "4198:119:112",
                  "trueBody": {
                    "id": 86042,
                    "nodeType": "Block",
                    "src": "4271:46:112",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86038,
                                "name": "newParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85970,
                                "src": "4291:9:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                                  "typeString": "struct CoreKandel.Params calldata"
                                }
                              },
                              "id": 86039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4301:8:112",
                              "memberName": "gasprice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85846,
                              "src": "4291:18:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 86037,
                            "name": "setGasprice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85933,
                            "src": "4279:11:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 86040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4279:31:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86041,
                        "nodeType": "ExpressionStatement",
                        "src": "4279:31:112"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 86053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "id": 86047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 86044,
                          "name": "newParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85970,
                          "src": "4327:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                            "typeString": "struct CoreKandel.Params calldata"
                          }
                        },
                        "id": 86045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4337:6:112",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85848,
                        "src": "4327:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 86046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4347:1:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "4327:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "id": 86052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 86048,
                          "name": "newParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85970,
                          "src": "4352:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                            "typeString": "struct CoreKandel.Params calldata"
                          }
                        },
                        "id": 86049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4362:6:112",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85848,
                        "src": "4352:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 86050,
                          "name": "oldParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85975,
                          "src": "4372:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          }
                        },
                        "id": 86051,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4382:6:112",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85848,
                        "src": "4372:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "src": "4352:36:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4327:61:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86060,
                  "nodeType": "IfStatement",
                  "src": "4323:109:112",
                  "trueBody": {
                    "id": 86059,
                    "nodeType": "Block",
                    "src": "4390:42:112",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 86055,
                                "name": "newParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85970,
                                "src": "4408:9:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                                  "typeString": "struct CoreKandel.Params calldata"
                                }
                              },
                              "id": 86056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4418:6:112",
                              "memberName": "gasreq",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 85848,
                              "src": "4408:16:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "id": 86054,
                            "name": "setGasreq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85966,
                            "src": "4398:9:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 86057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4398:27:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86058,
                        "nodeType": "ExpressionStatement",
                        "src": "4398:27:112"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 85967,
              "nodeType": "StructuredDocumentation",
              "src": "3604:91:112",
              "text": "@notice Updates the params to new values.\n @param newParams the new params to set."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setParams",
            "nameLocation": "3707:9:112",
            "parameters": {
              "id": 85971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85970,
                  "mutability": "mutable",
                  "name": "newParams",
                  "nameLocation": "3733:9:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86062,
                  "src": "3717:25:112",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                    "typeString": "struct CoreKandel.Params"
                  },
                  "typeName": {
                    "id": 85969,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85968,
                      "name": "Params",
                      "nameLocations": [
                        "3717:6:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 85853,
                      "src": "3717:6:112"
                    },
                    "referencedDeclaration": 85853,
                    "src": "3717:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                      "typeString": "struct CoreKandel.Params"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3716:27:112"
            },
            "returnParameters": {
              "id": 85972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3753:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86085,
            "nodeType": "FunctionDefinition",
            "src": "4806:194:112",
            "nodes": [],
            "body": {
              "id": 86084,
              "nodeType": "Block",
              "src": "4998:2:112",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 86063,
              "nodeType": "StructuredDocumentation",
              "src": "4440:363:112",
              "text": "@notice Constructor\n@param mgv The Mangrove deployment.\n@param olKeyBaseQuote The OLKey for the outbound_tkn base and inbound_tkn quote offer list Kandel will act on, the flipped OLKey is used for the opposite offer list.\n@param gasreq the gasreq to use for offers\n@param reserveId identifier of this contract's reserve when using a router."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86076,
                    "name": "olKeyBaseQuote",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86069,
                    "src": "4918:14:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  }
                ],
                "id": 86077,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86075,
                  "name": "TradesBaseQuotePair",
                  "nameLocations": [
                    "4898:19:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88101,
                  "src": "4898:19:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "4898:35:112"
              },
              {
                "arguments": [
                  {
                    "id": 86079,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86066,
                    "src": "4972:3:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "id": 86080,
                    "name": "gasreq",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86071,
                    "src": "4977:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 86081,
                    "name": "reserveId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86073,
                    "src": "4985:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 86082,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86078,
                  "name": "DirectWithBidsAndAsksDistribution",
                  "nameLocations": [
                    "4938:33:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87048,
                  "src": "4938:33:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "4938:57:112"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86066,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "4828:3:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86085,
                  "src": "4818:13:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 86065,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86064,
                      "name": "IMangrove",
                      "nameLocations": [
                        "4818:9:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "4818:9:112"
                    },
                    "referencedDeclaration": 54127,
                    "src": "4818:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86069,
                  "mutability": "mutable",
                  "name": "olKeyBaseQuote",
                  "nameLocation": "4846:14:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86085,
                  "src": "4833:27:112",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 86068,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86067,
                      "name": "OLKey",
                      "nameLocations": [
                        "4833:5:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "4833:5:112"
                    },
                    "referencedDeclaration": 55875,
                    "src": "4833:5:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86071,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "4867:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86085,
                  "src": "4862:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86070,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86073,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "4883:9:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86085,
                  "src": "4875:17:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4875:7:112",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4817:76:112"
            },
            "returnParameters": {
              "id": 86083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4998:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86133,
            "nodeType": "FunctionDefinition",
            "src": "6031:371:112",
            "nodes": [],
            "body": {
              "id": 86132,
              "nodeType": "Block",
              "src": "6185:217:112",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 86101,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6195:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6199:5:112",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6195:9:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6207:1:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6195:13:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86114,
                  "nodeType": "IfStatement",
                  "src": "6191:62:112",
                  "trueBody": {
                    "id": 86113,
                    "nodeType": "Block",
                    "src": "6210:43:112",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 86105,
                                "name": "MGV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81629,
                                "src": "6218:3:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IMangrove_$54127",
                                  "typeString": "contract IMangrove"
                                }
                              },
                              "id": 86107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6222:4:112",
                              "memberName": "fund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53709,
                              "src": "6218:8:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 86110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 86108,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6234:3:112",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 86109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6238:5:112",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6234:9:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "6218:26:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 86111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6218:28:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86112,
                        "nodeType": "ExpressionStatement",
                        "src": "6218:28:112"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86116,
                        "name": "parameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86092,
                        "src": "6268:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                          "typeString": "struct CoreKandel.Params calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                          "typeString": "struct CoreKandel.Params calldata"
                        }
                      ],
                      "id": 86115,
                      "name": "setParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86062,
                      "src": "6258:9:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Params_$85853_calldata_ptr_$returns$__$",
                        "typeString": "function (struct CoreKandel.Params calldata)"
                      }
                    },
                    "id": 86117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6258:21:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86118,
                  "nodeType": "ExpressionStatement",
                  "src": "6258:21:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86120,
                        "name": "baseAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86094,
                        "src": "6299:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86121,
                        "name": "quoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86096,
                        "src": "6311:11:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86119,
                      "name": "depositFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86452,
                      "src": "6286:12:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 86122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6286:37:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86123,
                  "nodeType": "ExpressionStatement",
                  "src": "6286:37:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86125,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86089,
                        "src": "6352:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 86126,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85857,
                          "src": "6366:6:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_storage",
                            "typeString": "struct CoreKandel.Params storage ref"
                          }
                        },
                        "id": 86127,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6373:6:112",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85848,
                        "src": "6366:13:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 86128,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 85857,
                          "src": "6381:6:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_storage",
                            "typeString": "struct CoreKandel.Params storage ref"
                          }
                        },
                        "id": 86129,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6388:8:112",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85846,
                        "src": "6381:15:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution memory"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 86124,
                      "name": "populateChunkInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86698,
                      "src": "6330:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Distribution_$86630_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (struct DirectWithBidsAndAsksDistribution.Distribution memory,uint256,uint256)"
                      }
                    },
                    "id": 86130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6330:67:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86131,
                  "nodeType": "ExpressionStatement",
                  "src": "6330:67:112"
                }
              ]
            },
            "documentation": {
              "id": 86086,
              "nodeType": "StructuredDocumentation",
              "src": "5004:1024:112",
              "text": "@notice publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).\n@param distribution the distribution of bids and asks to populate\n@param parameters the parameters for Kandel. Only changed parameters will cause updates. Set `gasreq` and `gasprice` to 0 to keep existing values.\n@param baseAmount base amount to deposit\n@param quoteAmount quote amount to deposit\n@dev This function is used at initialization and can fund with provision for the offers.\n@dev Use `populateChunk` to split up initialization or re-initialization with same parameters, as this function will emit.\n@dev If this function is invoked with different pricePoints or stepSize, then first retract all offers.\n@dev msg.value must be enough to provision all posted offers (for chunked initialization only one call needs to send native tokens)."
            },
            "functionSelector": "148b7cea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86099,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86098,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "6173:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "6173:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "6173:9:112"
              }
            ],
            "name": "populate",
            "nameLocation": "6040:8:112",
            "parameters": {
              "id": 86097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86089,
                  "mutability": "mutable",
                  "name": "distribution",
                  "nameLocation": "6069:12:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86133,
                  "src": "6049:32:112",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Distribution_$86630_memory_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                  },
                  "typeName": {
                    "id": 86088,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86087,
                      "name": "Distribution",
                      "nameLocations": [
                        "6049:12:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86630,
                      "src": "6049:12:112"
                    },
                    "referencedDeclaration": 86630,
                    "src": "6049:12:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$86630_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86092,
                  "mutability": "mutable",
                  "name": "parameters",
                  "nameLocation": "6099:10:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86133,
                  "src": "6083:26:112",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Params_$85853_calldata_ptr",
                    "typeString": "struct CoreKandel.Params"
                  },
                  "typeName": {
                    "id": 86091,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86090,
                      "name": "Params",
                      "nameLocations": [
                        "6083:6:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 85853,
                      "src": "6083:6:112"
                    },
                    "referencedDeclaration": 85853,
                    "src": "6083:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                      "typeString": "struct CoreKandel.Params"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86094,
                  "mutability": "mutable",
                  "name": "baseAmount",
                  "nameLocation": "6116:10:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86133,
                  "src": "6111:15:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86093,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6111:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86096,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "6133:11:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86133,
                  "src": "6128:16:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86095,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6128:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6048:97:112"
            },
            "returnParameters": {
              "id": 86100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6185:0:112"
            },
            "scope": 86559,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86156,
            "nodeType": "FunctionDefinition",
            "src": "6977:203:112",
            "nodes": [],
            "body": {
              "id": 86155,
              "nodeType": "Block",
              "src": "7055:125:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86144
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86144,
                      "mutability": "mutable",
                      "name": "parameters",
                      "nameLocation": "7075:10:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86155,
                      "src": "7061:24:112",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                        "typeString": "struct CoreKandel.Params"
                      },
                      "typeName": {
                        "id": 86143,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86142,
                          "name": "Params",
                          "nameLocations": [
                            "7061:6:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85853,
                          "src": "7061:6:112"
                        },
                        "referencedDeclaration": 85853,
                        "src": "7061:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                          "typeString": "struct CoreKandel.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86146,
                  "initialValue": {
                    "id": 86145,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85857,
                    "src": "7088:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$85853_storage",
                      "typeString": "struct CoreKandel.Params storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7061:33:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86148,
                        "name": "distribution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86137,
                        "src": "7122:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Distribution_$86630_calldata_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 86149,
                          "name": "parameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86144,
                          "src": "7136:10:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          }
                        },
                        "id": 86150,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7147:6:112",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85848,
                        "src": "7136:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 86151,
                          "name": "parameters",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86144,
                          "src": "7155:10:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          }
                        },
                        "id": 86152,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7166:8:112",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85846,
                        "src": "7155:19:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Distribution_$86630_calldata_ptr",
                          "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution calldata"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 86147,
                      "name": "populateChunkInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86698,
                      "src": "7100:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Distribution_$86630_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (struct DirectWithBidsAndAsksDistribution.Distribution memory,uint256,uint256)"
                      }
                    },
                    "id": 86153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7100:75:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86154,
                  "nodeType": "ExpressionStatement",
                  "src": "7100:75:112"
                }
              ]
            },
            "documentation": {
              "id": 86134,
              "nodeType": "StructuredDocumentation",
              "src": "6406:568:112",
              "text": "@notice Publishes bids/asks for the distribution in the `indices`. Care must be taken to publish offers in meaningful chunks. For Kandel an offer and its dual should be published in the same chunk (one being optionally initially dead).\n@notice This function is used externally after `populate` to reinitialize some indices or if multiple transactions are needed to split initialization due to gas cost.\n@notice This function is not payable, use `populate` to fund along with populate.\n@param distribution the distribution of bids and asks to populate"
            },
            "functionSelector": "ace67902",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86140,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86139,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "7045:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "7045:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "7045:9:112"
              }
            ],
            "name": "populateChunk",
            "nameLocation": "6986:13:112",
            "parameters": {
              "id": 86138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86137,
                  "mutability": "mutable",
                  "name": "distribution",
                  "nameLocation": "7022:12:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86156,
                  "src": "7000:34:112",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Distribution_$86630_calldata_ptr",
                    "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                  },
                  "typeName": {
                    "id": 86136,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86135,
                      "name": "Distribution",
                      "nameLocations": [
                        "7000:12:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86630,
                      "src": "7000:12:112"
                    },
                    "referencedDeclaration": 86630,
                    "src": "7000:12:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Distribution_$86630_storage_ptr",
                      "typeString": "struct DirectWithBidsAndAsksDistribution.Distribution"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6999:36:112"
            },
            "returnParameters": {
              "id": 86141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7055:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86181,
            "nodeType": "FunctionDefinition",
            "src": "7364:173:112",
            "nodes": [],
            "body": {
              "id": 86180,
              "nodeType": "Block",
              "src": "7445:92:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86167,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "7458:5:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86180,
                      "src": "7451:12:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 86166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86165,
                          "name": "IERC20",
                          "nameLocations": [
                            "7451:6:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88,
                          "src": "7451:6:112"
                        },
                        "referencedDeclaration": 88,
                        "src": "7451:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86171,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86169,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86160,
                        "src": "7486:2:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 86168,
                      "name": "outboundOfOfferType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        88077
                      ],
                      "referencedDeclaration": 88077,
                      "src": "7466:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_contract$_IERC20_$88_$",
                        "typeString": "function (enum OfferType) view returns (contract IERC20)"
                      }
                    },
                    "id": 86170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7466:23:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7451:38:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86176,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7526:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CoreKandel_$86559",
                              "typeString": "contract CoreKandel"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CoreKandel_$86559",
                              "typeString": "contract CoreKandel"
                            }
                          ],
                          "id": 86175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7518:7:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7518:7:112",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7518:13:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 86172,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86167,
                        "src": "7502:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 86173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7508:9:112",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "7502:15:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7502:30:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 86164,
                  "id": 86179,
                  "nodeType": "Return",
                  "src": "7495:37:112"
                }
              ]
            },
            "documentation": {
              "id": 86157,
              "nodeType": "StructuredDocumentation",
              "src": "7184:177:112",
              "text": "@notice the total balance available for the strat of the offered token for the given offer type.\n@param ba the offer type.\n@return balance the balance of the token."
            },
            "functionSelector": "18acf82f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reserveBalance",
            "nameLocation": "7373:14:112",
            "parameters": {
              "id": 86161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86160,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "7398:2:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86181,
                  "src": "7388:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86158,
                      "name": "OfferType",
                      "nameLocations": [
                        "7388:9:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "7388:9:112"
                    },
                    "referencedDeclaration": 87910,
                    "src": "7388:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7387:14:112"
            },
            "returnParameters": {
              "id": 86164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86163,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "7436:7:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86181,
                  "src": "7431:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86162,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7431:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7430:14:112"
            },
            "scope": 86559,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 86213,
            "nodeType": "FunctionDefinition",
            "src": "7798:453:112",
            "nodes": [],
            "body": {
              "id": 86212,
              "nodeType": "Block",
              "src": "7901:350:112",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 86198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 86194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 86192,
                        "name": "updateOfferStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86189,
                        "src": "7911:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 86193,
                        "name": "REPOST_SUCCESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81647,
                        "src": "7932:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "7911:35:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 86197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 86195,
                        "name": "updateOfferStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86189,
                        "src": "7950:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "6d67762f77726974654f666665722f64656e736974792f746f6f4c6f77",
                        "id": 86196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7971:31:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6195d63e991eeb868558835c64de7a8c2d07b0c6e7b564dc96db7c192e55da1f",
                          "typeString": "literal_string \"mgv/writeOffer/density/tooLow\""
                        },
                        "value": "mgv/writeOffer/density/tooLow"
                      },
                      "src": "7950:52:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7911:91:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86201,
                  "nodeType": "IfStatement",
                  "src": "7907:243:112",
                  "trueBody": {
                    "id": 86200,
                    "nodeType": "Block",
                    "src": "8004:146:112",
                    "statements": [
                      {
                        "functionReturnParameters": 86191,
                        "id": 86199,
                        "nodeType": "Return",
                        "src": "8137:7:112"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 86203,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86187,
                              "src": "8172:4:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            "id": 86204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8177:5:112",
                            "memberName": "olKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83549,
                            "src": "8172:10:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                              "typeString": "struct OLKey memory"
                            }
                          },
                          "id": 86205,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8183:4:112",
                          "memberName": "hash",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55889,
                          "src": "8172:15:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_OLKey_$55875_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_OLKey_$55875_memory_ptr_$",
                            "typeString": "function (struct OLKey memory) pure returns (bytes32)"
                          }
                        },
                        "id": 86206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8172:17:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 86207,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86184,
                        "src": "8191:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f7570646174654f666665724661696c6564",
                        "id": 86208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8200:26:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fba56940cd1f5c857f8cd813741d2639446b4d4d2deb8520394809f8bbed3af",
                          "typeString": "literal_string \"Kandel/updateOfferFailed\""
                        },
                        "value": "Kandel/updateOfferFailed"
                      },
                      {
                        "id": 86209,
                        "name": "updateOfferStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86189,
                        "src": "8228:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fba56940cd1f5c857f8cd813741d2639446b4d4d2deb8520394809f8bbed3af",
                          "typeString": "literal_string \"Kandel/updateOfferFailed\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 86202,
                      "name": "LogIncident",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 83467,
                      "src": "8160:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,uint256,bytes32,bytes32)"
                      }
                    },
                    "id": 86210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8160:86:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86211,
                  "nodeType": "EmitStatement",
                  "src": "8155:91:112"
                }
              ]
            },
            "documentation": {
              "id": 86182,
              "nodeType": "StructuredDocumentation",
              "src": "7541:254:112",
              "text": "@notice takes care of status for updating dual and logging of potential issues.\n@param offerId the Mangrove offer id.\n@param args the arguments of the offer.\n@param updateOfferStatus the status returned from the `_updateOffer` function."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "logUpdateOfferStatus",
            "nameLocation": "7807:20:112",
            "parameters": {
              "id": 86190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86184,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "7833:7:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86213,
                  "src": "7828:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7828:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86187,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "7859:4:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86213,
                  "src": "7842:21:112",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                    "typeString": "struct IOfferLogic.OfferArgs"
                  },
                  "typeName": {
                    "id": 86186,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86185,
                      "name": "OfferArgs",
                      "nameLocations": [
                        "7842:9:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83563,
                      "src": "7842:9:112"
                    },
                    "referencedDeclaration": 83563,
                    "src": "7842:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86189,
                  "mutability": "mutable",
                  "name": "updateOfferStatus",
                  "nameLocation": "7873:17:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86213,
                  "src": "7865:25:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 86188,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7865:7:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7827:64:112"
            },
            "returnParameters": {
              "id": 86191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7901:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86255,
            "nodeType": "FunctionDefinition",
            "src": "8418:554:112",
            "nodes": [],
            "body": {
              "id": 86254,
              "nodeType": "Block",
              "src": "8496:476:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86222
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86222,
                      "mutability": "mutable",
                      "name": "ba",
                      "nameLocation": "8512:2:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86254,
                      "src": "8502:12:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OfferType_$87910",
                        "typeString": "enum OfferType"
                      },
                      "typeName": {
                        "id": 86221,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86220,
                          "name": "OfferType",
                          "nameLocations": [
                            "8502:9:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87910,
                          "src": "8502:9:112"
                        },
                        "referencedDeclaration": 87910,
                        "src": "8502:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86230,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 86225,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86217,
                                "src": "8544:5:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              "id": 86226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8550:5:112",
                              "memberName": "olKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55950,
                              "src": "8544:11:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                "typeString": "struct OLKey calldata"
                              }
                            },
                            "id": 86227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8556:12:112",
                            "memberName": "outbound_tkn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55870,
                            "src": "8544:24:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86224,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "8537:6:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 86228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8537:32:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 86223,
                      "name": "offerTypeOfOutbound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        88055
                      ],
                      "referencedDeclaration": 88055,
                      "src": "8517:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$returns$_t_enum$_OfferType_$87910_$",
                        "typeString": "function (contract IERC20) view returns (enum OfferType)"
                      }
                    },
                    "id": 86229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8517:53:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8502:68:112"
                },
                {
                  "assignments": [
                    86232,
                    86235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86232,
                      "mutability": "mutable",
                      "name": "offerId",
                      "nameLocation": "8690:7:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86254,
                      "src": "8685:12:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86231,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8685:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86235,
                      "mutability": "mutable",
                      "name": "args",
                      "nameLocation": "8716:4:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86254,
                      "src": "8699:21:112",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                        "typeString": "struct IOfferLogic.OfferArgs"
                      },
                      "typeName": {
                        "id": 86234,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86233,
                          "name": "OfferArgs",
                          "nameLocations": [
                            "8699:9:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 83563,
                          "src": "8699:9:112"
                        },
                        "referencedDeclaration": 83563,
                        "src": "8699:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86240,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86237,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86222,
                        "src": "8739:2:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      {
                        "id": 86238,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86217,
                        "src": "8743:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        },
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      ],
                      "id": 86236,
                      "name": "transportLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86379,
                      "src": "8724:14:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_OfferType_$87910_$_t_struct$_SingleOrder_$55969_calldata_ptr_$returns$_t_uint256_$_t_struct$_OfferArgs_$83563_memory_ptr_$",
                        "typeString": "function (enum OfferType,struct MgvLib.SingleOrder calldata) returns (uint256,struct IOfferLogic.OfferArgs memory)"
                      }
                    },
                    "id": 86239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8724:25:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_struct$_OfferArgs_$83563_memory_ptr_$",
                      "typeString": "tuple(uint256,struct IOfferLogic.OfferArgs memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8684:65:112"
                },
                {
                  "assignments": [
                    86242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86242,
                      "mutability": "mutable",
                      "name": "updateOfferStatus",
                      "nameLocation": "8860:17:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86254,
                      "src": "8852:25:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 86241,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8852:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86247,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86244,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86235,
                        "src": "8893:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      {
                        "id": 86245,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86232,
                        "src": "8899:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86243,
                      "name": "_updateOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        84828
                      ],
                      "referencedDeclaration": 84828,
                      "src": "8880:12:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (struct IOfferLogic.OfferArgs memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 86246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8880:27:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8852:55:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86249,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86232,
                        "src": "8934:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86250,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86235,
                        "src": "8943:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      {
                        "id": 86251,
                        "name": "updateOfferStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86242,
                        "src": "8949:17:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 86248,
                      "name": "logUpdateOfferStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86213,
                      "src": "8913:20:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_OfferArgs_$83563_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,struct IOfferLogic.OfferArgs memory,bytes32)"
                      }
                    },
                    "id": 86252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8913:54:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86253,
                  "nodeType": "ExpressionStatement",
                  "src": "8913:54:112"
                }
              ]
            },
            "documentation": {
              "id": 86214,
              "nodeType": "StructuredDocumentation",
              "src": "8255:160:112",
              "text": "@notice update or create dual offer according to transport logic\n@param order is a recall of the taker order that is at the origin of the current trade."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transportSuccessfulOrder",
            "nameLocation": "8427:24:112",
            "parameters": {
              "id": 86218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86217,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "8480:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86255,
                  "src": "8452:33:112",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 86216,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86215,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "8452:6:112",
                        "8459:11:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "8452:18:112"
                    },
                    "referencedDeclaration": 55969,
                    "src": "8452:18:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8451:35:112"
            },
            "returnParameters": {
              "id": 86219,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8496:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86379,
            "nodeType": "FunctionDefinition",
            "src": "9284:1474:112",
            "nodes": [],
            "body": {
              "id": 86378,
              "nodeType": "Block",
              "src": "9438:1320:112",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86271,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "9449:5:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86378,
                      "src": "9444:10:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86270,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9444:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86277,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86273,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86259,
                        "src": "9472:2:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      {
                        "expression": {
                          "id": 86274,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "9476:5:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 86275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9482:7:112",
                        "memberName": "offerId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55952,
                        "src": "9476:13:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86272,
                      "name": "indexOfOfferId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87377,
                      "src": "9457:14:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum OfferType,uint256) view returns (uint256)"
                      }
                    },
                    "id": 86276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9457:33:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9444:46:112"
                },
                {
                  "assignments": [
                    86280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86280,
                      "mutability": "mutable",
                      "name": "memoryParams",
                      "nameLocation": "9510:12:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86378,
                      "src": "9496:26:112",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                        "typeString": "struct CoreKandel.Params"
                      },
                      "typeName": {
                        "id": 86279,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86278,
                          "name": "Params",
                          "nameLocations": [
                            "9496:6:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 85853,
                          "src": "9496:6:112"
                        },
                        "referencedDeclaration": 85853,
                        "src": "9496:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_storage_ptr",
                          "typeString": "struct CoreKandel.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86282,
                  "initialValue": {
                    "id": 86281,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 85857,
                    "src": "9525:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$85853_storage",
                      "typeString": "struct CoreKandel.Params storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9496:35:112"
                },
                {
                  "assignments": [
                    86285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86285,
                      "mutability": "mutable",
                      "name": "baDual",
                      "nameLocation": "9547:6:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86378,
                      "src": "9537:16:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_OfferType_$87910",
                        "typeString": "enum OfferType"
                      },
                      "typeName": {
                        "id": 86284,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86283,
                          "name": "OfferType",
                          "nameLocations": [
                            "9537:9:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87910,
                          "src": "9537:9:112"
                        },
                        "referencedDeclaration": 87910,
                        "src": "9537:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86289,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86287,
                        "name": "ba",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86259,
                        "src": "9561:2:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      ],
                      "id": 86286,
                      "name": "dual",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88100,
                      "src": "9556:4:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_OfferType_$87910_$returns$_t_enum$_OfferType_$87910_$",
                        "typeString": "function (enum OfferType) pure returns (enum OfferType)"
                      }
                    },
                    "id": 86288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9556:8:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9537:27:112"
                },
                {
                  "assignments": [
                    86291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86291,
                      "mutability": "mutable",
                      "name": "dualIndex",
                      "nameLocation": "9576:9:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86378,
                      "src": "9571:14:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86290,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9571:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86301,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86294,
                        "name": "baDual",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86285,
                        "src": "9619:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        }
                      },
                      {
                        "id": 86295,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86271,
                        "src": "9627:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 86296,
                          "name": "memoryParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86280,
                          "src": "9634:12:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          }
                        },
                        "id": 86297,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9647:8:112",
                        "memberName": "stepSize",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85850,
                        "src": "9634:21:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        }
                      },
                      {
                        "expression": {
                          "id": 86298,
                          "name": "memoryParams",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86280,
                          "src": "9657:12:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                            "typeString": "struct CoreKandel.Params memory"
                          }
                        },
                        "id": 86299,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9670:11:112",
                        "memberName": "pricePoints",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 85852,
                        "src": "9657:24:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_OfferType_$87910",
                          "typeString": "enum OfferType"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint88",
                          "typeString": "uint88"
                        },
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      ],
                      "expression": {
                        "id": 86292,
                        "name": "KandelLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87900,
                        "src": "9588:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_KandelLib_$87900_$",
                          "typeString": "type(library KandelLib)"
                        }
                      },
                      "id": 86293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9598:20:112",
                      "memberName": "transportDestination",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87505,
                      "src": "9588:30:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_enum$_OfferType_$87910_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (enum OfferType,uint256,uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 86300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9588:94:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9571:111:112"
                },
                {
                  "expression": {
                    "id": 86307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86302,
                      "name": "dualOfferId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86265,
                      "src": "9689:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 86304,
                          "name": "baDual",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86285,
                          "src": "9718:6:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        },
                        {
                          "id": 86305,
                          "name": "dualIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86291,
                          "src": "9726:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 86303,
                        "name": "offerIdOfIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87353,
                        "src": "9703:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (enum OfferType,uint256) view returns (uint256)"
                        }
                      },
                      "id": 86306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9703:33:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9689:47:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86308,
                  "nodeType": "ExpressionStatement",
                  "src": "9689:47:112"
                },
                {
                  "expression": {
                    "id": 86315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86309,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "9742:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86311,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9747:5:112",
                      "memberName": "olKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83549,
                      "src": "9742:10:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 86313,
                          "name": "baDual",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86285,
                          "src": "9776:6:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_OfferType_$87910",
                            "typeString": "enum OfferType"
                          }
                        ],
                        "id": 86312,
                        "name": "offerListOfOfferType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          88034
                        ],
                        "referencedDeclaration": 88034,
                        "src": "9755:20:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_struct$_OLKey_$55875_memory_ptr_$",
                          "typeString": "function (enum OfferType) view returns (struct OLKey memory)"
                        }
                      },
                      "id": 86314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9755:28:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                        "typeString": "struct OLKey memory"
                      }
                    },
                    "src": "9742:41:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                      "typeString": "struct OLKey memory"
                    }
                  },
                  "id": 86316,
                  "nodeType": "ExpressionStatement",
                  "src": "9742:41:112"
                },
                {
                  "assignments": [
                    86319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86319,
                      "mutability": "mutable",
                      "name": "dualOffer",
                      "nameLocation": "9795:9:112",
                      "nodeType": "VariableDeclaration",
                      "scope": 86378,
                      "src": "9789:15:112",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                        "typeString": "Offer"
                      },
                      "typeName": {
                        "id": 86318,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 86317,
                          "name": "Offer",
                          "nameLocations": [
                            "9789:5:112"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66949,
                          "src": "9789:5:112"
                        },
                        "referencedDeclaration": 66949,
                        "src": "9789:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                          "typeString": "Offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86326,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 86322,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86268,
                          "src": "9818:4:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 86323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9823:5:112",
                        "memberName": "olKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83549,
                        "src": "9818:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "id": 86324,
                        "name": "dualOfferId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86265,
                        "src": "9830:11:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 86320,
                        "name": "MGV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81629,
                        "src": "9807:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMangrove_$54127",
                          "typeString": "contract IMangrove"
                        }
                      },
                      "id": 86321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9811:6:112",
                      "memberName": "offers",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53887,
                      "src": "9807:10:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_userDefinedValueType$_Offer_$66949_$",
                        "typeString": "function (struct OLKey memory,uint256) view external returns (Offer)"
                      }
                    },
                    "id": 86325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9807:35:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                      "typeString": "Offer"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9789:53:112"
                },
                {
                  "expression": {
                    "id": 86336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86327,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "9929:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86329,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "9934:5:112",
                      "memberName": "gives",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83554,
                      "src": "9929:10:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 86335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 86330,
                          "name": "order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "9942:5:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                            "typeString": "struct MgvLib.SingleOrder calldata"
                          }
                        },
                        "id": 86331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9948:10:112",
                        "memberName": "takerGives",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 55959,
                        "src": "9942:16:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 86332,
                            "name": "dualOffer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86319,
                            "src": "9961:9:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                              "typeString": "Offer"
                            }
                          },
                          "id": 86333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9971:5:112",
                          "memberName": "gives",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67519,
                          "src": "9961:15:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_uint256_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                            "typeString": "function (Offer) pure returns (uint256)"
                          }
                        },
                        "id": 86334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9961:17:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9942:36:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9929:49:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86337,
                  "nodeType": "ExpressionStatement",
                  "src": "9929:49:112"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 86338,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "9988:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86339,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9993:5:112",
                      "memberName": "gives",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83554,
                      "src": "9988:10:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 86340,
                      "name": "MAX_SAFE_VOLUME",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4436,
                      "src": "10001:15:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9988:28:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86349,
                  "nodeType": "IfStatement",
                  "src": "9984:403:112",
                  "trueBody": {
                    "id": 86348,
                    "nodeType": "Block",
                    "src": "10018:369:112",
                    "statements": [
                      {
                        "expression": {
                          "id": 86346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 86342,
                              "name": "args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86268,
                              "src": "10267:4:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                "typeString": "struct IOfferLogic.OfferArgs memory"
                              }
                            },
                            "id": 86344,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "10272:5:112",
                            "memberName": "gives",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 83554,
                            "src": "10267:10:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 86345,
                            "name": "MAX_SAFE_VOLUME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4436,
                            "src": "10280:15:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10267:28:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 86347,
                        "nodeType": "ExpressionStatement",
                        "src": "10267:28:112"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 86356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86350,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "10429:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10434:4:112",
                      "memberName": "tick",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83552,
                      "src": "10429:9:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 86353,
                          "name": "dualOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86319,
                          "src": "10441:9:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_userDefinedValueType$_Offer_$66949",
                            "typeString": "Offer"
                          }
                        },
                        "id": 86354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10451:4:112",
                        "memberName": "tick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 67453,
                        "src": "10441:14:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Offer_$66949_$returns$_t_userDefinedValueType$_Tick_$5280_$attached_to$_t_userDefinedValueType$_Offer_$66949_$",
                          "typeString": "function (Offer) pure returns (Tick)"
                        }
                      },
                      "id": 86355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10441:16:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                        "typeString": "Tick"
                      }
                    },
                    "src": "10429:28:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                      "typeString": "Tick"
                    }
                  },
                  "id": 86357,
                  "nodeType": "ExpressionStatement",
                  "src": "10429:28:112"
                },
                {
                  "expression": {
                    "id": 86362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86358,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "10613:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86360,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10618:8:112",
                      "memberName": "noRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83562,
                      "src": "10613:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 86361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10629:4:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10613:20:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86363,
                  "nodeType": "ExpressionStatement",
                  "src": "10613:20:112"
                },
                {
                  "expression": {
                    "id": 86369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86364,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "10677:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86366,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10682:8:112",
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83558,
                      "src": "10677:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 86367,
                        "name": "memoryParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86280,
                        "src": "10693:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      "id": 86368,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10706:8:112",
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85846,
                      "src": "10693:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "10677:37:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86370,
                  "nodeType": "ExpressionStatement",
                  "src": "10677:37:112"
                },
                {
                  "expression": {
                    "id": 86376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 86371,
                        "name": "args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86268,
                        "src": "10720:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                          "typeString": "struct IOfferLogic.OfferArgs memory"
                        }
                      },
                      "id": 86373,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10725:6:112",
                      "memberName": "gasreq",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 83556,
                      "src": "10720:11:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 86374,
                        "name": "memoryParams",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86280,
                        "src": "10734:12:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$85853_memory_ptr",
                          "typeString": "struct CoreKandel.Params memory"
                        }
                      },
                      "id": 86375,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10747:6:112",
                      "memberName": "gasreq",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85848,
                      "src": "10734:19:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "10720:33:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86377,
                  "nodeType": "ExpressionStatement",
                  "src": "10720:33:112"
                }
              ]
            },
            "documentation": {
              "id": 86256,
              "nodeType": "StructuredDocumentation",
              "src": "8976:305:112",
              "text": "@notice transport logic followed by Kandel\n@param ba whether the offer that was executed is a bid or an ask\n@param order a recap of the taker order (order.offer is the executed offer)\n@return dualOfferId the offer id of the dual offer\n@return args the argument for updating an offer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transportLogic",
            "nameLocation": "9293:14:112",
            "parameters": {
              "id": 86263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86259,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "9318:2:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86379,
                  "src": "9308:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86258,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86257,
                      "name": "OfferType",
                      "nameLocations": [
                        "9308:9:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "9308:9:112"
                    },
                    "referencedDeclaration": 87910,
                    "src": "9308:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86262,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "9350:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86379,
                  "src": "9322:33:112",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 86261,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86260,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "9322:6:112",
                        "9329:11:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "9322:18:112"
                    },
                    "referencedDeclaration": 55969,
                    "src": "9322:18:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9307:49:112"
            },
            "returnParameters": {
              "id": 86269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86265,
                  "mutability": "mutable",
                  "name": "dualOfferId",
                  "nameLocation": "9400:11:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86379,
                  "src": "9395:16:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86264,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9395:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86268,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "9430:4:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86379,
                  "src": "9413:21:112",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                    "typeString": "struct IOfferLogic.OfferArgs"
                  },
                  "typeName": {
                    "id": 86267,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86266,
                      "name": "OfferArgs",
                      "nameLocations": [
                        "9413:9:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83563,
                      "src": "9413:9:112"
                    },
                    "referencedDeclaration": 83563,
                    "src": "9413:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9394:41:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86403,
            "nodeType": "FunctionDefinition",
            "src": "11030:125:112",
            "nodes": [],
            "body": {
              "id": 86402,
              "nodeType": "Block",
              "src": "11089:66:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 86400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 86391,
                              "name": "ba",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86383,
                              "src": "11121:2:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            ],
                            "id": 86390,
                            "name": "reserveBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86181,
                            "src": "11106:14:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_uint256_$",
                              "typeString": "function (enum OfferType) view returns (uint256)"
                            }
                          },
                          "id": 86392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11106:18:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 86389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11102:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 86388,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "11102:3:112",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 86393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11102:23:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 86397,
                              "name": "ba",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86383,
                              "src": "11146:2:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_OfferType_$87910",
                                "typeString": "enum OfferType"
                              }
                            ],
                            "id": 86396,
                            "name": "offeredVolume",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87047,
                            "src": "11132:13:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_enum$_OfferType_$87910_$returns$_t_uint256_$",
                              "typeString": "function (enum OfferType) view returns (uint256)"
                            }
                          },
                          "id": 86398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11132:17:112",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 86395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "11128:3:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_int256_$",
                          "typeString": "type(int256)"
                        },
                        "typeName": {
                          "id": 86394,
                          "name": "int",
                          "nodeType": "ElementaryTypeName",
                          "src": "11128:3:112",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 86399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11128:22:112",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "11102:48:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 86387,
                  "id": 86401,
                  "nodeType": "Return",
                  "src": "11095:55:112"
                }
              ]
            },
            "documentation": {
              "id": 86380,
              "nodeType": "StructuredDocumentation",
              "src": "10762:265:112",
              "text": "@notice gets pending liquidity for base (ask) or quote (bid). Will be negative if funds are not enough to cover all offer's promises.\n @param ba offer type.\n @return the pending amount\n @dev Gas costly function, better suited for off chain calls."
            },
            "functionSelector": "98ed5340",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pending",
            "nameLocation": "11039:7:112",
            "parameters": {
              "id": 86384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86383,
                  "mutability": "mutable",
                  "name": "ba",
                  "nameLocation": "11057:2:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86403,
                  "src": "11047:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_OfferType_$87910",
                    "typeString": "enum OfferType"
                  },
                  "typeName": {
                    "id": 86382,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86381,
                      "name": "OfferType",
                      "nameLocations": [
                        "11047:9:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87910,
                      "src": "11047:9:112"
                    },
                    "referencedDeclaration": 87910,
                    "src": "11047:9:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_OfferType_$87910",
                      "typeString": "enum OfferType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11046:14:112"
            },
            "returnParameters": {
              "id": 86387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86403,
                  "src": "11084:3:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 86385,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "11084:3:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11083:5:112"
            },
            "scope": 86559,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86452,
            "nodeType": "FunctionDefinition",
            "src": "11337:384:112",
            "nodes": [],
            "body": {
              "id": 86451,
              "nodeType": "Block",
              "src": "11409:312:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86414,
                            "name": "BASE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87949,
                            "src": "11453:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "expression": {
                              "id": 86415,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11459:3:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 86416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11463:6:112",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11459:10:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 86419,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11479:4:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoreKandel_$86559",
                                  "typeString": "contract CoreKandel"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoreKandel_$86559",
                                  "typeString": "contract CoreKandel"
                                }
                              ],
                              "id": 86418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11471:7:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86417,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11471:7:112",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11471:13:112",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 86421,
                            "name": "baseAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86406,
                            "src": "11486:10:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 86412,
                            "name": "TransferLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "11423:11:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                              "typeString": "type(library TransferLib)"
                            }
                          },
                          "id": 86413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11435:17:112",
                          "memberName": "transferTokenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4182,
                          "src": "11423:29:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20,address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 86422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11423:74:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f626173655472616e736665724661696c",
                        "id": 86423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11499:25:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62d18104684b4f69e2d4caae3c69a414c7dc2bbd44f33c17c3003f73653a7e3a",
                          "typeString": "literal_string \"Kandel/baseTransferFail\""
                        },
                        "value": "Kandel/baseTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62d18104684b4f69e2d4caae3c69a414c7dc2bbd44f33c17c3003f73653a7e3a",
                          "typeString": "literal_string \"Kandel/baseTransferFail\""
                        }
                      ],
                      "id": 86411,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11415:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11415:110:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86425,
                  "nodeType": "ExpressionStatement",
                  "src": "11415:110:112"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 86427,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87949,
                        "src": "11543:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 86428,
                        "name": "baseAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86406,
                        "src": "11549:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86426,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85835,
                      "src": "11536:6:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256)"
                      }
                    },
                    "id": 86429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11536:24:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86430,
                  "nodeType": "EmitStatement",
                  "src": "11531:29:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86434,
                            "name": "QUOTE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87953,
                            "src": "11604:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "expression": {
                              "id": 86435,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11611:3:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 86436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11615:6:112",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11611:10:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 86439,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11631:4:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CoreKandel_$86559",
                                  "typeString": "contract CoreKandel"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CoreKandel_$86559",
                                  "typeString": "contract CoreKandel"
                                }
                              ],
                              "id": 86438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11623:7:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86437,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11623:7:112",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11623:13:112",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 86441,
                            "name": "quoteAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86408,
                            "src": "11638:11:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 86432,
                            "name": "TransferLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "11574:11:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                              "typeString": "type(library TransferLib)"
                            }
                          },
                          "id": 86433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11586:17:112",
                          "memberName": "transferTokenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4182,
                          "src": "11574:29:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20,address,address,uint256) returns (bool)"
                          }
                        },
                        "id": 86442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11574:76:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f71756f74655472616e736665724661696c",
                        "id": 86443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11652:26:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a38b38542db186afd1273a813598b68473c68c2a02d94f7120ad5327438b9f0",
                          "typeString": "literal_string \"Kandel/quoteTransferFail\""
                        },
                        "value": "Kandel/quoteTransferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a38b38542db186afd1273a813598b68473c68c2a02d94f7120ad5327438b9f0",
                          "typeString": "literal_string \"Kandel/quoteTransferFail\""
                        }
                      ],
                      "id": 86431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11566:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11566:113:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86445,
                  "nodeType": "ExpressionStatement",
                  "src": "11566:113:112"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 86447,
                        "name": "QUOTE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87953,
                        "src": "11697:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 86448,
                        "name": "quoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86408,
                        "src": "11704:11:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86446,
                      "name": "Credit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85835,
                      "src": "11690:6:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256)"
                      }
                    },
                    "id": 86449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11690:26:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86450,
                  "nodeType": "EmitStatement",
                  "src": "11685:31:112"
                }
              ]
            },
            "documentation": {
              "id": 86404,
              "nodeType": "StructuredDocumentation",
              "src": "11159:175:112",
              "text": "@notice Deposits funds to the contract's reserve\n@param baseAmount the amount of base tokens to deposit.\n@param quoteAmount the amount of quote tokens to deposit."
            },
            "functionSelector": "61638ed5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFunds",
            "nameLocation": "11346:12:112",
            "parameters": {
              "id": 86409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86406,
                  "mutability": "mutable",
                  "name": "baseAmount",
                  "nameLocation": "11364:10:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86452,
                  "src": "11359:15:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86405,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11359:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86408,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "11381:11:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86452,
                  "src": "11376:16:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86407,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11376:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11358:35:112"
            },
            "returnParameters": {
              "id": 86410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11409:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 86477,
            "nodeType": "FunctionDefinition",
            "src": "12196:221:112",
            "nodes": [],
            "body": {
              "id": 86476,
              "nodeType": "Block",
              "src": "12298:119:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86465,
                        "name": "BASE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87949,
                        "src": "12326:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 86466,
                        "name": "baseAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86455,
                        "src": "12332:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86467,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86459,
                        "src": "12344:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86464,
                      "name": "withdrawFundsForToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86523,
                      "src": "12304:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,address)"
                      }
                    },
                    "id": 86468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12304:50:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86469,
                  "nodeType": "ExpressionStatement",
                  "src": "12304:50:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86471,
                        "name": "QUOTE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87953,
                        "src": "12382:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 86472,
                        "name": "quoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86457,
                        "src": "12389:11:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86473,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86459,
                        "src": "12402:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86470,
                      "name": "withdrawFundsForToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86523,
                      "src": "12360:21:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,uint256,address)"
                      }
                    },
                    "id": 86474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12360:52:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86475,
                  "nodeType": "ExpressionStatement",
                  "src": "12360:52:112"
                }
              ]
            },
            "documentation": {
              "id": 86453,
              "nodeType": "StructuredDocumentation",
              "src": "11725:468:112",
              "text": "@notice withdraws funds from the contract's reserve\n@param baseAmount the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\n@param quoteAmount the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\n@param recipient the address to which the withdrawn funds should be sent to.\n@dev it is up to the caller to make sure there are still enough funds for live offers."
            },
            "functionSelector": "9ee8a91c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86462,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86461,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "12288:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "12288:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "12288:9:112"
              }
            ],
            "name": "withdrawFunds",
            "nameLocation": "12205:13:112",
            "parameters": {
              "id": 86460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86455,
                  "mutability": "mutable",
                  "name": "baseAmount",
                  "nameLocation": "12224:10:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86477,
                  "src": "12219:15:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86454,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12219:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86457,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "12241:11:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86477,
                  "src": "12236:16:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86456,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12236:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86459,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "12262:9:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86477,
                  "src": "12254:17:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12254:7:112",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12218:54:112"
            },
            "returnParameters": {
              "id": 86463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12298:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 86523,
            "nodeType": "FunctionDefinition",
            "src": "12731:308:112",
            "nodes": [],
            "body": {
              "id": 86522,
              "nodeType": "Block",
              "src": "12825:214:112",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86488,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86483,
                      "src": "12835:6:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 86491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12850:4:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 86490,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12850:4:112",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 86489,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "12845:4:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 86492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12845:10:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 86493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "12856:3:112",
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "12845:14:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12835:24:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86506,
                  "nodeType": "IfStatement",
                  "src": "12831:84:112",
                  "trueBody": {
                    "id": 86505,
                    "nodeType": "Block",
                    "src": "12861:54:112",
                    "statements": [
                      {
                        "expression": {
                          "id": 86503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 86495,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86483,
                            "src": "12869:6:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 86500,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12902:4:112",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CoreKandel_$86559",
                                      "typeString": "contract CoreKandel"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CoreKandel_$86559",
                                      "typeString": "contract CoreKandel"
                                    }
                                  ],
                                  "id": 86499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12894:7:112",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 86498,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12894:7:112",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 86501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12894:13:112",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 86496,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86481,
                                "src": "12878:5:112",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 86497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12884:9:112",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 18,
                              "src": "12878:15:112",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 86502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12878:30:112",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12869:39:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 86504,
                        "nodeType": "ExpressionStatement",
                        "src": "12869:39:112"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86510,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86481,
                            "src": "12954:5:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 86511,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86485,
                            "src": "12961:9:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 86512,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86483,
                            "src": "12972:6:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 86508,
                            "name": "TransferLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4306,
                            "src": "12928:11:112",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                              "typeString": "type(library TransferLib)"
                            }
                          },
                          "id": 86509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12940:13:112",
                          "memberName": "transferToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4076,
                          "src": "12928:25:112",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (contract IERC20,address,uint256) returns (bool)"
                          }
                        },
                        "id": 86513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12928:51:112",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4b616e64656c2f7472616e736665724661696c",
                        "id": 86514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12981:21:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8db399e1fa2b1fbfc9505e6f9ead81d8a221438e78bafb543193f629ad88781",
                          "typeString": "literal_string \"Kandel/transferFail\""
                        },
                        "value": "Kandel/transferFail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8db399e1fa2b1fbfc9505e6f9ead81d8a221438e78bafb543193f629ad88781",
                          "typeString": "literal_string \"Kandel/transferFail\""
                        }
                      ],
                      "id": 86507,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12920:7:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12920:83:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86516,
                  "nodeType": "ExpressionStatement",
                  "src": "12920:83:112"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 86518,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86481,
                        "src": "13020:5:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 86519,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86483,
                        "src": "13027:6:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86517,
                      "name": "Debit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 85843,
                      "src": "13014:5:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IERC20_$88_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20,uint256)"
                      }
                    },
                    "id": 86520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13014:20:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86521,
                  "nodeType": "EmitStatement",
                  "src": "13009:25:112"
                }
              ]
            },
            "documentation": {
              "id": 86478,
              "nodeType": "StructuredDocumentation",
              "src": "12421:307:112",
              "text": "@notice withdraws funds from the contract's reserve for the given token\n@param token the token to withdraw.\n@param amount the amount of tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\n@param recipient the address to which the withdrawn funds should be sent to."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawFundsForToken",
            "nameLocation": "12740:21:112",
            "parameters": {
              "id": 86486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86481,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12769:5:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86523,
                  "src": "12762:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 86480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86479,
                      "name": "IERC20",
                      "nameLocations": [
                        "12762:6:112"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "12762:6:112"
                    },
                    "referencedDeclaration": 88,
                    "src": "12762:6:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86483,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12781:6:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86523,
                  "src": "12776:11:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86482,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12776:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86485,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "12797:9:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86523,
                  "src": "12789:17:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12789:7:112",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12761:46:112"
            },
            "returnParameters": {
              "id": 86487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12825:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 86558,
            "nodeType": "FunctionDefinition",
            "src": "13646:306:112",
            "nodes": [],
            "body": {
              "id": 86557,
              "nodeType": "Block",
              "src": "13817:135:112",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86542,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86526,
                        "src": "13837:4:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86543,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86528,
                        "src": "13843:2:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 86541,
                      "name": "retractOffers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86927,
                      "src": "13823:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 86544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13823:23:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86545,
                  "nodeType": "ExpressionStatement",
                  "src": "13823:23:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86547,
                        "name": "baseAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86530,
                        "src": "13866:10:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86548,
                        "name": "quoteAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86532,
                        "src": "13878:11:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86549,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86536,
                        "src": "13891:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 86546,
                      "name": "withdrawFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86477,
                      "src": "13852:13:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 86550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13852:49:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86551,
                  "nodeType": "ExpressionStatement",
                  "src": "13852:49:112"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86553,
                        "name": "freeWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86534,
                        "src": "13928:7:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86554,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86536,
                        "src": "13937:9:112",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 86552,
                      "name": "withdrawFromMangrove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82147,
                      "src": "13907:20:112",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_payable_$returns$__$",
                        "typeString": "function (uint256,address payable)"
                      }
                    },
                    "id": 86555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13907:40:112",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86556,
                  "nodeType": "ExpressionStatement",
                  "src": "13907:40:112"
                }
              ]
            },
            "documentation": {
              "id": 86524,
              "nodeType": "StructuredDocumentation",
              "src": "13043:600:112",
              "text": "@notice Retracts offers, withdraws funds, and withdraws free wei from Mangrove.\n@param from retract offers starting from this index.\n@param to retract offers until this index.\n@param baseAmount the amount of base tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\n@param quoteAmount the amount of quote tokens to withdraw. Use type(uint).max to denote the entire reserve balance.\n@param freeWei the amount of wei to withdraw from Mangrove. Use type(uint).max to withdraw entire available balance.\n@param recipient the recipient of the funds."
            },
            "functionSelector": "790532a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 86539,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86538,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "13807:9:112"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "13807:9:112"
                },
                "nodeType": "ModifierInvocation",
                "src": "13807:9:112"
              }
            ],
            "name": "retractAndWithdraw",
            "nameLocation": "13655:18:112",
            "parameters": {
              "id": 86537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86526,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13684:4:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86558,
                  "src": "13679:9:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86525,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13679:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86528,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13699:2:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86558,
                  "src": "13694:7:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86527,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13694:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86530,
                  "mutability": "mutable",
                  "name": "baseAmount",
                  "nameLocation": "13712:10:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86558,
                  "src": "13707:15:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86529,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13707:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86532,
                  "mutability": "mutable",
                  "name": "quoteAmount",
                  "nameLocation": "13733:11:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86558,
                  "src": "13728:16:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13728:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86534,
                  "mutability": "mutable",
                  "name": "freeWei",
                  "nameLocation": "13755:7:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86558,
                  "src": "13750:12:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86533,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13750:4:112",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86536,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "13784:9:112",
                  "nodeType": "VariableDeclaration",
                  "scope": 86558,
                  "src": "13768:25:112",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 86535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13768:15:112",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13673:124:112"
            },
            "returnParameters": {
              "id": 86540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13817:0:112"
            },
            "scope": 86559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 85809,
              "name": "DirectWithBidsAndAsksDistribution",
              "nameLocations": [
                "798:33:112"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87048,
              "src": "798:33:112"
            },
            "id": 85810,
            "nodeType": "InheritanceSpecifier",
            "src": "798:33:112"
          },
          {
            "baseName": {
              "id": 85811,
              "name": "TradesBaseQuotePair",
              "nameLocations": [
                "833:19:112"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88101,
              "src": "833:19:112"
            },
            "id": 85812,
            "nodeType": "InheritanceSpecifier",
            "src": "833:19:112"
          }
        ],
        "canonicalName": "CoreKandel",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 85808,
          "nodeType": "StructuredDocumentation",
          "src": "590:176:112",
          "text": "@title the core of Kandel strategies which creates or updates a dual offer whenever an offer is taken.\n@notice `CoreKandel` is agnostic to the chosen price distribution."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          86559,
          88101,
          87048,
          87442,
          87942,
          85066,
          82367,
          83578,
          56211,
          89841
        ],
        "name": "CoreKandel",
        "nameLocation": "784:10:112",
        "scope": 86560,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83467,
          83473,
          84653,
          85817,
          85822,
          85827,
          85835,
          85843,
          86584,
          86587,
          86590,
          86593,
          87296,
          87306,
          87961,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 112
}