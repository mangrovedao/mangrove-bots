{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "olKeyHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "makerData",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "mgvData",
          "type": "bytes32"
        }
      ],
      "name": "LogIncident",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IMangrove",
          "name": "mgv",
          "type": "address"
        }
      ],
      "name": "Mgv",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "SetReserveId",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract AbstractRouter",
          "name": "router",
          "type": "address"
        }
      ],
      "name": "SetRouter",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MGV",
      "outputs": [
        {
          "internalType": "contract IMangrove",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NO_ROUTER",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RESERVE_ID",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "makerExecute",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ret",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ],
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "Offer",
              "name": "offer",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerWants",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "takerGives",
              "type": "uint256"
            },
            {
              "internalType": "OfferDetail",
              "name": "offerDetail",
              "type": "uint256"
            },
            {
              "internalType": "Global",
              "name": "global",
              "type": "uint256"
            },
            {
              "internalType": "Local",
              "name": "local",
              "type": "uint256"
            }
          ],
          "internalType": "struct MgvLib.SingleOrder",
          "name": "order",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32"
            }
          ],
          "internalType": "struct MgvLib.OrderResult",
          "name": "result",
          "type": "tuple"
        }
      ],
      "name": "makerPosthook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "outbound_tkn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "inbound_tkn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tickSpacing",
              "type": "uint256"
            }
          ],
          "internalType": "struct OLKey",
          "name": "olKey",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "provisionOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "provision",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "router",
      "outputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract AbstractRouter",
          "name": "router_",
          "type": "address"
        }
      ],
      "name": "setRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFromMangrove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CONSTANT_GASREQ()": "9eb7d4fe",
    "MGV()": "99fa5e2d",
    "NO_ROUTER()": "5570db1d",
    "RESERVE_ID()": "fbc7d10b",
    "activate(address[])": "5293840d",
    "admin()": "f851a440",
    "approve(address,address,uint256)": "e1f21c67",
    "checkList(address[])": "03eb17e2",
    "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": "2380fafd",
    "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": "c7e1bb44",
    "offerGasreq()": "cfcd2679",
    "offerGasreq(address,address)": "820db1f7",
    "provisionOf((address,address,uint256),uint256)": "a24f2b2d",
    "router()": "f887ea40",
    "setAdmin(address)": "704b6c02",
    "setRouter(address)": "c0d78655",
    "withdrawFromMangrove(uint256,address)": "7144df24"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"olKeyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"name\":\"LogIncident\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IMangrove\",\"name\":\"mgv\",\"type\":\"address\"}],\"name\":\"Mgv\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"SetReserveId\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract AbstractRouter\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"SetRouter\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MGV\",\"outputs\":[{\"internalType\":\"contract IMangrove\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NO_ROUTER\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESERVE_ID\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"makerExecute\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ret\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"Offer\",\"name\":\"offer\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerWants\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"takerGives\",\"type\":\"uint256\"},{\"internalType\":\"OfferDetail\",\"name\":\"offerDetail\",\"type\":\"uint256\"},{\"internalType\":\"Global\",\"name\":\"global\",\"type\":\"uint256\"},{\"internalType\":\"Local\",\"name\":\"local\",\"type\":\"uint256\"}],\"internalType\":\"struct MgvLib.SingleOrder\",\"name\":\"order\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"makerData\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"mgvData\",\"type\":\"bytes32\"}],\"internalType\":\"struct MgvLib.OrderResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"name\":\"makerPosthook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"outbound_tkn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"inbound_tkn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tickSpacing\",\"type\":\"uint256\"}],\"internalType\":\"struct OLKey\",\"name\":\"olKey\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"provisionOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"provision\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractRouter\",\"name\":\"router_\",\"type\":\"address\"}],\"name\":\"setRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"withdrawFromMangrove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"params\":{\"makerData\":\"from the maker.\",\"mgvData\":\"from Mangrove.\",\"offerId\":\"the Mangrove offer id. This is indexed so that RPC calls can filter on it.\",\"olKeyHash\":\"the hash of the offer list key. This is indexed so that RPC calls can filter on it.\"}},\"Mgv(address)\":{\"params\":{\"mgv\":\"The Mangrove deployment.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}},\"SetReserveId(address)\":{\"params\":{\"reserveId\":\"identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\"}},\"SetRouter(address)\":{\"params\":{\"router\":\"the new router address.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address[])\":{\"params\":{\"tokens\":\"the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets.\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"approve(address,address,uint256)\":{\"details\":\"admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.\",\"params\":{\"amount\":\"the spending amount\",\"spender\":\"the approved spender\",\"token\":\"the ERC20 token contract\"},\"returns\":{\"_0\":\"result of token approval.\"}},\"checkList(address[])\":{\"details\":\"throws with a reason if something (e.g. an approval) is missing.\",\"params\":{\"tokens\":\"the list of tokens that are traded by this contract\"}},\"constructor\":{\"params\":{\"gasreq\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\",\"mgv\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\",\"reserveId\":\"identifier of this contract's reserve when using a router.\",\"router_\":\"the router that this contract will use to pull/push liquidity from offer maker's reserve. This can be `NO_ROUTER`.\"}},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"details\":\"it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\"},\"returns\":{\"ret\":\"a bytes32 word to pass information (if needed) to the posthook\"}},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"details\":\"It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).\",\"params\":{\"order\":\"a data structure that recapitulates the taker order and the offer as it was posted on mangrove\",\"result\":\"a data structure that gathers information about trade execution\"}},\"offerGasreq()\":{\"details\":\"call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default\",\"returns\":{\"_0\":\"gas requirement for the default liquidity sourcing strategy\"}},\"offerGasreq(address,address)\":{\"params\":{\"reserveId\":\"passed to router to potentially specify a reserve specific routing strategy\",\"token\":\"passed to router to potentially specify a token specific routing strategy\"},\"returns\":{\"_0\":\"gas cost including router specific costs (if any).\"}},\"provisionOf((address,address,uint256),uint256)\":{\"params\":{\"offerId\":\"the identifier of the offer in the offer list\",\"olKey\":\"the offer list key.\"},\"returns\":{\"provision\":\"the amount of native tokens that can be redeemed when deprovisioning the offer\"}},\"router()\":{\"details\":\"if contract has a no router, function returns `NO_ROUTER`.\",\"returns\":{\"_0\":\"the router.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"setRouter(address)\":{\"details\":\"new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.\",\"params\":{\"router_\":\"the new router contract that this contract should use. Use `NO_ROUTER` for no router.\"}},\"withdrawFromMangrove(uint256,address)\":{\"details\":\"Since a call is made to the `receiver`, this function is subject to reentrancy.\",\"params\":{\"amount\":\"the amount of WEI one wishes to withdraw.\",\"receiver\":\"the address of the receiver of the funds.\"}}},\"stateVariables\":{\"RESERVE_ID\":{\"details\":\"RESERVE_ID==address(0) will pass address(this) to the router for the id field.two contracts using the same RESERVE_ID will share funds, therefore strat builder must make sure this contract is allowed to pull into the given reserve Id.a safe value for `RESERVE_ID` is `address(this)` in which case the funds will never be shared with another maker contract.\"}},\"title\":\"`Direct` strats is an extension of MangroveOffer that allows contract's admin to manage offers on Mangrove.\",\"version\":1},\"userdoc\":{\"events\":{\"LogIncident(bytes32,uint256,bytes32,bytes32)\":{\"notice\":\"Log incident (during post trade execution)By emitting this data, an indexer can keep track of what incidents has happened.\"},\"Mgv(address)\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.By emitting this event, an indexer will be able to create a mapping from this contract address to the used Mangrove address.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"},\"SetReserveId(address)\":{\"notice\":\"`reserveId` is set in the constructorby emitting this event, an indexer will be able to keep track of what reserve is used.\"},\"SetRouter(address)\":{\"notice\":\"Logging change of router addressBy emitting this an indexer can keep track of what router is used.\"}},\"kind\":\"user\",\"methods\":{\"CONSTANT_GASREQ()\":{\"notice\":\"Gas requirement when posting offers via this strategy, excluding router requirement.\"},\"MGV()\":{\"notice\":\"The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\"},\"NO_ROUTER()\":{\"notice\":\"constant for no router\"},\"RESERVE_ID()\":{\"notice\":\"identifier of this contract's reserve when using a router\"},\"activate(address[])\":{\"notice\":\"performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets.\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"approve(address,address,uint256)\":{\"notice\":\"Approves a spender to transfer a certain amount of tokens on behalf of `this`.\"},\"checkList(address[])\":{\"notice\":\"verifies that Mangrove is allowed to pull tokens from this contract.\"},\"constructor\":{\"notice\":\"`Direct`'s constructor.\"},\"makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract.\"},\"makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))\":{\"notice\":\"`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`.\"},\"offerGasreq()\":{\"notice\":\"offerGasreq for the default route\"},\"offerGasreq(address,address)\":{\"notice\":\"Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated.\"},\"provisionOf((address,address,uint256),uint256)\":{\"notice\":\"computes the amount of native tokens that can be redeemed when deprovisioning a given offer.\"},\"router()\":{\"notice\":\"Contract's router getter.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"setRouter(address)\":{\"notice\":\"sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve.\"},\"withdrawFromMangrove(uint256,address)\":{\"notice\":\"withdraws native tokens from `this` balance on Mangrove.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":\"Direct\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol\":{\"keccak256\":\"0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce\",\"dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol\":{\"keccak256\":\"0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8\",\"dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol\":{\"keccak256\":\"0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1\",\"dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol\":{\"keccak256\":\"0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672\",\"dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "olKeyHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "makerData",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "mgvData",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogIncident",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IMangrove",
              "name": "mgv",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mgv",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetReserveId",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetRouter",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MGV",
          "outputs": [
            {
              "internalType": "contract IMangrove",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NO_ROUTER",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RESERVE_ID",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerExecute",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "ret",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct MgvLib.SingleOrder",
              "name": "order",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct OLKey",
                  "name": "olKey",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "outbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "inbound_tkn",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tickSpacing",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "Offer",
                  "name": "offer",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerWants",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "takerGives",
                  "type": "uint256"
                },
                {
                  "internalType": "OfferDetail",
                  "name": "offerDetail",
                  "type": "uint256"
                },
                {
                  "internalType": "Global",
                  "name": "global",
                  "type": "uint256"
                },
                {
                  "internalType": "Local",
                  "name": "local",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "struct MgvLib.OrderResult",
              "name": "result",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "makerData",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "mgvData",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makerPosthook"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "offerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OLKey",
              "name": "olKey",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "outbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "inbound_tkn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tickSpacing",
                  "type": "uint256"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provisionOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "provision",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "router",
          "outputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [
            {
              "internalType": "contract AbstractRouter",
              "name": "router_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRouter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address payable",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFromMangrove"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address[])": {
            "params": {
              "tokens": "the ERC20 `this` will approve to be able to trade on Mangrove's corresponding markets."
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "approve(address,address,uint256)": {
            "details": "admin may use this function to revoke specific approvals of `this` that are set after a call to `activate`.",
            "params": {
              "amount": "the spending amount",
              "spender": "the approved spender",
              "token": "the ERC20 token contract"
            },
            "returns": {
              "_0": "result of token approval."
            }
          },
          "checkList(address[])": {
            "details": "throws with a reason if something (e.g. an approval) is missing.",
            "params": {
              "tokens": "the list of tokens that are traded by this contract"
            }
          },
          "constructor": {
            "params": {
              "gasreq": "Gas requirement when posting offers via this strategy, excluding router requirement.",
              "mgv": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook.",
              "reserveId": "identifier of this contract's reserve when using a router.",
              "router_": "the router that this contract will use to pull/push liquidity from offer maker's reserve. This can be `NO_ROUTER`."
            }
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "details": "it may not be overriden although it can be customized using `__lastLook__`, `__put__` and `__get__` hooks. NB #1: if `makerExecute` reverts, the offer will be considered to be refusing the trade. NB #2: `makerExecute` may return a `bytes32` word to pass information to posthook w/o using storage reads/writes. NB #3: Reneging on trade will have the following effects: * Offer is removed from the Offer List * Offer bounty will be withdrawn from offer provision and sent to the offer taker. The remaining provision will be credited to `this` contract's account on Mangrove",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove"
            },
            "returns": {
              "ret": "a bytes32 word to pass information (if needed) to the posthook"
            }
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "details": "It cannot be overridden but can be customized via the hooks `__posthookSuccess__`, `__posthookFallback__` and `__handleResidualProvision__` (see below).",
            "params": {
              "order": "a data structure that recapitulates the taker order and the offer as it was posted on mangrove",
              "result": "a data structure that gathers information about trade execution"
            }
          },
          "offerGasreq()": {
            "details": "call may revert if the strategy uses a reserveId or token dependant routing strategy and has no default",
            "returns": {
              "_0": "gas requirement for the default liquidity sourcing strategy"
            }
          },
          "offerGasreq(address,address)": {
            "params": {
              "reserveId": "passed to router to potentially specify a reserve specific routing strategy",
              "token": "passed to router to potentially specify a token specific routing strategy"
            },
            "returns": {
              "_0": "gas cost including router specific costs (if any)."
            }
          },
          "provisionOf((address,address,uint256),uint256)": {
            "params": {
              "offerId": "the identifier of the offer in the offer list",
              "olKey": "the offer list key."
            },
            "returns": {
              "provision": "the amount of native tokens that can be redeemed when deprovisioning the offer"
            }
          },
          "router()": {
            "details": "if contract has a no router, function returns `NO_ROUTER`.",
            "returns": {
              "_0": "the router."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "setRouter(address)": {
            "details": "new router needs to be approved by `this` to push funds to reserve (see `activate` function). It also needs to be approved by reserve to pull from it.",
            "params": {
              "router_": "the new router contract that this contract should use. Use `NO_ROUTER` for no router."
            }
          },
          "withdrawFromMangrove(uint256,address)": {
            "details": "Since a call is made to the `receiver`, this function is subject to reentrancy.",
            "params": {
              "amount": "the amount of WEI one wishes to withdraw.",
              "receiver": "the address of the receiver of the funds."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONSTANT_GASREQ()": {
            "notice": "Gas requirement when posting offers via this strategy, excluding router requirement."
          },
          "MGV()": {
            "notice": "The Mangrove deployment that is allowed to call `this` for trade execution and posthook."
          },
          "NO_ROUTER()": {
            "notice": "constant for no router"
          },
          "RESERVE_ID()": {
            "notice": "identifier of this contract's reserve when using a router"
          },
          "activate(address[])": {
            "notice": "performs the required approvals so as to allow `this` to interact with Mangrove on a set of assets."
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "approve(address,address,uint256)": {
            "notice": "Approves a spender to transfer a certain amount of tokens on behalf of `this`."
          },
          "checkList(address[])": {
            "notice": "verifies that Mangrove is allowed to pull tokens from this contract."
          },
          "constructor": {
            "notice": "`Direct`'s constructor."
          },
          "makerExecute(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256))": {
            "notice": "`makerExecute` is the callback function to execute all offers that were posted on Mangrove by `this` contract."
          },
          "makerPosthook(((address,address,uint256),uint256,uint256,uint256,uint256,uint256,uint256,uint256),(bytes32,bytes32))": {
            "notice": "`makerPosthook` is the callback function that is called by Mangrove *after* the offer execution.reverting during its execution will not renege on trade. Revert reason (casted to 32 bytes) is then logged by Mangrove in event `PosthookFail`."
          },
          "offerGasreq()": {
            "notice": "offerGasreq for the default route"
          },
          "offerGasreq(address,address)": {
            "notice": "Actual gas requirement when posting offers via this strategy. Returned value may change if this contract's router is updated."
          },
          "provisionOf((address,address,uint256),uint256)": {
            "notice": "computes the amount of native tokens that can be redeemed when deprovisioning a given offer."
          },
          "router()": {
            "notice": "Contract's router getter."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "setRouter(address)": {
            "notice": "sets a new router to pull outbound tokens from contract's reserve to `this` and push inbound tokens to reserve."
          },
          "withdrawFromMangrove(uint256,address)": {
            "notice": "withdraws native tokens from `this` balance on Mangrove."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": "Direct"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol": {
        "keccak256": "0x7bb6985efa88b71ec161df4e3b6a7b27e32ccae0890c730f25a0c7f1c5e46c0b",
        "urls": [
          "bzz-raw://4aaf49678b6cce3cb69ba3d1effe0cab9a8b37cbdd9d462c99cd6bd0679fa3ce",
          "dweb:/ipfs/QmUCby1BEr1oQtFCq4eDECiv3qrpofG7pUPTmP1GCoQc2q"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol": {
        "keccak256": "0x789a104578f14acad6b783c9d2a154f9a8749fde35706af5d69361cd14a9e6be",
        "urls": [
          "bzz-raw://5c00fbc42821d1c0c293286c5571d6c32ff64104ab49789f95a59d20e9f6aba8",
          "dweb:/ipfs/QmR3LEBX5UJzxKM3DH8T3uVRVRgmDHkE7B9e2MMDjgokbA"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol": {
        "keccak256": "0xe768d5ae2ad8cebe4aa8919230ff0bda5e306b876a4a9f50a0710c02656a3809",
        "urls": [
          "bzz-raw://e4230bc3c1d39f243f1e6546b1f715d89887f2572a0aec73eda11c3f2a18bdd1",
          "dweb:/ipfs/QmbUaWNuY6R93ku6tiTkSUw5p9riZT2vQiMLmcb3xSRYBh"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol": {
        "keccak256": "0xe925cb9996d0896123ea908cfe1d494a3ee1d24b4db19fc43c29975801568cc2",
        "urls": [
          "bzz-raw://a1f168082fcfc7672d9cce557440efe97b2bf95bc8f792d1754da963583bd672",
          "dweb:/ipfs/QmPuuAY4CDMcQEWKbJezNCazfX2g748Q3hX3ejCWYh4YVC"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/offer_maker/abstract/Direct.sol",
    "id": 85067,
    "exportedSymbols": {
      "AbstractRouter": [
        88623
      ],
      "Direct": [
        85066
      ],
      "IERC20": [
        88
      ],
      "IMangrove": [
        54127
      ],
      "IOfferLogic": [
        83578
      ],
      "MangroveOffer": [
        82367
      ],
      "MgvLib": [
        55985
      ],
      "OLKey": [
        55875
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:7093:106",
    "nodes": [
      {
        "id": 84632,
        "nodeType": "PragmaDirective",
        "src": "41:24:106",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 84634,
        "nodeType": "ImportDirective",
        "src": "67:75:106",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/MangroveOffer.sol",
        "file": "@mgv-strats/src/strategies/MangroveOffer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85067,
        "sourceUnit": 82368,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84633,
              "name": "MangroveOffer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 82367,
              "src": "75:13:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84636,
        "nodeType": "ImportDirective",
        "src": "143:94:106",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol",
        "file": "@mgv-strats/src/strategies/routers/abstract/AbstractRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85067,
        "sourceUnit": 88624,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84635,
              "name": "AbstractRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88623,
              "src": "151:14:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84638,
        "nodeType": "ImportDirective",
        "src": "238:49:106",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/IMangrove.sol",
        "file": "@mgv/src/IMangrove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85067,
        "sourceUnit": 54128,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84637,
              "name": "IMangrove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54127,
              "src": "246:9:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84641,
        "nodeType": "ImportDirective",
        "src": "288:55:106",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol",
        "file": "@mgv/src/core/MgvLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85067,
        "sourceUnit": 56240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84639,
              "name": "MgvLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55985,
              "src": "296:6:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 84640,
              "name": "OLKey",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 55875,
              "src": "304:5:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84643,
        "nodeType": "ImportDirective",
        "src": "344:43:106",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85067,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84642,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "352:6:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84645,
        "nodeType": "ImportDirective",
        "src": "388:82:106",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/interfaces/IOfferLogic.sol",
        "file": "@mgv-strats/src/strategies/interfaces/IOfferLogic.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85067,
        "sourceUnit": 83579,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84644,
              "name": "IOfferLogic",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83578,
              "src": "396:11:106",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 85066,
        "nodeType": "ContractDefinition",
        "src": "590:6543:106",
        "nodes": [
          {
            "id": 84653,
            "nodeType": "EventDefinition",
            "src": "920:46:106",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 84649,
              "nodeType": "StructuredDocumentation",
              "src": "636:281:106",
              "text": "@notice `reserveId` is set in the constructor\n@param reserveId identifier of this contract's reserve when using a router. This is indexed so that RPC calls can filter on it.\n@notice by emitting this event, an indexer will be able to keep track of what reserve is used."
            },
            "eventSelector": "1efc2ac62377bfc2967149995d76b6a9a1ad2809a99afd6106b5ba742698217f",
            "name": "SetReserveId",
            "nameLocation": "926:12:106",
            "parameters": {
              "id": 84652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84651,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "955:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84653,
                  "src": "939:25:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:27:106"
            }
          },
          {
            "id": 84656,
            "nodeType": "VariableDeclaration",
            "src": "1430:35:106",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 84654,
              "nodeType": "StructuredDocumentation",
              "src": "970:457:106",
              "text": "@notice identifier of this contract's reserve when using a router\n@dev RESERVE_ID==address(0) will pass address(this) to the router for the id field.\n@dev two contracts using the same RESERVE_ID will share funds, therefore strat builder must make sure this contract is allowed to pull into the given reserve Id.\n@dev a safe value for `RESERVE_ID` is `address(this)` in which case the funds will never be shared with another maker contract."
            },
            "functionSelector": "fbc7d10b",
            "mutability": "immutable",
            "name": "RESERVE_ID",
            "nameLocation": "1455:10:106",
            "scope": 85066,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 84655,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1430:7:106",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 84707,
            "nodeType": "FunctionDefinition",
            "src": "1932:321:106",
            "nodes": [],
            "body": {
              "id": 84706,
              "nodeType": "Block",
              "src": "2042:211:106",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    },
                    "id": 84676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84674,
                      "name": "router_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84663,
                      "src": "2052:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 84675,
                      "name": "NO_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81639,
                      "src": "2063:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "src": "2052:20:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84682,
                  "nodeType": "IfStatement",
                  "src": "2048:59:106",
                  "trueBody": {
                    "id": 84681,
                    "nodeType": "Block",
                    "src": "2074:33:106",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84678,
                              "name": "router_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84663,
                              "src": "2092:7:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                "typeString": "contract AbstractRouter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                "typeString": "contract AbstractRouter"
                              }
                            ],
                            "id": 84677,
                            "name": "setRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81922,
                            "src": "2082:9:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_AbstractRouter_$88623_$returns$__$",
                              "typeString": "function (contract AbstractRouter)"
                            }
                          },
                          "id": 84679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2082:18:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 84680,
                        "nodeType": "ExpressionStatement",
                        "src": "2082:18:106"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    84684
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84684,
                      "mutability": "mutable",
                      "name": "reserveId_",
                      "nameLocation": "2120:10:106",
                      "nodeType": "VariableDeclaration",
                      "scope": 84706,
                      "src": "2112:18:106",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 84683,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2112:7:106",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84697,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 84690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 84685,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84667,
                        "src": "2133:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 84688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2154:1:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 84687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2146:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84686,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2146:7:106",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2146:10:106",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2133:23:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 84695,
                      "name": "reserveId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84667,
                      "src": "2175:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 84696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2133:51:106",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 84693,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "2167:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Direct_$85066",
                            "typeString": "contract Direct"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Direct_$85066",
                            "typeString": "contract Direct"
                          }
                        ],
                        "id": 84692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2159:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 84691,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2159:7:106",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 84694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2159:13:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2112:72:106"
                },
                {
                  "expression": {
                    "id": 84700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84698,
                      "name": "RESERVE_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84656,
                      "src": "2190:10:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84699,
                      "name": "reserveId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84684,
                      "src": "2203:10:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2190:23:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 84701,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:23:106"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 84703,
                        "name": "reserveId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84684,
                        "src": "2237:10:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 84702,
                      "name": "SetReserveId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84653,
                      "src": "2224:12:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 84704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:24:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84705,
                  "nodeType": "EmitStatement",
                  "src": "2219:29:106"
                }
              ]
            },
            "documentation": {
              "id": 84657,
              "nodeType": "StructuredDocumentation",
              "src": "1470:459:106",
              "text": "@notice `Direct`'s constructor.\n@param mgv The Mangrove deployment that is allowed to call `this` for trade execution and posthook.\n@param router_ the router that this contract will use to pull/push liquidity from offer maker's reserve. This can be `NO_ROUTER`.\n@param gasreq Gas requirement when posting offers via this strategy, excluding router requirement.\n@param reserveId identifier of this contract's reserve when using a router."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 84670,
                    "name": "mgv",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 84660,
                    "src": "2029:3:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  {
                    "id": 84671,
                    "name": "gasreq",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 84665,
                    "src": "2034:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 84672,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 84669,
                  "name": "MangroveOffer",
                  "nameLocations": [
                    "2015:13:106"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 82367,
                  "src": "2015:13:106"
                },
                "nodeType": "ModifierInvocation",
                "src": "2015:26:106"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 84668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84660,
                  "mutability": "mutable",
                  "name": "mgv",
                  "nameLocation": "1954:3:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84707,
                  "src": "1944:13:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMangrove_$54127",
                    "typeString": "contract IMangrove"
                  },
                  "typeName": {
                    "id": 84659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84658,
                      "name": "IMangrove",
                      "nameLocations": [
                        "1944:9:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 54127,
                      "src": "1944:9:106"
                    },
                    "referencedDeclaration": 54127,
                    "src": "1944:9:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMangrove_$54127",
                      "typeString": "contract IMangrove"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84663,
                  "mutability": "mutable",
                  "name": "router_",
                  "nameLocation": "1974:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84707,
                  "src": "1959:22:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                    "typeString": "contract AbstractRouter"
                  },
                  "typeName": {
                    "id": 84662,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84661,
                      "name": "AbstractRouter",
                      "nameLocations": [
                        "1959:14:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88623,
                      "src": "1959:14:106"
                    },
                    "referencedDeclaration": 88623,
                    "src": "1959:14:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84665,
                  "mutability": "mutable",
                  "name": "gasreq",
                  "nameLocation": "1988:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84707,
                  "src": "1983:11:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84664,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1983:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84667,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "2004:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84707,
                  "src": "1996:17:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1996:7:106",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1943:71:106"
            },
            "returnParameters": {
              "id": 84673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2042:0:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 84770,
            "nodeType": "FunctionDefinition",
            "src": "2655:426:106",
            "nodes": [],
            "body": {
              "id": 84769,
              "nodeType": "Block",
              "src": "2745:336:106",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 84745,
                        "nodeType": "Block",
                        "src": "2891:67:106",
                        "statements": [
                          {
                            "expression": {
                              "id": 84739,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 84737,
                                "name": "offerId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84714,
                                "src": "2899:7:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 84738,
                                "name": "offerId_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84735,
                                "src": "2909:8:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2899:18:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 84740,
                            "nodeType": "ExpressionStatement",
                            "src": "2899:18:106"
                          },
                          {
                            "expression": {
                              "id": 84743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 84741,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84716,
                                "src": "2925:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 84742,
                                "name": "NEW_OFFER_SUCCESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81651,
                                "src": "2934:17:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "2925:26:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 84744,
                            "nodeType": "ExpressionStatement",
                            "src": "2925:26:106"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 84746,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 84736,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 84735,
                            "mutability": "mutable",
                            "name": "offerId_",
                            "nameLocation": "2876:8:106",
                            "nodeType": "VariableDeclaration",
                            "scope": 84746,
                            "src": "2871:13:106",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 84734,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2871:4:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2863:27:106"
                      },
                      "src": "2855:103:106"
                    },
                    {
                      "block": {
                        "id": 84766,
                        "nodeType": "Block",
                        "src": "2993:84:106",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 84751,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84711,
                                    "src": "3009:4:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  "id": 84752,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3014:8:106",
                                  "memberName": "noRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83562,
                                  "src": "3009:13:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 84753,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84748,
                                  "src": "3024:6:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 84750,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3001:7:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 84754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3001:30:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 84755,
                            "nodeType": "ExpressionStatement",
                            "src": "3001:30:106"
                          },
                          {
                            "expression": {
                              "id": 84764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 84756,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84716,
                                "src": "3039:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 84761,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 84748,
                                        "src": "3062:6:106",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 84760,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3056:5:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 84759,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3056:5:106",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 84762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3056:13:106",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 84758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3048:7:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 84757,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3048:7:106",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 84763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3048:22:106",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3039:31:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 84765,
                            "nodeType": "ExpressionStatement",
                            "src": "3039:31:106"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 84767,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 84749,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 84748,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "2985:6:106",
                            "nodeType": "VariableDeclaration",
                            "scope": 84767,
                            "src": "2971:20:106",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 84747,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "2971:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "2970:22:106"
                      },
                      "src": "2959:118:106"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 84723,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84711,
                          "src": "2792:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84724,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2797:5:106",
                        "memberName": "olKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83549,
                        "src": "2792:10:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 84725,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84711,
                          "src": "2804:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84726,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2809:4:106",
                        "memberName": "tick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83552,
                        "src": "2804:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      {
                        "expression": {
                          "id": 84727,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84711,
                          "src": "2815:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84728,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2820:5:106",
                        "memberName": "gives",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83554,
                        "src": "2815:10:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 84729,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84711,
                          "src": "2827:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84730,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2832:6:106",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83556,
                        "src": "2827:11:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 84731,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84711,
                          "src": "2840:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84732,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2845:8:106",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83558,
                        "src": "2840:13:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 84718,
                          "name": "MGV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81629,
                          "src": "2755:3:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$54127",
                            "typeString": "contract IMangrove"
                          }
                        },
                        "id": 84719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2759:14:106",
                        "memberName": "newOfferByTick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53753,
                        "src": "2755:18:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_OLKey_$55875_memory_ptr_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,Tick,uint256,uint256,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 84722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 84720,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84711,
                            "src": "2781:4:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                              "typeString": "struct IOfferLogic.OfferArgs memory"
                            }
                          },
                          "id": 84721,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2786:4:106",
                          "memberName": "fund",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83560,
                          "src": "2781:9:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2755:36:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_OLKey_$55875_memory_ptr_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (struct OLKey memory,Tick,uint256,uint256,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 84733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2755:99:106",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84768,
                  "nodeType": "TryStatement",
                  "src": "2751:326:106"
                }
              ]
            },
            "documentation": {
              "id": 84708,
              "nodeType": "StructuredDocumentation",
              "src": "2257:395:106",
              "text": "@notice Inserts a new offer in Mangrove Offer List.\n @param args Function arguments stored in memory.\n @return offerId Identifier of the newly created offer. Returns 0 if offer creation was rejected by Mangrove and `args.noRevert` is set to `true`.\n @return status NEW_OFFER_SUCCESS if the offer was successfully posted on Mangrove. Returns Mangrove's revert reason otherwise."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_newOffer",
            "nameLocation": "2664:9:106",
            "parameters": {
              "id": 84712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84711,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "2691:4:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84770,
                  "src": "2674:21:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                    "typeString": "struct IOfferLogic.OfferArgs"
                  },
                  "typeName": {
                    "id": 84710,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84709,
                      "name": "OfferArgs",
                      "nameLocations": [
                        "2674:9:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83563,
                      "src": "2674:9:106"
                    },
                    "referencedDeclaration": 83563,
                    "src": "2674:9:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2673:23:106"
            },
            "returnParameters": {
              "id": 84717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84714,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "2720:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84770,
                  "src": "2715:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84713,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2715:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84716,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2737:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84770,
                  "src": "2729:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84715,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2729:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2714:30:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 84828,
            "nodeType": "FunctionDefinition",
            "src": "3116:389:106",
            "nodes": [],
            "body": {
              "id": 84827,
              "nodeType": "Block",
              "src": "3218:287:106",
              "nodes": [],
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 84803,
                        "nodeType": "Block",
                        "src": "3344:38:106",
                        "statements": [
                          {
                            "expression": {
                              "id": 84801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 84799,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84780,
                                "src": "3352:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 84800,
                                "name": "REPOST_SUCCESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81647,
                                "src": "3361:14:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3352:23:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 84802,
                            "nodeType": "ExpressionStatement",
                            "src": "3352:23:106"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 84804,
                      "nodeType": "TryCatchClause",
                      "src": "3344:38:106"
                    },
                    {
                      "block": {
                        "id": 84824,
                        "nodeType": "Block",
                        "src": "3417:84:106",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 84809,
                                    "name": "args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84774,
                                    "src": "3433:4:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                                      "typeString": "struct IOfferLogic.OfferArgs memory"
                                    }
                                  },
                                  "id": 84810,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3438:8:106",
                                  "memberName": "noRevert",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 83562,
                                  "src": "3433:13:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 84811,
                                  "name": "reason",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 84806,
                                  "src": "3448:6:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 84808,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "3425:7:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 84812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3425:30:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 84813,
                            "nodeType": "ExpressionStatement",
                            "src": "3425:30:106"
                          },
                          {
                            "expression": {
                              "id": 84822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 84814,
                                "name": "status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84780,
                                "src": "3463:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 84819,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 84806,
                                        "src": "3486:6:106",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 84818,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3480:5:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 84817,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3480:5:106",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 84820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3480:13:106",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 84816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3472:7:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 84815,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3472:7:106",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 84821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3472:22:106",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "3463:31:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "id": 84823,
                            "nodeType": "ExpressionStatement",
                            "src": "3463:31:106"
                          }
                        ]
                      },
                      "errorName": "Error",
                      "id": 84825,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 84807,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 84806,
                            "mutability": "mutable",
                            "name": "reason",
                            "nameLocation": "3409:6:106",
                            "nodeType": "VariableDeclaration",
                            "scope": 84825,
                            "src": "3395:20:106",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 84805,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3395:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3394:22:106"
                      },
                      "src": "3383:118:106"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 84787,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84774,
                          "src": "3268:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84788,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3273:5:106",
                        "memberName": "olKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83549,
                        "src": "3268:10:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 84789,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84774,
                          "src": "3280:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84790,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3285:4:106",
                        "memberName": "tick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83552,
                        "src": "3280:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        }
                      },
                      {
                        "expression": {
                          "id": 84791,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84774,
                          "src": "3291:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84792,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3296:5:106",
                        "memberName": "gives",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83554,
                        "src": "3291:10:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 84793,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84774,
                          "src": "3303:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84794,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3308:6:106",
                        "memberName": "gasreq",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83556,
                        "src": "3303:11:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 84795,
                          "name": "args",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84774,
                          "src": "3316:4:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                            "typeString": "struct IOfferLogic.OfferArgs memory"
                          }
                        },
                        "id": 84796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3321:8:106",
                        "memberName": "gasprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 83558,
                        "src": "3316:13:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 84797,
                        "name": "offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84776,
                        "src": "3331:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                          "typeString": "struct OLKey memory"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                          "typeString": "Tick"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_userDefinedValueType$_Tick_$5280",
                            "typeString": "Tick"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 84782,
                          "name": "MGV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81629,
                          "src": "3228:3:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$54127",
                            "typeString": "contract IMangrove"
                          }
                        },
                        "id": 84783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3232:17:106",
                        "memberName": "updateOfferByTick",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53788,
                        "src": "3228:21:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_OLKey_$55875_memory_ptr_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (struct OLKey memory,Tick,uint256,uint256,uint256,uint256) payable external"
                        }
                      },
                      "id": 84786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 84784,
                            "name": "args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84774,
                            "src": "3257:4:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                              "typeString": "struct IOfferLogic.OfferArgs memory"
                            }
                          },
                          "id": 84785,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3262:4:106",
                          "memberName": "fund",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 83560,
                          "src": "3257:9:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3228:39:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_OLKey_$55875_memory_ptr_$_t_userDefinedValueType$_Tick_$5280_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$value",
                        "typeString": "function (struct OLKey memory,Tick,uint256,uint256,uint256,uint256) payable external"
                      }
                    },
                    "id": 84798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3228:111:106",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84826,
                  "nodeType": "TryStatement",
                  "src": "3224:277:106"
                }
              ]
            },
            "baseFunctions": [
              82327
            ],
            "documentation": {
              "id": 84771,
              "nodeType": "StructuredDocumentation",
              "src": "3085:28:106",
              "text": "@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_updateOffer",
            "nameLocation": "3125:12:106",
            "overrides": {
              "id": 84778,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3184:8:106"
            },
            "parameters": {
              "id": 84777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84774,
                  "mutability": "mutable",
                  "name": "args",
                  "nameLocation": "3155:4:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84828,
                  "src": "3138:21:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OfferArgs_$83563_memory_ptr",
                    "typeString": "struct IOfferLogic.OfferArgs"
                  },
                  "typeName": {
                    "id": 84773,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84772,
                      "name": "OfferArgs",
                      "nameLocations": [
                        "3138:9:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83563,
                      "src": "3138:9:106"
                    },
                    "referencedDeclaration": 83563,
                    "src": "3138:9:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OfferArgs_$83563_storage_ptr",
                      "typeString": "struct IOfferLogic.OfferArgs"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84776,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "3166:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84828,
                  "src": "3161:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84775,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3161:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3137:37:106"
            },
            "returnParameters": {
              "id": 84781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84780,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "3210:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84828,
                  "src": "3202:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84779,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3202:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3201:16:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 84851,
            "nodeType": "FunctionDefinition",
            "src": "4170:297:106",
            "nodes": [],
            "body": {
              "id": 84850,
              "nodeType": "Block",
              "src": "4401:66:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 84848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84841,
                      "name": "freeWei",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84839,
                      "src": "4407:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84844,
                          "name": "olKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84832,
                          "src": "4434:5:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "id": 84845,
                          "name": "offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84834,
                          "src": "4441:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 84846,
                          "name": "deprovision",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84836,
                          "src": "4450:11:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 84842,
                          "name": "MGV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81629,
                          "src": "4417:3:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IMangrove_$54127",
                            "typeString": "contract IMangrove"
                          }
                        },
                        "id": 84843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4421:12:106",
                        "memberName": "retractOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 53818,
                        "src": "4417:16:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,uint256,bool) external returns (uint256)"
                        }
                      },
                      "id": 84847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4417:45:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4407:55:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84849,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:55:106"
                }
              ]
            },
            "documentation": {
              "id": 84829,
              "nodeType": "StructuredDocumentation",
              "src": "3509:658:106",
              "text": "@notice Retracts an offer from an Offer List of Mangrove.\n@param olKey the offer list key.\n@param offerId the identifier of the offer in the offer list\n@param deprovision if set to `true` if offer admin wishes to redeem the offer's provision.\n@return freeWei the amount of native tokens (in WEI) that have been retrieved by retracting the offer.\n@dev An offer that is retracted without `deprovision` is retracted from the offer list, but still has its provisions locked by Mangrove.\n@dev Calling this function, with the `deprovision` flag, on an offer that is already retracted must be used to retrieve the locked provisions."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_retractOffer",
            "nameLocation": "4179:13:106",
            "parameters": {
              "id": 84837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84832,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "4211:5:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84851,
                  "src": "4198:18:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 84831,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84830,
                      "name": "OLKey",
                      "nameLocations": [
                        "4198:5:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "4198:5:106"
                    },
                    "referencedDeclaration": 55875,
                    "src": "4198:5:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84834,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "4227:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84851,
                  "src": "4222:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84833,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4222:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84836,
                  "mutability": "mutable",
                  "name": "deprovision",
                  "nameLocation": "4245:11:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84851,
                  "src": "4240:16:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 84835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4240:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4192:176:106"
            },
            "returnParameters": {
              "id": 84840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84839,
                  "mutability": "mutable",
                  "name": "freeWei",
                  "nameLocation": "4392:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84851,
                  "src": "4387:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84838,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4386:14:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 84871,
            "nodeType": "FunctionDefinition",
            "src": "4500:154:106",
            "nodes": [],
            "body": {
              "id": 84870,
              "nodeType": "Block",
              "src": "4603:51:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 84868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84863,
                      "name": "provision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84861,
                      "src": "4609:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 84865,
                          "name": "olKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84855,
                          "src": "4634:5:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          }
                        },
                        {
                          "id": 84866,
                          "name": "offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84857,
                          "src": "4641:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                            "typeString": "struct OLKey memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 84864,
                        "name": "_provisionOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82366,
                        "src": "4621:12:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_OLKey_$55875_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (struct OLKey memory,uint256) view returns (uint256)"
                        }
                      },
                      "id": 84867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4621:28:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4609:40:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84869,
                  "nodeType": "ExpressionStatement",
                  "src": "4609:40:106"
                }
              ]
            },
            "baseFunctions": [
              83521
            ],
            "documentation": {
              "id": 84852,
              "nodeType": "StructuredDocumentation",
              "src": "4471:26:106",
              "text": "@inheritdoc IOfferLogic"
            },
            "functionSelector": "a24f2b2d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provisionOf",
            "nameLocation": "4509:11:106",
            "overrides": {
              "id": 84859,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4569:8:106"
            },
            "parameters": {
              "id": 84858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84855,
                  "mutability": "mutable",
                  "name": "olKey",
                  "nameLocation": "4534:5:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84871,
                  "src": "4521:18:106",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OLKey_$55875_memory_ptr",
                    "typeString": "struct OLKey"
                  },
                  "typeName": {
                    "id": 84854,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84853,
                      "name": "OLKey",
                      "nameLocations": [
                        "4521:5:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55875,
                      "src": "4521:5:106"
                    },
                    "referencedDeclaration": 55875,
                    "src": "4521:5:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OLKey_$55875_storage_ptr",
                      "typeString": "struct OLKey"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84857,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "4546:7:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84871,
                  "src": "4541:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84856,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4541:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4520:34:106"
            },
            "returnParameters": {
              "id": 84862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84861,
                  "mutability": "mutable",
                  "name": "provision",
                  "nameLocation": "4592:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84871,
                  "src": "4587:14:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84860,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4587:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4586:16:106"
            },
            "scope": 85066,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84886,
            "nodeType": "FunctionDefinition",
            "src": "4893:112:106",
            "nodes": [],
            "body": {
              "id": 84885,
              "nodeType": "Block",
              "src": "4986:19:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 84883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4999:1:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 84882,
                  "id": 84884,
                  "nodeType": "Return",
                  "src": "4992:8:106"
                }
              ]
            },
            "baseFunctions": [
              82158
            ],
            "documentation": {
              "id": 84872,
              "nodeType": "StructuredDocumentation",
              "src": "4658:232:106",
              "text": "@notice direct contract do not need to do anything specific with incoming funds during trade\n@dev one should override this function if one wishes to leverage taker's fund during trade execution\n@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__put__",
            "nameLocation": "4902:7:106",
            "overrides": {
              "id": 84879,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4962:8:106"
            },
            "parameters": {
              "id": 84878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84886,
                  "src": "4910:4:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84873,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4910:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84886,
                  "src": "4916:27:106",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 84876,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84875,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "4916:6:106",
                        "4923:11:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "4916:18:106"
                    },
                    "referencedDeclaration": 55969,
                    "src": "4916:18:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4909:35:106"
            },
            "returnParameters": {
              "id": 84882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84886,
                  "src": "4980:4:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4980:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4979:6:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 84968,
            "nodeType": "FunctionDefinition",
            "src": "5244:773:106",
            "nodes": [],
            "body": {
              "id": 84967,
              "nodeType": "Block",
              "src": "5350:667:106",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    84899
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84899,
                      "mutability": "mutable",
                      "name": "amount_",
                      "nameLocation": "5361:7:106",
                      "nodeType": "VariableDeclaration",
                      "scope": 84967,
                      "src": "5356:12:106",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 84898,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5356:4:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84911,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84908,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5422:4:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Direct_$85066",
                              "typeString": "contract Direct"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Direct_$85066",
                              "typeString": "contract Direct"
                            }
                          ],
                          "id": 84907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5414:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5414:7:106",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5414:13:106",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 84901,
                                "name": "order",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84892,
                                "src": "5378:5:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                  "typeString": "struct MgvLib.SingleOrder calldata"
                                }
                              },
                              "id": 84902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5384:5:106",
                              "memberName": "olKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 55950,
                              "src": "5378:11:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                "typeString": "struct OLKey calldata"
                              }
                            },
                            "id": 84903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5390:12:106",
                            "memberName": "outbound_tkn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 55870,
                            "src": "5378:24:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84900,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88,
                          "src": "5371:6:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 84904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5371:32:106",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 84905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5404:9:106",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "5371:42:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 84910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5371:57:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5356:72:106"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 84914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84912,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84899,
                      "src": "5438:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 84913,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84889,
                      "src": "5449:6:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5438:17:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 84918,
                  "nodeType": "IfStatement",
                  "src": "5434:46:106",
                  "trueBody": {
                    "id": 84917,
                    "nodeType": "Block",
                    "src": "5457:23:106",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 84915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5472:1:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 84897,
                        "id": 84916,
                        "nodeType": "Return",
                        "src": "5465:8:106"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 84923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84919,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84899,
                      "src": "5485:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 84922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 84920,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84889,
                        "src": "5495:6:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 84921,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84899,
                        "src": "5504:7:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5495:16:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5485:26:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84924,
                  "nodeType": "ExpressionStatement",
                  "src": "5485:26:106"
                },
                {
                  "assignments": [
                    84927
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84927,
                      "mutability": "mutable",
                      "name": "router_",
                      "nameLocation": "5532:7:106",
                      "nodeType": "VariableDeclaration",
                      "scope": 84967,
                      "src": "5517:22:106",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      },
                      "typeName": {
                        "id": 84926,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 84925,
                          "name": "AbstractRouter",
                          "nameLocations": [
                            "5517:14:106"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88623,
                          "src": "5517:14:106"
                        },
                        "referencedDeclaration": 88623,
                        "src": "5517:14:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84930,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 84928,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81713,
                      "src": "5542:6:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                        "typeString": "function () view returns (contract AbstractRouter)"
                      }
                    },
                    "id": 84929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5542:8:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5517:33:106"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    },
                    "id": 84933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84931,
                      "name": "router_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84927,
                      "src": "5560:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 84932,
                      "name": "NO_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81639,
                      "src": "5571:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "src": "5560:20:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 84965,
                    "nodeType": "Block",
                    "src": "5617:396:106",
                    "statements": [
                      {
                        "assignments": [
                          84938
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 84938,
                            "mutability": "mutable",
                            "name": "pulled",
                            "nameLocation": "5846:6:106",
                            "nodeType": "VariableDeclaration",
                            "scope": 84965,
                            "src": "5841:11:106",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 84937,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5841:4:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 84955,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 84942,
                                      "name": "order",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 84892,
                                      "src": "5875:5:106",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                        "typeString": "struct MgvLib.SingleOrder calldata"
                                      }
                                    },
                                    "id": 84943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5881:5:106",
                                    "memberName": "olKey",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 55950,
                                    "src": "5875:11:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                      "typeString": "struct OLKey calldata"
                                    }
                                  },
                                  "id": 84944,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5887:12:106",
                                  "memberName": "outbound_tkn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55870,
                                  "src": "5875:24:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 84941,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88,
                                "src": "5868:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 84945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5868:32:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 84946,
                              "name": "RESERVE_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84656,
                              "src": "5902:10:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 84947,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84899,
                              "src": "5914:7:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 84953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 84948,
                                "name": "RESERVE_ID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84656,
                                "src": "5923:10:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 84951,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5945:4:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Direct_$85066",
                                      "typeString": "contract Direct"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Direct_$85066",
                                      "typeString": "contract Direct"
                                    }
                                  ],
                                  "id": 84950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5937:7:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 84949,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5937:7:106",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 84952,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5937:13:106",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5923:27:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "id": 84939,
                              "name": "router_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84927,
                              "src": "5855:7:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                "typeString": "contract AbstractRouter"
                              }
                            },
                            "id": 84940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5863:4:106",
                            "memberName": "pull",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 88366,
                            "src": "5855:12:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,address,uint256,bool) external returns (uint256)"
                            }
                          },
                          "id": 84954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5855:96:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5841:110:106"
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 84958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 84956,
                              "name": "pulled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84938,
                              "src": "5966:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 84957,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84899,
                              "src": "5976:7:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5966:17:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 84962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 84960,
                              "name": "amount_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84899,
                              "src": "5990:7:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 84961,
                              "name": "pulled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84938,
                              "src": "6000:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5990:16:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 84963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5966:40:106",
                          "trueExpression": {
                            "hexValue": "30",
                            "id": 84959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5986:1:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 84897,
                        "id": 84964,
                        "nodeType": "Return",
                        "src": "5959:47:106"
                      }
                    ]
                  },
                  "id": 84966,
                  "nodeType": "IfStatement",
                  "src": "5556:457:106",
                  "trueBody": {
                    "id": 84936,
                    "nodeType": "Block",
                    "src": "5582:29:106",
                    "statements": [
                      {
                        "expression": {
                          "id": 84934,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84899,
                          "src": "5597:7:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 84897,
                        "id": 84935,
                        "nodeType": "Return",
                        "src": "5590:14:106"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              82169
            ],
            "documentation": {
              "id": 84887,
              "nodeType": "StructuredDocumentation",
              "src": "5009:232:106",
              "text": "@notice `__get__` hook for `Direct` is to ask the router to pull liquidity from `reserveId` if strat is using a router\n otherwise the function simply returns what's missing in the local balance\n@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__get__",
            "nameLocation": "5253:7:106",
            "overrides": {
              "id": 84894,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5326:8:106"
            },
            "parameters": {
              "id": 84893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84889,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5266:6:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84968,
                  "src": "5261:11:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84888,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5261:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84892,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "5302:5:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 84968,
                  "src": "5274:33:106",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 84891,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84890,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "5274:6:106",
                        "5281:11:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "5274:18:106"
                    },
                    "referencedDeclaration": 55969,
                    "src": "5274:18:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5260:48:106"
            },
            "returnParameters": {
              "id": 84897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 84968,
                  "src": "5344:4:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84895,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5344:4:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5343:6:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 85037,
            "nodeType": "FunctionDefinition",
            "src": "6144:656:106",
            "nodes": [],
            "body": {
              "id": 85036,
              "nodeType": "Block",
              "src": "6289:511:106",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    84982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84982,
                      "mutability": "mutable",
                      "name": "router_",
                      "nameLocation": "6310:7:106",
                      "nodeType": "VariableDeclaration",
                      "scope": 85036,
                      "src": "6295:22:106",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      },
                      "typeName": {
                        "id": 84981,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 84980,
                          "name": "AbstractRouter",
                          "nameLocations": [
                            "6295:14:106"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 88623,
                          "src": "6295:14:106"
                        },
                        "referencedDeclaration": 88623,
                        "src": "6295:14:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                          "typeString": "contract AbstractRouter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84985,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 84983,
                      "name": "router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81713,
                      "src": "6320:6:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                        "typeString": "function () view returns (contract AbstractRouter)"
                      }
                    },
                    "id": 84984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6320:8:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6295:33:106"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    },
                    "id": 84988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 84986,
                      "name": "router_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84982,
                      "src": "6338:7:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 84987,
                      "name": "NO_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81639,
                      "src": "6349:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "src": "6338:20:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85029,
                  "nodeType": "IfStatement",
                  "src": "6334:367:106",
                  "trueBody": {
                    "id": 85028,
                    "nodeType": "Block",
                    "src": "6360:341:106",
                    "statements": [
                      {
                        "assignments": [
                          84993
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 84993,
                            "mutability": "mutable",
                            "name": "tokens",
                            "nameLocation": "6384:6:106",
                            "nodeType": "VariableDeclaration",
                            "scope": 85028,
                            "src": "6368:22:106",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr",
                              "typeString": "contract IERC20[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 84991,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 84990,
                                  "name": "IERC20",
                                  "nameLocations": [
                                    "6368:6:106"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 88,
                                  "src": "6368:6:106"
                                },
                                "referencedDeclaration": 88,
                                "src": "6368:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 84992,
                              "nodeType": "ArrayTypeName",
                              "src": "6368:8:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_storage_ptr",
                                "typeString": "contract IERC20[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 85000,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 84998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6406:1:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 84997,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6393:12:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 84995,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 84994,
                                  "name": "IERC20",
                                  "nameLocations": [
                                    "6397:6:106"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 88,
                                  "src": "6397:6:106"
                                },
                                "referencedDeclaration": 88,
                                "src": "6397:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$88",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 84996,
                              "nodeType": "ArrayTypeName",
                              "src": "6397:8:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_storage_ptr",
                                "typeString": "contract IERC20[]"
                              }
                            }
                          },
                          "id": 84999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6393:15:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr",
                            "typeString": "contract IERC20[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6368:40:106"
                      },
                      {
                        "expression": {
                          "id": 85009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 85001,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84993,
                              "src": "6416:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              }
                            },
                            "id": 85003,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 85002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6423:1:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6416:9:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 85005,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84972,
                                    "src": "6435:5:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                      "typeString": "struct MgvLib.SingleOrder calldata"
                                    }
                                  },
                                  "id": 85006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6441:5:106",
                                  "memberName": "olKey",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55950,
                                  "src": "6435:11:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                    "typeString": "struct OLKey calldata"
                                  }
                                },
                                "id": 85007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6447:12:106",
                                "memberName": "outbound_tkn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55870,
                                "src": "6435:24:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 85004,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "6428:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 85008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6428:32:106",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "6416:44:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 85010,
                        "nodeType": "ExpressionStatement",
                        "src": "6416:44:106"
                      },
                      {
                        "expression": {
                          "id": 85019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 85011,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84993,
                              "src": "6571:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              }
                            },
                            "id": 85013,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 85012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6578:1:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6571:9:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 85015,
                                    "name": "order",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84972,
                                    "src": "6590:5:106",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                                      "typeString": "struct MgvLib.SingleOrder calldata"
                                    }
                                  },
                                  "id": 85016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6596:5:106",
                                  "memberName": "olKey",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 55950,
                                  "src": "6590:11:106",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_OLKey_$55875_calldata_ptr",
                                    "typeString": "struct OLKey calldata"
                                  }
                                },
                                "id": 85017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6602:11:106",
                                "memberName": "inbound_tkn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 55872,
                                "src": "6590:23:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 85014,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88,
                              "src": "6583:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$88_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 85018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6583:31:106",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "6571:43:106",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 85020,
                        "nodeType": "ExpressionStatement",
                        "src": "6571:43:106"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85024,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84993,
                              "src": "6675:6:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              }
                            },
                            {
                              "id": 85025,
                              "name": "RESERVE_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84656,
                              "src": "6683:10:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr",
                                "typeString": "contract IERC20[] memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 85021,
                              "name": "router_",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84982,
                              "src": "6661:7:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                "typeString": "contract AbstractRouter"
                              }
                            },
                            "id": 85023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6669:5:106",
                            "memberName": "flush",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 88479,
                            "src": "6661:13:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_contract$_IERC20_$88_$dyn_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20[] memory,address) external"
                            }
                          },
                          "id": 85026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6661:33:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85027,
                        "nodeType": "ExpressionStatement",
                        "src": "6661:33:106"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85032,
                        "name": "order",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84972,
                        "src": "6778:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        }
                      },
                      {
                        "id": 85033,
                        "name": "makerData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84974,
                        "src": "6785:9:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                          "typeString": "struct MgvLib.SingleOrder calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 85030,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "6752:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Direct_$85066_$",
                          "typeString": "type(contract super Direct)"
                        }
                      },
                      "id": 85031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6758:19:106",
                      "memberName": "__posthookSuccess__",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82316,
                      "src": "6752:25:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SingleOrder_$55969_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (struct MgvLib.SingleOrder calldata,bytes32) returns (bytes32)"
                      }
                    },
                    "id": 85034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6752:43:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 84979,
                  "id": 85035,
                  "nodeType": "Return",
                  "src": "6745:50:106"
                }
              ]
            },
            "baseFunctions": [
              82316
            ],
            "documentation": {
              "id": 84969,
              "nodeType": "StructuredDocumentation",
              "src": "6021:120:106",
              "text": "@notice Direct posthook flushes outbound and inbound token back to the router (if any)\n@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__posthookSuccess__",
            "nameLocation": "6153:19:106",
            "overrides": {
              "id": 84976,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6256:8:106"
            },
            "parameters": {
              "id": 84975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84972,
                  "mutability": "mutable",
                  "name": "order",
                  "nameLocation": "6201:5:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 85037,
                  "src": "6173:33:106",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SingleOrder_$55969_calldata_ptr",
                    "typeString": "struct MgvLib.SingleOrder"
                  },
                  "typeName": {
                    "id": 84971,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 84970,
                      "name": "MgvLib.SingleOrder",
                      "nameLocations": [
                        "6173:6:106",
                        "6180:11:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55969,
                      "src": "6173:18:106"
                    },
                    "referencedDeclaration": 55969,
                    "src": "6173:18:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SingleOrder_$55969_storage_ptr",
                      "typeString": "struct MgvLib.SingleOrder"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84974,
                  "mutability": "mutable",
                  "name": "makerData",
                  "nameLocation": "6216:9:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 85037,
                  "src": "6208:17:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84973,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6208:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6172:54:106"
            },
            "returnParameters": {
              "id": 84979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 85037,
                  "src": "6278:7:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 84977,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:7:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6277:9:106"
            },
            "scope": 85066,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 85065,
            "nodeType": "FunctionDefinition",
            "src": "6942:189:106",
            "nodes": [],
            "body": {
              "id": 85064,
              "nodeType": "Block",
              "src": "7010:121:106",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85048,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85041,
                        "src": "7036:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "id": 85045,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "7016:5:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Direct_$85066_$",
                          "typeString": "type(contract super Direct)"
                        }
                      },
                      "id": 85047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7022:13:106",
                      "memberName": "__checkList__",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82095,
                      "src": "7016:19:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20) view"
                      }
                    },
                    "id": 85049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7016:26:106",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85050,
                  "nodeType": "ExpressionStatement",
                  "src": "7016:26:106"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                      "typeString": "contract AbstractRouter"
                    },
                    "id": 85054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 85051,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81713,
                        "src": "7052:6:106",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                          "typeString": "function () view returns (contract AbstractRouter)"
                        }
                      },
                      "id": 85052,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7052:8:106",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 85053,
                      "name": "NO_ROUTER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81639,
                      "src": "7064:9:106",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                        "typeString": "contract AbstractRouter"
                      }
                    },
                    "src": "7052:21:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 85063,
                  "nodeType": "IfStatement",
                  "src": "7048:79:106",
                  "trueBody": {
                    "id": 85062,
                    "nodeType": "Block",
                    "src": "7075:52:106",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 85058,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 85041,
                              "src": "7102:5:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 85059,
                              "name": "RESERVE_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84656,
                              "src": "7109:10:106",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 85055,
                                "name": "router",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 81713,
                                "src": "7083:6:106",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AbstractRouter_$88623_$",
                                  "typeString": "function () view returns (contract AbstractRouter)"
                                }
                              },
                              "id": 85056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7083:8:106",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                "typeString": "contract AbstractRouter"
                              }
                            },
                            "id": 85057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7092:9:106",
                            "memberName": "checkList",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 88578,
                            "src": "7083:18:106",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$88_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,address) view external"
                            }
                          },
                          "id": 85060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7083:37:106",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 85061,
                        "nodeType": "ExpressionStatement",
                        "src": "7083:37:106"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              82095
            ],
            "documentation": {
              "id": 85038,
              "nodeType": "StructuredDocumentation",
              "src": "6804:135:106",
              "text": "@notice if strat has a router, verifies that the router is ready to pull/push on behalf of reserve id\n@inheritdoc MangroveOffer"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__checkList__",
            "nameLocation": "6951:13:106",
            "overrides": {
              "id": 85043,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7001:8:106"
            },
            "parameters": {
              "id": 85042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85041,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "6972:5:106",
                  "nodeType": "VariableDeclaration",
                  "scope": 85065,
                  "src": "6965:12:106",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 85040,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 85039,
                      "name": "IERC20",
                      "nameLocations": [
                        "6965:6:106"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "6965:6:106"
                    },
                    "referencedDeclaration": 88,
                    "src": "6965:6:106",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6964:14:106"
            },
            "returnParameters": {
              "id": 85044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7010:0:106"
            },
            "scope": 85066,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 84647,
              "name": "MangroveOffer",
              "nameLocations": [
                "618:13:106"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 82367,
              "src": "618:13:106"
            },
            "id": 84648,
            "nodeType": "InheritanceSpecifier",
            "src": "618:13:106"
          }
        ],
        "canonicalName": "Direct",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 84646,
          "nodeType": "StructuredDocumentation",
          "src": "472:118:106",
          "text": "@title `Direct` strats is an extension of MangroveOffer that allows contract's admin to manage offers on Mangrove."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          85066,
          82367,
          83578,
          56211,
          89841
        ],
        "name": "Direct",
        "nameLocation": "608:6:106",
        "scope": 85067,
        "usedErrors": [],
        "usedEvents": [
          81661,
          83467,
          83473,
          84653,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 106
}