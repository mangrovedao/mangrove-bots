{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "MakerBind",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "MakerUnbind",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ROUTER_GASREQ",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "makerContract",
          "type": "address"
        }
      ],
      "name": "bind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "flush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mkr",
          "type": "address"
        }
      ],
      "name": "isBound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "strict",
          "type": "bool"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pulled",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pushed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "routerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "overhead",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unbind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "makerContract",
          "type": "address"
        }
      ],
      "name": "unbind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b506201117033806100675760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e0000000000000000604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055608052608051610ee86100ac6000396000818161017801526102c40152610ee86000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806381bac14f1161008c578063cf5e7bd311610066578063cf5e7bd3146101db578063f850a81c146101ee578063f851a44014610201578063fe380db51461021c57600080fd5b806381bac14f146101ad578063a01dccd8146101c0578063b6b25742146101d357600080fd5b80632f37b624116100c85780632f37b6241461013d578063333dbb0d146101605780633871cb3f14610173578063704b6c021461019a57600080fd5b80631c5a9d9c146100ef57806326e8eda2146101045780632876fb4e1461012a575b600080fd5b6101026100fd366004610c5b565b61022f565b005b610117610112366004610c78565b610274565b6040519081526020015b60405180910390f35b610117610138366004610cb9565b6102c0565b61015061014b366004610c5b565b6102e8565b6040519015158152602001610121565b61011761016e366004610d00565b610306565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6101026101a8366004610c5b565b61035c565b6101026101bb366004610c5b565b610430565b6101026101ce366004610cb9565b6104a9565b6101026105d4565b6101026101e9366004610c5b565b610604565b6101026101fc366004610d53565b610637565b6000546040516001600160a01b039091168152602001610121565b61011761022a366004610cb9565b61078c565b6000546001600160a01b031633148061024c575061024c336102e8565b6102715760405162461bcd60e51b815260040161026890610dd9565b60405180910390fd5b50565b600061027f336102e8565b61029b5760405162461bcd60e51b815260040161026890610dd9565b816000036102ab575060006102b9565b6102b68484846107fa565b90505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006102b9565b6001600160a01b031660009081526001602052604090205460ff1690565b6000610311336102e8565b61032d5760405162461bcd60e51b815260040161026890610dd9565b818015610338575082155b1561034557506000610354565b61035185858585610822565b90505b949350505050565b6000546001600160a01b031633146103865760405162461bcd60e51b815260040161026890610dd9565b6001600160a01b0381166103dc5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610268565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a19060200160405180910390a150565b6000546001600160a01b0316331461045a5760405162461bcd60e51b815260040161026890610dd9565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fecac69b9e48a248381b74f2e1cf855cc6afc2f410751325703374c70351035bc9190a250565b6104b2336102e8565b6104fe5760405162461bcd60e51b815260206004820152601f60248201527f526f757465722f63616c6c657249734e6f74426f756e64546f526f75746572006044820152606401610268565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190610e10565b116105c65760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b6064820152608401610268565b6105d082826108bc565b5050565b6105dd336102e8565b6105f95760405162461bcd60e51b815260040161026890610dd9565b6106023361097d565b565b6000546001600160a01b0316331461062e5760405162461bcd60e51b815260040161026890610dd9565b6102718161097d565b610640336102e8565b61065c5760405162461bcd60e51b815260040161026890610dd9565b60005b8281101561078657600084848381811061067b5761067b610e29565b90506020020160208101906106909190610c5b565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190610e10565b90508015610775578061073486868581811061071857610718610e29565b905060200201602081019061072d9190610c5b565b85846107fa565b146107755760405162461bcd60e51b81526020600482015260116024820152701c9bdd5d195c8bdc1d5cda11985a5b1959607a1b6044820152606401610268565b5061077f81610e3f565b905061065f565b50505050565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610e10565b600080610809853386866109c6565b905080610817576000610819565b825b95945050505050565b600081610898576040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610e10565b61089a565b825b92506108a8858533866109c6565b156108b4575081610354565b506000610354565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190610e10565b116105d05760405162461bcd60e51b815260206004820152601f60248201527f53696d706c65526f757465722f4e6f74417070726f76656442794f776e6572006044820152606401610268565b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30a4a29afb6d28e62264c8b7cd43fe3a5edce91f4b9c8591b23a99b3838686b59190a250565b6000816000036109d857506001610354565b826001600160a01b0316846001600160a01b031603610a67576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190610e10565b10159050610354565b306001600160a01b03851603610a8957610a82858484610a95565b9050610354565b61035185858585610b69565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392839291881691610af39190610e66565b6000604051808303816000865af19150503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b5091509150818015610b5f575080511580610b5f575080806020019051810190610b5f9190610e95565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691610bcf9190610e66565b6000604051808303816000865af19150503d8060008114610c0c576040519150601f19603f3d011682016040523d82523d6000602084013e610c11565b606091505b5091509150818015610c3b575080511580610c3b575080806020019051810190610c3b9190610e95565b979650505050505050565b6001600160a01b038116811461027157600080fd5b600060208284031215610c6d57600080fd5b81356102b981610c46565b600080600060608486031215610c8d57600080fd5b8335610c9881610c46565b92506020840135610ca881610c46565b929592945050506040919091013590565b60008060408385031215610ccc57600080fd5b8235610cd781610c46565b91506020830135610ce781610c46565b809150509250929050565b801515811461027157600080fd5b60008060008060808587031215610d1657600080fd5b8435610d2181610c46565b93506020850135610d3181610c46565b9250604085013591506060850135610d4881610cf2565b939692955090935050565b600080600060408486031215610d6857600080fd5b833567ffffffffffffffff80821115610d8057600080fd5b818601915086601f830112610d9457600080fd5b813581811115610da357600080fd5b8760208260051b8501011115610db857600080fd5b60209283019550935050840135610dce81610c46565b809150509250925092565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215610e2257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610e5f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610e875760208186018101518583015201610e6d565b506000920191825250919050565b600060208284031215610ea757600080fd5b81516102b981610cf256fea2646970667358221220488559b74d71829856bcef9dfe67dd11cd479cfea710cbfa15ab298e063ada0f64736f6c63430008140033",
    "sourceMap": "630:2182:118:-:0;;;;;;;;;;;;-1:-1:-1;666:6:118;355:10:119;;977:57:123;;;;-1:-1:-1;;;977:57:123;;216:2:131;977:57:123;;;198:21:131;255:2;235:18;;;228:30;294:26;274:18;;;267:54;338:18;;977:57:123;;;;;;;;1040:6;:15;;-1:-1:-1;;;;;;1040:15:123;-1:-1:-1;;;;;1040:15:123;;;;;;;;;;602:29:120;;630:2182:118;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806381bac14f1161008c578063cf5e7bd311610066578063cf5e7bd3146101db578063f850a81c146101ee578063f851a44014610201578063fe380db51461021c57600080fd5b806381bac14f146101ad578063a01dccd8146101c0578063b6b25742146101d357600080fd5b80632f37b624116100c85780632f37b6241461013d578063333dbb0d146101605780633871cb3f14610173578063704b6c021461019a57600080fd5b80631c5a9d9c146100ef57806326e8eda2146101045780632876fb4e1461012a575b600080fd5b6101026100fd366004610c5b565b61022f565b005b610117610112366004610c78565b610274565b6040519081526020015b60405180910390f35b610117610138366004610cb9565b6102c0565b61015061014b366004610c5b565b6102e8565b6040519015158152602001610121565b61011761016e366004610d00565b610306565b6101177f000000000000000000000000000000000000000000000000000000000000000081565b6101026101a8366004610c5b565b61035c565b6101026101bb366004610c5b565b610430565b6101026101ce366004610cb9565b6104a9565b6101026105d4565b6101026101e9366004610c5b565b610604565b6101026101fc366004610d53565b610637565b6000546040516001600160a01b039091168152602001610121565b61011761022a366004610cb9565b61078c565b6000546001600160a01b031633148061024c575061024c336102e8565b6102715760405162461bcd60e51b815260040161026890610dd9565b60405180910390fd5b50565b600061027f336102e8565b61029b5760405162461bcd60e51b815260040161026890610dd9565b816000036102ab575060006102b9565b6102b68484846107fa565b90505b9392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006102b9565b6001600160a01b031660009081526001602052604090205460ff1690565b6000610311336102e8565b61032d5760405162461bcd60e51b815260040161026890610dd9565b818015610338575082155b1561034557506000610354565b61035185858585610822565b90505b949350505050565b6000546001600160a01b031633146103865760405162461bcd60e51b815260040161026890610dd9565b6001600160a01b0381166103dc5760405162461bcd60e51b815260206004820152601860248201527f416363657373436f6e74726f6c6c65642f307841646d696e00000000000000006044820152606401610268565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f5a272403b402d892977df56625f4164ccaf70ca3863991c43ecfe76a6905b0a19060200160405180910390a150565b6000546001600160a01b0316331461045a5760405162461bcd60e51b815260040161026890610dd9565b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517fecac69b9e48a248381b74f2e1cf855cc6afc2f410751325703374c70351035bc9190a250565b6104b2336102e8565b6104fe5760405162461bcd60e51b815260206004820152601f60248201527f526f757465722f63616c6c657249734e6f74426f756e64546f526f75746572006044820152606401610268565b604051636eb1769f60e11b81523360048201523060248201526000906001600160a01b0384169063dd62ed3e90604401602060405180830381865afa15801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f9190610e10565b116105c65760405162461bcd60e51b815260206004820152602160248201527f526f757465722f4e6f74417070726f76656442794d616b6572436f6e747261636044820152601d60fa1b6064820152608401610268565b6105d082826108bc565b5050565b6105dd336102e8565b6105f95760405162461bcd60e51b815260040161026890610dd9565b6106023361097d565b565b6000546001600160a01b0316331461062e5760405162461bcd60e51b815260040161026890610dd9565b6102718161097d565b610640336102e8565b61065c5760405162461bcd60e51b815260040161026890610dd9565b60005b8281101561078657600084848381811061067b5761067b610e29565b90506020020160208101906106909190610c5b565b6040516370a0823160e01b81523360048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156106d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106fa9190610e10565b90508015610775578061073486868581811061071857610718610e29565b905060200201602081019061072d9190610c5b565b85846107fa565b146107755760405162461bcd60e51b81526020600482015260116024820152701c9bdd5d195c8bdc1d5cda11985a5b1959607a1b6044820152606401610268565b5061077f81610e3f565b905061065f565b50505050565b6040516370a0823160e01b81526001600160a01b038281166004830152600091908416906370a0823190602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b99190610e10565b600080610809853386866109c6565b905080610817576000610819565b825b95945050505050565b600081610898576040516370a0823160e01b81526001600160a01b0385811660048301528616906370a0823190602401602060405180830381865afa15801561086f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108939190610e10565b61089a565b825b92506108a8858533866109c6565b156108b4575081610354565b506000610354565b604051636eb1769f60e11b81526001600160a01b0382811660048301523060248301526000919084169063dd62ed3e90604401602060405180830381865afa15801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190610e10565b116105d05760405162461bcd60e51b815260206004820152601f60248201527f53696d706c65526f757465722f4e6f74417070726f76656442794f776e6572006044820152606401610268565b6001600160a01b038116600081815260016020526040808220805460ff19169055517f30a4a29afb6d28e62264c8b7cd43fe3a5edce91f4b9c8591b23a99b3838686b59190a250565b6000816000036109d857506001610354565b826001600160a01b0316846001600160a01b031603610a67576040516370a0823160e01b81526001600160a01b0385811660048301528391908716906370a0823190602401602060405180830381865afa158015610a3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5e9190610e10565b10159050610354565b306001600160a01b03851603610a8957610a82858484610a95565b9050610354565b61035185858585610b69565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392839291881691610af39190610e66565b6000604051808303816000865af19150503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b5091509150818015610b5f575080511580610b5f575080806020019051810190610b5f9190610e95565b9695505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291516000928392839291891691610bcf9190610e66565b6000604051808303816000865af19150503d8060008114610c0c576040519150601f19603f3d011682016040523d82523d6000602084013e610c11565b606091505b5091509150818015610c3b575080511580610c3b575080806020019051810190610c3b9190610e95565b979650505050505050565b6001600160a01b038116811461027157600080fd5b600060208284031215610c6d57600080fd5b81356102b981610c46565b600080600060608486031215610c8d57600080fd5b8335610c9881610c46565b92506020840135610ca881610c46565b929592945050506040919091013590565b60008060408385031215610ccc57600080fd5b8235610cd781610c46565b91506020830135610ce781610c46565b809150509250929050565b801515811461027157600080fd5b60008060008060808587031215610d1657600080fd5b8435610d2181610c46565b93506020850135610d3181610c46565b9250604085013591506060850135610d4881610cf2565b939692955090935050565b600080600060408486031215610d6857600080fd5b833567ffffffffffffffff80821115610d8057600080fd5b818601915086601f830112610d9457600080fd5b813581811115610da357600080fd5b8760208260051b8501011115610db857600080fd5b60209283019550935050840135610dce81610c46565b809150509250925092565b60208082526018908201527f416363657373436f6e74726f6c6c65642f496e76616c69640000000000000000604082015260600190565b600060208284031215610e2257600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610e5f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000825160005b81811015610e875760208186018101518583015201610e6d565b506000920191825250919050565b600060208284031215610ea757600080fd5b81516102b981610cf256fea2646970667358221220488559b74d71829856bcef9dfe67dd11cd479cfea710cbfa15ab298e063ada0f64736f6c63430008140033",
    "sourceMap": "630:2182:118:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8025:84:119;;;;;;:::i;:::-;;:::i;:::-;;4481:228;;;;;;:::i;:::-;;:::i;:::-;;;1067:25:131;;;1055:2;1040:18;4481:228:119;;;;;;;;2141:143;;;;;;:::i;:::-;;:::i;1710:99::-;;;;;;:::i;:::-;;:::i;:::-;;;1950:14:131;;1943:22;1925:41;;1913:2;1898:18;1710:99:119;1785:187:131;3264:267:119;;;;;;:::i;:::-;;:::i;437:35:120:-;;;;;2221:167:123;;;;;;:::i;:::-;;:::i;5922:141:119:-;;;;;;:::i;:::-;;:::i;7091:498::-;;;;;;:::i;:::-;;:::i;6421:67::-;;;:::i;6621:91::-;;;;;;:::i;:::-;;:::i;5344:310::-;;;;;;:::i;:::-;;:::i;1989:79:123:-;2027:15;2057:6;1989:79;;-1:-1:-1;;;;;2057:6:123;;;3654:51:131;;3642:2;3627:18;1989:79:123;3508:203:131;1966:131:118;;;;;;:::i;:::-;;:::i;8025:84:119:-;2027:15:123;2057:6;-1:-1:-1;;;;;2057:6:123;836:10:119;:21;;:44;;;861:19;869:10;861:7;:19::i;:::-;828:81;;;;-1:-1:-1;;;828:81:119;;;;;;;:::i;:::-;;;;;;;;;8025:84;:::o;4481:228::-;4569:11;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;4592:6:::1;4602:1;4592:11:::0;4588:40:::1;;-1:-1:-1::0;4620:1:119::1;4613:8;;4588:40;4642:62;4659:5;4677:9;4696:6;4642:8;:62::i;:::-;4633:71;;684:1;4481:228:::0;;;;;:::o;2141:143::-;2217:13;766::120;2245:34:119;672:112:120;1710:99:119;-1:-1:-1;;;;;1780:24:119;1761:4;1780:24;;;:19;:24;;;;;;;;;1710:99::o;3264:267::-;3365:11;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;3388:6:::1;:21;;;;-1:-1:-1::0;3398:11:119;;3388:21:::1;3384:50;;;-1:-1:-1::0;3426:1:119::1;3419:8;;3384:50;3448:78;3465:5;3483:9;3502:6;3518;3448:8;:78::i;:::-;3439:87;;684:1;3264:267:::0;;;;;;:::o;2221:167:123:-;1193:6;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;2286:20:123;::::1;2278:57;;;::::0;-1:-1:-1;;;2278:57:123;;4271:2:131;2278:57:123::1;::::0;::::1;4253:21:131::0;4310:2;4290:18;;;4283:30;4349:26;4329:18;;;4322:54;4393:18;;2278:57:123::1;4069:348:131::0;2278:57:123::1;2341:6;:15:::0;;-1:-1:-1;;;;;;2341:15:123::1;-1:-1:-1::0;;;;;2341:15:123;::::1;::::0;;::::1;::::0;;;2367:16:::1;::::0;3654:51:131;;;2367:16:123::1;::::0;3642:2:131;3627:18;2367:16:123::1;;;;;;;2221:167:::0;:::o;5922:141:119:-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;-1:-1:-1;;;;;5982:34:119;::::1;;::::0;;;6019:4:::1;5982:34;::::0;;;;;;;:41;;-1:-1:-1;;5982:41:119::1;::::0;;::::1;::::0;;;6034:24;::::1;::::0;5982:34;6034:24:::1;5922:141:::0;:::o;7091:498::-;7171:19;7179:10;7171:7;:19::i;:::-;7163:63;;;;-1:-1:-1;;;7163:63:119;;4624:2:131;7163:63:119;;;4606:21:131;4663:2;4643:18;;;4636:30;4702:33;4682:18;;;4675:61;4753:18;;7163:63:119;4422:355:131;7163:63:119;7338:42;;-1:-1:-1;;;7338:42:119;;7354:10;7338:42;;;4994:34:131;7374:4:119;5044:18:131;;;5037:43;7383:1:119;;-1:-1:-1;;;;;7338:15:119;;;;;4929:18:131;;7338:42:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;7330:92;;;;-1:-1:-1;;;7330:92:119;;5482:2:131;7330:92:119;;;5464:21:131;5521:2;5501:18;;;5494:30;5560:34;5540:18;;;5533:62;-1:-1:-1;;;5611:18:131;;;5604:31;5652:19;;7330:92:119;5280:397:131;7330:92:119;7553:31;7567:5;7574:9;7553:13;:31::i;:::-;7091:498;;:::o;6421:67::-;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;6464:19:::1;6472:10;6464:7;:19::i;:::-;6421:67::o:0;6621:91::-;1193:6:123;;-1:-1:-1;;;;;1193:6:123;1179:10;:20;1171:57;;;;-1:-1:-1;;;1171:57:123;;;;;;;:::i;:::-;6685:22:119::1;6693:13;6685:7;:22::i;5344:310::-:0;630:19;638:10;630:7;:19::i;:::-;622:56;;;;-1:-1:-1;;;622:56:119;;;;;;;:::i;:::-;5434:6:::1;5429:221;5446:17:::0;;::::1;5429:221;;;5478:11;5492:6;;5499:1;5492:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;:31;::::0;-1:-1:-1;;;5492:31:119;;5512:10:::1;5492:31;::::0;::::1;3654:51:131::0;-1:-1:-1;;;;;5492:19:119;;;::::1;::::0;::::1;::::0;3627:18:131;;5492:31:119::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5478:45:::0;-1:-1:-1;5535:10:119;;5531:113:::1;;5607:6;5565:38;5574:6;;5581:1;5574:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5585;5596:6;5565:8;:38::i;:::-;:48;5557:78;;;::::0;-1:-1:-1;;;5557:78:119;;6016:2:131;5557:78:119::1;::::0;::::1;5998:21:131::0;6055:2;6035:18;;;6028:30;-1:-1:-1;;;6074:18:131;;;6067:47;6131:18;;5557:78:119::1;5814:341:131::0;5557:78:119::1;-1:-1:-1::0;5465:3:119::1;::::0;::::1;:::i;:::-;;;5429:221;;;;5344:310:::0;;;:::o;1966:131:118:-;2070:22;;-1:-1:-1;;;2070:22:118;;-1:-1:-1;;;;;3672:32:131;;;2070:22:118;;;3654:51:131;2051:4:118;;2070:15;;;;;;3627:18:131;;2070:22:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1707:223::-;1802:4;1814:12;1829:63;1859:5;1866:10;1878:5;1885:6;1829:29;:63::i;:::-;1814:78;;1905:7;:20;;1924:1;1905:20;;;1915:6;1905:20;1898:27;1707:223;-1:-1:-1;;;;;1707:223:118:o;1201:394::-;1325:11;1419:6;:40;;1437:22;;-1:-1:-1;;;1437:22:118;;-1:-1:-1;;;;;3672:32:131;;;1437:22:118;;;3654:51:131;1437:15:118;;;;;3627:18:131;;1437:22:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1419:40;;;1428:6;1419:40;1410:49;;1469:63;1499:5;1506;1513:10;1525:6;1469:29;:63::i;:::-;1465:126;;;-1:-1:-1;1549:6:118;1542:13;;1465:126;-1:-1:-1;1583:1:118;1576:8;;2522:288;2728:37;;-1:-1:-1;;;2728:37:118;;-1:-1:-1;;;;;5012:15:131;;;2728:37:118;;;4994:34:131;2759:4:118;5044:18:131;;;5037:43;2768:1:118;;2728:15;;;;;;4929:18:131;;2728:37:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;2720:85;;;;-1:-1:-1;;;2720:85:118;;6599:2:131;2720:85:118;;;6581:21:131;6638:2;6618:18;;;6611:30;6677:33;6657:18;;;6650:61;6728:18;;2720:85:118;6397:355:131;6205:139:119;-1:-1:-1;;;;;6260:34:119;;6297:5;6260:34;;;:19;:34;;;;;;:42;;-1:-1:-1;;6260:42:119;;;6313:26;;;6297:5;6313:26;6205:139;:::o;2297:483:5:-;2405:4;2421:6;2431:1;2421:11;2417:43;;-1:-1:-1;2449:4:5;2442:11;;2417:43;2480:9;-1:-1:-1;;;;;2469:20:5;:7;-1:-1:-1;;;;;2469:20:5;;2465:82;;2506:24;;-1:-1:-1;;;2506:24:5;;-1:-1:-1;;;;;3672:32:131;;;2506:24:5;;;3654:51:131;2534:6:5;;2506:15;;;;;;3627:18:131;;2506:24:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;2499:41;;;;2465:82;2641:4;-1:-1:-1;;;;;2622:24:5;;;2618:92;;2663:40;2678:5;2685:9;2696:6;2663:14;:40::i;:::-;2656:47;;;;2618:92;2722:53;2741:5;2748:7;2757:9;2768:6;2722:18;:53::i;1241:629::-;1726:66;;;-1:-1:-1;;;;;6949:32:131;;;1726:66:5;;;6931:51:131;6998:18;;;;6991:34;;;1726:66:5;;;;;;;;;;6904:18:131;;;;1726:66:5;;;;;;;-1:-1:-1;;;;;1726:66:5;-1:-1:-1;;;1726:66:5;;;1706:87;;-1:-1:-1;;;;;;1706:19:5;;;;:87;;1726:66;1706:87;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1664:129;;;;1807:7;:57;;;;-1:-1:-1;1819:11:5;;:16;;:44;;;1850:4;1839:24;;;;;;;;;;;;:::i;:::-;1799:66;1241:629;-1:-1:-1;;;;;;1241:629:5:o;3207:665::-;3715:79;;;-1:-1:-1;;;;;7961:15:131;;;3715:79:5;;;7943:34:131;8013:15;;;7993:18;;;7986:43;8045:18;;;;8038:34;;;3715:79:5;;;;;;;;;;7878:18:131;;;;3715:79:5;;;;;;;-1:-1:-1;;;;;3715:79:5;-1:-1:-1;;;3715:79:5;;;3695:100;;-1:-1:-1;;;;;;3695:19:5;;;;:100;;3715:79;3695:100;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3653:142;;;;3809:7;:57;;;;-1:-1:-1;3821:11:5;;:16;;:44;;;3852:4;3841:24;;;;;;;;;;;;:::i;:::-;3801:66;3207:665;-1:-1:-1;;;;;;;3207:665:5:o;14:139:131:-;-1:-1:-1;;;;;97:31:131;;87:42;;77:70;;143:1;140;133:12;158:268;230:6;283:2;271:9;262:7;258:23;254:32;251:52;;;299:1;296;289:12;251:52;338:9;325:23;357:39;390:5;357:39;:::i;431:485::-;521:6;529;537;590:2;578:9;569:7;565:23;561:32;558:52;;;606:1;603;596:12;558:52;645:9;632:23;664:39;697:5;664:39;:::i;:::-;722:5;-1:-1:-1;779:2:131;764:18;;751:32;792:41;751:32;792:41;:::i;:::-;431:485;;852:7;;-1:-1:-1;;;906:2:131;891:18;;;;878:32;;431:485::o;1103:417::-;1184:6;1192;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;1300:9;1287:23;1319:39;1352:5;1319:39;:::i;:::-;1377:5;-1:-1:-1;1434:2:131;1419:18;;1406:32;1447:41;1406:32;1447:41;:::i;:::-;1507:7;1497:17;;;1103:417;;;;;:::o;1977:118::-;2063:5;2056:13;2049:21;2042:5;2039:32;2029:60;;2085:1;2082;2075:12;2100:621;2196:6;2204;2212;2220;2273:3;2261:9;2252:7;2248:23;2244:33;2241:53;;;2290:1;2287;2280:12;2241:53;2329:9;2316:23;2348:39;2381:5;2348:39;:::i;:::-;2406:5;-1:-1:-1;2463:2:131;2448:18;;2435:32;2476:41;2435:32;2476:41;:::i;:::-;2536:7;-1:-1:-1;2590:2:131;2575:18;;2562:32;;-1:-1:-1;2646:2:131;2631:18;;2618:32;2659:30;2618:32;2659:30;:::i;:::-;2100:621;;;;-1:-1:-1;2100:621:131;;-1:-1:-1;;2100:621:131:o;2726:777::-;2834:6;2842;2850;2903:2;2891:9;2882:7;2878:23;2874:32;2871:52;;;2919:1;2916;2909:12;2871:52;2959:9;2946:23;2988:18;3029:2;3021:6;3018:14;3015:34;;;3045:1;3042;3035:12;3015:34;3083:6;3072:9;3068:22;3058:32;;3128:7;3121:4;3117:2;3113:13;3109:27;3099:55;;3150:1;3147;3140:12;3099:55;3190:2;3177:16;3216:2;3208:6;3205:14;3202:34;;;3232:1;3229;3222:12;3202:34;3287:7;3280:4;3270:6;3267:1;3263:14;3259:2;3255:23;3251:34;3248:47;3245:67;;;3308:1;3305;3298:12;3245:67;3339:4;3331:13;;;;-1:-1:-1;3363:6:131;-1:-1:-1;;3404:20:131;;3391:34;3434:39;3391:34;3434:39;:::i;:::-;3492:5;3482:15;;;2726:777;;;;;:::o;3716:348::-;3918:2;3900:21;;;3957:2;3937:18;;;3930:30;3996:26;3991:2;3976:18;;3969:54;4055:2;4040:18;;3716:348::o;5091:184::-;5161:6;5214:2;5202:9;5193:7;5189:23;5185:32;5182:52;;;5230:1;5227;5220:12;5182:52;-1:-1:-1;5253:16:131;;5091:184;-1:-1:-1;5091:184:131:o;5682:127::-;5743:10;5738:3;5734:20;5731:1;5724:31;5774:4;5771:1;5764:15;5798:4;5795:1;5788:15;6160:232;6199:3;6220:17;;;6217:140;;6279:10;6274:3;6270:20;6267:1;6260:31;6314:4;6311:1;6304:15;6342:4;6339:1;6332:15;6217:140;-1:-1:-1;6384:1:131;6373:13;;6160:232::o;7036:412::-;7165:3;7203:6;7197:13;7228:1;7238:129;7252:6;7249:1;7246:13;7238:129;;;7350:4;7334:14;;;7330:25;;7324:32;7311:11;;;7304:53;7267:12;7238:129;;;-1:-1:-1;7422:1:131;7386:16;;7411:13;;;-1:-1:-1;7386:16:131;7036:412;-1:-1:-1;7036:412:131:o;7453:245::-;7520:6;7573:2;7561:9;7552:7;7548:23;7544:32;7541:52;;;7589:1;7586;7579:12;7541:52;7621:9;7615:16;7640:28;7662:5;7640:28;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "88635": [
        {
          "start": 376,
          "length": 32
        },
        {
          "start": 708,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ROUTER_GASREQ()": "3871cb3f",
    "activate(address)": "1c5a9d9c",
    "admin()": "f851a440",
    "balanceOfReserve(address,address)": "fe380db5",
    "bind(address)": "81bac14f",
    "checkList(address,address)": "a01dccd8",
    "flush(address[],address)": "f850a81c",
    "isBound(address)": "2f37b624",
    "pull(address,address,uint256,bool)": "333dbb0d",
    "push(address,address,uint256)": "26e8eda2",
    "routerGasreq(address,address)": "2876fb4e",
    "setAdmin(address)": "704b6c02",
    "unbind()": "b6b25742",
    "unbind(address)": "cf5e7bd3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"MakerBind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"MakerUnbind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROUTER_GASREQ\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"makerContract\",\"type\":\"address\"}],\"name\":\"bind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mkr\",\"type\":\"address\"}],\"name\":\"isBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"strict\",\"type\":\"bool\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pulled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pushed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"routerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"overhead\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"makerContract\",\"type\":\"address\"}],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Maker contracts using this router must make sure that the reserve approves the router for all asset that will be pulled (outbound tokens) Thus a maker contract using a vault that is not an EOA must make sure this vault has approval capacities.\",\"events\":{\"MakerBind(address)\":{\"params\":{\"maker\":\"the maker address. This is indexed, so that RPC calls can filter on it.\"}},\"MakerUnbind(address)\":{\"params\":{\"maker\":\"the maker address. This is indexed, so that RPC calls can filter on it.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address)\":{\"params\":{\"token\":\"the asset one wishes to use the router for\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"balanceOfReserve(address,address)\":{\"params\":{\"reserveId\":\"the identifier of the reserve\",\"token\":\"the asset one wishes to know the balance of\"},\"returns\":{\"_0\":\"the balance of the reserve\"}},\"bind(address)\":{\"details\":\"this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address\",\"params\":{\"makerContract\":\"the maker contract address\"}},\"checkList(address,address)\":{\"details\":\"`checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.\",\"params\":{\"reserveId\":\"of the tokens that are being pulled\",\"token\":\"is the asset (and possibly its overlyings) whose approval must be checked\"}},\"flush(address[],address)\":{\"params\":{\"reserveId\":\"determines the location of the reserve (router implementation dependent).\",\"tokens\":\"to flush\"}},\"isBound(address)\":{\"params\":{\"mkr\":\"the address of a maker contract\"},\"returns\":{\"_0\":\"true if `mkr` is authorized to call this router.\"}},\"pull(address,address,uint256,bool)\":{\"params\":{\"amount\":\"of `token` the maker contract wishes to pull from its reserve\",\"reserveId\":\"identifies the fund owner (router implementation dependent).\",\"strict\":\"when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)\",\"token\":\"is the ERC20 managing the pulled asset\"},\"returns\":{\"pulled\":\"the amount that was successfully pulled.\"}},\"push(address,address,uint256)\":{\"params\":{\"amount\":\"is the amount of asset that should be transferred from the calling maker contract\",\"reserveId\":\"determines the location of the reserve (router implementation dependent).\",\"token\":\"is the asset the maker is pushing\"},\"returns\":{\"pushed\":\"fraction of `amount` that was successfully pushed to reserve.\"}},\"routerGasreq(address,address)\":{\"params\":{\"reserveId\":\"that should be considered if a reserve specific route is defined.\",\"token\":\"that should be considered if a token specific route is defined.\"},\"returns\":{\"overhead\":\"the added (overapproximated) gas cost of `push` and `pull` for the routing strategy.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"unbind(address)\":{\"params\":{\"makerContract\":\"the maker contract address\"}}},\"title\":\"`SimpleRouter` instances have a unique sourcing strategy: pull (push) liquidity directly from (to) the an offer owner's account\",\"version\":1},\"userdoc\":{\"events\":{\"MakerBind(address)\":{\"notice\":\"logging bound maker contractby emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router.\"},\"MakerUnbind(address)\":{\"notice\":\"logging unbound maker contractby emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"}},\"kind\":\"user\",\"methods\":{\"ROUTER_GASREQ()\":{\"notice\":\"the router specific gas requirement\"},\"activate(address)\":{\"notice\":\"performs necessary approval to activate router function on a particular asset\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"balanceOfReserve(address,address)\":{\"notice\":\"Balance of a reserve\"},\"bind(address)\":{\"notice\":\"adds a maker contract address to the allowed makers of this router\"},\"checkList(address,address)\":{\"notice\":\"allows a makerContract to verify it is ready to use `this` router for a particular reserve\"},\"flush(address[],address)\":{\"notice\":\"iterative `push` for the whole balance in a single call\"},\"isBound(address)\":{\"notice\":\"getter for the `makers: addr => bool` mapping\"},\"pull(address,address,uint256,bool)\":{\"notice\":\"pulls liquidity from the reserve and sends it to the calling maker contract.\"},\"push(address,address,uint256)\":{\"notice\":\"pushes assets from calling's maker contract to a reserve\"},\"routerGasreq(address,address)\":{\"notice\":\"view for gas overhead of this router.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"unbind()\":{\"notice\":\"removes `msg.sender` from the allowed makers of this router\"},\"unbind(address)\":{\"notice\":\"removes a makerContract from the allowed makers of this router\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol\":\"SimpleRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol\":{\"keccak256\":\"0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579\",\"dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol\":{\"keccak256\":\"0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b\",\"dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol\":{\"keccak256\":\"0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb\",\"dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol\":{\"keccak256\":\"0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad\",\"dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol\":{\"keccak256\":\"0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff\",\"dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol\":{\"keccak256\":\"0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3\",\"dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol\":{\"keccak256\":\"0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154\",\"dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol\":{\"keccak256\":\"0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74\",\"dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw\"]},\"node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol\":{\"keccak256\":\"0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329\",\"dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv\"]},\"node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol\":{\"keccak256\":\"0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726\",\"dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol\":{\"keccak256\":\"0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff\",\"dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol\":{\"keccak256\":\"0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc\",\"dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol\":{\"keccak256\":\"0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa\",\"dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol\":{\"keccak256\":\"0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91\",\"dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew\"]},\"node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol\":{\"keccak256\":\"0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc\",\"dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol\":{\"keccak256\":\"0x60f2462f860db516f3da0ae805b0e09bc986705f90304cd1e5bff61b6f5ae80d\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://541dd0a15bd39414a57a6b73117b21ac0057f2e258c5a516335887ea5fd3d9b2\",\"dweb:/ipfs/QmVtWJRw2DJ6cdhwqm7sRJkjnGPZz1cwWsEzd6j1JDAyxR\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol\":{\"keccak256\":\"0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066\",\"dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MakerBind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MakerUnbind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ROUTER_GASREQ",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfReserve",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "makerContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bind"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flush"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mkr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBound",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "strict",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pulled",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pushed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "routerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "overhead",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbind"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "makerContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbind"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address)": {
            "params": {
              "token": "the asset one wishes to use the router for"
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "balanceOfReserve(address,address)": {
            "params": {
              "reserveId": "the identifier of the reserve",
              "token": "the asset one wishes to know the balance of"
            },
            "returns": {
              "_0": "the balance of the reserve"
            }
          },
          "bind(address)": {
            "details": "this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address",
            "params": {
              "makerContract": "the maker contract address"
            }
          },
          "checkList(address,address)": {
            "details": "`checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.",
            "params": {
              "reserveId": "of the tokens that are being pulled",
              "token": "is the asset (and possibly its overlyings) whose approval must be checked"
            }
          },
          "flush(address[],address)": {
            "params": {
              "reserveId": "determines the location of the reserve (router implementation dependent).",
              "tokens": "to flush"
            }
          },
          "isBound(address)": {
            "params": {
              "mkr": "the address of a maker contract"
            },
            "returns": {
              "_0": "true if `mkr` is authorized to call this router."
            }
          },
          "pull(address,address,uint256,bool)": {
            "params": {
              "amount": "of `token` the maker contract wishes to pull from its reserve",
              "reserveId": "identifies the fund owner (router implementation dependent).",
              "strict": "when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)",
              "token": "is the ERC20 managing the pulled asset"
            },
            "returns": {
              "pulled": "the amount that was successfully pulled."
            }
          },
          "push(address,address,uint256)": {
            "params": {
              "amount": "is the amount of asset that should be transferred from the calling maker contract",
              "reserveId": "determines the location of the reserve (router implementation dependent).",
              "token": "is the asset the maker is pushing"
            },
            "returns": {
              "pushed": "fraction of `amount` that was successfully pushed to reserve."
            }
          },
          "routerGasreq(address,address)": {
            "params": {
              "reserveId": "that should be considered if a reserve specific route is defined.",
              "token": "that should be considered if a token specific route is defined."
            },
            "returns": {
              "overhead": "the added (overapproximated) gas cost of `push` and `pull` for the routing strategy."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "unbind(address)": {
            "params": {
              "makerContract": "the maker contract address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ROUTER_GASREQ()": {
            "notice": "the router specific gas requirement"
          },
          "activate(address)": {
            "notice": "performs necessary approval to activate router function on a particular asset"
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "balanceOfReserve(address,address)": {
            "notice": "Balance of a reserve"
          },
          "bind(address)": {
            "notice": "adds a maker contract address to the allowed makers of this router"
          },
          "checkList(address,address)": {
            "notice": "allows a makerContract to verify it is ready to use `this` router for a particular reserve"
          },
          "flush(address[],address)": {
            "notice": "iterative `push` for the whole balance in a single call"
          },
          "isBound(address)": {
            "notice": "getter for the `makers: addr => bool` mapping"
          },
          "pull(address,address,uint256,bool)": {
            "notice": "pulls liquidity from the reserve and sends it to the calling maker contract."
          },
          "push(address,address,uint256)": {
            "notice": "pushes assets from calling's maker contract to a reserve"
          },
          "routerGasreq(address,address)": {
            "notice": "view for gas overhead of this router."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "unbind()": {
            "notice": "removes `msg.sender` from the allowed makers of this router"
          },
          "unbind(address)": {
            "notice": "removes a makerContract from the allowed makers of this router"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol": "SimpleRouter"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol": {
        "keccak256": "0x3a8b94d6cc226852fefada57b74fe8cb4f3e34bdcf0860825401a57097d7914b",
        "urls": [
          "bzz-raw://a7293b7722734c714f12fa51520c2ebf01776ca5f837c06ca27a7c775e4bf579",
          "dweb:/ipfs/QmTFm7NaHGv32fYoXbiUiMSgpWAJ5GfHoV1LTD49ZfkCpJ"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/BitLib.sol": {
        "keccak256": "0x5a1c56d67fbd2ef6f3b830cf8dae1885da5f40a37afd11cb3a392be573993c3b",
        "urls": [
          "bzz-raw://a07b895de906f49d0ce9e89a349d39220e13039709ea2e2db46ff48310bd4b3b",
          "dweb:/ipfs/QmZyiLKyTZ9EHwqNRUYukQDdg7CL54Dsu65RYabkkGF1KM"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/Constants.sol": {
        "keccak256": "0xc379ed5c15639ff1f4461872ff53bacaf01372264937032854c4c549056b0b87",
        "urls": [
          "bzz-raw://6b3ef408068d112fb1a70a880d8be678414415c76d50c675349c7c09186b3deb",
          "dweb:/ipfs/QmUhfhByzQMLFSL6ZvkggetVtRaYpLRpzs3KZJDmNhT22f"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/DensityLib.sol": {
        "keccak256": "0xc7ee8be7f11a1bf85aa4ea0e222d4a49d77a378b201e347f9a5e4f28f207a023",
        "urls": [
          "bzz-raw://ed718e8bf3fb45bc0e7cf739662422cfe01d8d04a2c99b2fb0cfa2372629c6ad",
          "dweb:/ipfs/QmZ5QpyMSmkVxayfpZYovNcc8NGJKfVZEMKphzeKk9cVNv"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/LocalExtra.sol": {
        "keccak256": "0xbd3f6702242dd43ba2493eb54feb8f5d2526967512c6f156d29669b54d9c60f2",
        "urls": [
          "bzz-raw://e389f3c78c8073bde973aa3f4770139e2adb4cc00cc1303b77eefa201189a6ff",
          "dweb:/ipfs/QmZ8vXRUUCinKtqJhV7jMXVeDVfRizhJ3NsumZLQxwSc44"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferDetailExtra.sol": {
        "keccak256": "0x335217debbf3f4cabeaea88d4dd9777dbda2f2b6ed9684e2285a4d16e1e4464c",
        "urls": [
          "bzz-raw://eafe358531d7dc6527d36f8fbc4bc67ab12516398c35338ba5da57a03e24b9f3",
          "dweb:/ipfs/QmcKxrcr11EM7rsKNUEJq8VXFd2R1dWSTqYk3E4k8dQfzy"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/OfferExtra.sol": {
        "keccak256": "0x95120d52698bc60b005496036a7c9daa7b8d0b18b571e596e86fd696b36e3264",
        "urls": [
          "bzz-raw://684d30cc9673403cfddabdf7d979417c5df050abde16712aeaa9ca6b2725d154",
          "dweb:/ipfs/QmTkeUAMhb72BNqGjAaaPBj1NHPtKE8wH1R8bpXD5RTKtC"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickLib.sol": {
        "keccak256": "0xa4aea464925ad277aab2141885eeeb6e5f1b0963ba08d8887a1c2461c334f222",
        "urls": [
          "bzz-raw://c7ec62c85c22d7996abe32663232861f90e855c770dbd252bf49fff4ca786e74",
          "dweb:/ipfs/QmSHBJfw9bg8QjgBquXVLTS337ZuBGHVkDJfwuAZ6X48sw"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/core/TickTreeLib.sol": {
        "keccak256": "0x196c46d6e8e2ab51462f25245f7886568df3f1f65953dcec4c02d7950b4a10cd",
        "urls": [
          "bzz-raw://4293ed5fb3ce4d350b9bb5b38342c273e6d772ace098927e006efa7fc4498329",
          "dweb:/ipfs/QmRCtk481PHQjNdt5Dsa8GYWEX46nYwdeD8R3m92w3Xjxv"
        ],
        "license": "BUSL-1.1"
      },
      "node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "node_modules/@mangrovedao/mangrove-core/src/core/MgvLib.sol": {
        "keccak256": "0xe22e3d452040625724ce932cc6f57212c8a32ba021b06f5737e4c23319792c7d",
        "urls": [
          "bzz-raw://b3ab9e3726b49b2d526f1cb6634c562cbafdbc1163753d13a3e1c316ca29e726",
          "dweb:/ipfs/QmS9bYtEVW7i9zAWmC7aPdCDv4BCaBJbhpgrJX6VhH68st"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Global.post.sol": {
        "keccak256": "0xddf04a10f84edc0b165351f649cad761a429b5c1b218e482917b3e38a2019e7f",
        "urls": [
          "bzz-raw://7695a94afb1db46a65967bd63fc344b0a9387a4a2c906fdcac0433fdfec32dff",
          "dweb:/ipfs/QmcH4k6VwPrSEjqEQVsKTRjxWtmhijoknih6s6R98dnNUM"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Local.post.sol": {
        "keccak256": "0x03d642742c132c37c1fc29cae87f7ce1be93f89877fe698698d5bd2309c878a5",
        "urls": [
          "bzz-raw://6957d461c6486caeee91f5fd8be2ff0f53a8c264c03e8c9b7f7291bf7a72d9fc",
          "dweb:/ipfs/QmTRqHsnjFA1xDmWWuPqn9aPeweRiYHv1wfTz77qxCmd7k"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Offer.post.sol": {
        "keccak256": "0x812a7c313108b56600f747d89d20b2daa4c4aa489ece1b30c561a353d41468f2",
        "urls": [
          "bzz-raw://3fb1685a67020adeece9f6fbf567567d257aafafd2e115e6151f2b2a14b429aa",
          "dweb:/ipfs/QmUvk3FLDDHRXungxeLtPEfaQj3HNt3ib8nGhonzPdMW6o"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/OfferDetail.post.sol": {
        "keccak256": "0xbb0c9e3177017a77de68adeed5cbbf040fc9152f914adb34575eb880979fc720",
        "urls": [
          "bzz-raw://fac448393a94f7d797f58ece51c1127a1605397b2371c9d1fe61db0037762a91",
          "dweb:/ipfs/QmUwcWdecdqa81eLGz4SekQYfiTp5pgs2mvFRYmu7T2sew"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove-core/src/preprocessed/Structs.post.sol": {
        "keccak256": "0x6121b0f392dbeddf77da4f5bc5dee019878ab21538892bd22dbb9c49e9e068bb",
        "urls": [
          "bzz-raw://336a0df7a17dd6b1ed36c4e7f19fc9ab6d4ad933f7e0b3658efba0756c7341bc",
          "dweb:/ipfs/QmZ7NQY6EJHqcE1oEho1yN9ymsTfVpUcMJABKC8Fq5GvhL"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol": {
        "keccak256": "0x60f2462f860db516f3da0ae805b0e09bc986705f90304cd1e5bff61b6f5ae80d",
        "urls": [
          "bzz-raw://541dd0a15bd39414a57a6b73117b21ac0057f2e258c5a516335887ea5fd3d9b2",
          "dweb:/ipfs/QmVtWJRw2DJ6cdhwqm7sRJkjnGPZz1cwWsEzd6j1JDAyxR"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol": {
        "keccak256": "0xf4c1c9df359a1470a0832896b60809bcbf2cbe7185d7a0c439d54e6aba8715e5",
        "urls": [
          "bzz-raw://0857fdf4b30299cf836ee17aca0b5652ec27539aa1cccb8912f2587689a72066",
          "dweb:/ipfs/QmZYz8xr4pf1BetF4UztsYXNjsSJwpCJPqjfTSNNdMgYS5"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/SimpleRouter.sol",
    "id": 88232,
    "exportedSymbols": {
      "AbstractRouter": [
        88623
      ],
      "IERC20": [
        88
      ],
      "MonoRouter": [
        88662
      ],
      "SimpleRouter": [
        88231
      ],
      "TransferLib": [
        4306
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:2772:118",
    "nodes": [
      {
        "id": 88103,
        "nodeType": "PragmaDirective",
        "src": "41:24:118",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 88105,
        "nodeType": "ImportDirective",
        "src": "67:43:118",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88232,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88104,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "75:6:118",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88107,
        "nodeType": "ImportDirective",
        "src": "111:53:118",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/TransferLib.sol",
        "file": "@mgv/lib/TransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88232,
        "sourceUnit": 4307,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88106,
              "name": "TransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4306,
              "src": "119:11:118",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88110,
        "nodeType": "ImportDirective",
        "src": "165:69:118",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/MonoRouter.sol",
        "file": "./abstract/MonoRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88232,
        "sourceUnit": 88663,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88108,
              "name": "MonoRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88662,
              "src": "173:10:118",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 88109,
              "name": "AbstractRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88623,
              "src": "185:14:118",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88231,
        "nodeType": "ContractDefinition",
        "src": "630:2182:118",
        "nodes": [
          {
            "id": 88156,
            "nodeType": "FunctionDefinition",
            "src": "1201:394:118",
            "nodes": [],
            "body": {
              "id": 88155,
              "nodeType": "Block",
              "src": "1340:255:118",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88130,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88122,
                      "src": "1410:6:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 88131,
                        "name": "strict",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88124,
                        "src": "1419:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "arguments": [
                          {
                            "id": 88135,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88120,
                            "src": "1453:5:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88133,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88118,
                            "src": "1437:5:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$88",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 88134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1443:9:118",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 18,
                          "src": "1437:15:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1437:22:118",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 88137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "1419:40:118",
                      "trueExpression": {
                        "id": 88132,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88122,
                        "src": "1428:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:49:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88139,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:49:118"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 88142,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88118,
                        "src": "1499:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88143,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88120,
                        "src": "1506:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 88144,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1513:3:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1517:6:118",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1513:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88146,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88122,
                        "src": "1525:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88140,
                        "name": "TransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4306,
                        "src": "1469:11:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                          "typeString": "type(library TransferLib)"
                        }
                      },
                      "id": 88141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1481:17:118",
                      "memberName": "transferTokenFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4182,
                      "src": "1469:29:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract IERC20,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 88147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1469:63:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 88153,
                    "nodeType": "Block",
                    "src": "1568:23:118",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 88151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1583:1:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 88129,
                        "id": 88152,
                        "nodeType": "Return",
                        "src": "1576:8:118"
                      }
                    ]
                  },
                  "id": 88154,
                  "nodeType": "IfStatement",
                  "src": "1465:126:118",
                  "trueBody": {
                    "id": 88150,
                    "nodeType": "Block",
                    "src": "1534:28:118",
                    "statements": [
                      {
                        "expression": {
                          "id": 88148,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88122,
                          "src": "1549:6:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 88129,
                        "id": 88149,
                        "nodeType": "Return",
                        "src": "1542:13:118"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              88381
            ],
            "documentation": {
              "id": 88115,
              "nodeType": "StructuredDocumentation",
              "src": "678:520:118",
              "text": "@notice transfers an amount of tokens from the reserve to the maker.\n @param token Token to be transferred\n @param owner The account from which the tokens will be transferred.\n @param amount The amount of tokens to be transferred\n @param strict wether the caller maker contract wishes to pull at most `amount` tokens of owner.\n @return pulled The amount pulled if successful (will be equal to `amount`); otherwise, 0.\n @dev requires approval from `owner` for `this` to transfer `token`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__pull__",
            "nameLocation": "1210:8:118",
            "overrides": {
              "id": 88126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1303:8:118"
            },
            "parameters": {
              "id": 88125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88118,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1226:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88156,
                  "src": "1219:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88117,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88116,
                      "name": "IERC20",
                      "nameLocations": [
                        "1219:6:118"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "1219:6:118"
                    },
                    "referencedDeclaration": 88,
                    "src": "1219:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88120,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1241:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88156,
                  "src": "1233:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88122,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1253:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88156,
                  "src": "1248:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88121,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88124,
                  "mutability": "mutable",
                  "name": "strict",
                  "nameLocation": "1266:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88156,
                  "src": "1261:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1218:55:118"
            },
            "returnParameters": {
              "id": 88129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88128,
                  "mutability": "mutable",
                  "name": "pulled",
                  "nameLocation": "1330:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88156,
                  "src": "1325:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88127,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1324:13:118"
            },
            "scope": 88231,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88187,
            "nodeType": "FunctionDefinition",
            "src": "1707:223:118",
            "nodes": [],
            "body": {
              "id": 88186,
              "nodeType": "Block",
              "src": "1808:122:118",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88171
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88171,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1819:7:118",
                      "nodeType": "VariableDeclaration",
                      "scope": 88186,
                      "src": "1814:12:118",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 88170,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1814:4:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88180,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88174,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88160,
                        "src": "1859:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 88175,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1866:3:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1870:6:118",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1866:10:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88177,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88162,
                        "src": "1878:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88178,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88164,
                        "src": "1885:6:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88172,
                        "name": "TransferLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4306,
                        "src": "1829:11:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferLib_$4306_$",
                          "typeString": "type(library TransferLib)"
                        }
                      },
                      "id": 88173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1841:17:118",
                      "memberName": "transferTokenFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4182,
                      "src": "1829:29:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract IERC20,address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 88179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1829:63:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1814:78:118"
                },
                {
                  "expression": {
                    "condition": {
                      "id": 88181,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88171,
                      "src": "1905:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 88183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1924:1:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 88184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1905:20:118",
                    "trueExpression": {
                      "id": 88182,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88164,
                      "src": "1915:6:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 88169,
                  "id": 88185,
                  "nodeType": "Return",
                  "src": "1898:27:118"
                }
              ]
            },
            "baseFunctions": [
              88425
            ],
            "documentation": {
              "id": 88157,
              "nodeType": "StructuredDocumentation",
              "src": "1599:105:118",
              "text": "@notice transfers an amount of tokens from the maker to the reserve.\n @inheritdoc AbstractRouter"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__push__",
            "nameLocation": "1716:8:118",
            "overrides": {
              "id": 88166,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1784:8:118"
            },
            "parameters": {
              "id": 88165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88160,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1732:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88187,
                  "src": "1725:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88159,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88158,
                      "name": "IERC20",
                      "nameLocations": [
                        "1725:6:118"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "1725:6:118"
                    },
                    "referencedDeclaration": 88,
                    "src": "1725:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88162,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1747:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88187,
                  "src": "1739:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1739:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88164,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1759:6:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88187,
                  "src": "1754:11:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88163,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:42:118"
            },
            "returnParameters": {
              "id": 88169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88187,
                  "src": "1802:4:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1801:6:118"
            },
            "scope": 88231,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88205,
            "nodeType": "FunctionDefinition",
            "src": "1966:131:118",
            "nodes": [],
            "body": {
              "id": 88204,
              "nodeType": "Block",
              "src": "2057:40:118",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88201,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88193,
                        "src": "2086:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88199,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88191,
                        "src": "2070:5:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 88200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2076:9:118",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18,
                      "src": "2070:15:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 88202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:22:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 88198,
                  "id": 88203,
                  "nodeType": "Return",
                  "src": "2063:29:118"
                }
              ]
            },
            "baseFunctions": [
              88622
            ],
            "documentation": {
              "id": 88188,
              "nodeType": "StructuredDocumentation",
              "src": "1934:29:118",
              "text": "@inheritdoc AbstractRouter"
            },
            "functionSelector": "fe380db5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfReserve",
            "nameLocation": "1975:16:118",
            "overrides": {
              "id": 88195,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2033:8:118"
            },
            "parameters": {
              "id": 88194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88191,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1999:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88205,
                  "src": "1992:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88190,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88189,
                      "name": "IERC20",
                      "nameLocations": [
                        "1992:6:118"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "1992:6:118"
                    },
                    "referencedDeclaration": 88,
                    "src": "1992:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88193,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2014:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88205,
                  "src": "2006:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:29:118"
            },
            "returnParameters": {
              "id": 88198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88197,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88205,
                  "src": "2051:4:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88196,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:4:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2050:6:118"
            },
            "scope": 88231,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88230,
            "nodeType": "FunctionDefinition",
            "src": "2522:288:118",
            "nodes": [],
            "body": {
              "id": 88229,
              "nodeType": "Block",
              "src": "2605:205:118",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 88218,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88211,
                              "src": "2744:5:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 88221,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2759:4:118",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SimpleRouter_$88231",
                                    "typeString": "contract SimpleRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SimpleRouter_$88231",
                                    "typeString": "contract SimpleRouter"
                                  }
                                ],
                                "id": 88220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2751:7:118",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 88219,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2751:7:118",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2751:13:118",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 88216,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88209,
                              "src": "2728:5:118",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 88217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2734:9:118",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "2728:15:118",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 88223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2728:37:118",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 88224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2768:1:118",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2728:41:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53696d706c65526f757465722f4e6f74417070726f76656442794f776e6572",
                        "id": 88226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2771:33:118",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49e975e28c3ef711f3fc72b2264cf9f5286ce90c13dadd86ccafb8f1888bcf54",
                          "typeString": "literal_string \"SimpleRouter/NotApprovedByOwner\""
                        },
                        "value": "SimpleRouter/NotApprovedByOwner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49e975e28c3ef711f3fc72b2264cf9f5286ce90c13dadd86ccafb8f1888bcf54",
                          "typeString": "literal_string \"SimpleRouter/NotApprovedByOwner\""
                        }
                      ],
                      "id": 88215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2720:7:118",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:85:118",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88228,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:85:118"
                }
              ]
            },
            "baseFunctions": [
              88587
            ],
            "documentation": {
              "id": 88206,
              "nodeType": "StructuredDocumentation",
              "src": "2101:418:118",
              "text": "@notice router-dependent implementation of the `checkList` function\n@notice verifies all required approval involving `this` router (either as a spender or owner)\n@dev `checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.\n@param token is the asset whose approval must be checked\n@param owner the account that requires asset pulling/pushing"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__checkList__",
            "nameLocation": "2531:13:118",
            "overrides": {
              "id": 88213,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2596:8:118"
            },
            "parameters": {
              "id": 88212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88209,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2552:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88230,
                  "src": "2545:12:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88207,
                      "name": "IERC20",
                      "nameLocations": [
                        "2545:6:118"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "2545:6:118"
                    },
                    "referencedDeclaration": 88,
                    "src": "2545:6:118",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88211,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2567:5:118",
                  "nodeType": "VariableDeclaration",
                  "scope": 88230,
                  "src": "2559:13:118",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2559:7:118",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2544:29:118"
            },
            "returnParameters": {
              "id": 88214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:118"
            },
            "scope": 88231,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "37305f303030",
                "id": 88113,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "666:6:118",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_70000_by_1",
                  "typeString": "int_const 70000"
                },
                "value": "70_000"
              }
            ],
            "baseName": {
              "id": 88112,
              "name": "MonoRouter",
              "nameLocations": [
                "655:10:118"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88662,
              "src": "655:10:118"
            },
            "id": 88114,
            "nodeType": "InheritanceSpecifier",
            "src": "655:18:118"
          }
        ],
        "canonicalName": "SimpleRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 88111,
          "nodeType": "StructuredDocumentation",
          "src": "236:394:118",
          "text": "@title `SimpleRouter` instances have a unique sourcing strategy: pull (push) liquidity directly from (to) the an offer owner's account\n@dev Maker contracts using this router must make sure that the reserve approves the router for all asset that will be pulled (outbound tokens)\n Thus a maker contract using a vault that is not an EOA must make sure this vault has approval capacities."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88231,
          88662,
          88623,
          89841
        ],
        "name": "SimpleRouter",
        "nameLocation": "639:12:118",
        "scope": 88232,
        "usedErrors": [],
        "usedEvents": [
          88284,
          88289,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 118
}