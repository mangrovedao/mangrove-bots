{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "MakerBind",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "maker",
          "type": "address"
        }
      ],
      "name": "MakerUnbind",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "current",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "balanceOfReserve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "makerContract",
          "type": "address"
        }
      ],
      "name": "bind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "checkList",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "flush",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mkr",
          "type": "address"
        }
      ],
      "name": "isBound",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "strict",
          "type": "bool"
        }
      ],
      "name": "pull",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pulled",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "pushed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "reserveId",
          "type": "address"
        }
      ],
      "name": "routerGasreq",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "overhead",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unbind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "makerContract",
          "type": "address"
        }
      ],
      "name": "unbind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "activate(address)": "1c5a9d9c",
    "admin()": "f851a440",
    "balanceOfReserve(address,address)": "fe380db5",
    "bind(address)": "81bac14f",
    "checkList(address,address)": "a01dccd8",
    "flush(address[],address)": "f850a81c",
    "isBound(address)": "2f37b624",
    "pull(address,address,uint256,bool)": "333dbb0d",
    "push(address,address,uint256)": "26e8eda2",
    "routerGasreq(address,address)": "2876fb4e",
    "setAdmin(address)": "704b6c02",
    "unbind()": "b6b25742",
    "unbind(address)": "cf5e7bd3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"MakerBind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"}],\"name\":\"MakerUnbind\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"balanceOfReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"makerContract\",\"type\":\"address\"}],\"name\":\"bind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"checkList\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"flush\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mkr\",\"type\":\"address\"}],\"name\":\"isBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"strict\",\"type\":\"bool\"}],\"name\":\"pull\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pulled\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pushed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reserveId\",\"type\":\"address\"}],\"name\":\"routerGasreq\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"overhead\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"makerContract\",\"type\":\"address\"}],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"MakerBind(address)\":{\"params\":{\"maker\":\"the maker address. This is indexed, so that RPC calls can filter on it.\"}},\"MakerUnbind(address)\":{\"params\":{\"maker\":\"the maker address. This is indexed, so that RPC calls can filter on it.\"}},\"SetAdmin(address)\":{\"params\":{\"admin\":\"The new admin.\"}}},\"kind\":\"dev\",\"methods\":{\"activate(address)\":{\"params\":{\"token\":\"the asset one wishes to use the router for\"}},\"admin()\":{\"returns\":{\"current\":\"admin.\"}},\"balanceOfReserve(address,address)\":{\"params\":{\"reserveId\":\"the identifier of the reserve\",\"token\":\"the asset one wishes to know the balance of\"},\"returns\":{\"_0\":\"the balance of the reserve\"}},\"bind(address)\":{\"details\":\"this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address\",\"params\":{\"makerContract\":\"the maker contract address\"}},\"checkList(address,address)\":{\"details\":\"`checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.\",\"params\":{\"reserveId\":\"of the tokens that are being pulled\",\"token\":\"is the asset (and possibly its overlyings) whose approval must be checked\"}},\"flush(address[],address)\":{\"params\":{\"reserveId\":\"determines the location of the reserve (router implementation dependent).\",\"tokens\":\"to flush\"}},\"isBound(address)\":{\"params\":{\"mkr\":\"the address of a maker contract\"},\"returns\":{\"_0\":\"true if `mkr` is authorized to call this router.\"}},\"pull(address,address,uint256,bool)\":{\"params\":{\"amount\":\"of `token` the maker contract wishes to pull from its reserve\",\"reserveId\":\"identifies the fund owner (router implementation dependent).\",\"strict\":\"when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)\",\"token\":\"is the ERC20 managing the pulled asset\"},\"returns\":{\"pulled\":\"the amount that was successfully pulled.\"}},\"push(address,address,uint256)\":{\"params\":{\"amount\":\"is the amount of asset that should be transferred from the calling maker contract\",\"reserveId\":\"determines the location of the reserve (router implementation dependent).\",\"token\":\"is the asset the maker is pushing\"},\"returns\":{\"pushed\":\"fraction of `amount` that was successfully pushed to reserve.\"}},\"routerGasreq(address,address)\":{\"params\":{\"reserveId\":\"that should be considered if a reserve specific route is defined.\",\"token\":\"that should be considered if a token specific route is defined.\"},\"returns\":{\"overhead\":\"the added (overapproximated) gas cost of `push` and `pull` for the routing strategy.\"}},\"setAdmin(address)\":{\"params\":{\"admin_\":\"The new admin. Cannot be `address(0)`.\"}},\"unbind(address)\":{\"params\":{\"makerContract\":\"the maker contract address\"}}},\"title\":\"AbstractRouter\",\"version\":1},\"userdoc\":{\"events\":{\"MakerBind(address)\":{\"notice\":\"logging bound maker contractby emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router.\"},\"MakerUnbind(address)\":{\"notice\":\"logging unbound maker contractby emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router.\"},\"SetAdmin(address)\":{\"notice\":\"logs new `admin` of `this`By emitting this data, an indexer will be able to keep track of what address is the admin of this contract.\"}},\"kind\":\"user\",\"methods\":{\"activate(address)\":{\"notice\":\"performs necessary approval to activate router function on a particular asset\"},\"admin()\":{\"notice\":\"Retrieves the current admin.\"},\"balanceOfReserve(address,address)\":{\"notice\":\"Balance of a reserve\"},\"bind(address)\":{\"notice\":\"adds a maker contract address to the allowed makers of this router\"},\"checkList(address,address)\":{\"notice\":\"allows a makerContract to verify it is ready to use `this` router for a particular reserve\"},\"flush(address[],address)\":{\"notice\":\"iterative `push` for the whole balance in a single call\"},\"isBound(address)\":{\"notice\":\"getter for the `makers: addr => bool` mapping\"},\"pull(address,address,uint256,bool)\":{\"notice\":\"pulls liquidity from the reserve and sends it to the calling maker contract.\"},\"push(address,address,uint256)\":{\"notice\":\"pushes assets from calling's maker contract to a reserve\"},\"routerGasreq(address,address)\":{\"notice\":\"view for gas overhead of this router.\"},\"setAdmin(address)\":{\"notice\":\"This sets the admin. Only the current admin can change the admin.\"},\"unbind()\":{\"notice\":\"removes `msg.sender` from the allowed makers of this router\"},\"unbind(address)\":{\"notice\":\"removes a makerContract from the allowed makers of this router\"}},\"notice\":\"Partial implementation and requirements for liquidity routers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":\"AbstractRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/\",\":@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/\",\":@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/\",\":ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/\",\":mgv_arbitrage_lib/=mangrove-arbitrage/lib/\",\":mgv_arbitrage_script/=mangrove-arbitrage/script/\",\":mgv_arbitrage_src/=mangrove-arbitrage/src/\",\":mgv_arbitrage_test/=mangrove-arbitrage/test/\",\":mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/\",\":mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/\",\":mgv_script/=node_modules/@mangrovedao/mangrove-core/script/\",\":mgv_src/=node_modules/@mangrovedao/mangrove-core/src/\",\":mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/\",\":mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/\",\":mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/\",\":mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/\",\":mgv_test/=node_modules/@mangrovedao/mangrove-core/test/\",\":uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/\"]},\"sources\":{\"node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol\":{\"keccak256\":\"0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49\",\"dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol\":{\"keccak256\":\"0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449\",\"dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8\"]},\"node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol\":{\"keccak256\":\"0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07\",\"dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MakerBind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "maker",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MakerUnbind",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetAdmin",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activate"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            {
              "internalType": "address",
              "name": "current",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfReserve",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "makerContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bind"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkList"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flush"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "mkr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isBound",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "strict",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pull",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pulled",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "push",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "pushed",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "reserveId",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "routerGasreq",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "overhead",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "admin_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAdmin"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbind"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "makerContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unbind"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activate(address)": {
            "params": {
              "token": "the asset one wishes to use the router for"
            }
          },
          "admin()": {
            "returns": {
              "current": "admin."
            }
          },
          "balanceOfReserve(address,address)": {
            "params": {
              "reserveId": "the identifier of the reserve",
              "token": "the asset one wishes to know the balance of"
            },
            "returns": {
              "_0": "the balance of the reserve"
            }
          },
          "bind(address)": {
            "details": "this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address",
            "params": {
              "makerContract": "the maker contract address"
            }
          },
          "checkList(address,address)": {
            "details": "`checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.",
            "params": {
              "reserveId": "of the tokens that are being pulled",
              "token": "is the asset (and possibly its overlyings) whose approval must be checked"
            }
          },
          "flush(address[],address)": {
            "params": {
              "reserveId": "determines the location of the reserve (router implementation dependent).",
              "tokens": "to flush"
            }
          },
          "isBound(address)": {
            "params": {
              "mkr": "the address of a maker contract"
            },
            "returns": {
              "_0": "true if `mkr` is authorized to call this router."
            }
          },
          "pull(address,address,uint256,bool)": {
            "params": {
              "amount": "of `token` the maker contract wishes to pull from its reserve",
              "reserveId": "identifies the fund owner (router implementation dependent).",
              "strict": "when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)",
              "token": "is the ERC20 managing the pulled asset"
            },
            "returns": {
              "pulled": "the amount that was successfully pulled."
            }
          },
          "push(address,address,uint256)": {
            "params": {
              "amount": "is the amount of asset that should be transferred from the calling maker contract",
              "reserveId": "determines the location of the reserve (router implementation dependent).",
              "token": "is the asset the maker is pushing"
            },
            "returns": {
              "pushed": "fraction of `amount` that was successfully pushed to reserve."
            }
          },
          "routerGasreq(address,address)": {
            "params": {
              "reserveId": "that should be considered if a reserve specific route is defined.",
              "token": "that should be considered if a token specific route is defined."
            },
            "returns": {
              "overhead": "the added (overapproximated) gas cost of `push` and `pull` for the routing strategy."
            }
          },
          "setAdmin(address)": {
            "params": {
              "admin_": "The new admin. Cannot be `address(0)`."
            }
          },
          "unbind(address)": {
            "params": {
              "makerContract": "the maker contract address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activate(address)": {
            "notice": "performs necessary approval to activate router function on a particular asset"
          },
          "admin()": {
            "notice": "Retrieves the current admin."
          },
          "balanceOfReserve(address,address)": {
            "notice": "Balance of a reserve"
          },
          "bind(address)": {
            "notice": "adds a maker contract address to the allowed makers of this router"
          },
          "checkList(address,address)": {
            "notice": "allows a makerContract to verify it is ready to use `this` router for a particular reserve"
          },
          "flush(address[],address)": {
            "notice": "iterative `push` for the whole balance in a single call"
          },
          "isBound(address)": {
            "notice": "getter for the `makers: addr => bool` mapping"
          },
          "pull(address,address,uint256,bool)": {
            "notice": "pulls liquidity from the reserve and sends it to the calling maker contract."
          },
          "push(address,address,uint256)": {
            "notice": "pushes assets from calling's maker contract to a reserve"
          },
          "routerGasreq(address,address)": {
            "notice": "view for gas overhead of this router."
          },
          "setAdmin(address)": {
            "notice": "This sets the admin. Only the current admin can change the admin."
          },
          "unbind()": {
            "notice": "removes `msg.sender` from the allowed makers of this router"
          },
          "unbind(address)": {
            "notice": "removes a makerContract from the allowed makers of this router"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@mgv-strats/lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "@mgv-strats/script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "@mgv-strats/src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "@mgv-strats/test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "@mgv/forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "@mgv/lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "@mgv/script/=node_modules/@mangrovedao/mangrove-core/script/",
        "@mgv/src/=node_modules/@mangrovedao/mangrove-core/src/",
        "@mgv/test/=node_modules/@mangrovedao/mangrove-core/test/",
        "ds-test/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/lib/ds-test/src/",
        "mgv_arbitrage_lib/=mangrove-arbitrage/lib/",
        "mgv_arbitrage_script/=mangrove-arbitrage/script/",
        "mgv_arbitrage_src/=mangrove-arbitrage/src/",
        "mgv_arbitrage_test/=mangrove-arbitrage/test/",
        "mgv_forge-std/=node_modules/@mangrovedao/mangrove-core/lib/forge-std/src/",
        "mgv_lib/=node_modules/@mangrovedao/mangrove-core/lib/",
        "mgv_script/=node_modules/@mangrovedao/mangrove-core/script/",
        "mgv_src/=node_modules/@mangrovedao/mangrove-core/src/",
        "mgv_strats_lib/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/lib/",
        "mgv_strats_script/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/script/",
        "mgv_strats_src/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/",
        "mgv_strats_test/=node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/test/",
        "mgv_test/=node_modules/@mangrovedao/mangrove-core/test/",
        "uniswap_v3_lib/=mangrove-arbitrage/lib/v3-core/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": "AbstractRouter"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol": {
        "keccak256": "0xe39ef15ad326909ca8b85ee0a6d571798c4155b1d83591ab127badb082628240",
        "urls": [
          "bzz-raw://1cb5cd93f7152410db9b23c18e515e984c65f047d586b901c1031e38507ffe49",
          "dweb:/ipfs/QmYRNEH8XHRq1zSbpXa8NpYKBVJZWVTj211Viz7FbMRrU6"
        ],
        "license": "Unlicense"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol": {
        "keccak256": "0xee7f240b669dbba8d3d90af4a0e910346a9f6ce2787400fcbad800b978cabecb",
        "urls": [
          "bzz-raw://762dec2ea258c2132e10012a95d8724802fb7eb67227dfc6e11da703035cd449",
          "dweb:/ipfs/QmaKxQacNfT7obLdoW9EkT1XeN5d7p1YdfcnD8fruDhBF8"
        ],
        "license": "BSD-2-Clause"
      },
      "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol": {
        "keccak256": "0x05d5cdef0cd8133ac3d451c81ec8e4d8253eed5f1313d2c2b60385a7cefc845a",
        "urls": [
          "bzz-raw://7ef36b8d3f38b47a6062aa04667320aee663630fbd3626569d1928abc2e63f07",
          "dweb:/ipfs/QmUJKfJeswYvHCujVARh3axWZEAsknNoyxNndgv2cj1EXt"
        ],
        "license": "BSD-2-Clause"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/routers/abstract/AbstractRouter.sol",
    "id": 88624,
    "exportedSymbols": {
      "AbstractRouter": [
        88623
      ],
      "AccessControlled": [
        89841
      ],
      "IERC20": [
        88
      ]
    },
    "nodeType": "SourceUnit",
    "src": "41:8569:119",
    "nodes": [
      {
        "id": 88233,
        "nodeType": "PragmaDirective",
        "src": "41:24:119",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 88235,
        "nodeType": "ImportDirective",
        "src": "67:87:119",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove.js/node_modules/@mangrovedao/mangrove-strats/src/strategies/utils/AccessControlled.sol",
        "file": "@mgv-strats/src/strategies/utils/AccessControlled.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88624,
        "sourceUnit": 89842,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88234,
              "name": "AccessControlled",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89841,
              "src": "75:16:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88237,
        "nodeType": "ImportDirective",
        "src": "155:43:119",
        "nodes": [],
        "absolutePath": "node_modules/@mangrovedao/mangrove-core/lib/IERC20.sol",
        "file": "@mgv/lib/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88624,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 88236,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "163:6:119",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 88623,
        "nodeType": "ContractDefinition",
        "src": "302:8307:119",
        "nodes": [
          {
            "id": 88247,
            "nodeType": "VariableDeclaration",
            "src": "449:53:119",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 88243,
              "nodeType": "StructuredDocumentation",
              "src": "371:75:119",
              "text": "@notice the bound maker contracts which are allowed to call this router."
            },
            "mutability": "mutable",
            "name": "boundMakerContracts",
            "nameLocation": "483:19:119",
            "scope": 88623,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 88246,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 88244,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "457:7:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "449:24:119",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 88245,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "468:4:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 88260,
            "nodeType": "ModifierDefinition",
            "src": "595:95:119",
            "nodes": [],
            "body": {
              "id": 88259,
              "nodeType": "Block",
              "src": "616:74:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88252,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "638:3:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 88253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "642:6:119",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "638:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88251,
                          "name": "isBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88302,
                          "src": "630:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 88254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "630:19:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c6c65642f496e76616c6964",
                        "id": 88255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "651:26:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                          "typeString": "literal_string \"AccessControlled/Invalid\""
                        },
                        "value": "AccessControlled/Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                          "typeString": "literal_string \"AccessControlled/Invalid\""
                        }
                      ],
                      "id": 88250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "622:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "622:56:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88257,
                  "nodeType": "ExpressionStatement",
                  "src": "622:56:119"
                },
                {
                  "id": 88258,
                  "nodeType": "PlaceholderStatement",
                  "src": "684:1:119"
                }
              ]
            },
            "documentation": {
              "id": 88248,
              "nodeType": "StructuredDocumentation",
              "src": "507:85:119",
              "text": "@notice This modifier verifies that `msg.sender` an allowed caller of this router."
            },
            "name": "onlyBound",
            "nameLocation": "604:9:119",
            "parameters": {
              "id": 88249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "613:2:119"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88279,
            "nodeType": "ModifierDefinition",
            "src": "798:123:119",
            "nodes": [],
            "body": {
              "id": 88278,
              "nodeType": "Block",
              "src": "822:99:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 88273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 88268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 88264,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "836:3:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 88265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "840:6:119",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "836:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 88266,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89813,
                              "src": "850:5:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 88267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "850:7:119",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "836:21:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 88270,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "869:3:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 88271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "873:6:119",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "869:10:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 88269,
                            "name": "isBound",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88302,
                            "src": "861:7:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 88272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "861:19:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "836:44:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416363657373436f6e74726f6c6c65642f496e76616c6964",
                        "id": 88274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "882:26:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                          "typeString": "literal_string \"AccessControlled/Invalid\""
                        },
                        "value": "AccessControlled/Invalid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63073ee3929ee3a1a8c4877cbb6cbd924fa33b9f8107ef8fe7e9715fb347e396",
                          "typeString": "literal_string \"AccessControlled/Invalid\""
                        }
                      ],
                      "id": 88263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "828:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "828:81:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88276,
                  "nodeType": "ExpressionStatement",
                  "src": "828:81:119"
                },
                {
                  "id": 88277,
                  "nodeType": "PlaceholderStatement",
                  "src": "915:1:119"
                }
              ]
            },
            "documentation": {
              "id": 88261,
              "nodeType": "StructuredDocumentation",
              "src": "694:101:119",
              "text": "@notice This modifier verifies that `msg.sender` is the admin or an allowed caller of this router."
            },
            "name": "boundOrAdmin",
            "nameLocation": "807:12:119",
            "parameters": {
              "id": 88262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:119"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88284,
            "nodeType": "EventDefinition",
            "src": "1188:39:119",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 88280,
              "nodeType": "StructuredDocumentation",
              "src": "925:260:119",
              "text": "@notice logging bound maker contract\n@param maker the maker address. This is indexed, so that RPC calls can filter on it.\n@notice by emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router."
            },
            "eventSelector": "ecac69b9e48a248381b74f2e1cf855cc6afc2f410751325703374c70351035bc",
            "name": "MakerBind",
            "nameLocation": "1194:9:119",
            "parameters": {
              "id": 88283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88282,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "1220:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88284,
                  "src": "1204:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88281,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1204:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1203:23:119"
            }
          },
          {
            "id": 88289,
            "nodeType": "EventDefinition",
            "src": "1496:41:119",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 88285,
              "nodeType": "StructuredDocumentation",
              "src": "1231:262:119",
              "text": "@notice logging unbound maker contract\n@param maker the maker address. This is indexed, so that RPC calls can filter on it.\n@notice by emitting this data, an indexer will be able to keep track of what maker contracts are allowed to call this router."
            },
            "eventSelector": "30a4a29afb6d28e62264c8b7cd43fe3a5edce91f4b9c8591b23a99b3838686b5",
            "name": "MakerUnbind",
            "nameLocation": "1502:11:119",
            "parameters": {
              "id": 88288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88287,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "maker",
                  "nameLocation": "1530:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88289,
                  "src": "1514:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1514:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1513:23:119"
            }
          },
          {
            "id": 88302,
            "nodeType": "FunctionDefinition",
            "src": "1710:99:119",
            "nodes": [],
            "body": {
              "id": 88301,
              "nodeType": "Block",
              "src": "1767:42:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 88297,
                      "name": "boundMakerContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88247,
                      "src": "1780:19:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 88299,
                    "indexExpression": {
                      "id": 88298,
                      "name": "mkr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88292,
                      "src": "1800:3:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1780:24:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 88296,
                  "id": 88300,
                  "nodeType": "Return",
                  "src": "1773:31:119"
                }
              ]
            },
            "documentation": {
              "id": 88290,
              "nodeType": "StructuredDocumentation",
              "src": "1541:166:119",
              "text": "@notice getter for the `makers: addr => bool` mapping\n@param mkr the address of a maker contract\n@return true if `mkr` is authorized to call this router."
            },
            "functionSelector": "2f37b624",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isBound",
            "nameLocation": "1719:7:119",
            "parameters": {
              "id": 88293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88292,
                  "mutability": "mutable",
                  "name": "mkr",
                  "nameLocation": "1735:3:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88302,
                  "src": "1727:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1726:13:119"
            },
            "returnParameters": {
              "id": 88296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88302,
                  "src": "1761:4:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88294,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1761:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1760:6:119"
            },
            "scope": 88623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88319,
            "nodeType": "FunctionDefinition",
            "src": "2141:143:119",
            "nodes": [],
            "body": {
              "id": 88318,
              "nodeType": "Block",
              "src": "2232:52:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88314,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88306,
                        "src": "2262:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88315,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88308,
                        "src": "2269:9:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88313,
                      "name": "__routerGasreq__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88330,
                      "src": "2245:16:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,address) view returns (uint256)"
                      }
                    },
                    "id": 88316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:34:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 88312,
                  "id": 88317,
                  "nodeType": "Return",
                  "src": "2238:41:119"
                }
              ]
            },
            "documentation": {
              "id": 88303,
              "nodeType": "StructuredDocumentation",
              "src": "1813:325:119",
              "text": "@notice view for gas overhead of this router.\n@param reserveId that should be considered if a reserve specific route is defined.\n@param token that should be considered if a token specific route is defined.\n@return overhead the added (overapproximated) gas cost of `push` and `pull` for the routing strategy."
            },
            "functionSelector": "2876fb4e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "routerGasreq",
            "nameLocation": "2150:12:119",
            "parameters": {
              "id": 88309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88306,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2170:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88319,
                  "src": "2163:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88305,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88304,
                      "name": "IERC20",
                      "nameLocations": [
                        "2163:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "2163:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "2163:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88308,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "2185:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88319,
                  "src": "2177:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2177:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2162:33:119"
            },
            "returnParameters": {
              "id": 88312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88311,
                  "mutability": "mutable",
                  "name": "overhead",
                  "nameLocation": "2222:8:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88319,
                  "src": "2217:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88310,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2216:15:119"
            },
            "scope": 88623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88330,
            "nodeType": "FunctionDefinition",
            "src": "2636:105:119",
            "nodes": [],
            "documentation": {
              "id": 88320,
              "nodeType": "StructuredDocumentation",
              "src": "2288:345:119",
              "text": "@notice hook that implements router specific gas requirement for a given routing strategy.\n@param reserveId that should be considered if a reserve specific route is defined.\n@param token that should be considered if a token specific route is defined.\n@return overhead the added (overapproximated) gas cost of `push` and `pull`."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "__routerGasreq__",
            "nameLocation": "2645:16:119",
            "parameters": {
              "id": 88326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88323,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2669:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88330,
                  "src": "2662:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88321,
                      "name": "IERC20",
                      "nameLocations": [
                        "2662:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "2662:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "2662:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88325,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "2684:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88330,
                  "src": "2676:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2676:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2661:33:119"
            },
            "returnParameters": {
              "id": 88329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88328,
                  "mutability": "mutable",
                  "name": "overhead",
                  "nameLocation": "2731:8:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88330,
                  "src": "2726:13:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88327,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2725:15:119"
            },
            "scope": 88623,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88366,
            "nodeType": "FunctionDefinition",
            "src": "3264:267:119",
            "nodes": [],
            "body": {
              "id": 88365,
              "nodeType": "Block",
              "src": "3378:153:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 88351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88347,
                      "name": "strict",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88340,
                      "src": "3388:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 88350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 88348,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88338,
                        "src": "3398:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 88349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3408:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3398:11:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3388:21:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88355,
                  "nodeType": "IfStatement",
                  "src": "3384:50:119",
                  "trueBody": {
                    "id": 88354,
                    "nodeType": "Block",
                    "src": "3411:23:119",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 88352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3426:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 88346,
                        "id": 88353,
                        "nodeType": "Return",
                        "src": "3419:8:119"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 88363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88356,
                      "name": "pulled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88345,
                      "src": "3439:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88358,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88334,
                          "src": "3465:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 88359,
                          "name": "reserveId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88336,
                          "src": "3483:9:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 88360,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88338,
                          "src": "3502:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 88361,
                          "name": "strict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88340,
                          "src": "3518:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 88357,
                        "name": "__pull__",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88381,
                        "src": "3448:8:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20,address,uint256,bool) returns (uint256)"
                        }
                      },
                      "id": 88362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "3458:5:119",
                        "3472:9:119",
                        "3494:6:119",
                        "3510:6:119"
                      ],
                      "names": [
                        "token",
                        "reserveId",
                        "amount",
                        "strict"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3448:78:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3439:87:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88364,
                  "nodeType": "ExpressionStatement",
                  "src": "3439:87:119"
                }
              ]
            },
            "documentation": {
              "id": 88331,
              "nodeType": "StructuredDocumentation",
              "src": "2745:516:119",
              "text": "@notice pulls liquidity from the reserve and sends it to the calling maker contract.\n@param token is the ERC20 managing the pulled asset\n@param reserveId identifies the fund owner (router implementation dependent).\n@param amount of `token` the maker contract wishes to pull from its reserve\n@param strict when the calling maker contract accepts to receive more funds from reserve than required (this may happen for gas optimization)\n@return pulled the amount that was successfully pulled."
            },
            "functionSelector": "333dbb0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88343,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88342,
                  "name": "onlyBound",
                  "nameLocations": [
                    "3346:9:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88260,
                  "src": "3346:9:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "3346:9:119"
              }
            ],
            "name": "pull",
            "nameLocation": "3273:4:119",
            "parameters": {
              "id": 88341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88334,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3285:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88366,
                  "src": "3278:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88333,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88332,
                      "name": "IERC20",
                      "nameLocations": [
                        "3278:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "3278:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "3278:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88336,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "3300:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88366,
                  "src": "3292:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3292:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88338,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3316:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88366,
                  "src": "3311:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88337,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88340,
                  "mutability": "mutable",
                  "name": "strict",
                  "nameLocation": "3329:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88366,
                  "src": "3324:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3324:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3277:59:119"
            },
            "returnParameters": {
              "id": 88346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88345,
                  "mutability": "mutable",
                  "name": "pulled",
                  "nameLocation": "3370:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88366,
                  "src": "3365:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88344,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3365:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3364:13:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88381,
            "nodeType": "FunctionDefinition",
            "src": "3967:109:119",
            "nodes": [],
            "documentation": {
              "id": 88367,
              "nodeType": "StructuredDocumentation",
              "src": "3535:429:119",
              "text": "@notice router-dependent implementation of the `pull` function\n@param token Token to be transferred\n@param reserveId determines the location of the reserve (router implementation dependent).\n@param amount The amount of tokens to be transferred\n@param strict wether the caller maker contract wishes to pull at most `amount` tokens of owner.\n@return pulled The amount pulled if successful; otherwise, 0."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "__pull__",
            "nameLocation": "3976:8:119",
            "parameters": {
              "id": 88377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88370,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3992:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88381,
                  "src": "3985:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88369,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88368,
                      "name": "IERC20",
                      "nameLocations": [
                        "3985:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "3985:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "3985:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88372,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "4007:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88381,
                  "src": "3999:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3999:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88374,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4023:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88381,
                  "src": "4018:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88373,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4018:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88376,
                  "mutability": "mutable",
                  "name": "strict",
                  "nameLocation": "4036:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88381,
                  "src": "4031:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88375,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4031:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3984:59:119"
            },
            "returnParameters": {
              "id": 88380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88379,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88381,
                  "src": "4070:4:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88378,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4070:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4069:6:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88412,
            "nodeType": "FunctionDefinition",
            "src": "4481:228:119",
            "nodes": [],
            "body": {
              "id": 88411,
              "nodeType": "Block",
              "src": "4582:127:119",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 88398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88396,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88389,
                      "src": "4592:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 88397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4602:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4592:11:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88402,
                  "nodeType": "IfStatement",
                  "src": "4588:40:119",
                  "trueBody": {
                    "id": 88401,
                    "nodeType": "Block",
                    "src": "4605:23:119",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 88399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4620:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 88395,
                        "id": 88400,
                        "nodeType": "Return",
                        "src": "4613:8:119"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 88409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 88403,
                      "name": "pushed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88394,
                      "src": "4633:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 88405,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88385,
                          "src": "4659:5:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 88406,
                          "name": "reserveId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88387,
                          "src": "4677:9:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 88407,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88389,
                          "src": "4696:6:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$88",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 88404,
                        "name": "__push__",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88425,
                        "src": "4642:8:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20,address,uint256) returns (uint256)"
                        }
                      },
                      "id": 88408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4652:5:119",
                        "4666:9:119",
                        "4688:6:119"
                      ],
                      "names": [
                        "token",
                        "reserveId",
                        "amount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4642:62:119",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4633:71:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 88410,
                  "nodeType": "ExpressionStatement",
                  "src": "4633:71:119"
                }
              ]
            },
            "documentation": {
              "id": 88382,
              "nodeType": "StructuredDocumentation",
              "src": "4080:398:119",
              "text": "@notice pushes assets from calling's maker contract to a reserve\n@param token is the asset the maker is pushing\n@param reserveId determines the location of the reserve (router implementation dependent).\n@param amount is the amount of asset that should be transferred from the calling maker contract\n@return pushed fraction of `amount` that was successfully pushed to reserve."
            },
            "functionSelector": "26e8eda2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88392,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88391,
                  "name": "onlyBound",
                  "nameLocations": [
                    "4550:9:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88260,
                  "src": "4550:9:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "4550:9:119"
              }
            ],
            "name": "push",
            "nameLocation": "4490:4:119",
            "parameters": {
              "id": 88390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88385,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4502:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88412,
                  "src": "4495:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88384,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88383,
                      "name": "IERC20",
                      "nameLocations": [
                        "4495:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "4495:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "4495:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88387,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "4517:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88412,
                  "src": "4509:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4509:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88389,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4533:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88412,
                  "src": "4528:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88388,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4494:46:119"
            },
            "returnParameters": {
              "id": 88395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88394,
                  "mutability": "mutable",
                  "name": "pushed",
                  "nameLocation": "4574:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88412,
                  "src": "4569:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88393,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4569:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4568:13:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88425,
            "nodeType": "FunctionDefinition",
            "src": "5044:103:119",
            "nodes": [],
            "documentation": {
              "id": 88413,
              "nodeType": "StructuredDocumentation",
              "src": "4713:328:119",
              "text": "@notice router-dependent implementation of the `push` function\n@param token Token to be transferred\n@param reserveId determines the location of the reserve (router implementation dependent).\n@param amount The amount of tokens to be transferred\n@return pushed The amount pushed if successful; otherwise, 0."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "__push__",
            "nameLocation": "5053:8:119",
            "parameters": {
              "id": 88421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88416,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5069:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88425,
                  "src": "5062:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88415,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88414,
                      "name": "IERC20",
                      "nameLocations": [
                        "5062:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "5062:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "5062:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88418,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "5084:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88425,
                  "src": "5076:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5076:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88420,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5100:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88425,
                  "src": "5095:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88419,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5095:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5061:46:119"
            },
            "returnParameters": {
              "id": 88424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88423,
                  "mutability": "mutable",
                  "name": "pushed",
                  "nameLocation": "5139:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88425,
                  "src": "5134:11:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5133:13:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88479,
            "nodeType": "FunctionDefinition",
            "src": "5344:310:119",
            "nodes": [],
            "body": {
              "id": 88478,
              "nodeType": "Block",
              "src": "5423:231:119",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 88476,
                    "nodeType": "Block",
                    "src": "5470:180:119",
                    "statements": [
                      {
                        "assignments": [
                          88449
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 88449,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "5483:6:119",
                            "nodeType": "VariableDeclaration",
                            "scope": 88476,
                            "src": "5478:11:119",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 88448,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5478:4:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 88457,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 88454,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5512:3:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 88455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5516:6:119",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5512:10:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 88450,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88430,
                                "src": "5492:6:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 88452,
                              "indexExpression": {
                                "id": 88451,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88438,
                                "src": "5499:1:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5492:9:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 88453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5502:9:119",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "5492:19:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 88456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5492:31:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5478:45:119"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 88458,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88449,
                            "src": "5535:6:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 88459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5544:1:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5535:10:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 88475,
                        "nodeType": "IfStatement",
                        "src": "5531:113:119",
                        "trueBody": {
                          "id": 88474,
                          "nodeType": "Block",
                          "src": "5547:97:119",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 88470,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 88463,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88430,
                                            "src": "5574:6:119",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                                              "typeString": "contract IERC20[] calldata"
                                            }
                                          },
                                          "id": 88465,
                                          "indexExpression": {
                                            "id": 88464,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 88438,
                                            "src": "5581:1:119",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5574:9:119",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        {
                                          "id": 88466,
                                          "name": "reserveId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 88432,
                                          "src": "5585:9:119",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 88467,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 88449,
                                          "src": "5596:6:119",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$88",
                                            "typeString": "contract IERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 88462,
                                        "name": "__push__",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 88425,
                                        "src": "5565:8:119",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                          "typeString": "function (contract IERC20,address,uint256) returns (uint256)"
                                        }
                                      },
                                      "id": 88468,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5565:38:119",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 88469,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88449,
                                      "src": "5607:6:119",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5565:48:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "726f757465722f707573684661696c6564",
                                    "id": 88471,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5615:19:119",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_66b93c7de4c4e80eef23e5ce40dbe08138d66109832aa0fe8abc602b7e9326cf",
                                      "typeString": "literal_string \"router/pushFailed\""
                                    },
                                    "value": "router/pushFailed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_66b93c7de4c4e80eef23e5ce40dbe08138d66109832aa0fe8abc602b7e9326cf",
                                      "typeString": "literal_string \"router/pushFailed\""
                                    }
                                  ],
                                  "id": 88461,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5557:7:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 88472,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5557:78:119",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 88473,
                              "nodeType": "ExpressionStatement",
                              "src": "5557:78:119"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 88444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88441,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88438,
                      "src": "5446:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 88442,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88430,
                        "src": "5450:6:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      },
                      "id": 88443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5457:6:119",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5450:13:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5446:17:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88477,
                  "initializationExpression": {
                    "assignments": [
                      88438
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 88438,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5439:1:119",
                        "nodeType": "VariableDeclaration",
                        "scope": 88477,
                        "src": "5434:6:119",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88437,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5434:4:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 88440,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 88439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5443:1:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5434:10:119"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 88446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "5465:3:119",
                      "subExpression": {
                        "id": 88445,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88438,
                        "src": "5467:1:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 88447,
                    "nodeType": "ExpressionStatement",
                    "src": "5465:3:119"
                  },
                  "nodeType": "ForStatement",
                  "src": "5429:221:119"
                }
              ]
            },
            "documentation": {
              "id": 88426,
              "nodeType": "StructuredDocumentation",
              "src": "5151:190:119",
              "text": "@notice iterative `push` for the whole balance in a single call\n@param tokens to flush\n@param reserveId determines the location of the reserve (router implementation dependent)."
            },
            "functionSelector": "f850a81c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88435,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88434,
                  "name": "onlyBound",
                  "nameLocations": [
                    "5413:9:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88260,
                  "src": "5413:9:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "5413:9:119"
              }
            ],
            "name": "flush",
            "nameLocation": "5353:5:119",
            "parameters": {
              "id": 88433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88430,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5377:6:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88479,
                  "src": "5359:24:119",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 88428,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 88427,
                        "name": "IERC20",
                        "nameLocations": [
                          "5359:6:119"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 88,
                        "src": "5359:6:119"
                      },
                      "referencedDeclaration": 88,
                      "src": "5359:6:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$88",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 88429,
                    "nodeType": "ArrayTypeName",
                    "src": "5359:8:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$88_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88432,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "5393:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88479,
                  "src": "5385:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5385:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5358:45:119"
            },
            "returnParameters": {
              "id": 88436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5423:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88498,
            "nodeType": "FunctionDefinition",
            "src": "5922:141:119",
            "nodes": [],
            "body": {
              "id": 88497,
              "nodeType": "Block",
              "src": "5976:87:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88487,
                        "name": "boundMakerContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88247,
                        "src": "5982:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 88489,
                      "indexExpression": {
                        "id": 88488,
                        "name": "makerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88482,
                        "src": "6002:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5982:34:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 88490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6019:4:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5982:41:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88492,
                  "nodeType": "ExpressionStatement",
                  "src": "5982:41:119"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 88494,
                        "name": "makerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88482,
                        "src": "6044:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88493,
                      "name": "MakerBind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88284,
                      "src": "6034:9:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 88495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6034:24:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88496,
                  "nodeType": "EmitStatement",
                  "src": "6029:29:119"
                }
              ]
            },
            "documentation": {
              "id": 88480,
              "nodeType": "StructuredDocumentation",
              "src": "5658:261:119",
              "text": "@notice adds a maker contract address to the allowed makers of this router\n@dev this function is callable by router's admin to bootstrap, but later on an allowed maker contract can add another address\n@param makerContract the maker contract address"
            },
            "functionSelector": "81bac14f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88485,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88484,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "5966:9:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "5966:9:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "5966:9:119"
              }
            ],
            "name": "bind",
            "nameLocation": "5931:4:119",
            "parameters": {
              "id": 88483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88482,
                  "mutability": "mutable",
                  "name": "makerContract",
                  "nameLocation": "5944:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88498,
                  "src": "5936:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5936:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5935:23:119"
            },
            "returnParameters": {
              "id": 88486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5976:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 88515,
            "nodeType": "FunctionDefinition",
            "src": "6205:139:119",
            "nodes": [],
            "body": {
              "id": 88514,
              "nodeType": "Block",
              "src": "6254:90:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 88504,
                        "name": "boundMakerContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88247,
                        "src": "6260:19:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 88506,
                      "indexExpression": {
                        "id": 88505,
                        "name": "makerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88501,
                        "src": "6280:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6260:34:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 88507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6297:5:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6260:42:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88509,
                  "nodeType": "ExpressionStatement",
                  "src": "6260:42:119"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 88511,
                        "name": "makerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88501,
                        "src": "6325:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88510,
                      "name": "MakerUnbind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88289,
                      "src": "6313:11:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 88512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6313:26:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88513,
                  "nodeType": "EmitStatement",
                  "src": "6308:31:119"
                }
              ]
            },
            "documentation": {
              "id": 88499,
              "nodeType": "StructuredDocumentation",
              "src": "6067:135:119",
              "text": "@notice removes a maker contract address from the allowed makers of this router\n@param makerContract the maker contract address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_unbind",
            "nameLocation": "6214:7:119",
            "parameters": {
              "id": 88502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88501,
                  "mutability": "mutable",
                  "name": "makerContract",
                  "nameLocation": "6230:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88515,
                  "src": "6222:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88500,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6222:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6221:23:119"
            },
            "returnParameters": {
              "id": 88503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6254:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 88527,
            "nodeType": "FunctionDefinition",
            "src": "6421:67:119",
            "nodes": [],
            "body": {
              "id": 88526,
              "nodeType": "Block",
              "src": "6458:30:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 88522,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6472:3:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 88523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6476:6:119",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6472:10:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88521,
                      "name": "_unbind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88515,
                      "src": "6464:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 88524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6464:19:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88525,
                  "nodeType": "ExpressionStatement",
                  "src": "6464:19:119"
                }
              ]
            },
            "documentation": {
              "id": 88516,
              "nodeType": "StructuredDocumentation",
              "src": "6348:70:119",
              "text": "@notice removes `msg.sender` from the allowed makers of this router"
            },
            "functionSelector": "b6b25742",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88518,
                  "name": "onlyBound",
                  "nameLocations": [
                    "6448:9:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88260,
                  "src": "6448:9:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "6448:9:119"
              }
            ],
            "name": "unbind",
            "nameLocation": "6430:6:119",
            "parameters": {
              "id": 88517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6436:2:119"
            },
            "returnParameters": {
              "id": 88520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6458:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88540,
            "nodeType": "FunctionDefinition",
            "src": "6621:91:119",
            "nodes": [],
            "body": {
              "id": 88539,
              "nodeType": "Block",
              "src": "6679:33:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88536,
                        "name": "makerContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88530,
                        "src": "6693:13:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88535,
                      "name": "_unbind",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88515,
                      "src": "6685:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 88537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6685:22:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88538,
                  "nodeType": "ExpressionStatement",
                  "src": "6685:22:119"
                }
              ]
            },
            "documentation": {
              "id": 88528,
              "nodeType": "StructuredDocumentation",
              "src": "6492:126:119",
              "text": "@notice removes a makerContract from the allowed makers of this router\n@param makerContract the maker contract address"
            },
            "functionSelector": "cf5e7bd3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88532,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "6669:9:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89769,
                  "src": "6669:9:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "6669:9:119"
              }
            ],
            "name": "unbind",
            "nameLocation": "6630:6:119",
            "parameters": {
              "id": 88531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88530,
                  "mutability": "mutable",
                  "name": "makerContract",
                  "nameLocation": "6645:13:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88540,
                  "src": "6637:21:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6637:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6636:23:119"
            },
            "returnParameters": {
              "id": 88534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6679:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88578,
            "nodeType": "FunctionDefinition",
            "src": "7091:498:119",
            "nodes": [],
            "body": {
              "id": 88577,
              "nodeType": "Block",
              "src": "7157:432:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 88551,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7179:3:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 88552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7183:6:119",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7179:10:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 88550,
                          "name": "isBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88302,
                          "src": "7171:7:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 88553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7171:19:119",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722f63616c6c657249734e6f74426f756e64546f526f75746572",
                        "id": 88554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7192:33:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bacc28b24d292b4460ab9350173dd33300522503ee58808e1d4e445c426e00e4",
                          "typeString": "literal_string \"Router/callerIsNotBoundToRouter\""
                        },
                        "value": "Router/callerIsNotBoundToRouter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bacc28b24d292b4460ab9350173dd33300522503ee58808e1d4e445c426e00e4",
                          "typeString": "literal_string \"Router/callerIsNotBoundToRouter\""
                        }
                      ],
                      "id": 88549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7163:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7163:63:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88556,
                  "nodeType": "ExpressionStatement",
                  "src": "7163:63:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 88560,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7354:3:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 88561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7358:6:119",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7354:10:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 88564,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7374:4:119",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                    "typeString": "contract AbstractRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AbstractRouter_$88623",
                                    "typeString": "contract AbstractRouter"
                                  }
                                ],
                                "id": 88563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7366:7:119",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 88562,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7366:7:119",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 88565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7366:13:119",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 88558,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88544,
                              "src": "7338:5:119",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$88",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 88559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7344:9:119",
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36,
                            "src": "7338:15:119",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 88566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7338:42:119",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 88567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7383:1:119",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7338:46:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465722f4e6f74417070726f76656442794d616b6572436f6e7472616374",
                        "id": 88569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7386:35:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8f3444704f5573614725b2a102121d04767aa8835f7577931731d653077e897",
                          "typeString": "literal_string \"Router/NotApprovedByMakerContract\""
                        },
                        "value": "Router/NotApprovedByMakerContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8f3444704f5573614725b2a102121d04767aa8835f7577931731d653077e897",
                          "typeString": "literal_string \"Router/NotApprovedByMakerContract\""
                        }
                      ],
                      "id": 88557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7330:7:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 88570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7330:92:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88571,
                  "nodeType": "ExpressionStatement",
                  "src": "7330:92:119"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88573,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88544,
                        "src": "7567:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 88574,
                        "name": "reserveId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88546,
                        "src": "7574:9:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 88572,
                      "name": "__checkList__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88587,
                      "src": "7553:13:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$88_$_t_address_$returns$__$",
                        "typeString": "function (contract IERC20,address) view"
                      }
                    },
                    "id": 88575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7553:31:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88576,
                  "nodeType": "ExpressionStatement",
                  "src": "7553:31:119"
                }
              ]
            },
            "documentation": {
              "id": 88541,
              "nodeType": "StructuredDocumentation",
              "src": "6716:372:119",
              "text": "@notice allows a makerContract to verify it is ready to use `this` router for a particular reserve\n@dev `checkList` returns normally if all needed approval are strictly positive. It reverts otherwise with a reason.\n@param token is the asset (and possibly its overlyings) whose approval must be checked\n@param reserveId of the tokens that are being pulled"
            },
            "functionSelector": "a01dccd8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkList",
            "nameLocation": "7100:9:119",
            "parameters": {
              "id": 88547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88544,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7117:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88578,
                  "src": "7110:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88543,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88542,
                      "name": "IERC20",
                      "nameLocations": [
                        "7110:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "7110:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "7110:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88546,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "7132:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88578,
                  "src": "7124:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7124:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7109:33:119"
            },
            "returnParameters": {
              "id": 88548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7157:0:119"
            },
            "scope": 88623,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88587,
            "nodeType": "FunctionDefinition",
            "src": "7791:78:119",
            "nodes": [],
            "documentation": {
              "id": 88579,
              "nodeType": "StructuredDocumentation",
              "src": "7593:195:119",
              "text": "@notice router-dependent additional checks\n@param token is the asset (and possibly its overlyings) whose approval must be checked\n@param reserveId of the tokens that are being pulled"
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "__checkList__",
            "nameLocation": "7800:13:119",
            "parameters": {
              "id": 88585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88582,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "7821:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88587,
                  "src": "7814:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88581,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88580,
                      "name": "IERC20",
                      "nameLocations": [
                        "7814:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "7814:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "7814:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88584,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "7836:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88587,
                  "src": "7828:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7828:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7813:33:119"
            },
            "returnParameters": {
              "id": 88586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7868:0:119"
            },
            "scope": 88623,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88601,
            "nodeType": "FunctionDefinition",
            "src": "8025:84:119",
            "nodes": [],
            "body": {
              "id": 88600,
              "nodeType": "Block",
              "src": "8079:30:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88597,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88591,
                        "src": "8098:5:119",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$88",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 88596,
                      "name": "__activate__",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88611,
                      "src": "8085:12:119",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$88_$returns$__$",
                        "typeString": "function (contract IERC20)"
                      }
                    },
                    "id": 88598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8085:19:119",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88599,
                  "nodeType": "ExpressionStatement",
                  "src": "8085:19:119"
                }
              ]
            },
            "documentation": {
              "id": 88588,
              "nodeType": "StructuredDocumentation",
              "src": "7873:149:119",
              "text": "@notice performs necessary approval to activate router function on a particular asset\n@param token the asset one wishes to use the router for"
            },
            "functionSelector": "1c5a9d9c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 88594,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88593,
                  "name": "boundOrAdmin",
                  "nameLocations": [
                    "8066:12:119"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 88279,
                  "src": "8066:12:119"
                },
                "nodeType": "ModifierInvocation",
                "src": "8066:12:119"
              }
            ],
            "name": "activate",
            "nameLocation": "8034:8:119",
            "parameters": {
              "id": 88592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88591,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8050:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88601,
                  "src": "8043:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88589,
                      "name": "IERC20",
                      "nameLocations": [
                        "8043:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "8043:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "8043:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8042:14:119"
            },
            "returnParameters": {
              "id": 88595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8079:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88611,
            "nodeType": "FunctionDefinition",
            "src": "8246:75:119",
            "nodes": [],
            "body": {
              "id": 88610,
              "nodeType": "Block",
              "src": "8299:22:119",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 88608,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88605,
                    "src": "8305:5:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 88609,
                  "nodeType": "ExpressionStatement",
                  "src": "8305:5:119"
                }
              ]
            },
            "documentation": {
              "id": 88602,
              "nodeType": "StructuredDocumentation",
              "src": "8113:130:119",
              "text": "@notice router-dependent implementation of the `activate` function\n@param token the asset one wishes to use the router for"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__activate__",
            "nameLocation": "8255:12:119",
            "parameters": {
              "id": 88606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88605,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8275:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88611,
                  "src": "8268:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88604,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88603,
                      "name": "IERC20",
                      "nameLocations": [
                        "8268:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "8268:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "8268:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8267:14:119"
            },
            "returnParameters": {
              "id": 88607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8299:0:119"
            },
            "scope": 88623,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 88622,
            "nodeType": "FunctionDefinition",
            "src": "8513:94:119",
            "nodes": [],
            "documentation": {
              "id": 88612,
              "nodeType": "StructuredDocumentation",
              "src": "8325:185:119",
              "text": "@notice Balance of a reserve\n@param token the asset one wishes to know the balance of\n@param reserveId the identifier of the reserve\n@return the balance of the reserve"
            },
            "functionSelector": "fe380db5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfReserve",
            "nameLocation": "8522:16:119",
            "parameters": {
              "id": 88618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88615,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "8546:5:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88622,
                  "src": "8539:12:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$88",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 88614,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 88613,
                      "name": "IERC20",
                      "nameLocations": [
                        "8539:6:119"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 88,
                      "src": "8539:6:119"
                    },
                    "referencedDeclaration": 88,
                    "src": "8539:6:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$88",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88617,
                  "mutability": "mutable",
                  "name": "reserveId",
                  "nameLocation": "8561:9:119",
                  "nodeType": "VariableDeclaration",
                  "scope": 88622,
                  "src": "8553:17:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8553:7:119",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8538:33:119"
            },
            "returnParameters": {
              "id": 88621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88620,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88622,
                  "src": "8601:4:119",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88619,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8601:4:119",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8600:6:119"
            },
            "scope": 88623,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "arguments": [
              {
                "expression": {
                  "id": 88240,
                  "name": "msg",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -15,
                  "src": "355:3:119",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_message",
                    "typeString": "msg"
                  }
                },
                "id": 88241,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberLocation": "359:6:119",
                "memberName": "sender",
                "nodeType": "MemberAccess",
                "src": "355:10:119",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            ],
            "baseName": {
              "id": 88239,
              "name": "AccessControlled",
              "nameLocations": [
                "338:16:119"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89841,
              "src": "338:16:119"
            },
            "id": 88242,
            "nodeType": "InheritanceSpecifier",
            "src": "338:28:119"
          }
        ],
        "canonicalName": "AbstractRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 88238,
          "nodeType": "StructuredDocumentation",
          "src": "200:101:119",
          "text": "@title AbstractRouter\n @notice Partial implementation and requirements for liquidity routers."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          88623,
          89841
        ],
        "name": "AbstractRouter",
        "nameLocation": "320:14:119",
        "scope": 88624,
        "usedErrors": [],
        "usedEvents": [
          88284,
          88289,
          89732
        ]
      }
    ],
    "license": "BSD-2-Clause"
  },
  "id": 119
}