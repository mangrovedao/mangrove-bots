name: CI

on:
  workflow_dispatch:
  push:
    branches: 
      - master
      - 'run-ci/**'
    paths-ignore: 
      - '**.md'
  pull_request_target:
    branches: [ master ]
    types: [opened, synchronize, reopened, labeled]
    paths-ignore: 
      - '**.md'

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  # Ternary-esque expression hack: The first line is the condition,
  # the 2nd line is the value if `true`, the 3rd line is the value if `false`.
  GIT_REF_TO_TEST: >
                   ${{  (   github.event_name != 'pull_request_target'
                         && github.ref )
                      || format('refs/pull/{0}/merge', github.event.number) }}
  NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN: ${{ github.ref_name == 'master' && github.event_name != 'pull_request_target' }}
jobs:
  # ==== Job: Security guard ====
  # The security guard job only allows workflows triggered by external PR's to continue
  # if they are labelled 'safe to test'.
  security-guard:
    runs-on: ubuntu-latest

    steps:
    - name: Comment external PR's with first time (before being labelled 'external PR')
      if: >
          !(   github.event_name != 'pull_request_target'
            || github.event.pull_request.head.repo.full_name == github.repository
            || contains(github.event.pull_request.labels.*.name, 'external PR') )
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: >
              Pull requests from forks must be reviewed before build and tests are run.

              A maintainer will review and add the 'safe to test' label if everything looks good.

    - name: Label external PR's with 'external PR'
      if: >
          !(   github.event_name != 'pull_request_target'
            || github.event.pull_request.head.repo.full_name == github.repository
            || contains(github.event.pull_request.labels.*.name, 'external PR') )
      uses: actions-ecosystem/action-add-labels@v1
      with:
        labels: external PR

    - name: Fail if workflow triggered by external PR *not* labelled 'safe to test'
      if: >
          !(   github.event_name != 'pull_request_target'
            || github.event.pull_request.head.repo.full_name == github.repository
            || contains(github.event.pull_request.labels.*.name, 'safe to test') )
      uses: actions/github-script@v6
      with:
        script: core.setFailed('External PR must be marked \'safe to test\' for CI to run')
  # ==== End job: Security guard ====

  # ==== Job: Build and test commonlib.js ====
  commonlib-js:
    needs: [security-guard]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/commonlib.js

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    # build
    - name: commonlib.js - Build
      run: yarn run build-this-package

    - name: Save status of build
      run: echo "commonlib_js_built=true" >> $GITHUB_ENV    

    # == run and report tests == 
    # NOTE: Uncomment the following two steps, when commonlib.js has tests -->
    # - name: commonlib.js - Tests
    #   run: yarn run test

    # - name: commonlib.js - Test Report
    #   uses: dorny/test-reporter@v1
    #   if: ${{ env.commonlib_js_built && (success() || failure()) }}
    #   with:
    #     name: commonlib.js - Tests                   # Name of the check run which will be created
    #     path: packages/commonlib.js/commonlib-js-mocha-test-report.json # Path to test results
    #     reporter: mocha-json                               # Format of test results

    # save artifacts for later stages
    - name: Zip output
      uses: montudor/action-zip@v1
      with: 
        args: zip -qq -r commonlib-out.zip ${{env.working-directory}}/dist

    - name: Cache commonlib.js output as artifact
      uses: actions/upload-artifact@v3
      with:
        name: commonlib-out.zip
        path: commonlib-out.zip

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: commonlib-js ====

  # ==== Job: Build and test Mangrove Core
  mangrove-solidity:
    needs: [security-guard]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/mangrove-solidity

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup

    # == build ==
    - name: Solidity Compile
      run: yarn run build-this-package

    - name: Save status of build
      # So we can fail-fast and drop the X Test Report steps, if build fails
      # A tiny bit hacky, but it's simple and works
      run: echo "mangrove_built=true" >> $GITHUB_ENV

    # Run local Solidity tests
    - name: Mangrove Solidity Tests
      run: yarn run test
      env:
        POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL }}

    # NOTE: uncomment once you can manage forge test 
    # outputs in gh actions
    # - name: Mangrove Solidity Test Report
    #   uses: dorny/test-reporter@v1
    #   if: ${{ env.mangrove_built && (success() || failure()) }}
    #   with:
    #     name: Solidity Tests                  # Name of the check run which will be created
    #     path: ${{env.working-directory}}/solidity-mocha-test-report.json # Path to test results
    #     reporter: mocha-json                  # Format of test results

    # save artifacts for later stages
    - name: Zip output
      uses: montudor/action-zip@v1
      with: 
        args: zip -qq -r mangrove-solidity-out.zip ${{env.working-directory}}/artifacts ${{env.working-directory}}/dist

    - name: Cache mangrove-solidity output as artifact
      uses: actions/upload-artifact@v3
      with:
        name: mangrove-solidity-out.zip
        path: mangrove-solidity-out.zip

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job mangrove-solidity ====

  # ==== Job: Build Mangrove documentation ====
  mangrove-solidity-doc:
    needs: [security-guard, mangrove-solidity]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/mangrove-solidity

    defaults:
      run:
        working-directory: ${{env.working-directory}}    

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    # == create and upload docs ==
    - run: yarn run doc

    - name: Archive documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: ${{env.working-directory}}/doc/

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job mangrove-solidity-doc ====

  # ==== Job: Build and test mangrove.js ====
  mangrove-js:
    needs: [security-guard, commonlib-js, mangrove-solidity]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/mangrove.js

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup
        
    # == download and unzip artefacts ==
    - name: Download cached mangrove-solidity artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-solidity-out.zip

    - name: Unzip mangrove-solidity artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-solidity-out.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == build == 
    - name: Mangrove.js build
      run: yarn run build-this-package
      env:
        NODE_OPTIONS: "--max_old_space_size=8192"

    - name: Save status of build
      run: echo "mangrove_js_built=true" >> $GITHUB_ENV      

    # == run and report tests == 
    - name: Mangrove.js Tests
      run: yarn run test:coverage

    - name: Mangrove.js Test Report
      uses: dorny/test-reporter@v1
      if: ${{ env.mangrove_js_built && (success() || failure()) }}
      with:
        name: Mangrove.js Tests               # Name of the check run which will be created
        path: ${{env.working-directory}}/coverage-tests-report.json # Path to test results
        reporter: mocha-json                  # Format of test results

    # == verify cli can start ==
    - name: Mgv cli Tests
      run: yarn mgv help

     # == Send coverage report to Coveralls == 
     # Coverallsapp by default uses GITHUB_SHA but that does not necessarily correspond
     # to HEAD because a branch is checked out. We here find the actual SHA for HEAD.
    - name: Set Coveralls vars
      id: coveralls_vars
      if: github.event_name != 'pull_request_target' 
      run: echo "::set-output name=sha_for_head::$(git rev-parse HEAD)"

    - name: Upload to Coveralls for mangrove.js
      uses: coverallsapp/github-action@master
      if: github.event_name != 'pull_request_target' 
      with:
        git-commit: ${{ steps.coveralls_vars.outputs.sha_for_head }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ${{env.working-directory}}/coverage/lcov.info
        base-path	: ${{env.working-directory}}
        flag-name: js

    - name: Create coverage report for mangrove-solidity
      if: github.event_name != 'pull_request_target' 
      run: forge coverage --report lcov
      working-directory: . # coverage cannot find contracts if executed inside mangrove-solidity
      env:
        POLYGON_NODE_URL: ${{ secrets.POLYGON_NODE_URL }}

    - name: Upload to Coveralls for mangrove-solidity
      uses: coverallsapp/github-action@master
      if: github.event_name != 'pull_request_target' 
      with:
        git-commit: ${{ steps.coveralls_vars.outputs.sha_for_head }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: lcov.info
        base-path	: .
        flag-name: solidity

    # save artifacts for later stages
    - name: Zip output
      uses: montudor/action-zip@v1
      with: 
        args: zip -qq -r mangrove-js-out.zip ${{env.working-directory}}/dist

    - name: Cache mangrove-js output as artifact
      uses: actions/upload-artifact@v3
      with:
        name: mangrove-js-out.zip
        path: mangrove-js-out.zip

    - name: Zip src (some of which is generated) for doc generation
      uses: montudor/action-zip@v1
      with: 
        args: zip -qq -r mangrove-js-src.zip ${{env.working-directory}}/src

    - name: Cache mangrove-js-src as artifact
      uses: actions/upload-artifact@v3
      with:
        name: mangrove-js-src.zip
        path: mangrove-js-src.zip

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: mangrove-js ====

  # ==== Job: Build mangrove.js documentation ====
  mangrove-js-doc:
    needs: [security-guard, commonlib-js, mangrove-js]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/mangrove.js

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup
        
    # == download and unzip artefacts ==
    - name: Download cached mangrove-js-src artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-js-src.zip

    - name: Unzip mangrove-js-src artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq -o mangrove-js-src.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == create and upload docs ==
    - run: yarn run doc

    - name: Archive documentation
      uses: actions/upload-artifact@v3
      with:
        name: mangrove-js-documentation
        path: ${{env.working-directory}}/docs/

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job mangrove-js-doc ====

  # ==== Job: Build and test bot-cleaning ====
  bot-cleaning:
    needs: [security-guard, commonlib-js, mangrove-solidity, mangrove-js]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/bot-cleaning

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup
        
    # == download and unzip artefacts ==
    - name: Download cached mangrove-solidity artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-solidity-out.zip

    - name: Unzip mangrove-solidity artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-solidity-out.zip

    - name: Download cached mangrove-js artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-js-out.zip

    - name: Unzip mangrove-js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-js-out.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == build ==

    - name: Cleaning Bot - Build
      run: yarn run build-this-package

    - name: Save status of build
      run: echo "cleaning_bot_built=true" >> $GITHUB_ENV    

     # == run and report tests == 
    - name: Cleaning Bot - Tests
      run: yarn run test:coverage

    - name: Cleaning Bot - Test Report
      uses: dorny/test-reporter@v1
      if: ${{ env.cleaning_bot_built && (success() || failure()) }}
      with:
        name: Cleaning Bot - Tests                   # Name of the check run which will be created
        path: packages/bot-cleaning/coverage-tests-report.json # Path to test results
        reporter: mocha-json                               # Format of test results

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: bot-cleaning ====        

  # ==== Job: Build and test bot-updategas ====
  bot-updategas:
    needs: [security-guard, commonlib-js, mangrove-solidity, mangrove-js]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/bot-updategas

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup

    # == download and unzip artefacts ==
    - name: Download cached mangrove-solidity artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-solidity-out.zip

    - name: Unzip mangrove-solidity artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-solidity-out.zip

    - name: Download cached mangrove-js artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-js-out.zip

    - name: Unzip mangrove-js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-js-out.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == build ==

    - name: Update Gas Bot - Build
      run: yarn run build-this-package

    - name: Save status of build
      run: echo "updategas_bot_built=true" >> $GITHUB_ENV    

    # == run and report tests == 
    - name: Update Gas Bot - Tests
      run: yarn run test:coverage

    - name: Update Gas Bot - Test Report
      uses: dorny/test-reporter@v1
      if: ${{ env.updategas_bot_built && (success() || failure()) }}
      with:
        name: Update Gas Bot - Tests                   # Name of the check run which will be created
        path: packages/bot-updategas/coverage-tests-report.json # Path to test results
        reporter: mocha-json                               # Format of test results

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: bot-updategas ====
          
  # ==== Job: Build and test bot-maker-noise ====
  bot-maker-noise:
    needs: [security-guard, commonlib-js, mangrove-solidity, mangrove-js]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/bot-maker-noise

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup
      
    # == download and unzip artefacts ==
    - name: Download cached mangrove-solidity artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-solidity-out.zip

    - name: Unzip mangrove-solidity artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-solidity-out.zip

    - name: Download cached mangrove-js artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-js-out.zip

    - name: Unzip mangrove-js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-js-out.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == build ==

    - name: Noise Maker Bot - Build
      run: yarn run build-this-package

    - name: Save status of build
      run: echo "bot_maker_noise_built=true" >> $GITHUB_ENV    

    # == run and report tests == 
    - name: Noise Maker Bot - Tests
      run: yarn run test:coverage

    - name: Noise Maker Bot - Test Report
      uses: dorny/test-reporter@v1
      if: ${{ env.bot_maker_noise_built && (success() || failure()) }}
      with:
        name: Noise Maker Bot - Tests                                # Name of the check run which will be created
        path: packages/bot-maker-noise/coverage-tests-report.json # Path to test results
        reporter: mocha-json                                         # Format of test results
        
    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: bot-maker-noise ====        
          
  # ==== Job: Build and test bot-taker-greedy ====
  bot-taker-greedy:
    needs: [security-guard, commonlib-js, mangrove-solidity,  mangrove-js]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/bot-taker-greedy

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup
        
    # == download and unzip artefacts ==
    - name: Download cached mangrove-solidity artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-solidity-out.zip

    - name: Unzip mangrove-solidity artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-solidity-out.zip

    - name: Download cached mangrove-js artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-js-out.zip

    - name: Unzip mangrove-js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-js-out.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == build ==

    - name: Greedy Taker Bot - Build
      run: yarn run build-this-package

    - name: Save status of build
      run: echo "bot_taker_greedy_built=true" >> $GITHUB_ENV    

    # == run and report tests == 
    - name: Greedy Taker Bot - Tests
      run: yarn run test:coverage

    - name: Greedy Taker Bot - Test Report
      uses: dorny/test-reporter@v1
      if: ${{ env.bot_taker_greedy_built && (success() || failure()) }}
      with:
        name: Greedy Taker Bot - Tests                                # Name of the check run which will be created
        path: packages/bot-taker-greedy/coverage-tests-report.json # Path to test results
        reporter: mocha-json                                          # Format of test results
    
    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: bot-taker-greedy ====        

  # ==== Job: Build and test bot-template ====
  bot-template:
    needs: [security-guard, commonlib-js, mangrove-solidity, mangrove-js]

    runs-on: ubuntu-latest

    env:
      working-directory: packages/bot-template

    defaults:
      run:
        working-directory: ${{env.working-directory}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:

    # == Git checkout ==
    - name: Checkout
      uses: actions/checkout@v3
      # Workaround for https://github.com/npm/cli/issues/2610
      with:
        persist-credentials: false
        ref: ${{ env.GIT_REF_TO_TEST }}
        submodules: recursive

    - name: Reconfigure git to use HTTP authentication
      # Workaround for https://github.com/npm/cli/issues/2610    
      run: >
        git config --global url."https://github.com/".insteadOf
        ssh://git@github.com/

    # == yarn setup ==
    - name: Yarn setup (caching yarn dependencies)
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - run: yarn install --immutable
      working-directory: . # Yarn must run in root to ensure monorepo setup

    - name: Foundry Setup
      uses: ./.github/actions/foundry-setup
        
    # == download and unzip artefacts ==
    - name: Download cached mangrove-solidity artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-solidity-out.zip

    - name: Unzip mangrove-solidity artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-solidity-out.zip

    - name: Download cached mangrove-js artifact
      uses: actions/download-artifact@v3
      with:
        name: mangrove-js-out.zip

    - name: Unzip mangrove-js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq mangrove-js-out.zip

    - name: Download cached commonlib.js artifact
      uses: actions/download-artifact@v3
      with:
        name: commonlib-out.zip

    - name: Unzip commonlib.js artifact
      uses: montudor/action-zip@v1
      with:
        args: unzip -qq commonlib-out.zip

    # == build ==

    - name: Template Bot - Build
      run: yarn run build-this-package

    - name: Save status of build
      run: echo "template_bot_built=true" >> $GITHUB_ENV    

    # == run and report tests == 
    - name: Template Bot -  Tests
      run: yarn run test:coverage

    - name: Template Bot - Test Report
      uses: dorny/test-reporter@v1
      if: ${{ env.template_bot_built && (success() || failure()) }}
      with:
        name: Template Bot - Tests                   # Name of the check run which will be created
        path: packages/bot-template/coverage-tests-report.json # Path to test results
        reporter: mocha-json                               # Format of test results

    - name: Report Failure to Slack
      if: ${{ failure() && fromJSON(env.NOTIFY_SLACK_FOR_THIS_WORKFLOW_RUN) }}
      uses: ravsamhq/notify-slack-action@v1
      with:
        status: ${{ job.status }}
        message_format: '{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}@{branch}> on <{commit_url}|{commit_sha}> at {job}'
        footer: '<{run_url}|View Run>'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}
  # ==== End job: bot-template ====

  # ==== final "check" job, using alls-green to have one single job to check for green workflow ====
  # see https://github.com/re-actors/alls-green

  check:
    if: always()

    needs:
    - security-guard
    - mangrove-solidity
    - commonlib-js
    - mangrove-solidity-doc
    - mangrove-js
    - mangrove-js-doc
    - bot-cleaning
    - bot-maker-noise
    - bot-taker-greedy
    - bot-template
    - bot-updategas

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}